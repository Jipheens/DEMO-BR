{"version":3,"file":"src_app_erp-reports_erp-reports_module_ts-src_app_erp-suppliersmanagement_data_supplier-categ-c89d48.js","mappings":"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","sources":["./src/app/erp-reports/data/services/finance-reports.service.ts","./src/app/erp-reports/data/services/reports-procurement.service.ts","./src/app/erp-reports/erp-reports-routing.module.ts","./src/app/erp-reports/erp-reports.module.ts","./src/app/erp-reports/modules/dashboard/dashboard.component.ts","./src/app/erp-reports/modules/dashboard/dashboard.component.html","./src/app/erp-reports/modules/dialogs/generate-finance-report/generate-finance-report.component.ts","./src/app/erp-reports/modules/dialogs/generate-finance-report/generate-finance-report.component.html","./src/app/erp-reports/modules/dialogs/generate-procurement-report/generate-procurement-report.component.ts","./src/app/erp-reports/modules/dialogs/generate-procurement-report/generate-procurement-report.component.html","./src/app/erp-reports/modules/finance-reports/finance-reports.component.ts","./src/app/erp-reports/modules/finance-reports/finance-reports.component.html","./src/app/erp-reports/modules/inventory-reports/inventory-reports.component.ts","./src/app/erp-reports/modules/inventory-reports/inventory-reports.component.html","./src/app/erp-reports/modules/preview-reports/balance-sheet/balance-sheet.component.ts","./src/app/erp-reports/modules/preview-reports/balance-sheet/balance-sheet.component.html","./src/app/erp-reports/modules/preview-reports/fs-class-data/fs-class-data.component.ts","./src/app/erp-reports/modules/preview-reports/fs-class-data/fs-class-data.component.html","./src/app/erp-reports/modules/preview-reports/gl-account-statement/gl-account-statement.component.ts","./src/app/erp-reports/modules/preview-reports/gl-account-statement/gl-account-statement.component.html","./src/app/erp-reports/modules/preview-reports/profit-loss/profit-loss.component.ts","./src/app/erp-reports/modules/preview-reports/profit-loss/profit-loss.component.html","./src/app/erp-reports/modules/preview-reports/trial-balance/trial-balance.component.ts","./src/app/erp-reports/modules/preview-reports/trial-balance/trial-balance.component.html","./src/app/erp-reports/modules/procurement-reports/procurement-reports.component.ts","./src/app/erp-reports/modules/procurement-reports/procurement-reports.component.html","./src/app/erp-suppliersmanagement/data/supplier-categories.service.ts","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FinanceReportsService {\n  constructor(private http: HttpClient) { }\n\n  \n  downloadAccountStatementReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlFinance}/api/v1/report/download/account_statement`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n\n  downloadTrialBalanceReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlFinance}/api/v1/report/download/trial_balance`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n  downloadProfitAndLossReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    //http://52.15.152.26:8199/api/v1/report/download/profit_loss?fromDate=2024-01-18&toDate=2024-03-18\n    let API_URL = `${environment.baseUrlFinance}/api/v1/report/download/profit_loss`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  downloadBalanceSheetReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlFinance}/api/v1/report/download/balance_sheet`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n  //************************************************************************************************************************ */\n\n  getBalanceSheetReportData(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/report/preview/balancesheet`;\n\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n  getProfitAndLossReportData(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/report/preview/proft_and_loss`;\n\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n  getTrialBalanceReportData(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/report/preview/trial_balance`;\n\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n\n  getFsClassData(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/report/preview/financialGrouping`;\n\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n\n\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProcurementReportsService {\n  constructor(private http: HttpClient) { }\n\n  \n  downloadPOStatusReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/report/download/po_statement_per_delivery`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n  downloadPODeliveryReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/report/download/po_delivery_report`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n  downloadSupplierStatementReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlFinance}/api/v1/report/download/supplier_statement`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n  downloadGeneralSupplierStatementReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlFinance}/api/v1/report/download/supplier_statement`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n  ///api/v1/report/download/invoice_report\n  downloadInvoiceDetailsReport(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlFinance}/api/v1/report/download/invoice_report`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutePrivilegeGuard } from '../erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { BalanceSheetComponent } from './modules/preview-reports/balance-sheet/balance-sheet.component';\nimport { FsClassDataComponent } from './modules/preview-reports/fs-class-data/fs-class-data.component';\nimport { GlAccountStatementComponent } from './modules/preview-reports/gl-account-statement/gl-account-statement.component';\nimport { ProfitLossComponent } from './modules/preview-reports/profit-loss/profit-loss.component';\nimport { TrialBalanceComponent } from './modules/preview-reports/trial-balance/trial-balance.component';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\nimport { FinanceReportsComponent } from '../erp-finance/modules/finance-management/finance-reports/finance-reports.component';\nimport { ProcurementReportsComponent } from './modules/procurement-reports/procurement-reports.component';\n\nconst routes: Routes = [\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [],\n  },\n\n\n  {\n    path: \"procurement-reports\",\n    component: ProcurementReportsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Dashboard\"] },\n  },\n\n  {\n    path: \"finance-reports\",\n    component: FinanceReportsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Dashboard\"] },\n  },\n\n  {\n    path: \"preview-balance-sheet\",\n    component: BalanceSheetComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n\n  {\n    path: \"preview-profit-loss\",\n    component: ProfitLossComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n\n  {\n    path: \"preview-trial-balance\",\n    component: TrialBalanceComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n  {\n    path: \"fs-class-data\",\n    component: FsClassDataComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n  {\n    path: \"gl-account-statements\",\n    component: GlAccountStatementComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ErpReportsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { ErpReportsRoutingModule } from './erp-reports-routing.module';\nimport { ProcurementReportsComponent } from './modules/procurement-reports/procurement-reports.component';\nimport { FinanceReportsComponent } from './modules/finance-reports/finance-reports.component';\nimport { InventoryReportsComponent } from './modules/inventory-reports/inventory-reports.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { DashboardModule } from '../admin/modules/dashboard/dashboard.module';\nimport { ComponentsModule } from '../shared/components/components.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { GenerateFinanceReportComponent } from './modules/dialogs/generate-finance-report/generate-finance-report.component';\nimport { GenerateProcurementReportComponent } from './modules/dialogs/generate-procurement-report/generate-procurement-report.component';\nimport { BalanceSheetComponent } from './modules/preview-reports/balance-sheet/balance-sheet.component';\nimport { FsClassDataComponent } from './modules/preview-reports/fs-class-data/fs-class-data.component';\nimport { GlAccountStatementComponent } from './modules/preview-reports/gl-account-statement/gl-account-statement.component';\nimport { ProfitLossComponent } from './modules/preview-reports/profit-loss/profit-loss.component';\nimport { TrialBalanceComponent } from './modules/preview-reports/trial-balance/trial-balance.component';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\n\n\n@NgModule({\n  declarations: [\n    ProcurementReportsComponent,\n    FinanceReportsComponent,\n    InventoryReportsComponent,\n    GenerateFinanceReportComponent,\n    GenerateProcurementReportComponent,\n\n    BalanceSheetComponent,\n    FsClassDataComponent,\n    GlAccountStatementComponent,\n    ProfitLossComponent,\n    TrialBalanceComponent,\n    DashboardComponent\n\n  ],\n  imports: [\n    CommonModule,\n    ErpReportsRoutingModule,\n\n     //Additional imports\n     DashboardModule,\n     MatIconModule,\n     NgApexchartsModule,\n     PerfectScrollbarModule,\n     MatMenuModule,\n     MatTooltipModule,\n     MatProgressBarModule,\n \n     MatTableModule,\n     MatPaginatorModule,\n     MatInputModule,\n     MatSortModule,\n \n     MatSelectModule,\n     MatTabsModule,\n     MatCheckboxModule,\n     MatTableExporterModule,\n     MatProgressSpinnerModule,\n \n     MatFormFieldModule,\n \n     MatButtonModule,\n     MatDialogModule,\n     MatDatepickerModule,\n     ComponentsModule,\n     MatCardModule,\n     ReactiveFormsModule,\n \n     MatSnackBarModule,\n     MatToolbarModule,\n \n     SharedModule,\n     MatStepperModule,\n     NgxMaskModule,\n  ],\n  providers:[DatePipe]\n  // exports: []\n})\nexport class ErpReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  home(){ this.router.navigate([\"/erp-dashboard/main\"]);}\n}\n","<section class=\"dashboard\">\n    <div class=\"container\">\n        <div class=\"breadcrumb-banner bg-kingdom\">\n            <h1>Enterprise Resource Planning Dashboard</h1>\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a (click)=\"home()\">Home</a></li>\n                    <li class=\"breadcrumb-item active\">\n                        ERP Reports\n                       \n                    </li>\n                    \n                </ol>\n            </nav>\n            \n        </div>\n        \n\n\n        <app-finance-reports></app-finance-reports>\n\n        <app-procurement-reports></app-procurement-reports>\n\n        <footer class=\"footer\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-md-2 text-right client-logo\">\n                        <img src=\"/assets/images/PBlogo.png\" alt=\"Kingdom Bank logo\" height=\"80px\" width=\"80px\" />\n                    </div>\n                    <div class=\"col-md-6\">\n                        <h4 class=\"animated fadeInLeft\">About Kingdom Bank</h4>\n                        <p class=\"animated fadeInRight\">\n                            Kingdom Bank is a leading financial institution that provides a\n                            wide range of banking products and services to individuals and\n                            businesses. We are committed to providing our customers with the\n                            highest level of service and support. We are proud to be a trusted\n                            partner of E&M Technology House.\n                        </p>\n                    </div>\n\n                    <div class=\"col-md-4\">\n                        <h4 class=\"animated fadeInLeft\">Connect with Us</h4>\n                        <ul class=\"list-unstyled social-icons animated fadeInRight\">\n                            <li>\n                                <a target=\"_blank\"\n                                    href=\"https://facebook.com/kingdombank\"><mat-icon>facebook</mat-icon>Kingdom\n                                    Bank</a>\n                            </li>\n                            <li>\n                                <a target=\"_blank\" href=\"https://twitter.com/kingdombank\"><i\n                                        class=\"fab fa-twitter\"></i>Kingdom Bank</a>\n                            </li>\n                            <li>\n                                <a target=\"_blank\"\n                                    href=\"https://linkedin.com/company/kingdombank\"><mat-icon>linkedin</mat-icon>Kingdom\n                                    Bank</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-2 text-left vendor-logo\">\n                        <img src=\"/assets/images/em2.png\" class=\"p-3\" alt=\"E&M Technology House logo\" height=\"80px\"\n                            width=\"80px\" />\n                    </div>\n                    <div class=\"col-md-6\">\n                        <h4 class=\"animated fadeInLeft\">About E&M Technology House</h4>\n                        <p class=\"animated fadeInRight\">\n                            E&M Technology House is a leading provider of innovative IT\n                            solutions for businesses of all sizes. We offer a wide range of\n                            services, including software development, web design, and IT\n                            consulting. We are committed to providing our clients with\n                            high-quality, cost-effective solutions that help them achieve\n                            their business goals.\n                        </p>\n                    </div>\n\n                    <!-- <div class=\"icon-preview\"><i class=\"fab fa-twitter\"></i></div> -->\n\n                    <div class=\"col-md-4\">\n                        <h4 class=\"animated fadeInLeft\">Connect with Us</h4>\n                        <ul class=\"list-unstyled social-icons animated fadeInRight\">\n                            <li>\n                                <a target=\"_blank\"\n                                    href=\"https://facebook.com/emtechhouse\"><mat-icon>facebook</mat-icon>E&M Technology\n                                    House</a>\n                            </li>\n                            <li>\n                                <a target=\"_blank\" href=\"https://twitter.com/emtechhouse\"><i\n                                        class=\"fab fa-twitter\"></i>E&M Technology\n                                    House</a>\n                            </li>\n                            <li>\n                                <a target=\"_blank\"\n                                    href=\"https://linkedin.com/company/emtechhouse\"><mat-icon>linkedin</mat-icon>E&M\n                                    Technology House</a>\n                            </li>\n                        </ul>\n\n                    </div>\n\n\n                </div>\n\n                <hr class=\"animated bounceIn\" />\n\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-center\">\n                        <p class=\"copyright animated pulse\">\n                            &copy; 2024 E&M ERP. All Rights Reserved.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    </div>\n</section>","import { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogConfig,\n} from \"@angular/material/dialog\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { PurchaseOrderAcknowledgementComponent } from \"src/app/erp-procurement/modules/requisition/pages/purchase-order-acknowledgement/purchase-order-acknowledgement.component\";\nimport { FinanceReportsService } from \"src/app/erp-reports/data/services/finance-reports.service\";\nimport { FilesService } from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-generate-finance-report\",\n  templateUrl: \"./generate-finance-report.component.html\",\n  styleUrls: [\"./generate-finance-report.component.sass\"],\n})\nexport class GenerateFinanceReportComponent implements OnInit {\n  mngForm: FormGroup;\n  hide3 = true;\n  agree3 = false;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n\n  posting: boolean = false;\n\n  types = [{ name: \"PDF\" }];\n\n  // , { name: \"EXCEL\" }\n\n  glTypes = [{ name: \"Transaction Gls\" }, { name: \"All Gls\" }];\n\n  imprestTypes = [{ name: \"Apply\" }, { name: \"Accounting\" }, { name: \"Claim\" }];\n\n  imprestAccountings = [{ name: \"Y\" }, { name: \"N\" }];\n\n\n  imprestStatuses = [\n    { name: \"APPROVED\" },\n    { name: \"PENDING\" },\n  ];\n  transactionStatuses = [{ name: \"SUCCESS\" }, { name: \"FAILED\" }];\n\n  constructor(\n    public dialogRef: MatDialogRef<PurchaseOrderAcknowledgementComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private dialog: MatDialog,\n    private filesService: FilesService,\n    private datepipe: DatePipe,\n    private reportService: FinanceReportsService\n  ) { }\n\n  ngOnInit(): void {\n    this.mngForm = this.createReportForm();\n  }\n\n  createReportForm(): FormGroup {\n    return this.fb.group({\n      type: [\"PDF\", Validators.required],\n      fromDate: [\"\"],\n      toDate: [\"\"],\n      accountNo: [\"\"],\n      month: [\"\"],\n      year: [\"\"],\n      glType: [\"\"],\n\n      imprestType: [\"Apply\"],\n      imprestAccounting: [\"Y\"],\n      status: [\"APPROVED\"],\n      transactionStatus: [\"SUCCESS\"],\n    });\n  }\n\n  ngAfterViewInit() { }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  //******************************************************************************************************************************************************** */\n  // Look ups\n  selectedItem: any[] = [];\n  glsLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"Single GL Account\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        this.mngForm.patchValue({\n          accountNo: element.accountID,\n        });\n      });\n    });\n  }\n\n  // **********************************************************************************************************************************************************\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n\n    this.posting = true;\n\n    // ProfitAndLoss\n    // BalanceSheet\n    let params = new HttpParams();\n    const fromDate = this.datepipe.transform(\n      this.mngForm.value.fromDate,\n      \"YYYY-MM-dd\"\n    );\n    const toDate = this.datepipe.transform(\n      this.mngForm.value.toDate,\n      \"YYYY-MM-dd\"\n    );\n\n    if (this.data.type === \"ProfitAndLoss\") {\n      let type = this.mngForm.value.type;\n      params = params.set(\"fromDate\", fromDate).set(\"toDate\", toDate);\n      if (type == \"PDF\") {\n        this.reportService\n          .downloadProfitAndLossReport(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res :\", res);\n              let url = window.URL.createObjectURL(res.data);\n\n              // if you want to open PDF in new tab\n              window.open(url);\n\n              let a = document.createElement(\"a\");\n              document.body.appendChild(a);\n              a.setAttribute(\"style\", \"display: none\");\n              a.setAttribute(\"target\", \"blank\");\n              a.href = url;\n              // Append row.code to the download URL\n              a.download = `ProfitAndLoss.pdf`;\n              a.click();\n              window.URL.revokeObjectURL(url);\n              a.remove();\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              this.posting = false;\n            },\n            complete: () => {\n              this.posting = false;\n              this.onNoClick();\n            },\n          }),\n          Subscription;\n      } else if (type == \"EXCEL\") {\n      }\n    } else if (this.data.type === \"BalanceSheet\") {\n      let type = this.mngForm.value.type;\n      if (type == \"PDF\") {\n        this.reportService\n          .downloadBalanceSheetReport(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res :\", res);\n              let url = window.URL.createObjectURL(res.data);\n\n              // if you want to open PDF in new tab\n              window.open(url);\n\n              let a = document.createElement(\"a\");\n              document.body.appendChild(a);\n              a.setAttribute(\"style\", \"display: none\");\n              a.setAttribute(\"target\", \"blank\");\n              a.href = url;\n              // Append row.code to the download URL\n              a.download = `BalanceSheet.pdf`;\n              a.click();\n              window.URL.revokeObjectURL(url);\n              a.remove();\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              this.posting = false;\n            },\n            complete: () => {\n              this.posting = false;\n              this.onNoClick();\n            },\n          }),\n          Subscription;\n      } else if (type == \"EXCEL\") {\n      }\n    } else if (this.data.type === \"TrialBalance\") {\n      let type = this.mngForm.value.type;\n      let fromDate = this.datepipe.transform(\n        this.mngForm.value.fromDate,\n        \"YYYY-MM-dd\"\n      );\n      let toDate = this.datepipe.transform(\n        this.mngForm.value.toDate,\n        \"YYYY-MM-dd\"\n      );\n\n      const params = new HttpParams()\n        .set(\"fromDate\", fromDate)\n        .set(\"toDate\", toDate)\n        .set(\"reportType\", this.mngForm.value.glType);\n\n      if (type == \"PDF\") {\n        this.reportService\n          .downloadTrialBalanceReport(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res :\", res);\n              let url = window.URL.createObjectURL(res.data);\n\n              // if you want to open PDF in new tab\n              window.open(url);\n\n              let a = document.createElement(\"a\");\n              document.body.appendChild(a);\n              a.setAttribute(\"style\", \"display: none\");\n              a.setAttribute(\"target\", \"blank\");\n              a.href = url;\n              // Append row.code to the download URL\n              a.download = `TrialBalance.pdf`;\n              a.click();\n              window.URL.revokeObjectURL(url);\n              a.remove();\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              this.posting = false;\n            },\n            complete: () => {\n              this.posting = false;\n              this.onNoClick();\n            },\n          }),\n          Subscription;\n      } else if (type == \"EXCEL\") {\n      }\n    } else if (this.data.type === \"StatementOfAccount\") {\n      let type = this.mngForm.value.type;\n      let fromDate = this.datepipe.transform(\n        this.mngForm.value.fromDate,\n        \"YYYY-MM-dd\"\n      );\n      let toDate = this.datepipe.transform(\n        this.mngForm.value.toDate,\n        \"YYYY-MM-dd\"\n      );\n\n      const params = new HttpParams()\n        .set(\"accountNo\", this.mngForm.value.accountNo)\n        .set(\"fromDate\", fromDate)\n        .set(\"toDate\", toDate);\n\n      if (type == \"PDF\") {\n        this.reportService\n          .downloadAccountStatementReport(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res :\", res);\n              let url = window.URL.createObjectURL(res.data);\n\n              // if you want to open PDF in new tab\n              window.open(url);\n\n              let a = document.createElement(\"a\");\n              document.body.appendChild(a);\n              a.setAttribute(\"style\", \"display: none\");\n              a.setAttribute(\"target\", \"blank\");\n              a.href = url;\n              // Append row.code to the download URL\n              a.download = `StatementOfAccounts.pdf`;\n              a.click();\n              window.URL.revokeObjectURL(url);\n              a.remove();\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              this.posting = false;\n            },\n            complete: () => {\n              this.posting = false;\n              this.onNoClick();\n            },\n          }),\n          Subscription;\n      } else if (type == \"EXCEL\") {\n      }\n    }\n\n    else if (this.data.type === \"ImprestAnalysis\") {\n      let type = this.mngForm.value.type;\n      let fromDate = this.datepipe.transform(\n        this.mngForm.value.fromDate,\n        \"YYYY-MM-dd\"\n      );\n      let toDate = this.datepipe.transform(\n        this.mngForm.value.toDate,\n        \"YYYY-MM-dd\"\n      );\n\n      const params = new HttpParams()\n        .set(\"accountNo\", this.mngForm.value.accountNo)\n        .set(\"fromDate\", fromDate)\n        .set(\"toDate\", toDate);\n\n      if (type == \"PDF\") {\n        this.reportService\n          .downloadAccountStatementReport(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res :\", res);\n              let url = window.URL.createObjectURL(res.data);\n\n              // if you want to open PDF in new tab\n              window.open(url);\n\n              let a = document.createElement(\"a\");\n              document.body.appendChild(a);\n              a.setAttribute(\"style\", \"display: none\");\n              a.setAttribute(\"target\", \"blank\");\n              a.href = url;\n              // Append row.code to the download URL\n              a.download = `StatementOfAccounts.pdf`;\n              a.click();\n              window.URL.revokeObjectURL(url);\n              a.remove();\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              this.posting = false;\n            },\n            complete: () => {\n              this.posting = false;\n              this.onNoClick();\n            },\n          }),\n          Subscription;\n      } else if (type == \"EXCEL\") {\n      }\n    }\n\n\n  }\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong> Set Report Parameters</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"posting\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <!-- <h6 class=\"mx-2\">General Details</h6> -->\n        <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n\n\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>From Date</mat-label>\n                        <input matInput [matDatepicker]=\"picker\" formControlName=\"fromDate\" required />\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                        <mat-error *ngIf=\"\n                            mngForm.get('fromDate').hasError('required')\n                          \">\n                            Please select From Date\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>To Date</mat-label>\n                        <input matInput [matDatepicker]=\"picker2\" formControlName=\"toDate\" required />\n                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker2></mat-datepicker>\n                        <mat-error *ngIf=\"\n                            mngForm.get('toDate').hasError('required')\n                          \">\n                            Please select To Date\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'StatementOfAccount'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Account No</mat-label>\n                        <input matInput formControlName=\"accountNo\" required />\n                        <mat-icon matSuffix (click)=\"glsLookUp()\">search</mat-icon>\n                        <mat-error *ngIf=\"mngForm.get('accountNo').hasError('required')\">\n                            Account No is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'TrialBalance'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Month</mat-label>\n                        <input matInput type=\"number\" min=\"1\" max=\"12\" formControlName=\"month\" required />\n\n                        <mat-datepicker #monthPicker></mat-datepicker>\n                        <mat-error *ngIf=\"mngForm.get('month').hasError('required')\">\n                            Please select Month\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'TrialBalance'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Year</mat-label>\n                        <input matInput type=\"number\" min=\"1900\" max=\"2100\" formControlName=\"year\" required />\n                        <mat-error *ngIf=\"mngForm.get('year').hasError('required')\">\n                            Please select Year\n                        </mat-error>\n                    </mat-form-field>\n                </div> -->\n\n\n                <!-- <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Select type</mat-label>\n                        <mat-select formControlName=\"type\" required disabled>\n                            <mat-option *ngFor=\"let type of types\" [value]=\"type.name\">\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('type').hasError('required')\">\n                            type is required\n                        </mat-error>\n                    </mat-form-field>\n                </div> -->\n\n                <!-- // i have this: -->\n\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'TrialBalance'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Gl types</mat-label>\n                        <mat-select formControlName=\"glType\" required>\n                            <mat-option *ngFor=\"let glType of glTypes\" [value]=\"glType.name\">\n                                {{ glType.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('glType').hasError('required')\">\n                            GlType is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'ImprestAnalysis'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Imprest Type</mat-label>\n                        <mat-select formControlName=\"imprestType\" required>\n                            <mat-option *ngFor=\"let type of imprestTypes\" [value]=\"type.name\">\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('imprestType').hasError('required')\">\n                            Imprest Type is required\n                        </mat-error>\n                    </mat-form-field>\n\n\n                </div>\n\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'ImprestAnalysis'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Imprest Accounting</mat-label>\n                        <mat-select formControlName=\"imprestAccounting\" required>\n                            <mat-option *ngFor=\"let accounting of imprestAccountings\" [value]=\"accounting.name\">\n                                {{ accounting.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('imprestAccounting').hasError('required')\">\n                            Imprest Accounting is required\n                        </mat-error>\n                    </mat-form-field>\n\n                </div>\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'ImprestAnalysis'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Status</mat-label>\n                        <mat-select formControlName=\"status\" required>\n                            <mat-option *ngFor=\"let stat of imprestStatuses\" [value]=\"stat.name\">\n                                {{ stat.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('status').hasError('required')\">\n                            Status is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'ImprestAnalysis'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Transaction Status</mat-label>\n                        <mat-select formControlName=\"transactionStatus\" required>\n                            <mat-option *ngFor=\"let transStatus of transactionStatuses\" [value]=\"transStatus.name\">\n                                {{ transStatus.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('transactionStatus').hasError('required')\">\n                            Transaction Status is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                    <div class=\"example-button-row\" align=\"end\">\n                        <button class=\"btn-space\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" (click)=\"submit()\">\n                            Generate\n                        </button>\n\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogConfig,\n} from \"@angular/material/dialog\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { FilesService } from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { PurchaseRequisitionLookUpComponent } from \"src/app/erp-finance/data/lookups/purchase-requisition-look-up/purchase-requisition-look-up.component\";\nimport { PurchaseOrderAcknowledgementComponent } from \"src/app/erp-procurement/modules/requisition/pages/purchase-order-acknowledgement/purchase-order-acknowledgement.component\";\nimport { SuppliersLookupComponent } from \"src/app/erp-procurement/modules/parameters/pages/lookups/suppliers-lookup/suppliers-lookup.component\";\nimport { ProcurementReportsService } from \"src/app/erp-reports/data/services/reports-procurement.service\";\n\n@Component({\n  selector: \"app-generate-procurement-report\",\n  templateUrl: \"./generate-procurement-report.component.html\",\n  styleUrls: [\"./generate-procurement-report.component.sass\"],\n})\nexport class GenerateProcurementReportComponent implements OnInit {\n  mngForm: FormGroup;\n  hide3 = true;\n  agree3 = false;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n\n  posting: boolean = false;\n\n  types = [{ name: \"PDF\" }];\n\n  // , { name: \"EXCEL\" }\n\n  poStatuses = [{ name: \"PARTIAL\" }, { name: \"COMPLETE\" }];\n  invoiceStatuses = [\n    { name: \"APPROVED\" },\n    { name: \"PENDING\" },\n    { name: \"OVERDUE\" },\n  ];\n  transactionStatuses = [{ name: \"SUCCESS\" }, { name: \"FAILED\" }];\n  constructor(\n    public dialogRef: MatDialogRef<PurchaseOrderAcknowledgementComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private dialog: MatDialog,\n    private filesService: FilesService,\n    private datepipe: DatePipe,\n    private reportService: ProcurementReportsService\n  ) {}\n\n  ngOnInit(): void {\n    this.mngForm = this.createReportForm();\n  }\n\n  createReportForm(): FormGroup {\n    return this.fb.group({\n      type: [\"PDF\", Validators.required],\n      fromDate: [\"\"],\n      toDate: [\"\"],\n      poStatus: [\"PARTIAL\"],\n      prCode: [\"\"],\n      invoiceStatus: [\"APPROVED\"],\n      supplierCode: [\"\"],\n      transactionStatus: [\"SUCCESS\"],\n    });\n  }\n\n  ngAfterViewInit() {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  hideTranStatus: boolean = false;\n  selectInvoiceStatus(status: string) {\n    if (status === \"OVERDUE\") {\n      this.hideTranStatus = true;\n    } else {\n      this.hideTranStatus = false;\n    }\n\n    console.log(\"this.hideTranStatus:: \", this.hideTranStatus);\n  }\n\n  //******************************************************************************************************************************************************** */\n  // Look ups\n  selectedItem: any[] = [];\n  glsLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"Single GL Account\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        this.mngForm.patchValue({\n          accountNo: element.accountID,\n        });\n      });\n    });\n  }\n\n  purchaseRequisitionLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"single purchaseorder\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      PurchaseRequisitionLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          prCode: element.purchaseRequisitionCode,\n        });\n      });\n    });\n  }\n  supplierIsSelected = false;\n  selectedSuppliers: any[] = [];\n  suppliersLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"single supplier\",\n      selected: this.selectedSuppliers,\n      category: \"Open\",\n    };\n\n    const dialogRef = this.dialog.open(SuppliersLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.supplierIsSelected = true;\n\n        this.mngForm.patchValue({\n          supplierCode: result.data[0].supplierCode,\n        });\n      }\n    });\n  }\n  // **********************************************************************************************************************************************************\n\n  response: any;\n  submit() {\n    this.posting = true;\n\n    const type = this.mngForm.value.type;\n\n    let params = new HttpParams();\n    let reportName = \"\";\n\n    const fromDate = this.datepipe.transform(\n      this.mngForm.value.fromDate,\n      \"YYYY-MM-dd\"\n    );\n    const toDate = this.datepipe.transform(\n      this.mngForm.value.toDate,\n      \"YYYY-MM-dd\"\n    );\n    switch (this.data.type) {\n      case \"POsByStatus\":\n        params = params\n        .set(\"fromDate\", fromDate)\n        .set(\"toDate\", toDate)\n        .set(\"status\", this.mngForm.value.poStatus);\n        reportName = \"PO Status\";\n        if (type === \"PDF\") {\n          this.downloadPOStatusReport(params, reportName);\n        } else if (type === \"EXCEL\") {\n        }\n        break;\n\n      case \"PoDeliveryReport\":\n        params = params\n          .set(\"fromDate\", fromDate)\n          .set(\"toDate\", toDate)\n          .set(\"prCode\", this.mngForm.value.prCode);\n        reportName = \"PO Delivery\";\n        if (type === \"PDF\") {\n          this.downloadPODeliveryReport(params, reportName);\n        } else if (type === \"EXCEL\") {\n        }\n        break;\n        case \"GeneralPoDeliveryReport\":\n          params = params\n            .set(\"fromDate\", fromDate)\n            .set(\"toDate\", toDate)\n            .set(\"prCode\", '%');\n          reportName = \"General PO Delivery\";\n          if (type === \"PDF\") {\n            this.downloadPODeliveryReport(params, reportName);\n          } else if (type === \"EXCEL\") {\n          }\n          break;\n\n\n      case \"SupplierAccountStatement\":\n        params = params\n          .set(\"fromDate\", fromDate)\n          .set(\"toDate\", toDate)\n          .set(\"supplierCode\", this.mngForm.value.supplierCode);\n        reportName = \"Supplier Statement\";\n        if (type === \"PDF\") {\n          this.downloadSupplierStatementReport(params, reportName);\n        } else if (type === \"EXCEL\") {\n        }\n        break;\n      case \"GeneralSupplierStatementReport\":\n        params = params\n          .set(\"supplierCode\", \"%\")\n          .set(\"fromDate\", fromDate)\n          .set(\"toDate\", toDate);\n        reportName = \"General Suppliers Statement\";\n        if (type === \"PDF\") {\n          this.downloadGeneralSupplierStatementReport(params, reportName);\n        } else if (type === \"EXCEL\") {\n        }\n        break;\n      case \"InvoiceReportDetailsByStatus\":\n        params = params\n          .set(\"status\", this.mngForm.value.invoiceStatus)\n          .set(\"transactionStatus\", this.mngForm.value.transactionStatus)\n          .set(\"supplierCode\", this.mngForm.value.supplierCode)\n          .set(\"fromDate\", fromDate)\n          .set(\"toDate\", toDate);\n        reportName = \"Invoice Report\";\n        if (type === \"PDF\") {\n          this.downloadInvoiceDetailsReport(params, reportName);\n        } else if (type === \"EXCEL\") {\n        }\n        break;\n\n      case \"GeneralInvoiceReportDetailsByStatus\":\n        params = params\n          .set(\"status\", this.mngForm.value.invoiceStatus)\n          .set(\"transactionStatus\", this.mngForm.value.transactionStatus)\n          .set(\"supplierCode\", \"%\")\n          .set(\"fromDate\", fromDate)\n          .set(\"toDate\", toDate);\n        reportName = \"General Invoice Report\";\n        if (type === \"PDF\") {\n          this.downloadInvoiceDetailsReport(params, reportName);\n        } else if (type === \"EXCEL\") {\n        }\n        break;\n      //\n      default:\n        break;\n    }\n  }\n\n  downloadPOStatusReport(params: HttpParams, reportName: string) {\n    this.reportService\n      .downloadPOStatusReport(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.downloadReport(res, reportName);\n        },\n        error: (err) => {\n          this.handleError(err);\n        },\n      });\n  }\n\n  downloadPODeliveryReport(params: HttpParams, reportName: string) {\n    this.reportService\n      .downloadPODeliveryReport(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.downloadReport(res, reportName);\n        },\n        error: (err) => {\n          this.handleError(err);\n        },\n      });\n  }\n\n  downloadSupplierStatementReport(params: HttpParams, reportName: string) {\n    this.reportService\n      .downloadSupplierStatementReport(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.downloadReport(res, reportName);\n        },\n        error: (err) => {\n          this.handleError(err);\n        },\n      });\n  }\n\n  downloadGeneralSupplierStatementReport(\n    params: HttpParams,\n    reportName: string\n  ) {\n    this.reportService\n      .downloadGeneralSupplierStatementReport(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.downloadReport(res, reportName);\n        },\n        error: (err) => {\n          this.handleError(err);\n        },\n      });\n  }\n\n  downloadInvoiceDetailsReport(params: HttpParams, reportName: string) {\n    this.reportService\n      .downloadInvoiceDetailsReport(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.downloadReport(res, reportName);\n        },\n        error: (err) => {\n          this.handleError(err);\n        },\n      });\n  }\n\n  downloadReport(res: any, reportName: string) {\n    const url = window.URL.createObjectURL(res.data);\n    window.open(url);\n    const a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.setAttribute(\"style\", \"display: none\");\n    a.setAttribute(\"target\", \"_blank\");\n    a.href = url;\n    a.download = `${reportName}.pdf`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    a.remove();\n    this.snackbar.showNotification(\"snackbar-success\", res.message);\n\n    this.onNoClick();\n  }\n\n  handleError(err: any) {\n    this.snackbar.showNotification(\"snackbar-danger\", err.message);\n    this.posting = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong> Set Report Parameters</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"posting\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <!-- <h6 class=\"mx-2\">General Details</h6> -->\n        <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n            <div class=\"row\">\n                <ng-container *ngIf=\"\n            data.type === 'POsByStatus' ||\n            data.type === 'GeneralSupplierStatementReport' ||\n            data.type === 'SupplierAccountStatement' ||\n            data.type === 'InvoiceReportDetailsByStatus' ||\n            data.type === 'GeneralInvoiceReportDetailsByStatus' ||\n            data.type === 'PoDeliveryReport' ||\n            data.type === 'GeneralPoDeliveryReport'\n          \">\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>From Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker\" formControlName=\"fromDate\" required />\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error *ngIf=\"mngForm.get('fromDate').hasError('required')\">\n                                Please select From Date\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>To Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker2\" formControlName=\"toDate\" required />\n                            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker2></mat-datepicker>\n                            <mat-error *ngIf=\"mngForm.get('toDate').hasError('required')\">\n                                Please select To Date\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n\n                <div *ngIf=\"\n            data.type === 'InvoiceReportDetailsByStatus' ||\n            data.type === 'GeneralInvoiceReportDetailsByStatus'\n          \" class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Invoice Status</mat-label>\n                        <mat-select formControlName=\"invoiceStatus\" required\n                            (selectionChange)=\"selectInvoiceStatus($event.value)\">\n                            <mat-option *ngFor=\"let status of invoiceStatuses\" [value]=\"status.name\">{{ status.name\n                                }}</mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"mngForm.get('invoiceStatus').hasError('required')\">\n                            Invoice Status is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div *ngIf=\"\n            (data.type === 'InvoiceReportDetailsByStatus' ||\n              data.type === 'GeneralInvoiceReportDetailsByStatus') &&\n            !hideTranStatus\n          \" class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Transaction Status</mat-label>\n                        <mat-select formControlName=\"transactionStatus\" required>\n                            <mat-option *ngFor=\"let transactionStatus of transactionStatuses\"\n                                [value]=\"transactionStatus.name\">{{ transactionStatus.name }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('transactionStatus').hasError('required')\">\n                            Transaction Status is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div *ngIf=\"data.type === 'POsByStatus'\" class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>PO Status</mat-label>\n                        <mat-select formControlName=\"poStatus\" required>\n                            <mat-option *ngFor=\"let status of poStatuses\" [value]=\"status.name\">{{ status.name\n                                }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('poStatus').hasError('required')\">\n                            PO Status is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div *ngIf=\"data.type === 'PoDeliveryReport'\" class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>PR Code</mat-label>\n                        <input matInput formControlName=\"prCode\" required />\n                        <mat-icon matSuffix (click)=\"purchaseRequisitionLookUp()\">search</mat-icon>\n                        <mat-error *ngIf=\"mngForm.get('prCode').hasError('required')\">\n                            PR Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div *ngIf=\"\n            data.type === 'SupplierAccountStatement' ||\n            data.type === 'InvoiceReportDetailsByStatus'\n          \" class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Supplier Code</mat-label>\n                        <input matInput formControlName=\"supplierCode\" required />\n                        <mat-icon matSuffix (click)=\"suppliersLookup()\">search</mat-icon>\n                        <mat-error *ngIf=\"mngForm.get('supplierCode').hasError('required')\">\n                            Supplier Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                    <div class=\"example-button-row\" align=\"end\">\n                        <button class=\"btn-space\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" (click)=\"submit()\">\n                            Generate\n                        </button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { GenerateFinanceReportComponent } from '../dialogs/generate-finance-report/generate-finance-report.component';\n\n@Component({\n  selector: 'app-finance-reports',\n  templateUrl: './finance-reports.component.html',\n  styleUrls: ['./finance-reports.component.scss']\n})\nexport class FinanceReportsComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private router: Router) {}\n\n  ngOnInit(): void {\n  }\n\n\n  generateReport(type: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      type: type,\n    };\n    const dialogRef = this.dialog.open(GenerateFinanceReportComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      // result.data.forEach((element) => {\n      // });\n    });\n  }\n\n  previewReport(type: any) {\n    if (type === \"ProfitAndLoss\") {\n      let route = \"/erp-reports/preview-profit-loss\";\n      this.router.navigate([route], {\n        queryParams: {\n          action: \"View\",\n        },\n      });\n    } else if (type === \"BalanceSheet\") {\n      let route = \"/erp-reports/preview-balance-sheet\";\n      this.router.navigate([route], {\n        queryParams: {\n          action: \"View\",\n        },\n      });\n    }else if (type === \"TrialBalance\") {\n      let route = \"/erp-reports/preview-trial-balance\";\n      this.router.navigate([route], {\n        queryParams: {\n          action: \"View\",\n        },\n      });\n    }\n  }\n}\n","<div class=\"row mt-3\">\n    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n        <div class=\"card\">\n            <div class=\"header\">\n                <h2>Finance Reports</h2>\n            </div>\n            <div class=\"body\">\n                <div class=\"doc-file-type\">\n                    <ul class=\"list-unstyled\">\n\n                        \n                        <li class=\"d-flex mb-3\">\n                            <span class=\"msr-3 align-self-center img-icon primary-rgba text-primary\"><i class=\"far fa-file-word\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">Profit and Loss</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-eye ms-2\" (click)=\"previewReport('ProfitAndLoss')\"></i> \n                                <i class=\"far fa-arrow-alt-circle-down\" (click)=\"generateReport('ProfitAndLoss')\"></i>\n                                \n                            </div>\n                        </li>\n                        \n\n                        <li class=\"d-flex mb-3\">\n                            <span class=\"msr-3 align-self-center img-icon success-rgba text-success\"><i\n                                    class=\"far fa-file-excel\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">Balance Sheet</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                \n                                    <i class=\"far fa-eye ms-2\" (click)=\"previewReport('BalanceSheet')\"></i> \n                                    <i class=\"far fa-arrow-alt-circle-down\" (click)=\"generateReport('BalanceSheet')\"></i>\n                                    \n                               \n                            </div>\n                        </li>\n\n                        <li class=\"d-flex mb-3\">\n                            <span class=\"msr-3 align-self-center img-icon danger-rgba text-danger\"><i\n                                    class=\"far fa-file-pdf\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">Trial Balance</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                               \n                                    <i class=\"far fa-eye ms-2\" (click)=\"previewReport('TrialBalance')\"></i> \n                                    <i class=\"far fa-arrow-alt-circle-down\" (click)=\"generateReport('TrialBalance')\"></i>\n                               \n                            </div>\n                        </li>\n\n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('StatementOfAccount')\">\n                            <span class=\"msr-3 align-self-center img-icon info-rgba text-info\"><i\n                                    class=\"far fa-file-archive\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">GL Account Analysis</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                               \n                                    <i class=\"far fa-arrow-alt-circle-down\"></i>\n                                \n                            </div>\n                        </li>\n\n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('ImprestAnalysis')\">\n                            <span class=\"msr-3 align-self-center img-icon primary-rgba text-primary\"><i class=\"far fa-file-word\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">Imprest Analysis</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-arrow-alt-circle-down\" (click)=\"generateReport('ImprestAnalysis')\"></i>\n                                \n                            </div>\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventory-reports',\n  templateUrl: './inventory-reports.component.html',\n  styleUrls: ['./inventory-reports.component.sass']\n})\nexport class InventoryReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>inventory-reports works!</p>\n","import { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Route, Router } from \"@angular/router\";\n\nimport { Subject, Subscription, forkJoin, takeUntil } from \"rxjs\";\nimport { FinanceReportsService } from \"src/app/erp-reports/data/services/finance-reports.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-balance-sheet\",\n  templateUrl: \"./balance-sheet.component.html\",\n  styleUrls: [\"./balance-sheet.component.scss\"],\n})\nexport class BalanceSheetComponent implements OnInit {\n  dummy: string;\n  basicInformation: any;\n  buyerDetails: any;\n  goodsDetails: any[] = [];\n  payWayInfo: any[] = [];\n  sellerDetails: any;\n  extendedDetails: any;\n  taxDetails: any[] = [];\n  summaryDetails: any;\n  qrCode: any;\n\n  importSellerDetails: any;\n\n  loading = true;\n\n  Form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private reportService: FinanceReportsService,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private datePipe: DatePipe,\n\n  ) { }\n\n  pageFunction = \"View\";\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if (params.action) {\n        const action = params.action;\n        this.pageFunction = params.action;\n\n      }\n    });\n\n    const today = new Date();\n    const toDateDefault = today.toISOString().split(\"T\")[0];\n    const fromDateDefault = new Date(\n      today.getFullYear(),\n      today.getMonth() - 1,\n      today.getDate()\n    )\n      .toISOString()\n      .split(\"T\")[0];\n    this.Form = this.fb.group({\n      fromDate: [fromDateDefault, [Validators.required]],\n      toDate: [toDateDefault, [Validators.required]],\n    });\n\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  data: any;\n  isLoading = false;\n  getData() {\n    this.isLoading = true;\n    this.data = {};\n\n    let params = {\n      fromDate: this.datePipe.transform(this.Form.value.fromDate, 'yyyy-MM-dd'),\n      toDate: this.datePipe.transform(this.Form.value.toDate, 'yyyy-MM-dd'),\n    };\n    this.reportService\n      .getBalanceSheetReportData(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res.entity;\n            this.isLoading = false;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { this.isLoading = false; },\n      }),\n      Subscription;\n  }\n\n  viewDetails(data: any) {\n    let route = \"/erp-reports/fs-class-data\";\n    this.router.navigate([route], {\n      queryParams: {\n        fsClass: data.financial_grouping,\n        fromDate: this.datePipe.transform(this.Form.value.fromDate, 'yyyy-MM-dd'),\n        toDate: this.datePipe.transform(this.Form.value.toDate, 'yyyy-MM-dd'),\n        action: \"View\",\n      },\n    });\n  }\n\n\n\n  posting: boolean = false;\n  downloadDoc() {\n    this.posting = true;\n    let type = this.Form.value.type;\n    let fromDate = this.datePipe.transform(\n      this.Form.value.fromDate,\n      \"YYYY-MM-dd\"\n    );\n    let toDate = this.datePipe.transform(\n      this.Form.value.toDate,\n      \"YYYY-MM-dd\"\n    );\n\n    const params = new HttpParams()\n      .set(\"fromDate\", fromDate)\n      .set(\"toDate\", toDate)\n     ;\n\n\n    if (type == \"PDF\") {\n      this.reportService\n        .downloadBalanceSheetReport(params)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res :\", res);\n            let url = window.URL.createObjectURL(res.data);\n\n            // if you want to open PDF in new tab\n            window.open(url);\n\n            let a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.setAttribute(\"style\", \"display: none\");\n            a.setAttribute(\"target\", \"blank\");\n            a.href = url;\n            // Append row.code to the download URL\n            a.download = `ProfitAndLoss.pdf`;\n            a.click();\n            window.URL.revokeObjectURL(url);\n            a.remove();\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.posting = false;\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (type == \"EXCEL\") {\n    }\n  }\n\n\n  home(){ this.router.navigate([\"/erp-dashboard/main\"]);}\n  reportDashboard() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n\n\n  cancel() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n}\n","\n<section class=\"dashboard\">\n  <div class=\"container\">\n      <div class=\"breadcrumb-banner bg-kingdom\">\n          <h1>Enterprise Resource Planning Dashboard</h1>\n          <nav aria-label=\"breadcrumb\">\n              <ol class=\"breadcrumb\">\n                  <li class=\"breadcrumb-item\"><a (click)=\"home()\">Home</a></li>\n                  <li class=\"breadcrumb-item\"><a (click)=\"reportDashboard()\"> ERP Reports</a></li>\n                  <li class=\"breadcrumb-item active\">Balance Sheet Preview</li>\n              </ol>\n          </nav>\n      </div>\n\n      <div class=\"card mt-2\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || posting\">\n              <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n              </mat-progress-bar>\n          </div>\n\n          <div class=\"body\">\n              <div class=\"px-5\">\n                  <div class=\"row\">\n                      <div class=\"col-md-12\">\n                          <div class=\"row justify-content-center mt-2\">\n                              <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                  <img src=\"assets/images/KB-logo.png\" width=\"400px\" height=\"100px\" alt=\"\" />\n                              </div>\n                              <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                  <div class=\"float-end mt-3\">\n                                      <address>\n                                          <p class=\"m-l-5\">\n                                              P. O. Box 22741- 00400 Nairobi, <br />\n                                              info@kingdombankltd.co.ke <br />\n                                              Landline: 020-221 0339, <br />\n                                              Mobile: 0709933456\n                                          </p>\n                                      </address>\n                                  </div>\n                              </div>\n                              <div class=\"col-xs-12 col-sm-12 col-md-2 col-lg-2 text-center\"></div>\n                              <div class=\"horizontal-line\"></div>\n                              <div class=\"horizontal-line\"></div>\n                          </div>\n\n                          <ng-container *ngIf=\"!isLoading\">\n                            <div class=\"row justify-content-center mt-2\">\n                              <div class=\"col-9 text-center\">\n                                <div class=\"green-card\">\n                                  <h3 class=\"white-text\">BALANCE SHEET REPORT</h3>\n                                </div>\n                                <form [formGroup]=\"Form\">\n                                  <div class=\"row justify-content-center mt-4\">\n                                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n                                      <strong>From Date</strong>\n                                      <br />\n        \n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"fill\">\n                                        <mat-label>From Date </mat-label>\n                                        <input matInput [matDatepicker]=\"picker\" formControlName=\"fromDate\" required />\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker></mat-datepicker>\n                                        <mat-error *ngIf=\"\n                                            Form.get('fromDate').hasError('required')\n                                          \">\n                                          From Date is required\n                                        </mat-error>\n                                        <mat-error *ngIf=\"\n                                            !Form.get('fromDate').hasError('required')\n                                          \">\n                                          Enter a Valid Account By Date\n                                        </mat-error>\n                                      </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n                                      <strong>To Date</strong>\n                                      <br />\n        \n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"fill\">\n                                        <mat-label>To Date </mat-label>\n                                        <input matInput [matDatepicker]=\"picker2\" formControlName=\"toDate\" required />\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker2></mat-datepicker>\n                                        <mat-error *ngIf=\"\n                                            Form.get('toDate').hasError('required')\n                                          \">\n                                          To Date is required\n                                        </mat-error>\n                                        <mat-error *ngIf=\"\n                                            !Form.get('toDate').hasError('required')\n                                          \">\n                                          Enter a Valid Account By Date\n                                        </mat-error>\n                                      </mat-form-field>\n                                    </div>\n                                  </div>\n                                </form>\n        \n                              </div>\n                            </div>\n        \n                            <div class=\"row clearfix justify-content-center\">\n                              <div class=\"col-xs-12 col-sm-12 col-md-9 col-lg-9\">\n                                <div class=\"header\">\n                                  <h2>Assets</h2>\n                                </div>\n        \n                                <div class=\"tableBody\">\n                                  <div class=\"table-responsive\">\n                                    <table class=\"table table-hover\">\n                                      <thead>\n                                        <!-- <tr>\n                                          <th class=\"category-column\"></th>\n                                          <th class=\"bank-column\"></th>\n                                          <th class=\"action-column\">Action</th>\n                                        </tr> -->\n                                      </thead>\n                                      <tbody>\n                                        <tr *ngFor=\"let asset of data.assets\">\n                                          <td class=\"category-column truncate\">\n                                            {{ asset.financial_grouping }}\n                                          </td>\n                                          <td class=\"bank-column truncate\">\n                                            {{ asset.ac_balance }}\n                                          </td>\n                                          <td class=\"action-column\">\n                                            <a (click)=\"viewDetails(asset)\"><i class=\"fas fa-eye\"></i></a>\n                                          </td>\n                                        </tr>\n                                      </tbody>\n                                      <tfoot>\n                                        <tr>\n                                          <td><strong>Totals:</strong></td>\n                                          <td>\n                                            <strong>{{\n                                              data.totals.totalAssets\n                                              }}</strong>\n                                          </td>\n                                          <td></td>\n                                        </tr>\n                                      </tfoot>\n                                    </table>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n        \n                            <div class=\"row clearfix justify-content-center\">\n                              <div class=\"col-xs-12 col-sm-12 col-md-9 col-lg-9\">\n                                <!-- <div class=\"card\"> -->\n                                <div class=\"header\">\n                                  <h2>Liabilities</h2>\n                                </div>\n                                <div class=\"tableBody\">\n                                  <div class=\"table-responsive\">\n                                    <table class=\"table table-hover\">\n                                      <!-- <tr>\n                                        <th class=\"category-column\"></th>\n                                        <th class=\"bank-column\"></th>\n                                        <th class=\"action-column\">Action</th>\n                                      </tr> -->\n                                      <tbody>\n                                        <tr *ngFor=\"let liability of data.liabilities\">\n                                          <td class=\"category-column truncate\">\n                                            {{ liability.financial_grouping }}\n                                          </td>\n                                          <td class=\"bank-column truncate\">\n                                            {{ liability.ac_balance }}\n                                          </td>\n                                          <td class=\"action-column\">\n                                            <a (click)=\"viewDetails(liability)\"><i class=\"fas fa-eye\"></i></a>\n                                          </td>\n                                        </tr>\n                                      </tbody>\n                                      <tfoot>\n                                        <tr>\n                                          <td><strong>Totals:</strong></td>\n                                          <td>\n                                            <strong>{{\n                                              data.totals.totalLiabilities\n                                              }}</strong>\n                                          </td>\n                                          <td></td>\n                                        </tr>\n                                      </tfoot>\n                                    </table>\n                                  </div>\n                                </div>\n                                <!-- </div> -->\n                              </div>\n                            </div>\n        \n                            <div class=\"row clearfix justify-content-center\">\n                              <div class=\"col-xs-12 col-sm-12 col-md-9 col-lg-9\">\n                                <div class=\"header\">\n                                  <h2>SHAREHOLDER'S FUNDS</h2>\n                                </div>\n                                <div class=\"tableBody\">\n                                  <div class=\"table-responsive\">\n                                    <table class=\"table table-hover\">\n                                      <!-- <tr>\n                                        <th class=\"category-column\"></th>\n                                        <th class=\"bank-column\"></th>\n                                        <th class=\"action-column\">Action</th>\n                                      </tr> -->\n                                      <tbody>\n                                        <tr *ngFor=\"let shareholder of data.shareholders\">\n                                          <td class=\"category-column truncate\">\n                                            {{ shareholder.financial_grouping }}\n                                          </td>\n                                          <td class=\"bank-column truncate\">\n                                            {{ shareholder.ac_balance }}\n                                          </td>\n                                          <td class=\"action-column\">\n                                            <a (click)=\"viewDetails(shareholder)\"><i class=\"fas fa-eye\"></i></a>\n                                          </td>\n                                        </tr>\n                                      </tbody>\n                                      <tfoot>\n                                        <tr>\n                                          <td><strong>Totals:</strong></td>\n                                          <td>\n                                            <strong>{{\n                                              data.totals.totalShareholderfunds\n                                              }}</strong>\n                                          </td>\n                                          <td></td>\n                                        </tr>\n                                      </tfoot>\n                                    </table>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n        \n                            <div class=\"horizontal-line\"></div>\n                            <div class=\"text-end mt-2\">\n                              <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                (click)=\"cancel()\">\n                                Cancel\n                              </button>\n                              <button mat-flat-button color=\"primary\">\n                                <i class=\"fas fa-print\"></i> Print\n                              </button>\n                            </div>\n                          </ng-container>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</section>\n\n<!-- <section class=\"content\">\n  <div class=\"content-block\">\n      <div class=\"block-header\">\n         \n          <app-breadcrumb [title]=\"'Reports'\" [items]=\"['Reports', 'BalanceSheet']\" [active_item]=\"'BalanceSheet'\">\n          </app-breadcrumb>\n      </div>\n      <div class=\"row clearfix\">\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n             \n          </div>\n      </div>\n  </div>\n</section> -->","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Route, Router } from \"@angular/router\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { FinanceReportsService } from \"src/app/erp-reports/data/services/finance-reports.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-fs-class-data\",\n  templateUrl: \"./fs-class-data.component.html\",\n  styleUrls: [\"./fs-class-data.component.scss\"],\n})\nexport class FsClassDataComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"acNumber\",\n    \"acBalance\",\n    \"glAccountTypeId\",\n    \"financialGrouping\",\n    \"description\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  isLoading: boolean = false;\n\n  pageFunction = \"View\";\n\n  fsClass = \"\";\n\n  constructor(\n    private route: ActivatedRoute,\n    private reportService: FinanceReportsService,\n    private snackbar: SnackbarService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if (params.fsClass) {\n        const action = params.action;\n        this.pageFunction = params.action;\n        this.fsClass = params.fsClass;\n\n        this.fromDate = params.fromDate;\n        this.toDate = params.toDate;\n      }\n    });\n\n    this.getData();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  data: any;\n\n  fromDate = \"\";\n  toDate = \"\";\n  getData() {\n    this.selection = new SelectionModel<any>(true, []);\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n\n    let params = {\n      financialGrouping: this.fsClass,\n      fromDate: this.fromDate,\n      toDate: this.toDate,\n    };\n    // this.alignTableColumns();\n    this.reportService\n      .getFsClassData(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n  refresh() {\n    this.getData();\n  }\n\n  viewGlStatements(data) {\n    let route = \"/erp-reports/gl-account-statements\";\n    this.router.navigate([route], {\n      queryParams: {\n        glAccount: data.accountid,\n        action: \"View\",\n      },\n    });\n  }\n\n  home() { this.router.navigate([\"/erp-dashboard/main\"]); }\n\n  reportDashboard() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n\n\n  posting: boolean = false;\n\n  downloadFsClassReport() {}\n}\n","\n<section class=\"dashboard\">\n    <div class=\"container\">\n        <div class=\"breadcrumb-banner bg-kingdom\">\n            <h1>Enterprise Resource Planning Dashboard</h1>\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a (click)=\"home()\">Home</a></li>\n                    <li class=\"breadcrumb-item\"><a (click)=\"reportDashboard()\"> ERP Reports</a></li>\n                    <li class=\"breadcrumb-item active\">Data Analysis</li>\n                </ol>\n            </nav>\n        </div>\n\n        <div class=\"card mt-2\">\n            <div class=\"m-2 mx-2\" *ngIf=\"isLoading || posting\">\n                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                </mat-progress-bar>\n            </div>\n\n            <div class=\"body\">\n                <div class=\"px-5\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"row justify-content-center mt-2\">\n                                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                    <img src=\"assets/images/KB-logo.png\" width=\"400px\" height=\"100px\" alt=\"\" />\n                                </div>\n                                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                    <div class=\"float-end mt-3\">\n                                        <address>\n                                            <p class=\"m-l-5\">\n                                                P. O. Box 22741- 00400 Nairobi, <br />\n                                                info@kingdombankltd.co.ke <br />\n                                                Landline: 020-221 0339, <br />\n                                                Mobile: 0709933456\n                                            </p>\n                                        </address>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-12 col-sm-12 col-md-2 col-lg-2 text-center\"></div>\n                                <div class=\"horizontal-line\"></div>\n                                <div class=\"horizontal-line\"></div>\n                            </div>\n\n                            <div class=\"body\">\n                                <div class=\"table-responsive\">\n        \n                                    <div class=\"materialTableHeader\">\n                                        <div class=\"row\">\n                                            <div class=\"col-8\">\n                                                <ul class=\"header-buttons-left ms-0\">\n                                                    <li class=\"dropdown\">\n                                                        <h2>{{fsClass}}</h2>\n                                                    </li>\n                                                    <li class=\"dropdown m-l-20\">\n                                                        <label for=\"search-input\"><i\n                                                                class=\"material-icons search-icon\">search</i></label>\n                                                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                            #filter class=\"browser-default search-field\"\n                                                            aria-label=\"Search box\">\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                          </button>\n                                                        </div>\n                                                      </li>\n        \n                                                    <!-- <li>\n                                                        <div class=\"m-l-10\" matTooltip=\"DOWNLOAD REPORT\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"downloadFsClassReport()\">\n                                                                <mat-icon class=\"col-white\">cloud_download</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </li> -->\n                                  \n                                          \n                                                </ul>\n                                            </div>\n                                            <div class=\"col-4\">\n                                                <ul class=\"header-buttons\">\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                                (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                            <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                                (click)=\"exporter.exportTable('csv')\" />\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                            <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                                (click)=\"exporter.exportTable('json')\" />\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                            <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                                (click)=\"exporter.exportTable('txt')\" />\n                                                        </div>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>\n        \n        \n        \n        \n                                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                        #exporter=\"matTableExporter\">\n        \n        \n        \n                                        <!-- Account Number Column -->\n                                        <ng-container matColumnDef=\"acNumber\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-20\">Account Number\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-20\">\n                                                <span>{{ row.accountid }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- Description Column -->\n                                        <ng-container matColumnDef=\"description\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-25\">Description\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-25\">\n                                                <span>{{ row.description }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- Account Balance Column -->\n                                        <ng-container matColumnDef=\"acBalance\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">Account Balance\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                                                <span>{{ row.ac_balance | currency : \"KES: \" : \"symbol\" : \"1.2-2\" }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- GL Account Type ID Column -->\n                                        <ng-container matColumnDef=\"glAccountTypeId\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-10\">GL Account Type ID\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                                                <span>{{ row.gl_account_typeid }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- Financial Grouping Column -->\n                                        <ng-container matColumnDef=\"financialGrouping\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-25\">Financial Grouping\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-25\">\n                                                <span>{{ row.financial_grouping }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n        \n                                        <ng-container matColumnDef=\"action\">\n                                            <mat-header-cell class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>Action\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                              <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\" (click)=\"viewGlStatements(row)\"\n                                                      class=\"tbl-action-btn\">\n                                                <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                              </button>\n                                        \n                                             \n                                            </mat-cell>\n                                          </ng-container>\n                                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\"\n                                            matRipple></mat-row>\n                                        <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{ input.value\n                                            }}\"</mat-cell>\n                                    </mat-table>\n        \n        \n                                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                        </mat-progress-spinner>\n                                    </div>\n                                    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                                        aria-label=\"Select page of users\">\n                                    </mat-paginator>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- <section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n           \n            <app-breadcrumb [title]=\"'Reports'\" [items]=\"['Reports', 'BalanceSheet']\" [active_item]=\"'BalanceSheet'\">\n            </app-breadcrumb>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n               \n            </div>\n        </div>\n    </div>\n</section> -->","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { MiddlewareService } from \"src/app/erp-finance/data/services/middlware.service\";\nimport { FinanceReportsService } from \"src/app/erp-reports/data/services/finance-reports.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-gl-account-statement\",\n  templateUrl: \"./gl-account-statement.component.html\",\n  styleUrls: [\"./gl-account-statement.component.scss\"],\n})\nexport class GlAccountStatementComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"TrxDate\",\n    \"ValueDate\",\n    \"Particulars\",\n    \"Debit\",\n    \"Credit\",\n    \"Closing\",\n    \"OperatorID\",\n    \"SupervisorID\"\n  ];\n  \n\n  \n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  isLoading: boolean = false;\n\n  pageFunction = \"View\";\n\n  glAccount = \"\";\n\n  constructor(\n    private route: ActivatedRoute,\n    private reportService: FinanceReportsService,\n    private snackbar: SnackbarService,\n    private middlewareService: MiddlewareService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if (params.glAccount) {\n        const action = params.action;\n        this.pageFunction = params.action;\n        this.glAccount = params.glAccount;\n\n        this.fromDate = params.fromDate;\n        this.toDate = params.toDate;\n      }\n    });\n\n    this.getData();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  data: any;\n\n  fromDate = \"\";\n  toDate = \"\";\n  getData() {\n    this.selection = new SelectionModel<any>(true, []);\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n\n    let body = {\n      ourBranchID: \"\",\n      accountID: this.glAccount,\n      fromDate: this.fromDate,\n      toDate: this.toDate,\n      chargeID: \"\",\n      topCountTrx: \"\"\n    };\n\n    this.middlewareService\n      .getGlAccountStatements(body)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.length > 0) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  downloadGLStatementReport() {}\n\n  posting: boolean = false;\n\n  home() { this.router.navigate([\"/erp-dashboard/main\"]); }\n  reportDashboard() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n\n\n  cancel() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n}\n","\n<section class=\"dashboard\">\n    <div class=\"container\">\n        <div class=\"breadcrumb-banner bg-kingdom\">\n            <h1>Enterprise Resource Planning Dashboard</h1>\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a (click)=\"home()\">Home</a></li>\n                    <li class=\"breadcrumb-item\"><a (click)=\"reportDashboard()\"> ERP Reports</a></li>\n                    <li class=\"breadcrumb-item active\">Data Analysis</li>\n                </ol>\n            </nav>\n        </div>\n\n        <div class=\"card mt-2\">\n            <div class=\"m-2 mx-2\" *ngIf=\"isLoading || posting\">\n                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                </mat-progress-bar>\n            </div>\n\n            <div class=\"body\">\n                <div class=\"px-5\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"row justify-content-center mt-2\">\n                                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                    <img src=\"assets/images/KB-logo.png\" width=\"400px\" height=\"100px\" alt=\"\" />\n                                </div>\n                                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                    <div class=\"float-end mt-3\">\n                                        <address>\n                                            <p class=\"m-l-5\">\n                                                P. O. Box 22741- 00400 Nairobi, <br />\n                                                info@kingdombankltd.co.ke <br />\n                                                Landline: 020-221 0339, <br />\n                                                Mobile: 0709933456\n                                            </p>\n                                        </address>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-12 col-sm-12 col-md-2 col-lg-2 text-center\"></div>\n                                <div class=\"horizontal-line\"></div>\n                                <div class=\"horizontal-line\"></div>\n                            </div>\n\n                            <div class=\"body\">\n                                <div class=\"table-responsive\">\n                                    <div class=\"materialTableHeader\">\n                                        <div class=\"row\">\n                                            <div class=\"col-8\">\n                                                <ul class=\"header-buttons-left ms-0\">\n                                                    <li class=\"dropdown\">\n                                                        <h2>Statements for GL: {{ glAccount }}</h2>\n                                                    </li>\n                                                    <li class=\"dropdown m-l-20\">\n                                                        <label for=\"search-input\"><i\n                                                                class=\"material-icons search-icon\">search</i></label>\n                                                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                            #filter class=\"browser-default search-field\"\n                                                            aria-label=\"Search box\" />\n                                                    </li>\n        \n                                                    <li>\n                                                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                            <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                                <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </li>\n        \n                                                    <!-- <li>\n                                                        <div class=\"m-l-10\" matTooltip=\"DOWNLOAD REPORT\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"downloadGLStatementReport()\">\n                                                                <mat-icon class=\"col-white\">cloud_download</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </li> -->\n                                                </ul>\n                                            </div>\n                                            <div class=\"col-4\">\n                                                <ul class=\"header-buttons\">\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                      exporter.exportTable('xlsx', {\n                                        fileName: 'assets-list',\n                                        sheet: 'sheet1'\n                                      })\n                                    \" />\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                            <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                                (click)=\"exporter.exportTable('csv')\" />\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                            <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                                (click)=\"exporter.exportTable('json')\" />\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                            <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                                (click)=\"exporter.exportTable('txt')\" />\n                                                        </div>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>\n        \n                                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                        #exporter=\"matTableExporter\">\n                                        <!-- TrxDate Column -->\n                                        <ng-container matColumnDef=\"TrxDate\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">TrxDate</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                <span>{{ row.TrxDate }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- ValueDate Column -->\n                                        <ng-container matColumnDef=\"ValueDate\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">ValueDate</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                <span>{{ row.ValueDate }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- Particulars Column -->\n                                        <ng-container matColumnDef=\"Particulars\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-20\">Particulars</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                                <span>{{ row.Particulars }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- Debit Column -->\n                                        <ng-container matColumnDef=\"Debit\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-10\">Debit</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                <span>{{ row.Debit }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- Credit Column -->\n                                        <ng-container matColumnDef=\"Credit\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-10\">Credit</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                <span>{{ row.Credit }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- Closing Column -->\n                                        <ng-container matColumnDef=\"Closing\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">Closing</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                <span>{{ row.Closing }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- OperatorID Column -->\n                                        <ng-container matColumnDef=\"OperatorID\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-10\">OperatorID</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                <span>{{ row.OperatorID }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <!-- SupervisorID Column -->\n                                        <ng-container matColumnDef=\"SupervisorID\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">SupervisorID</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                <span>{{ row.SupervisorID }}</span>\n                                            </mat-cell>\n                                        </ng-container>\n        \n                                        <ng-container matColumnDef=\"action\">\n                                            <mat-header-cell class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                                *matHeaderCellDef>Action\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let i = index\"\n                                                class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                                <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                                    (click)=\"viewGlTransactions(row)\" class=\"tbl-action-btn\">\n                                                    <app-feather-icons [icon]=\"'eye'\"\n                                                        [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                                </button>\n                                            </mat-cell>\n                                        </ng-container>\n                                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\"\n                                            matRipple></mat-row>\n                                        <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{ input.value\n                                            }}\"</mat-cell>\n                                    </mat-table>\n        \n                                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                        </mat-progress-spinner>\n                                    </div>\n                                    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                        aria-label=\"Select page of users\">\n                                    </mat-paginator>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- <section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n           \n            <app-breadcrumb [title]=\"'Reports'\" [items]=\"['Reports', 'BalanceSheet']\" [active_item]=\"'BalanceSheet'\">\n            </app-breadcrumb>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n               \n            </div>\n        </div>\n    </div>\n</section> -->\n\n\n","import { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, forkJoin, takeUntil } from \"rxjs\";\nimport { FinanceReportsService } from \"src/app/erp-reports/data/services/finance-reports.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-profit-loss\",\n  templateUrl: \"./profit-loss.component.html\",\n  styleUrls: [\"./profit-loss.component.scss\"],\n})\nexport class ProfitLossComponent implements OnInit {\n  dummy: string;\n  basicInformation: any;\n  buyerDetails: any;\n  goodsDetails: any[] = [];\n  payWayInfo: any[] = [];\n  sellerDetails: any;\n  extendedDetails: any;\n  taxDetails: any[] = [];\n  summaryDetails: any;\n  qrCode: any;\n\n  importSellerDetails: any;\n\n  loading = true;\n\n  Form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private reportService: FinanceReportsService,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private datePipe: DatePipe\n  ) {}\n\n  pageFunction = \"View\";\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if (params.action) {\n        const action = params.action;\n        this.pageFunction = params.action;\n      }\n    });\n\n    const today = new Date();\n    const toDateDefault = today.toISOString().split(\"T\")[0];\n    const fromDateDefault = new Date(\n      today.getFullYear(),\n      today.getMonth() - 1,\n      today.getDate()\n    )\n      .toISOString()\n      .split(\"T\")[0];\n    this.Form = this.fb.group({\n      type: \"PDF\",\n      fromDate: [fromDateDefault, [Validators.required]],\n      toDate: [toDateDefault, [Validators.required]],\n    });\n\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  data: any;\n  isLoading = false;\n  getData() {\n    this.isLoading = true;\n    this.data = {};\n\n    let params = {\n      fromDate: this.datePipe.transform(this.Form.value.fromDate, \"yyyy-MM-dd\"),\n      toDate: this.datePipe.transform(this.Form.value.toDate, \"yyyy-MM-dd\"),\n    };\n    this.reportService\n      .getProfitAndLossReportData(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res.entity;\n            this.isLoading = false;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      }),\n      Subscription;\n  }\n\n  viewDetails(data: any) {\n    let route = \"/erp-reports/fs-class-data\";\n    this.router.navigate([route], {\n      queryParams: {\n        fsClass: data.financial_grouping,\n        fromDate: this.datePipe.transform(\n          this.Form.value.fromDate,\n          \"yyyy-MM-dd\"\n        ),\n        toDate: this.datePipe.transform(this.Form.value.toDate, \"yyyy-MM-dd\"),\n        action: \"View\",\n      },\n    });\n  }\n\n  posting: boolean = false;\n  downloadDoc() {\n    this.posting = true;\n    let type = this.Form.value.type;\n    let fromDate = this.datePipe.transform(\n      this.Form.value.fromDate,\n      \"YYYY-MM-dd\"\n    );\n    let toDate = this.datePipe.transform(this.Form.value.toDate, \"YYYY-MM-dd\");\n\n    let params = { fromDate: fromDate, toDate: toDate };\n    // const params = new HttpParams()\n    //   .set(\"fromDate\", fromDate)\n    //   .set(\"toDate\", toDate);\n    console.log(\"params :\", params);\n\n    if (type == \"PDF\") {\n      this.reportService\n        .downloadProfitAndLossReport(params)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res :\", res);\n            let url = window.URL.createObjectURL(res.data);\n\n            // if you want to open PDF in new tab\n            window.open(url);\n\n            let a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.setAttribute(\"style\", \"display: none\");\n            a.setAttribute(\"target\", \"blank\");\n            a.href = url;\n            // Append row.code to the download URL\n            a.download = `ProfitAndLoss.pdf`;\n            a.click();\n            window.URL.revokeObjectURL(url);\n            a.remove();\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.posting = false;\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (type == \"EXCEL\") {\n    }\n  }\n\n  home() {\n    this.router.navigate([\"/erp-dashboard/main\"]);\n  }\n  reportDashboard() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n\n\n  cancel() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n}\n","<section class=\"dashboard\">\n    <div class=\"container\">\n        <div class=\"breadcrumb-banner bg-kingdom\">\n            <h1>Enterprise Resource Planning Dashboard</h1>\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a (click)=\"home()\">Home</a></li>\n                    <li class=\"breadcrumb-item\"><a (click)=\"reportDashboard()\"> ERP Reports</a></li>\n                    <li class=\"breadcrumb-item active\">Profit and Loss Preview</li>\n                </ol>\n            </nav>\n        </div>\n\n        <div class=\"card mt-2\">\n            <div class=\"m-2 mx-2\" *ngIf=\"isLoading || posting\">\n                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                </mat-progress-bar>\n            </div>\n\n            <div class=\"body\">\n                <div class=\"px-5\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"row justify-content-center mt-2\">\n                                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                    <img src=\"assets/images/KB-logo.png\" width=\"400px\" height=\"100px\" alt=\"\" />\n                                </div>\n                                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                    <div class=\"float-end mt-3\">\n                                        <address>\n                                            <p class=\"m-l-5\">\n                                                P. O. Box 22741- 00400 Nairobi, <br />\n                                                info@kingdombankltd.co.ke <br />\n                                                Landline: 020-221 0339, <br />\n                                                Mobile: 0709933456\n                                            </p>\n                                        </address>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-12 col-sm-12 col-md-2 col-lg-2 text-center\"></div>\n                                <div class=\"horizontal-line\"></div>\n                                <div class=\"horizontal-line\"></div>\n                            </div>\n\n                            <ng-container *ngIf=\"!isLoading\">\n                                <div class=\"row justify-content-center mt-2\">\n                                    <div class=\"col-9 text-center\">\n                                        <div class=\"green-card\">\n                                            <h3 class=\"white-text\">PROFIT AND LOSS REPORT</h3>\n                                        </div>\n                                        <form [formGroup]=\"Form\">\n                                            <div class=\"row justify-content-center mt-4\">\n                                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n                                                    <strong>From Date</strong>\n                                                    <br />\n\n                                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"fill\">\n                                                        <mat-label>From Date </mat-label>\n                                                        <input matInput [matDatepicker]=\"picker\"\n                                                            formControlName=\"fromDate\" required />\n                                                        <mat-datepicker-toggle matSuffix\n                                                            [for]=\"picker\"></mat-datepicker-toggle>\n                                                        <mat-datepicker #picker></mat-datepicker>\n                                                        <mat-error *ngIf=\"Form.get('fromDate').hasError('required')\">\n                                                            From Date is required\n                                                        </mat-error>\n                                                        <mat-error *ngIf=\"!Form.get('fromDate').hasError('required')\">\n                                                            Enter a Valid Account By Date\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n                                                    <strong>To Date</strong>\n                                                    <br />\n\n                                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"fill\">\n                                                        <mat-label>To Date </mat-label>\n                                                        <input matInput [matDatepicker]=\"picker2\"\n                                                            formControlName=\"toDate\" required />\n                                                        <mat-datepicker-toggle matSuffix\n                                                            [for]=\"picker2\"></mat-datepicker-toggle>\n                                                        <mat-datepicker #picker2></mat-datepicker>\n                                                        <mat-error *ngIf=\"Form.get('toDate').hasError('required')\">\n                                                            To Date is required\n                                                        </mat-error>\n                                                        <mat-error *ngIf=\"!Form.get('toDate').hasError('required')\">\n                                                            Enter a Valid Account By Date\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n\n                                <div class=\"row clearfix justify-content-center\">\n                                    <div class=\"col-xs-12 col-sm-12 col-md-9 col-lg-9\">\n                                        <div class=\"header\">\n                                            <h2>INCOME</h2>\n                                        </div>\n                                        <div class=\"tableBody\">\n                                            <div class=\"table-responsive\">\n                                                <table class=\"table table-hover\">\n                                                    <!-- <tr>\n                                                        <th class=\"category-column\"></th>\n                                                        <th class=\"bank-column\"></th>\n                                                        <th class=\"action-column\">Action</th>\n                                                    </tr> -->\n                                                    <tbody>\n                                                        <tr *ngFor=\"let incomeDatum of data.incomeData\">\n                                                            <td class=\"category-column truncate\">\n                                                                {{ incomeDatum.financial_grouping }}\n                                                            </td>\n                                                            <td class=\"bank-columntruncate\">\n                                                                {{ incomeDatum.ac_balance }}\n                                                            </td>\n                                                            <td class=\"action-column\">\n                                                                <a (click)=\"viewDetails(incomeDatum)\"><i\n                                                                        class=\"fas fa-eye\"></i></a>\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                    <tfoot>\n                                                        <tr>\n                                                            <td><strong>TOTALS:</strong></td>\n                                                            <td>\n                                                                <strong>{{\n                                                                    data.totals.totalIncomeData\n                                                                    }}</strong>\n                                                            </td>\n                                                            <td></td>\n                                                        </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row clearfix justify-content-center\">\n                                    <div class=\"col-xs-12 col-sm-12 col-md-9 col-lg-9\">\n                                        <div class=\"header\">\n                                            <h2>OPERATING INCOME</h2>\n                                        </div>\n                                        <div class=\"tableBody\">\n                                            <div class=\"table-responsive\">\n                                                <table class=\"table table-hover\">\n                                                    <!-- <tr>\n                                                        <th class=\"category-column\"></th>\n                                                        <th class=\"bank-column\"></th>\n                                                        <th class=\"action-column\">Action</th>\n                                                    </tr> -->\n                                                    <tbody>\n                                                        <tr *ngFor=\"\n                                let operatingIncomeDatum of data.operatingIncomeData\n                              \">\n                                                            <td class=\"category-column truncate\">\n                                                                {{ operatingIncomeDatum.financial_grouping }}\n                                                            </td>\n                                                            <td class=\"bank-column truncate\">\n                                                                {{ operatingIncomeDatum.ac_balance }}\n                                                            </td>\n                                                            <td class=\"action-column\">\n                                                                <a (click)=\"viewDetails(operatingIncomeDatum)\"><i\n                                                                        class=\"fas fa-eye\"></i></a>\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                    <tfoot>\n                                                        <tr>\n                                                            <td><strong>TOTALS:</strong></td>\n                                                            <td>\n                                                                <strong>{{\n                                                                    data.totals.totalOperatingIncomeData\n                                                                    }}</strong>\n                                                            </td>\n                                                            <td></td>\n                                                        </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row clearfix justify-content-center\">\n                                    <div class=\"col-xs-12 col-sm-12 col-md-9 col-lg-9\">\n                                        <div class=\"header\">\n                                            <h2>PROFIT BEFORE TAX</h2>\n                                        </div>\n                                        <div class=\"tableBody\">\n                                            <div class=\"table-responsive\">\n                                                <table class=\"table table-hover\">\n                                                    <!-- <tr>\n                                                        <th class=\"category-column\"></th>\n                                                        <th class=\"bank-column\"></th>\n                                                        <th class=\"action-column\">Action</th>\n                                                    </tr> -->\n                                                    <tbody>\n                                                        <tr *ngFor=\"\n                                let profitBeforeTaxDatum of data.profitBeforeTaxData\n                              \">\n                                                            <td class=\"category-column truncate\">\n                                                                {{ profitBeforeTaxDatum.financial_grouping }}\n                                                            </td>\n                                                            <td class=\"bank-column truncate\">\n                                                                {{ profitBeforeTaxDatum.ac_balance }}\n                                                            </td>\n                                                            <td class=\"action-column\">\n                                                                <a (click)=\"viewDetails(profitBeforeTaxDatum)\"><i\n                                                                        class=\"fas fa-eye\"></i></a>\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                    <tfoot>\n                                                        <tr>\n                                                            <td><strong>TOTALS:</strong></td>\n                                                            <td>\n                                                                <strong>{{\n                                                                    data.totals.totalProfitBeforeTaxData\n                                                                    }}</strong>\n                                                            </td>\n                                                            <td></td>\n                                                        </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"horizontal-line\"></div>\n                                <div class=\"text-end mt-2\">\n                                    <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                        (click)=\"cancel()\">\n                                        Cancel\n                                    </button>\n                                    <button mat-flat-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                                        [disabled]=\"posting\" (click)=\"downloadDoc()\">\n                                        <i class=\"fas fa-print\"></i> Print\n                                    </button>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- <section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n           \n            <app-breadcrumb [title]=\"'Reports'\" [items]=\"['Reports', 'BalanceSheet']\" [active_item]=\"'BalanceSheet'\">\n            </app-breadcrumb>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n               \n            </div>\n        </div>\n    </div>\n</section> -->","import { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { FinanceReportsService } from \"src/app/erp-reports/data/services/finance-reports.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-trial-balance\",\n  templateUrl: \"./trial-balance.component.html\",\n  styleUrls: [\"./trial-balance.component.scss\"],\n})\nexport class TrialBalanceComponent implements OnInit {\n  dummy: string;\n  basicInformation: any;\n  buyerDetails: any;\n  goodsDetails: any[] = [];\n  payWayInfo: any[] = [];\n  sellerDetails: any;\n  extendedDetails: any;\n  taxDetails: any[] = [];\n  summaryDetails: any;\n  qrCode: any;\n\n  importSellerDetails: any;\n\n  loading = true;\n\n  Form: FormGroup;\n\n  glTypes = [{ name: \"Transaction Gls\" }, { name: \"All Gls\" }];\n\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  displayedColumns = ['accountname', 'openingBalance', 'debit', 'credit', 'closingBalance', 'action'];\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private reportService: FinanceReportsService,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private datePipe: DatePipe\n  ) { }\n\n  pageFunction = \"View\";\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if (params.action) {\n        const action = params.action;\n        this.pageFunction = params.action;\n      }\n    });\n\n    const today = new Date();\n    const toDateDefault = today.toISOString().split(\"T\")[0];\n    const fromDateDefault = new Date(\n      today.getFullYear(),\n      today.getMonth() - 1,\n      today.getDate()\n    )\n      .toISOString()\n      .split(\"T\")[0];\n    this.Form = this.fb.group({\n      type: [\"PDF\", Validators.required],\n      fromDate: [fromDateDefault, [Validators.required]],\n      toDate: [toDateDefault, [Validators.required]],\n      glType: [\"Transaction Gls\"],\n    });\n\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n\n\n  //************************************************************************************** */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n  //************************************************************************************** */\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  data: any;\n  isLoading = false;\n  getData() {\n\n    this.data = {};\n\n\n\n    this.isLoading = true;\n\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    let params = {\n      fromDate: this.datePipe.transform(this.Form.value.fromDate, \"yyyy-MM-dd\"),\n      toDate: this.datePipe.transform(this.Form.value.toDate, \"yyyy-MM-dd\"),\n      reportType: this.Form.value.glType,\n    };\n\n    console.log(\"params :\", params);\n\n    this.reportService\n      .getTrialBalanceReportData(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res.entity;\n\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.isLoading = false;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      }),\n      Subscription;\n\n  }\n  // totals = {\n  //   openingBalance: 0,\n  //   debit: 0,\n  //   credit: 0,\n  //   closingBalance: 0\n  // };\n  // calculateTotals() {\n  //   this.totals.openingBalance = this.data.reduce((total, item) => total + item.openingBalance, 0);\n  //   this.totals.debit = this.data.reduce((total, item) => total + item.debit, 0);\n  //   this.totals.credit = this.data.reduce((total, item) => total + item.credit, 0);\n  //   this.totals.closingBalance = this.data.reduce((total, item) => total + item.closingBalance, 0);\n  // }\n  calculateTotal(field: string): number {\n    return this.data.reduce((total, item) => total + item[field], 0);\n  }\n  viewDetails(data: any) {\n    let route = \"/erp-reports/fs-class-data\";\n    this.router.navigate([route], {\n      queryParams: {\n        fsClass: data.financial_grouping,\n        fromDate: this.datePipe.transform(\n          this.Form.value.fromDate,\n          \"yyyy-MM-dd\"\n        ),\n        toDate: this.datePipe.transform(this.Form.value.toDate, \"yyyy-MM-dd\"),\n        action: \"View\",\n      },\n    });\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n\n  posting: boolean = false;\n  downloadDoc() {\n    this.posting = true;\n    let type = this.Form.value.type;\n    let fromDate = this.datePipe.transform(\n      this.Form.value.fromDate,\n      \"YYYY-MM-dd\"\n    );\n    let toDate = this.datePipe.transform(\n      this.Form.value.toDate,\n      \"YYYY-MM-dd\"\n    );\n\n    const params = new HttpParams()\n      .set(\"fromDate\", fromDate)\n      .set(\"toDate\", toDate)\n      .set(\"reportType\", this.Form.value.glType);\n\n    if (type == \"PDF\") {\n      this.reportService\n        .downloadTrialBalanceReport(params)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res :\", res);\n            let url = window.URL.createObjectURL(res.data);\n\n            // if you want to open PDF in new tab\n            window.open(url);\n\n            let a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.setAttribute(\"style\", \"display: none\");\n            a.setAttribute(\"target\", \"blank\");\n            a.href = url;\n            // Append row.code to the download URL\n            a.download = `TrialBalance.pdf`;\n            a.click();\n            window.URL.revokeObjectURL(url);\n            a.remove();\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.posting = false;\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (type == \"EXCEL\") {\n    }\n  }\n\n  home() {\n    this.router.navigate([\"/erp-dashboard/main\"]);\n  }\n\n\n  reportDashboard() {\n    this.router.navigate([\"/erp-reports/dashboard\"]);\n  }\n\n\n\n}\n","<section class=\"dashboard\">\n    <div class=\"container\">\n        <div class=\"breadcrumb-banner bg-kingdom\">\n            <h1>Enterprise Resource Planning Dashboard</h1>\n            <nav aria-label=\"breadcrumb\">\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a (click)=\"home()\">Home</a></li>\n                    <li class=\"breadcrumb-item\"><a (click)=\"reportDashboard()\"> ERP Reports</a></li>\n                    <li class=\"breadcrumb-item active\">Trail Balance Preview</li>\n                </ol>\n            </nav>\n        </div>\n\n        <div class=\"card mt-2\">\n            <div class=\"m-2 mx-2\" *ngIf=\"isLoading || posting\">\n                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                </mat-progress-bar>\n            </div>\n\n            <div class=\"body\">\n                <div class=\"px-5\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"row justify-content-center mt-2\">\n                                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                    <img src=\"assets/images/KB-logo.png\" width=\"400px\" height=\"100px\" alt=\"\" />\n                                </div>\n                                <div class=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 text-center\">\n                                    <div class=\"float-end mt-3\">\n                                        <address>\n                                            <p class=\"m-l-5\">\n                                                P. O. Box 22741- 00400 Nairobi, <br />\n                                                info@kingdombankltd.co.ke <br />\n                                                Landline: 020-221 0339, <br />\n                                                Mobile: 0709933456\n                                            </p>\n                                        </address>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-12 col-sm-12 col-md-2 col-lg-2 text-center\"></div>\n                                <div class=\"horizontal-line\"></div>\n                                <div class=\"horizontal-line\"></div>\n                            </div>\n\n                            <ng-container>\n                                <div class=\"row justify-content-center mt-2\">\n                                    <div class=\"col-9 text-center\">\n                                        <div class=\"green-card\">\n                                            <h3 class=\"white-text\">TRIAL BALANCE REPORT</h3>\n                                        </div>\n                                        <form [formGroup]=\"Form\">\n                                            <div class=\"row justify-content-center mt-4\">\n                                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n                                                    <strong>From Date</strong>\n                                                    <br />\n\n                                                    <mat-form-field class=\"example-full-width mb-0\"\n                                                        appearance=\"fill\">\n                                                        <mat-label>From Date </mat-label>\n                                                        <input matInput [matDatepicker]=\"picker\"\n                                                            formControlName=\"fromDate\" required />\n                                                        <mat-datepicker-toggle matSuffix\n                                                            [for]=\"picker\"></mat-datepicker-toggle>\n                                                        <mat-datepicker #picker></mat-datepicker>\n                                                        <mat-error *ngIf=\"\n                            Form.get('fromDate').hasError('required')\n                          \">\n                                                            From Date is required\n                                                        </mat-error>\n                                                        <mat-error *ngIf=\"\n                            !Form.get('fromDate').hasError('required')\n                          \">\n                                                            Enter a Valid Account By Date\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n                                                    <strong>To Date</strong>\n                                                    <br />\n\n                                                    <mat-form-field class=\"example-full-width mb-0\"\n                                                        appearance=\"fill\">\n                                                        <mat-label>To Date </mat-label>\n                                                        <input matInput [matDatepicker]=\"picker2\"\n                                                            formControlName=\"toDate\" required />\n                                                        <mat-datepicker-toggle matSuffix\n                                                            [for]=\"picker2\"></mat-datepicker-toggle>\n                                                        <mat-datepicker #picker2></mat-datepicker>\n                                                        <mat-error *ngIf=\"\n                            Form.get('toDate').hasError('required')\n                          \">\n                                                            To Date is required\n                                                        </mat-error>\n                                                        <mat-error *ngIf=\"\n                            !Form.get('toDate').hasError('required')\n                          \">\n                                                            Enter a Valid Account By Date\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n                                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n                                                    <strong>Gl Type</strong>\n                                                    <br />\n                                                    <mat-form-field class=\"example-full-width mb-0\"\n                                                        appearance=\"fill\">\n                                                        <mat-label>Gl types</mat-label>\n                                                        <mat-select formControlName=\"glType\" required>\n                                                            <mat-option *ngFor=\"let glType of glTypes\"\n                                                                [value]=\"glType.name\">\n                                                                {{ glType.name }}\n                                                            </mat-option>\n                                                        </mat-select>\n                                                        <mat-error\n                                                            *ngIf=\"Form.get('glType').hasError('required')\">\n                                                            GlType is required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n\n                                <div class=\"row clearfix justify-content-center\">\n                                    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                        <!-- <div class=\"header\">\n                                            <h2>INCOME</h2>\n                                        </div> -->\n                                        <div class=\"body\">\n                                            <div class=\"table-responsive\">\n\n                                               \n\n                                                <ng-container *ngIf=\"!isLoading\">\n                                                    <div class=\"materialTableHeader mt-0\">\n                                                        <div class=\"row\">\n                                                            <div class=\"col-6\">\n                                                                <ul class=\"header-buttons-left ms-0\">\n                                                                    <li class=\"dropdown\">\n                                                                        <h2>Report</h2>\n                                                                    </li>\n                                                                    <li class=\"dropdown m-l-20\">\n                                                                        <label for=\"search-input\"><i\n                                                                                class=\"material-icons search-icon\">search</i></label>\n                                                                        <input placeholder=\"Filter...\" type=\"text\"\n                                                                            (keyup)=\"applyFilter($event)\" #filter\n                                                                            class=\"browser-default search-field\"\n                                                                            aria-label=\"Search box\" />\n                                                                    </li>\n\n                                                                    <!-- <li>\n                                                                        <div class=\"m-l-10\"\n                                                                            matTooltip=\"REFRESH\">\n                                                                            <button mat-mini-fab color=\"primary\"\n                                                                                (click)=\"refresh()\">\n                                                                                <mat-icon\n                                                                                    class=\"col-white\">refresh</mat-icon>\n                                                                            </button>\n                                                                        </div>\n                                                                    </li> -->\n\n\n\n                                                                </ul>\n                                                            </div>\n\n\n\n                                                            <div class=\"col-4\">\n                                                                <ul class=\"header-buttons\">\n                                                                    <li>\n                                                                        <div class=\"export-button m-l-10\"\n                                                                            matTooltip=\"XLSX\">\n                                                                            <img src=\"assets/images/icons/xlsx.png\"\n                                                                                alt=\"\" (click)=\"\n                                                  exporter.exportTable('xlsx', {\n                                                    fileName: 'Suppliers-list',\n                                                    sheet: 'sheet1'\n                                                  })\n                                                \" />\n                                                                        </div>\n                                                                    </li>\n                                                                    <li>\n                                                                        <div class=\"export-button m-l-10\"\n                                                                            matTooltip=\"CSV\">\n                                                                            <img src=\"assets/images/icons/csv.png\"\n                                                                                alt=\"\"\n                                                                                (click)=\"exporter.exportTable('csv')\" />\n                                                                        </div>\n                                                                    </li>\n                                                                    <li>\n                                                                        <div class=\"export-button m-l-10\"\n                                                                            matTooltip=\"JSON\">\n                                                                            <img src=\"assets/images/icons/json.png\"\n                                                                                alt=\"\"\n                                                                                (click)=\"exporter.exportTable('json')\" />\n                                                                        </div>\n                                                                    </li>\n                                                                    <li>\n                                                                        <div class=\"export-button m-l-10\"\n                                                                            matTooltip=\"TXT\">\n                                                                            <img src=\"assets/images/icons/txt.png\"\n                                                                                alt=\"\"\n                                                                                (click)=\"exporter.exportTable('txt')\" />\n                                                                        </div>\n                                                                    </li>\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <!-- Table Definition -->\n                                                    <mat-table #table matTableExporter [dataSource]=\"dataSource\"\n                                                        matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n\n                                                        <ng-container matColumnDef=\"accountid\">\n                                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-25\">Account\n                                                                ID</mat-header-cell>\n                                                            <mat-cell *matCellDef=\"let row\"\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{\n                                                                row.accountid }}</mat-cell>\n                                                        </ng-container>\n\n                                                        <ng-container matColumnDef=\"accounttypeid\">\n                                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-25\">Account\n                                                                Type ID</mat-header-cell>\n                                                            <mat-cell *matCellDef=\"let row\"\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{\n                                                                row.accounttypeid }}</mat-cell>\n                                                        </ng-container>\n\n                                                        <ng-container matColumnDef=\"accountname\">\n                                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-25\">Account\n                                                                Name</mat-header-cell>\n                                                            <mat-cell *matCellDef=\"let row\"\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{\n                                                                row.accountname }}</mat-cell>\n                                                        </ng-container>\n\n                                                        <ng-container matColumnDef=\"openingBalance\">\n                                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-35\">Opening\n                                                                Balance</mat-header-cell>\n                                                            <mat-cell *matCellDef=\"let row\"\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-35\">{{\n                                                                row.openingBalance }}</mat-cell>\n                                                        </ng-container>\n\n                                                        <ng-container matColumnDef=\"debit\">\n                                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-35\">Debit</mat-header-cell>\n                                                            <mat-cell *matCellDef=\"let row\"\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-35\">{{\n                                                                row.debit }}</mat-cell>\n                                                        </ng-container>\n\n                                                        <ng-container matColumnDef=\"credit\">\n                                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-35\">Credit</mat-header-cell>\n                                                            <mat-cell *matCellDef=\"let row\"\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-35\">{{\n                                                                row.credit }}</mat-cell>\n                                                        </ng-container>\n\n                                                        <ng-container matColumnDef=\"closingBalance\">\n                                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-35\">Closing\n                                                                Balance</mat-header-cell>\n                                                            <mat-cell *matCellDef=\"let row\"\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-35\">{{\n                                                                row.closingBalance }}</mat-cell>\n                                                        </ng-container>\n\n\n                                                        <!-- Action Buttons -->\n                                                        <ng-container matColumnDef=\"action\">\n                                                            <mat-header-cell\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\"\n                                                                *matHeaderCellDef>\n                                                                Action\n                                                            </mat-header-cell>\n                                                            <mat-cell *matCellDef=\"let row; let i = index\"\n                                                                class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\">\n\n\n                                                                <!-- View Button -->\n                                                                <button matTooltip=\"View Record\" mat-icon-button\n                                                                    color=\"primary\"\n                                                                    (click)=\"$event.stopPropagation()\"\n                                                                    (click)=\"viewDetails(row)\"\n                                                                    class=\"tbl-action-btn\">\n                                                                    <app-feather-icons [icon]=\"'eye'\"\n                                                                        [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                                                </button>\n\n\n                                                            </mat-cell>\n                                                        </ng-container>\n                                                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                                        </mat-header-row>\n                                                        <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                                            (click)=\"viewDetails(row)\"\n                                                            [style.cursor]=\"'pointer'\" matRipple>\n                                                        </mat-row>\n                                                        <mat-cell *matNoDataRow colspan=\"4\">\n                                                            No data matching the filter \"{{ input.value }}\"\n                                                        </mat-cell>\n\n\n                                                    </mat-table>\n                                                </ng-container>\n\n                                                <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                                    <mat-progress-spinner color=\"primary\" [diameter]=\"40\"\n                                                        mode=\"indeterminate\">\n                                                    </mat-progress-spinner>\n                                                </div>\n                                                <mat-paginator [pageSize]=\"10\"\n                                                    [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                                    aria-label=\"Select page of users\">\n                                                </mat-paginator>\n                                                <div class=\"table-footer\" *ngIf=\"!isLoading\">\n\n                                                    <div class=\"footer-totals\">\n                                                        <span><b>Totals:</b></span>\n                                                        <span>Opening Balance: {{\n                                                            calculateTotal('openingBalance') }}</span>\n                                                        <span>Debit: {{ calculateTotal('debit') }}</span>\n                                                        <span>Credit: {{ calculateTotal('credit') }}</span>\n                                                        <span>Closing Balance: {{\n                                                            calculateTotal('closingBalance') }}</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                                <div class=\"horizontal-line\"></div>\n                                <div class=\"text-end mt-2\">\n                                    <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\"\n                                        mat-button (click)=\"cancel()\">\n                                        Cancel\n                                    </button>\n                                    <button mat-flat-button color=\"primary\" [class.auth-spinner]=\"posting\" [disabled]=\"posting\" (click)=\"downloadDoc()\">\n                                        <i class=\"fas fa-print\" ></i> Print\n                                    </button>\n\n\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- <section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n           \n            <app-breadcrumb [title]=\"'Reports'\" [items]=\"['Reports', 'BalanceSheet']\" [active_item]=\"'BalanceSheet'\">\n            </app-breadcrumb>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n               \n            </div>\n        </div>\n    </div>\n</section> -->\n\n\n\n\n\n\n<!-- <section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <app-breadcrumb [title]=\"'Reports'\" [items]=\"['Reports', 'TrailBalance']\" [active_item]=\"'TrailBalance'\">\n            </app-breadcrumb>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card\">\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || posting\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n\n                   \n                </div>\n            </div>\n        </div>\n    </div>\n</section> -->","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { GenerateProcurementReportComponent } from '../dialogs/generate-procurement-report/generate-procurement-report.component';\n\n@Component({\n  selector: 'app-procurement-reports',\n  templateUrl: './procurement-reports.component.html',\n  styleUrls: ['./procurement-reports.component.scss']\n})\nexport class ProcurementReportsComponent implements OnInit {\n\n  \n  constructor(private dialog: MatDialog,) { }\n\n  ngOnInit(): void {\n  }\n\n\n  generateReport(type: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      type: type,\n    };\n    const dialogRef = this.dialog.open(GenerateProcurementReportComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      // result.data.forEach((element) => {\n      // });\n    });\n  }\n\n\n}\n","<div class=\"row mt-3\">\n    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n        <div class=\"card\">\n            <div class=\"header\">\n                <h2>Procurement Reports</h2>\n            </div>\n            <div class=\"body\">\n                <div class=\"doc-file-type\">\n                    <ul class=\"list-unstyled\">\n            \n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('POsByStatus')\">\n                            <span class=\"msr-3 align-self-center img-icon primary-rgba text-primary\"><i\n                                    class=\"far fa-file-word\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">POs by Status</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-arrow-alt-circle-down\"></i>\n                            </div>\n                        </li>\n            \n                        <li class=\"d-flex mb-3\">\n                           \n                        </li>\n            \n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('PoDeliveryReport')\">\n                            <span class=\"msr-3 align-self-center img-icon success-rgba text-success\"><i\n                                    class=\"far fa-file-excel\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">PO Delivery Report</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-arrow-alt-circle-down\"></i>\n                            </div>\n                        </li>\n            \n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('GeneralPoDeliveryReport')\">\n                            <span class=\"msr-3 align-self-center img-icon success-rgba text-success\"><i\n                                    class=\"far fa-file-excel\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">General PO Delivery Report</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-arrow-alt-circle-down\"></i>\n                            </div>\n                        </li>\n            \n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('SupplierAccountStatement')\">\n                            <span class=\"msr-3 align-self-center img-icon danger-rgba text-danger\"><i\n                                    class=\"far fa-file-pdf\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">Supplier Account Statement</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-arrow-alt-circle-down\"></i>\n                            </div>\n                        </li>\n            \n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('GeneralSupplierStatementReport')\">\n                            <span class=\"msr-3 align-self-center img-icon danger-rgba text-danger\"><i\n                                class=\"far fa-file-pdf\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">General Supplier Statement Report</h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-arrow-alt-circle-down\"></i>\n                            </div>\n                        </li>\n            \n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('InvoiceReportDetailsByStatus')\">\n                            <span class=\"msr-3 align-self-center img-icon info-rgba text-info\"><i\n                                    class=\"far fa-file-archive\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">Invoice Details Report </h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-arrow-alt-circle-down\"></i>\n                            </div>\n                        </li>\n            \n                        <li class=\"d-flex mb-3\" (click)=\"generateReport('GeneralInvoiceReportDetailsByStatus')\">\n                            <span class=\"msr-3 align-self-center img-icon info-rgba text-info\"><i\n                                    class=\"far fa-file-archive\"></i></span>\n                            <div class=\"set-flex\">\n                                <h5 class=\"font-16 mb-1\">General Invoice Details Report </h5>\n                                <p>.pdf document</p>\n                            </div>\n                            <div class=\"ms-auto\">\n                                <i class=\"far fa-arrow-alt-circle-down\"></i>\n                            </div>\n                        </li>\n            \n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierCategoriesService {\n\n  constructor(private http: HttpClient) { }\n  \n  getCategories(): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/view`;\n    return this.http.get<any[]>(SupplierCatUrl);\n  }\n  getCategoriesById(id: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/supplierCategory/view_byId/${id}`);\n  }\n\n\n  addCategories(data: any): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/add`;\n    return this.http.post<any>(SupplierCatUrl, data);\n  }\n\n  updateCategories(CategoryDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/update/`;\n    return this.http.put<any>(updateBillUrl, CategoryDetails)\n  }\n\n\n  deleteCurrencyPemanently(id: any): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/delete/${id}`;\n    return this.http.delete<any>(SupplierCatUrl, id);\n  }\n\n\n    // ********************************************************************************************************************\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}