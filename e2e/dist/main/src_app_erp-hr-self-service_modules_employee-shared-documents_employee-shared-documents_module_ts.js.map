{"version":3,"file":"src_app_erp-hr-self-service_modules_employee-shared-documents_employee-shared-documents_module_ts.js","mappings":"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","sources":["./src/@core/Models/Notification/notification-service.service.ts","./src/app/erp-hr-self-service/modules/employee-shared-documents/employee-shared-documents-routing.module.ts","./src/app/erp-hr-self-service/modules/employee-shared-documents/employee-shared-documents.module.ts","./src/app/erp-hr-self-service/modules/employee-shared-documents/shared-documents-details-page/shared-documents-details-page.component.ts","./src/app/erp-hr-self-service/modules/employee-shared-documents/shared-documents-details-page/shared-documents-details-page.component.html"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class NotificationServiceService {\n//   showSuccessNotification(arg0: string) {\n//     throw new Error('Method not implemented.');\n//   }\n//   showSuccess(arg0: string) {\n//     throw new Error('Method not implemented.');\n//   }\n//   showError(message: any) {\n//     throw new Error('Method not implemented.');\n//   }\n\n//   horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n//   verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n//   constructor(\n//     private snackBar: MatSnackBar\n//   ) {\n//    }\n//   alertSuccess(message:any){\n//     this.snackBar.open(message, \"OK\", {\n//       horizontalPosition: this.horizontalPosition,\n//       verticalPosition: this.verticalPosition,\n//       duration: 5000,\n//       panelClass: ['mat-toolbar', 'green-snackbar']\n//     });\n//   }\n//   alertWarning(message:any){\n//     this.snackBar.open(message, \"X\", {\n//       horizontalPosition: this.horizontalPosition,\n//       verticalPosition: this.verticalPosition,\n//       duration: 5000,\n//       panelClass: ['mat-toolbar', 'red-snackbar']\n//     });\n//   }\n// }\n\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationServiceService {\n  showSuccessNotification(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  showSuccess(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  showError(message: any) {\n    throw new Error('Method not implemented.');\n  }\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) {\n   }\n  alertSuccess(message:any){\n    this.snackBar.open(message, \"OK\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'snackbar-success']\n    });\n  }\n  alertWarning(message:any){\n    this.snackBar.open(message, \"X\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'snackbar-danger']\n    });\n  }\n  alertWarningByDuration(message:any, duration:number){\n    this.snackBar.open(message, \"X\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: duration,\n      panelClass: ['mat-toolbar', 'snackbar-danger']\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedDocumentsDetailsPageComponent } from './shared-documents-details-page/shared-documents-details-page.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\n\nconst routes: Routes = [\n\n  {\n    path: \"\",\n    component: SharedDocumentsDetailsPageComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"EmployeePortalModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeSharedDocumentsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeSharedDocumentsRoutingModule } from './employee-shared-documents-routing.module';\nimport { SharedDocumentsDetailsPageComponent } from './shared-documents-details-page/shared-documents-details-page.component';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\n\n\n@NgModule({\n  declarations: [\n    SharedDocumentsDetailsPageComponent\n  ],\n  imports: [\n    CommonModule,\n    EmployeeSharedDocumentsRoutingModule,\n\n    DashboardModule,\n    ComponentsModule,\n    SharedModule,\n  ]\n})\nexport class EmployeeSharedDocumentsModule { }\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { SharedDocumentService } from 'src/app/erp-hr/data/shared-documents/shared-documents.service';\nimport { DepartmentsLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/departments-lookup/departments-lookup.component';\nimport { ManageSharedDocumentsComponent } from 'src/app/erp-hr/modules/shared-documents/documents/manage-shared-documents/manage-shared-documents.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-shared-documents-details-page',\n  templateUrl: './shared-documents-details-page.component.html',\n  styleUrls: ['./shared-documents-details-page.component.sass']\n})\nexport class SharedDocumentsDetailsPageComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"documentType\",\n    \"fileName\",\n    \"documentTitle\",\n    \"fileExtension\",\n    \"status\",\n    \"action\",\n  ];\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n\n  Form: FormGroup;\n  documentTypeArray: string[] = [\n    \"All\",\n    \"Pre-Onboarding Document\",\n    \"Workplace safety guidelines\",\n    \"Employee Document\",\n    \"HR policies\",\n    \"Exit Documents\",\n    \"Corporate news\",\n    \"Case management\",\n    \"Training materials\",\n    \"Employee handbook\",\n    \"LeaveDocument\",\n    \"Benefits information\",\n    \"Pay stubs\",\n    \"Others\",\n  ];\n\n  currentUser: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private sharedDocumentService: SharedDocumentService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder,\n    private tokenStorageService: TokenStorageService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.tokenStorageService.getUser();\n\n    this.Form = this.fb.group({\n      documentType: [this.documentTypeArray[0], Validators.required],\n      status: [\"Approved\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //************************************************************************************************ */\n  reqStatuses: any[] = [\n    // { name: \"All\" },\n    // { name: \"Pending\" },\n    { name: \"Approved\" },\n    // { name: \"Rejected\" },\n  ];\n  selectedStatus: string = \"All\";\n\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n\n    let department = this.Form.value.department;\n\n    if (department === \"All\") {\n      department = \"%\";\n    }\n\n    let params = new HttpParams()\n      .set(\"docType\", this.Form.value.documentType)\n      .set(\"status\", this.Form.value.status);\n\n    this.sharedDocumentService\n      .readByStatusAndDocType(params)\n\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Shared Documents displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error:  \" + err.message);\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n  //********************************************************************************************************** */\n\n  mngRecord(action?: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: action,\n      record: record,\n    };\n    const dialogRef = this.dialog.open(\n      ManageSharedDocumentsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      this.getData();\n    });\n  }\n\n  //************************************************************************************************* */\n  deleteRecord(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.sharedDocumentService\n          .delete(id)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************************************** */\n  departmentLookup(type: any) {\n    if (type === \"Search\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"SingleCostCenter\",\n      };\n      const dialogRef = this.dialog.open(\n        DepartmentsLookupComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((res) => {\n        if (res && res.data && res.data.length > 0) {\n          this.Form.patchValue({\n            department: res.data[0].id,\n          });\n        }\n      });\n    } else if (type === \"All\") {\n      this.Form.patchValue({\n        department: \"All\",\n      });\n\n      this.getData();\n    }\n  }\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Verify\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n      input: \"textarea\",\n      inputPlaceholder: \"Type your remarks here...\",\n      inputAttributes: {\n        class: \"form-control\",\n        rows: \"4\",\n      },\n      customClass: {\n        container: \"swal-container\",\n        confirmButton: \"swal-confirm-button\",\n        cancelButton: \"swal-cancel-button\",\n        title: \"swal-title\",\n        input: \"swal-input\",\n      },\n      inputValidator: (value) => {\n        if (!value) {\n          return \"Please enter your remarks\";\n        } else {\n          if (this.hasAccess) {\n            const processedRows = this.selection.selected.map((element) => {\n              return {\n                id: element.id,\n                status: status,\n                verifierRemarks: value,\n              };\n            });\n\n            console.log(\"processedRows:: \", processedRows);\n            this.loading = true;\n            this.sharedDocumentService\n              .verify(processedRows)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe({\n                next: (res) => {\n                  if (this.isSuccessfulResponse(res.statusCode)) {\n                    this.notificationAPI.alertSuccess(res.message);\n                  } else {\n                    this.notificationAPI.alertWarning(res.message);\n                  }\n                },\n                error: (err) => {\n                  this.notificationAPI.alertWarning(err.message);\n                },\n                complete: () => {\n                  this.getData();\n                  this.clearSelection();\n                  this.loading = false;\n                },\n              });\n          }\n          return null;\n        }\n      },\n    });\n  }\n\n  isSuccessfulResponse(statusCode: number): boolean {\n    return [201, 200, 302].includes(statusCode);\n  }\n\n  clearSelection() {\n    this.selection = new SelectionModel<any>(true, []);\n    this.selection.clear();\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Shared Documents'\" [items]=\"['Shared Documents']\"\n                [active_item]=\"'All Shared Documents'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Shared Documents</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add', '')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"materialTableHeader mt-2\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Document Type</mat-label>\n\n                                                    <mat-select formControlName=\"documentType\"\n                                                        (selectionChange)=\"getSelectSelectedStatus()\">\n                                                        <mat-option *ngFor=\"let documentType of documentTypeArray\"\n                                                            [value]=\"documentType\">{{ documentType }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-error *ngIf=\"\n                              Form.get('documentType').hasError('required')\n                            \">\n                                                        Please select Document Type\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </form>\n                                        </div>\n\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Status</mat-label>\n\n                                                    <mat-select formControlName=\"status\"\n                                                        (selectionChange)=\"getSelectSelectedStatus()\">\n                                                        <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                            [value]=\"reqStatus.name\">{{ reqStatus.name }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                        Please select Status\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </form>\n                                        </div>\n\n                                        <div class=\"col-8\">\n                                            <div class=\"button-container mt-1\">\n                                                <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'All'\"\n                                                    class=\"mat-button verified\" (click)=\"getSelectedStatus('All')\">\n                                                    <mat-icon>check_circle</mat-icon>\n                                                    All\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'Pending'\"\n                                                    class=\"mat-button pending\" (click)=\"getSelectedStatus('Pending')\">\n                                                    <mat-icon>pending_actions</mat-icon>\n                                                    Pending\n                                                </button> -->\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'Approved'\"\n                                                    class=\"mat-button approved\" (click)=\"getSelectedStatus('Approved')\">\n                                                    <mat-icon>thumb_up</mat-icon>\n                                                    Approved\n                                                </button>\n                                                <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'Rejected'\"\n                                                    class=\"mat-button rejected\" (click)=\"getSelectedStatus('Rejected')\">\n                                                    <mat-icon>cancel</mat-icon>\n                                                    Rejected\n                                                </button> -->\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"documentType\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Document Type\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.documentType }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"fileName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        File Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.fileName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"documentTitle\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Document Title\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.documentTitle }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"fileExtension\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        File Extension\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.fileExtension }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                        <button matTooltip=\"UPDATE\" mat-icon-button color=\"accent\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"mngRecord('Update', row)\"\n                                            class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <button matTooltip=\"VIEW\" mat-icon-button color=\"primary\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"mngRecord('View', row)\"\n                                            class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                       \n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewRecord(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\">\n                                        No data matching the filter \"{{ input }}\"\n                                    </td>\n                                </tr>\n                            </mat-table>\n\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>"],"names":[],"sourceRoot":"webpack:///"}