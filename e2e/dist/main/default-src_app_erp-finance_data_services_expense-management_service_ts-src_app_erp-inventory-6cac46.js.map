{"version":3,"file":"default-src_app_erp-finance_data_services_expense-management_service_ts-src_app_erp-inventory-6cac46.js","mappings":"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","sources":["./src/app/erp-finance/data/services/expense-management.service.ts","./src/app/erp-inventory/data/lookups/catalogue-lookup/catalogue-lookup.component.ts","./src/app/erp-inventory/data/lookups/catalogue-lookup/catalogue-lookup.component.html","./src/app/erp-inventory/data/services/catalogue-management.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ExpenseManagementService {\n  constructor(private http: HttpClient) {}\n\n  // ****************************************************************************************************************************\n\n  getExpenses(): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/all`;\n    return this.http.get<any[]>(expenseUrl);\n  }\n\n  addExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create`;\n    return this.http.post<any[]>(expenseUrl, data);\n  }\n\n  updateExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update`;\n    return this.http.put<any[]>(expenseUrl, data);\n  }\n\n  deleteExpenseTemporarily(params: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/delete`;\n    return this.http.delete<any[]>(expenseUrl, {params});\n  }\n\n  uploadBatchExpenses(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create/bulk`;\n    return this.http.post<any>(expenseUrl, data);\n  }\n\n  getCostCentersByExpenseCode(expenseGlCode: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/expenses/allCostCenters?expenseCode=${expenseGlCode}`;\n    return this.http.get<any>(expenseUrl, expenseGlCode);\n  }\n\n  getExpensesByStatus(params): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/fetchbyStatus`;\n    return this.http.get<any[]>(expenseUrl, { params });\n  }\n  getExpenseById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/expenses/find/by/id`,\n      { params }\n    );\n  }\n\n  validateBulkExpense(processedRows: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { ManageRfqsComponent } from \"src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { CatalogueManagementService } from \"../../services/catalogue-management.service\";\n\n@Component({\n  selector: \"app-catalogue-lookup\",\n  templateUrl: \"./catalogue-lookup.component.html\",\n  styleUrls: [\"./catalogue-lookup.component.scss\"],\n})\nexport class CatalogueLookupComponent implements OnInit {\n  displayedColumns: string[] = [\"select\", \"itemCode\", \"name\", \"itemCategory\"];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  catalogueDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private catalogueManSerivice: CatalogueManagementService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.action === \"single item\") {\n      this.selection = new SelectionModel<any>(false, []);\n    }\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    this.catalogueManSerivice\n      .getCatalogue()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode == 200) {\n            this.data = res.entity;\n\n            this.catalogueDetails = res.entity;\n\n            this.expenseArray = this.data.selected;\n\n            this.dataSource = new MatTableDataSource<any>(this.catalogueDetails);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n          }\n          else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n  <div class=\"contact-details\">\n    <div class=\"mb-3\" *ngIf=\"isLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\">Select Catalogue Item</div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n        <div *ngIf=\"isLoading\">\n          <div class=\"d-flex justify-content-center\">\n            <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n          </div>\n        </div>\n        <div class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-2 mx-3\" style=\"background-color: rgba(219, 218, 218, 0.836);\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                          [class.auth-spinner]=\"multimodifyloading\" [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n\n\n\n            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n              #exporter=\"matTableExporter\">\n\n              <ng-container matColumnDef=\"select\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header\n                  class=\"column-nowrap psl-3 tbl-col-width-per-10 start-col\">Id\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ row.id\n                  }}</mat-cell>\n              </ng-container>\n\n              <!-- Item Code -->\n              <ng-container matColumnDef=\"itemCode\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                  Item Code\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                  {{ row.itemCode }}\n                </mat-cell>\n              </ng-container>\n\n              <!-- Item Name -->\n              <ng-container matColumnDef=\"name\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  Item Name\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.name }}\n                </mat-cell>\n              </ng-container>\n\n              <!-- Item Category -->\n              <ng-container matColumnDef=\"itemCategory\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  Item Category\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.itemCategory }}\n                </mat-cell>\n              </ng-container>\n\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n              <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n              <mat-cell *matNoDataRow colspan=\"4\">\n                No data matching the filter \"{{ input.value }}\"\n              </mat-cell>\n            </mat-table>\n\n            <!-- Loading spinner -->\n            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n              </mat-progress-spinner>\n            </div>\n            <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n              aria-label=\"Select page of users\"></mat-paginator>\n          </div>\n        </div>\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogueManagementService {\n\n  constructor\n  (\n    private http: HttpClient,\n  ) { }\n\n  // ****************************************************************************************************************************\n\n  getCatalogue(): Observable<any>\n    {\n      const catalogueUrl =`${environment.baseUrlProcurement}/api/catalogue/all`; \n      return this.http.get<any[]>(catalogueUrl);\n    }\n  \n  //adding to Catalogue\n  addCatalogue(data: any): Observable<any>\n    {\n      const catalogueUrl =`${environment.baseUrlProcurement}/api/catalogue/add`; \n      return this.http.post<any[]>(catalogueUrl, data);\n    }\n\n  //updating Catalogue\n  updateCatalogue(details: any): Observable<any>\n    {\n      const catalogueUrl =`${environment.baseUrlProcurement}/api/catalogue/update`; \n      return this.http.put<any[]>(catalogueUrl, details);\n    }\n  \n  //deleting from catalogue\n  deleteCataloguePermanently(params: any): Observable<any> \n    {\n      const catalogueUrl = `${environment.baseUrlProcurement}/api/catalogue/delete`;\n      return this.http.delete<any>(catalogueUrl, {params});\n    }\n  \n  //upload batch to Catalogue\n    uploadBatchCatalogue(data: any): Observable<any> \n      {\n        const catalogueUrl = `${environment.baseUrlProcurement}/api/Catalogue/upload`;\n        return this.http.post<any>(catalogueUrl, data);\n      }\n      \n\n\n  }"],"names":[],"sourceRoot":"webpack:///"}