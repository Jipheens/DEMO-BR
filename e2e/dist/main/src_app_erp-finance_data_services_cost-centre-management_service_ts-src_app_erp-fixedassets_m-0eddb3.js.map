{"version":3,"file":"src_app_erp-finance_data_services_cost-centre-management_service_ts-src_app_erp-fixedassets_m-0eddb3.js","mappings":"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","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-finance/data/services/cost-centre-management.service.ts","./src/app/erp-fixedassets/data/services/asset-main.service.ts","./src/app/erp-fixedassets/modules/fixed-assests-management/assest-register/assest-register.component.ts","./src/app/erp-fixedassets/modules/fixed-assests-management/assest-register/assest-register.component.html","./src/app/erp-fixedassets/modules/fixed-assests-management/fixed-assests-management-routing.module.ts","./src/app/erp-fixedassets/modules/fixed-assests-management/fixed-assests-management.module.ts","./src/app/erp-fixedassets/modules/fixed-assests-management/view-assets-recieved/view-assets-recieved.component.ts","./src/app/erp-fixedassets/modules/fixed-assests-management/view-assets-recieved/view-assets-recieved.component.html","./src/app/erp-fixedassets/modules/fixed-assests-management/view-assets/view-assets.component.ts","./src/app/erp-fixedassets/modules/fixed-assests-management/view-assets/view-assets.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CostCentreManagementService {\n  \n\n  constructor\n    (\n      private http: HttpClient,\n    ) { }\n\n    // ****************************************************************************************************************************\n      // fetch all cost centres\n    getCostCentres(): Observable<any>\n      {\n        const costCentresUrl =`${environment.baseUrlFinance}/api/v1/costCenters/all`; \n        return this.http.get<any[]>(costCentresUrl);\n      }\n\n      getCostCentersById(params: any): Observable<any> {\n        return this.http.get<any>(\n          `${environment.baseUrlFinance}/api/v1/costCenters/find/by/id`, {params}\n        );\n      }\n\n      getCostCentersByStatus(params): Observable<any> {\n        const costCentresUrl = `${environment.baseUrlFinance}/api/v1/costCenters/fetchbyStatus`;\n        return this.http.get<any[]>(costCentresUrl, { params });\n      }\n    \n    //adding cost centres\n    addCostCentre(data: any): Observable<any>\n      {\n        const costCentresUrl =`${environment.baseUrlFinance}/api/v1/costCenters/create`; \n        return this.http.post<any[]>(costCentresUrl, data);\n      }\n\n    //updating cost centres\n    updateCostCentre(data: any): Observable<any>\n      {\n        const costCentresUrl =`${environment.baseUrlFinance}/api/v1/costCenters/update`; \n        return this.http.put<any[]>(costCentresUrl, data);\n      }\n    \n    deleteCostCentreTemporarily(params: any): Observable<any>\n      {\n        const costCentresUrl =`${environment.baseUrlFinance}/api/v1/costCenters/delete`; \n        return this.http.delete<any[]>(costCentresUrl, {params});\n      }\n\n\n    uploadBatchCostCentres(data: any): Observable<any> \n      {\n        const costCentresUrl = `${environment.baseUrlFinance}/api/v1/costCenters/create/bulk`;\n        return this.http.post<any>(costCentresUrl, data);\n      }\n\n\n\n  validateCostCenters(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/costCenters/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FixedAssetService {\n\n  constructor(private http: HttpClient) { }\n\n  getFixedAssets(): Observable<any> {\n    const FixedAssetsUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/all`;\n    return this.http.get<any[]>(FixedAssetsUrl);\n  }\n\n  getFixedAssetsByStatus(params: any): Observable<any> {\n    const FixedAssetsUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/fetchbyStatus`;\n    return this.http.get<any[]>(FixedAssetsUrl, {\n      params: params,\n    });\n  }\n\n  getFixedAssetsToRegisterByStatus(params: any): Observable<any> {\n    const FixedAssetsUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/register/all`;\n    return this.http.get<any[]>(FixedAssetsUrl, {\n      params: params,\n    });\n  }\n\n  getFixedAssetsById(params: any): Observable<any> {\n    const FixedAssetsUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/find/by/id`;\n    return this.http.get<any>(FixedAssetsUrl, { params: params, });\n  }\n\n  addFixedAssets(data: any): Observable<any> {\n    const FixedAssetsUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/create`;\n    return this.http.post<any>(FixedAssetsUrl, data);\n  }\n  addReceivedFixedAssets(data: any): Observable<any> {\n    const FixedAssetsUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/register`;\n    return this.http.post<any>(FixedAssetsUrl, data);\n  }\n  addBulkFixedAssets(data: any): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/create/bulk`;\n    return this.http.post<any>(GLAccountManagementUrl, data);\n  }\n\n  updateFixedAssets(FixedAssetsDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/update`;\n    return this.http.put<any>(updateBillUrl, FixedAssetsDetails)\n  }\n\n  deleteFixedAssetsTemporarily(params: any): Observable<any> {\n    const FixedAssetsUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/delete`;\n    return this.http.delete<any>(FixedAssetsUrl, { params });\n  }\n\n  validateFixedAssets(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n\n\n\n\n\n}\n","import { HttpParams } from \"@angular/common/http\";\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, Subject, Subscription, takeUntil } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { CostCentreValidationComponent } from \"src/app/erp-finance/data/lookups/validation/cost-centre-validation/cost-centre-validation.component\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { FixedAssetsServiceService } from \"src/app/erp-finance/data/services/fixed-assets-service.service\";\nimport { AssetAccountsComponent } from \"src/app/erp-fixedassets/data/lookups/asset-accounts/asset-accounts.component\";\nimport { AssetslookupComponent } from \"src/app/erp-fixedassets/data/lookups/assetslookup/assetslookup.component\";\nimport { FixedAssetService } from \"src/app/erp-fixedassets/data/services/asset-main.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport * as XLSX from \"xlsx\";\n\n@Component({\n  selector: \"app-assest-register\",\n  templateUrl: \"./assest-register.component.html\",\n  styleUrls: [\"./assest-register.component.scss\"],\n})\nexport class AssestRegisterComponent implements OnInit {\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  hideApprovals = false;\n\n  //excel upload variables\n  exceldata: [][] | undefined;\n  subscription!: Subscription;\n  keys: string[];\n  otherRows: any[];\n  dataSheet = new Subject();\n  headerRows: any;\n  fileAcess: any;\n  firstElement: any;\n  excelSelected: any;\n  fileInfos?: Observable<any>;\n  values: any;\n  finalValues: any;\n  valuesArray: any;\n  submitted = false;\n  excelDataPresent = false;\n  sumofCredits = 0;\n  excelFileAccepted = false;\n  uploadedData: any;\n\n  //excel columns\n  excelHeaderRef: any[] = [\"costCenterName\"];\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private fixedAssetService: FixedAssetService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        this.pageFunction = params[\"action\"];\n\n        this.id = params[\"id\"];\n        if (this.pageFunction !== \"Receive\") {\n        this.getDataById();\n        }\n        this.getPage();\n\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.fixedAssetService\n      .getFixedAssetsById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Receive\") {\n      this.generateFormForReceive();\n      this.hideApprovals = true;\n\n      console.log(\"fixedAssetRegFkfixedAssetRegFk:: \", this.formData.id)\n\n      \n    }\n  }\n\n  // Defining the pages behavior based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      fixedAssetRegFk: [0],\n      fixedItemCode: [\"\"],\n      itemCode: [\"\", [Validators.required]],\n      itemCategory: [\"\", [Validators.required]],\n      name: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required]],\n      quantity: [0, [Validators.required]],\n      totalCost: [0],\n      unit: [\"\", [Validators.required]],\n      unitCost: [0],\n      assetCode: [\"\", [Validators.required]],\n      assetName: [\"\", [Validators.required]],\n      purchaseDate: [\"\", [Validators.required]],\n      purchaseAmount: [0, [Validators.required]],\n      salvageValue: [0],\n      depreciationMethod: [\"Straight-Line\"],\n      currentValue: [0],\n      depreciationRate: [0],\n      usefulLife: [0],\n      accumulatedDepreciation: [0],\n      depreciatedValue: [0],\n      month: [\"\"],\n      year: [0],\n      depreciationDebitAccount: [\"\"],\n      depreciationCreditAccount: [\"\"],\n    });\n  }\n  // {\n  //   \"id\": 0,\n  //   \"fixedAssetRegFk\": 0,\n  //   \"purchaseDate\": \"2024-02-28\",\n  //   \"purchaseAmount\": 0,\n  //   \"salvageValue\": 0,\n  //   \"depreciationMethod\": \"string\",\n  //   \"currentValue\": 0,\n  //   \"depreciationRate\": 0,\n  //   \"usefulLife\": 0,\n  //   \"depreciationDebitAccount\": \"string\",\n  //   \"depreciationCreditAccount\": \"string\"\n  // }\n  generateFormForReceive(): void {\n    this.mngForm = this.fb.group({\n      fixedAssetRegFk: [this.id, [Validators.required]],\n      fixedItemCode: [\"\"],\n      itemCode: [\"\"],\n      itemCategory: [\"\"],\n      name: [\"\"],\n      description: [\"\"],\n      quantity: [0],\n      totalCost: [0],\n      unit: [\"\"],\n      unitCost: [0],\n      assetCode: [\"\"],\n      assetName: [\"\"],\n      purchaseDate: [\"\", [Validators.required]],\n      purchaseAmount: [0, [Validators.required]],\n      salvageValue: [0, [Validators.required]],\n      depreciationMethod: [\"Straight-Line\", [Validators.required]],\n      currentValue: [0, [Validators.required]],\n      depreciationRate: [0, [Validators.required]],\n      usefulLife: [0, [Validators.required]],\n      depreciationDebitAccount: [\"\", [Validators.required]],\n      depreciationCreditAccount: [\"\", [Validators.required]],\n      accumulatedDepreciation: [0],\n      depreciatedValue: [0],\n      month: [\"\"],\n      year: [0],\n\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      fixedAssetRegFk: [this.formData.fixedAssetRegFk],\n      fixedItemCode: [this.formData.fixedItemCode],\n      itemCode: [this.formData.itemCode, [Validators.required]],\n      itemCategory: [this.formData.itemCategory, [Validators.required]],\n      name: [this.formData.name, [Validators.required]],\n      description: [this.formData.description, [Validators.required]],\n      quantity: [this.formData.quantity, [Validators.required]],\n      totalCost: [this.formData.totalCost],\n      unit: [this.formData.unit, [Validators.required]],\n      unitCost: [this.formData.unitCost],\n      assetCode: [this.formData.assetCode, [Validators.required]],\n      assetName: [this.formData.assetName, [Validators.required]],\n      purchaseDate: [this.formData.purchaseDate, [Validators.required]],\n      purchaseAmount: [this.formData.purchaseAmount, [Validators.required]],\n      salvageValue: [this.formData.salvageValue],\n      depreciationMethod: [this.formData.depreciationMethod],\n      currentValue: [this.formData.currentValue],\n      depreciationRate: [this.formData.depreciationRate],\n      usefulLife: [this.formData.usefulLife],\n      accumulatedDepreciation: [this.formData.accumulatedDepreciation],\n      depreciatedValue: [this.formData.depreciatedValue],\n      month: [this.formData.month],\n      year: [this.formData.year],\n      depreciationDebitAccount: [this.formData.depreciationDebitAccount],\n      depreciationCreditAccount: [this.formData.depreciationCreditAccount],\n    });\n  }\n\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      fixedAssetRegFk: [{ value: 0, disabled: true }],\n      fixedItemCode: [{ value: \"\", disabled: true }],\n      itemCode: [\n        { value: this.formData.itemCode, disabled: true },\n        [Validators.required],\n      ],\n      itemCategory: [\n        { value: this.formData.itemCategory, disabled: true },\n        [Validators.required],\n      ],\n      name: [\n        { value: this.formData.name, disabled: true },\n        [Validators.required],\n      ],\n      description: [\n        { value: this.formData.description, disabled: true },\n        [Validators.required],\n      ],\n      quantity: [\n        { value: this.formData.quantity, disabled: true },\n        [Validators.required],\n      ],\n      totalCost: [{ value: 0, disabled: true }],\n      unit: [\n        { value: this.formData.unit, disabled: true },\n        [Validators.required],\n      ],\n      unitCost: [{ value: this.formData.unitCost, disabled: true }],\n      assetCode: [\n        { value: this.formData.assetCode, disabled: true },\n        [Validators.required],\n      ],\n      assetName: [\n        { value: this.formData.assetName, disabled: true },\n        [Validators.required],\n      ],\n      purchaseDate: [\n        { value: this.formData.purchaseDate, disabled: true },\n        [Validators.required],\n      ],\n      purchaseAmount: [\n        { value: this.formData.purchaseAmount, disabled: true },\n        [Validators.required],\n      ],\n      salvageValue: [{ value: this.formData.salvageValue, disabled: true }],\n      depreciationMethod: [\n        { value: this.formData.depreciationMethod, disabled: true },\n      ],\n      currentValue: [{ value: this.formData.currentValue, disabled: true }],\n      depreciationRate: [\n        { value: this.formData.depreciationRate, disabled: true },\n      ],\n      usefulLife: [{ value: this.formData.usefulLife, disabled: true }],\n      accumulatedDepreciation: [\n        { value: this.formData.accumulatedDepreciation, disabled: true },\n      ],\n      depreciatedValue: [\n        { value: this.formData.depreciatedValue, disabled: true },\n      ],\n      month: [{ value: this.formData.month, disabled: true }],\n      year: [{ value: this.formData.year, disabled: true }],\n      depreciationDebitAccount: [\n        { value: this.formData.depreciationDebitAccount, disabled: true },\n      ],\n      depreciationCreditAccount: [\n        { value: this.formData.depreciationCreditAccount, disabled: true },\n      ],\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel(): void {\n    this.router.navigate([\n      \"/erp-fixed-assets/fixed-assets-management/assets-record\",\n    ]);\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        costCenterName: [item.costCenterName, [Validators.required]],\n        costCenterCode: [item.costCenterCode, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"costCentersTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n\n  // //populate table from excel\n  // createPopulatedForm() {\n  //   this.mngForm = this.fb.group({\n  //     costCenterName: [this.exceldata, [Validators.required]],\n  //     costCenterCode: [this.exceldata, [Validators.required]],\n  //   });\n  //   console.log(\"this.uploadedData: \", this.uploadedData);\n  // }\n\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate() {\n    let privilege = \"Manage CCentres\"; //Insert the priviledge later\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        // userType: userType\n      };\n\n      const dialogRef = this.dialog.open(\n        CostCentreValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\n          \"/erp-fixed-assets/fixed-assets-management/assets-record\",\n        ]);\n      });\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // submit button function\n  posting: boolean = false;\n\n  submit() {\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.fixedAssetService\n        .addFixedAssets(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-fixed-assets/fixed-assets-management/assets-record\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.fixedAssetService\n        .updateFixedAssets(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-fixed-assets/fixed-assets-management/assets-record\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n    if (this.pageFunction === \"Receive\") {\n      this.fixedAssetService\n        .addFixedAssets(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-fixed-assets/fixed-assets-management/assets-record\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  //Uploading a batch of items\n  submitBatch() {\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.fixedAssetService\n        .addFixedAssets(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-fixed-assets/fixed-assets-management/assets-record\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Fixed Asset'\" [items]=\"['Fixed Assets']\" [active_item]=\"'Fixed Assets'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData && pageFunction !== 'Receive'\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                              <div class=\"chat-with remarks\">\n                                <strong>Approvers Remarks:</strong>\n                                <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                              </div>\n                            </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"ADD ASSET\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                      <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>{{ pageFunction }} Fixed Asset</h2>\n                        </div>\n                      </div>\n\n                      <form class=\"m-4\" [formGroup]=\"mngForm\">\n                        <div class=\"row\">\n                          <ng-container *ngIf=\"pageFunction !== 'Receive'\">\n                            <!-- Name -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Name </mat-label>\n                                <input matInput formControlName=\"name\" />\n                                <mat-error *ngIf=\"\n                                    mngForm.get('name').hasError('required')\n                                  \">\n                                  Name is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!-- Item Category -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Item Category </mat-label>\n                                <input matInput formControlName=\"itemCategory\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('itemCategory')\n                                      .hasError('required')\n                                  \">\n                                  Item Category is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Quantity -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Quantity </mat-label>\n                                <input type=\"number\" matInput formControlName=\"quantity\" />\n                                <mat-error *ngIf=\"\n                                    mngForm.get('quantity').hasError('required')\n                                  \">\n                                  Quantity is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Total Cost -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Total Cost </mat-label>\n                                <input type=\"number\" matInput formControlName=\"totalCost\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('totalCost')\n                                      .hasError('required')\n                                  \">\n                                  Total Cost is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Unit -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Unit </mat-label>\n                                <input matInput formControlName=\"unit\" />\n                                <mat-error *ngIf=\"\n                                    mngForm.get('unit').hasError('required')\n                                  \">\n                                  Unit is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Unit Cost -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Unit Cost </mat-label>\n                                <input type=\"number\" matInput formControlName=\"unitCost\" />\n                                <mat-error *ngIf=\"\n                                    mngForm.get('unitCost').hasError('required')\n                                  \">\n                                  Unit Cost is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                          </ng-container>\n\n                          <ng-container>\n                            <!-- Fixed Asset Reg Fk -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Fixed Asset Reg Fk </mat-label>\n                                <input type=\"number\" matInput formControlName=\"fixedAssetRegFk\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('fixedAssetRegFk')\n                                      .hasError('required')\n                                  \">\n                                  Fixed Asset Reg Fk is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Purchase Date -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Purchase Date </mat-label>\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"purchaseDate\" />\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('purchaseDate')\n                                      .hasError('required')\n                                  \">\n                                  Purchase Date is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!-- Purchase Amount -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Purchase Amount </mat-label>\n                                <input type=\"number\" matInput formControlName=\"purchaseAmount\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('purchaseAmount')\n                                      .hasError('required')\n                                  \">\n                                  Purchase Amount is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Current Value -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Current Value </mat-label>\n                                <input type=\"number\" matInput formControlName=\"currentValue\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('currentValue')\n                                      .hasError('required')\n                                  \">\n                                  Current Value is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Salvage Value -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Salvage Value </mat-label>\n                                <input type=\"number\" matInput formControlName=\"salvageValue\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('salvageValue')\n                                      .hasError('required')\n                                  \">\n                                  Salvage Value is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Depreciation Method -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Depreciation Method </mat-label>\n                                <input matInput formControlName=\"depreciationMethod\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('depreciationMethod')\n                                      .hasError('required')\n                                  \">\n                                  Depreciation Method is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Depreciation Rate -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Depreciation Rate </mat-label>\n                                <input type=\"number\" matInput formControlName=\"depreciationRate\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('depreciationRate')\n                                      .hasError('required')\n                                  \">\n                                  Depreciation Rate is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!-- Useful Life -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Useful Life </mat-label>\n                                <input type=\"number\" matInput formControlName=\"usefulLife\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('usefulLife')\n                                      .hasError('required')\n                                  \">\n                                  Useful Life is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Depreciation Debit Account -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Depreciation Debit Account\n                                </mat-label>\n                                <input matInput formControlName=\"depreciationDebitAccount\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('depreciationDebitAccount')\n                                      .hasError('required')\n                                  \">\n                                  Depreciation Debit Account is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Depreciation Credit Account -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Depreciation Credit Account\n                                </mat-label>\n                                <input matInput formControlName=\"depreciationCreditAccount\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('depreciationCreditAccount')\n                                      .hasError('required')\n                                  \">\n                                  Depreciation Credit Account is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                          </ng-container>\n\n                          <ng-container *ngIf=\"pageFunction !== 'Receive'\">\n                            <!-- Accumulated Depreciation -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Accumulated Depreciation\n                                </mat-label>\n                                <input type=\"number\" matInput formControlName=\"accumulatedDepreciation\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('accumulatedDepreciation')\n                                      .hasError('required')\n                                  \">\n                                  Accumulated Depreciation is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Depreciated Value -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Depreciated Value </mat-label>\n                                <input type=\"number\" matInput formControlName=\"depreciatedValue\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('depreciatedValue')\n                                      .hasError('required')\n                                  \">\n                                  Depreciated Value is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Month -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Month </mat-label>\n                                <input matInput formControlName=\"month\" />\n                                <mat-error *ngIf=\"\n                                    mngForm.get('month').hasError('required')\n                                  \">\n                                  Month is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Year -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Year </mat-label>\n                                <input type=\"number\" matInput formControlName=\"year\" />\n                                <mat-error *ngIf=\"\n                                    mngForm.get('year').hasError('required')\n                                  \">\n                                  Year is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Description -->\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Description </mat-label>\n                                <textarea matInput formControlName=\"description\"></textarea>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('description')\n                                      .hasError('required')\n                                  \">\n                                  Description is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                          </ng-container>\n                        </div>\n\n                        <!-- Action Buttons -->\n                        <div class=\"row\">\n                          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                            <div mat-dialog-action [align]=\"'end'\">\n                              <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                (click)=\"cancel()\">\n                                Cancel\n                              </button>\n                              <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                                [disabled]=\"!mngForm.valid || posting\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                Submit\n                              </button>\n                              <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                                (click)=\"onValidate()\" mat-raised-button color=\"primary\">\n                                <mat-icon>done_outline</mat-icon>\n                                Verify\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </mat-tab>\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AssestRegisterComponent } from './assest-register/assest-register.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { ViewAssetsComponent } from './view-assets/view-assets.component';\nimport { ViewAssetsRecievedComponent } from './view-assets-recieved/view-assets-recieved.component';\n\n\nconst routes: Routes = [{\n  path: \"assets-register\",\n  component: AssestRegisterComponent,\n  canActivate: [RoutePrivilegeGuard],\n  data: { clientName: 'FixedAssetsModule', requiredPrivilege: [\"Dashboard\"]}\n },\n {\n  path: \"assets-record\",\n  component: ViewAssetsComponent,\n  canActivate: [RoutePrivilegeGuard],\n  data: { clientName: 'FixedAssetsModule', requiredPrivilege: [\"Dashboard\"]}\n },\n\n {\n  path: \"assets-received\",\n  component: ViewAssetsRecievedComponent,\n  canActivate: [RoutePrivilegeGuard],\n  data: { clientName: 'FixedAssetsModule', requiredPrivilege: [\"Dashboard\"]}\n },\n\n//  {\n//   path: \"accounting\",\n//   component: AccountingComponent,\n//   canActivate: [RoutePrivilegeGuard],\n//   data: { clientName: 'FixedAssetsModule', requiredPrivilege: [\"Dashboard\"]}\n//  },\n//  {\n//   path: \"add-asset\",\n//   component: AddAssetComponent,\n//   canActivate: [RoutePrivilegeGuard],\n//   data: { clientName: 'FixedAssetsModule', requiredPrivilege: [\"Dashboard\"]}\n//  },\n\n//  {\n//   path: \"validate-asset\",\n//   component: SingleAssetVerificationComponent,\n//   canActivate: [RoutePrivilegeGuard],\n//   data: { clientName: 'FixedAssetsModule', requiredPrivilege: [\"Dashboard\"]}\n//  },\n\n\n\n\n\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FixedAssestsManagementRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { FixedAssestsManagementRoutingModule } from './fixed-assests-management-routing.module';\nimport { AssestRegisterComponent } from './assest-register/assest-register.component';\nimport { ComponentsModule } from \"../../../shared/components/components.module\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ViewAssetsComponent } from './view-assets/view-assets.component';\nimport { DashboardModule } from '../dashboard/dashboard.module';\n\n\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ViewAssetsRecievedComponent } from './view-assets-recieved/view-assets-recieved.component';\n\n@NgModule({\n    declarations: [\n        AssestRegisterComponent,\n        ViewAssetsComponent,\n        ViewAssetsRecievedComponent,\n\n    ],\n    imports: [\n        DashboardModule,\n        CommonModule,\n        FixedAssestsManagementRoutingModule,\n        ComponentsModule,\n        MatIconModule,\n        NgApexchartsModule,\n        PerfectScrollbarModule,\n        MatMenuModule,\n        MatTooltipModule,\n        MatProgressBarModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatTableModule,\n        MatPaginatorModule,\n        MatInputModule,\n        MatSortModule,\n\n        MatSelectModule,\n        MatTabsModule,\n        MatCheckboxModule,\n        MatTableExporterModule,\n        MatProgressSpinnerModule,\n\n        MatFormFieldModule,\n\n        MatButtonModule,\n        MatDialogModule,\n        MatDatepickerModule,\n        ComponentsModule,\n        MatCardModule,\n        ReactiveFormsModule,\n\n        MatSnackBarModule,\n        MatToolbarModule,\n\n        SharedModule,\n        MatStepperModule,\n        NgxMaskModule,\n        MatChipsModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatListModule,\n        MatSidenavModule,\n        MatExpansionModule,\n        MatSliderModule,\n        NgbModule,\n\n\n    ],\n    providers: [DatePipe],\n})\nexport class FixedAssestsManagementModule { }\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { FixedAssetService } from 'src/app/erp-fixedassets/data/services/asset-main.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-view-assets-recieved',\n  templateUrl: './view-assets-recieved.component.html',\n  styleUrls: ['./view-assets-recieved.component.sass']\n})\nexport class ViewAssetsRecievedComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"id\",\n    \"itemCode\",\n    \"itemCategory\",\n    \"name\",\n    \"description\",\n    \"quantity\",\n    \"totalCost\",\n    \"unit\",\n    \"unitCost\",\n    \"status\",\n    \"actions\"\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  // ****************************************************************************************************************************\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private fixedAssetService: FixedAssetService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.fixedAssetService\n      .getFixedAssetsToRegisterByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n\n\n  receiveAsset(data: any, action) {\n    let route = \"/erp-fixed-assets/fixed-assets-management/assets-register\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: action,\n      },\n    });\n  }\n\n\n\n  //deleting Assets\n\n  deleteAsset(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This cost centre will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this cost centre \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = { id: id }\n        this.fixedAssetService\n          .deleteFixedAssetsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n              } else {\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    this.isLoading = true\n    let privilege = \"Dashboard\";\n    //Validate CostCenters\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.fixedAssetService\n            .validateFixedAssets(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n                this.isLoading = false\n\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Received Fixed Assets'\" [items]=\"['Fixed Assets']\"\n                [active_item]=\"'Received Fixed Assets'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Received Fixed Assets</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            \n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <!-- Container element with *ngIf condition -->\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n                                            <!-- <div class=\"row\">\n                              <div class=\"col-4\"> -->\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Status</mat-label>\n\n                                                <mat-select formControlName=\"status\"\n                                                    (selectionChange)=\"getSelectSelectedStatus()\">\n                                                    <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                        [value]=\"reqStatus.name\">{{ reqStatus.name\n                                                        }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                    Please select Status\n                                                </mat-error>\n                                            </mat-form-field>\n                                            <!-- </div>\n      \n                            </div> -->\n                                        </form>\n                                    </div>\n                                    <div class=\"col-10\">\n                                        <div class=\"button-container mt-1\">\n                                            <!-- Button for PENDING status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <!-- Button for VERIFIED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'POSTED'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedStatus('POSTED')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                POSTED\n                                            </button>\n\n                                            <!-- Button for APPROVED status -->\n                                            <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button> -->\n                                            <!-- Button for RETURNED status -->\n                                            <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button> -->\n\n                                            <!-- Button for REJECTED status -->\n                                            <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button> -->\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <!-- Select Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-5\">ID</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-5\">{{row.id ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Item Code -->\n                                <ng-container matColumnDef=\"itemCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Item Code</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{row.itemCode ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Item Category -->\n                                <ng-container matColumnDef=\"itemCategory\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Item Category</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{row.itemCategory ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Name -->\n                                <ng-container matColumnDef=\"name\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{row.name ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Description -->\n                                <ng-container matColumnDef=\"description\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Description</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{row.description ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Quantity -->\n                                <ng-container matColumnDef=\"quantity\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Quantity</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{row.quantity ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Total Cost -->\n                                <ng-container matColumnDef=\"totalCost\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Total Cost</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{row.totalCost ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Unit -->\n                                <ng-container matColumnDef=\"unit\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Unit</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{row.unit ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Unit Cost -->\n                                <ng-container matColumnDef=\"unitCost\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Unit Cost</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{row.unitCost ||\n                                        'N/A'}}</mat-cell>\n                                </ng-container>\n\n                                <!-- Status -->\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">Status</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;{{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;{{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;{{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;{{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;{{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"actions\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                        <!-- Edit Button -->\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\" (click)=\"receiveAsset(row, 'Receive')\" class=\"tbl-action-btn\">\n                                            <mat-icon>edit</mat-icon>\n                                          </button>\n                                          \n                                        <!-- View Button -->\n                                        <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"viewAsset(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button> -->\n                                        <!-- Delete Button -->\n                                        <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteAsset(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewAsset(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter\n                                    \"{{input.value}}\"</mat-cell>\n                            </mat-table>\n\n\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { DateAdapter } from '@angular/material/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { FixedAssetsServiceService } from 'src/app/erp-finance/data/services/fixed-assets-service.service';\nimport { FilesService } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport * as XLSX from \"xlsx\";\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { AssetValidationComponent } from 'src/app/erp-finance/data/lookups/validation/asset-validation/asset-validation.component';\nimport Swal from 'sweetalert2';\nimport { FixedAssetService } from 'src/app/erp-fixedassets/data/services/asset-main.service';\n\n\n@Component({\n  selector: 'app-view-assets',\n  templateUrl: './view-assets.component.html',\n  styleUrls: ['./view-assets.component.scss']\n})\nexport class ViewAssetsComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"fixedItemCode\",\n    \"name\",\n    \"quantity\",\n    \"totalCost\",\n    \"unitCost\",\n    \"purchaseDate\",\n    \"purchaseAmount\",\n    \"salvageValue\",\n    \"depreciationMethod\",\n    \"currentValue\",\n    \"usefulLife\",\n    \"status\",\n    \"actions\"\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  // ****************************************************************************************************************************\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private fixedAssetService: FixedAssetService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.fixedAssetService\n      .getFixedAssets()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n  //adding cost centre\n  addCostCenter() {\n    this.router.navigate([\"/erp-fixed-assets/fixed-assets-management/assets-register\"]);\n  }\n\n  //Updating the Assets\n\n  editAsset(data: any) {\n    let route = \"/erp-fixed-assets/fixed-assets-management/assets-register\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the Assets\n  viewAsset(data: any) {\n\n    let route = \"/erp-fixed-assets/fixed-assets-management/assets-register\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n      },\n    });\n  }\n\n  //verify cost centre\n  validateExpense(data: any) {\n    let route = \"/erp-fixed-assets/fixed-assets-management/assets-register\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting Assets\n\n  deleteAsset(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This cost centre will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this cost centre \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = {id: id}\n        this.fixedAssetService\n          .deleteFixedAssetsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n              } else{\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    this.isLoading = true\n    let privilege = \"Dashboard\";\n    //Validate CostCenters\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.fixedAssetService\n            .validateFixedAssets(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n                this.isLoading = false\n\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Fixed Assets'\" [items]=\"['Fixed Assets']\" [active_item]=\"'All Fixed Assets'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Fixed Assets</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addCostCenter()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <!-- <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                     \n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      \n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      \n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div> -->\n\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                                  (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                  (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                                  [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n              \n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-5\">#</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\">{{row.id || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Fixed Item Code -->\n                <ng-container matColumnDef=\"fixedItemCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Fixed Item Code</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.fixedItemCode || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Name -->\n                <ng-container matColumnDef=\"name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.name || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Description -->\n                <ng-container matColumnDef=\"description\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Description</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.description || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Quantity -->\n                <ng-container matColumnDef=\"quantity\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Quantity</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.quantity || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Total Cost -->\n                <ng-container matColumnDef=\"totalCost\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Total Cost</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.totalCost || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Unit Cost -->\n                <ng-container matColumnDef=\"unitCost\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Unit Cost</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.unitCost || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Purchase Date -->\n                <ng-container matColumnDef=\"purchaseDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Purchase Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.purchaseDate || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Purchase Amount -->\n                <ng-container matColumnDef=\"purchaseAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Purchase Amount</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.purchaseAmount || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Salvage Value -->\n                <ng-container matColumnDef=\"salvageValue\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Salvage Value</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.salvageValue || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Depreciation Method -->\n                <ng-container matColumnDef=\"depreciationMethod\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Depreciation Method</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.depreciationMethod || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Current Value -->\n                <ng-container matColumnDef=\"currentValue\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Current Value</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.currentValue || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Depreciation Rate -->\n                <ng-container matColumnDef=\"depreciationRate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Depreciation Rate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.depreciationRate || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Useful Life -->\n                <ng-container matColumnDef=\"usefulLife\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Useful Life</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.usefulLife || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Accumulated Depreciation -->\n                <ng-container matColumnDef=\"accumulatedDepreciation\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Accumulated Depreciation</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{row.accumulatedDepreciation || 'N/A'}}</mat-cell>\n                </ng-container>\n              \n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                            (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n              \n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <!-- Edit Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"editAsset(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n                    <!-- View Button -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\" (click)=\"viewAsset(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"deleteAsset(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n              \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewAsset(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{input.value}}\"</mat-cell>\n              </mat-table>\n              \n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>"],"names":[],"sourceRoot":"webpack:///"}