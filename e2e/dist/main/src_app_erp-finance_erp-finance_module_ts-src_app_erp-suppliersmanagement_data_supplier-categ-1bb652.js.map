{"version":3,"file":"src_app_erp-finance_erp-finance_module_ts-src_app_erp-suppliersmanagement_data_supplier-categ-1bb652.js","mappings":"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","sources":["./src/app/erp-finance/data/lookups/approved-suppliers-invoices/approved-suppliers-invoices.component.ts","./src/app/erp-finance/data/lookups/approved-suppliers-invoices/approved-suppliers-invoices.component.html","./src/app/erp-finance/data/lookups/banks-lookup/banks-lookup.component.ts","./src/app/erp-finance/data/lookups/banks-lookup/banks-lookup.component.html","./src/app/erp-finance/data/lookups/customer-invoice-lookup/customer-invoice-lookup.component.ts","./src/app/erp-finance/data/lookups/customer-invoice-lookup/customer-invoice-lookup.component.html","./src/app/erp-finance/data/lookups/customer-type-lookup/customer-type-lookup.component.ts","./src/app/erp-finance/data/lookups/customer-type-lookup/customer-type-lookup.component.html","./src/app/erp-finance/data/lookups/payment-methods-look-up/payment-methods-look-up.component.ts","./src/app/erp-finance/data/lookups/payment-methods-look-up/payment-methods-look-up.component.html","./src/app/erp-finance/data/lookups/validation/asset-validation/asset-validation.component.ts","./src/app/erp-finance/data/lookups/validation/asset-validation/asset-validation.component.html","./src/app/erp-finance/data/lookups/validation/receivable-payments-validation/receivable-payments-validation.component.ts","./src/app/erp-finance/data/lookups/validation/receivable-payments-validation/receivable-payments-validation.component.html","./src/app/erp-finance/data/lookups/validation/single-asset-verification-dialog/single-asset-verification-dialog.component.ts","./src/app/erp-finance/data/lookups/validation/single-asset-verification-dialog/single-asset-verification-dialog.component.html","./src/app/erp-finance/data/services/fixed-assets-service.service.ts","./src/app/erp-finance/data/services/receivable-payments.service.ts","./src/app/erp-finance/erp-finance-routing.module.ts","./src/app/erp-finance/erp-finance.module.ts","./src/app/erp-finance/modules/dashboard/dashboard-routing.module.ts","./src/app/erp-finance/modules/dashboard/dashboard.module.ts","./src/app/erp-finance/modules/dashboard/pages/components/analytics/analytics.component.ts","./src/app/erp-finance/modules/dashboard/pages/components/analytics/analytics.component.html","./src/app/erp-finance/modules/dashboard/pages/components/reset-password/reset-password.component.ts","./src/app/erp-finance/modules/dashboard/pages/components/reset-password/reset-password.component.html","./src/app/erp-finance/modules/dashboard/pages/dashboard/dashboard.component.ts","./src/app/erp-finance/modules/dashboard/pages/dashboard/dashboard.component.html","./src/app/erp-inventory/data/services/item-category.service.ts","./src/app/erp-suppliersmanagement/data/supplier-categories.service.ts"],"sourcesContent":["import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { AccountsPayableService } from \"../../services/accounts-payable.service\";\nimport { ManageAccountsPayableComponent } from \"src/app/erp-finance/modules/finance-management/accounts-payable/payables/manage-accounts-payable/manage-accounts-payable.component\";\n\n@Component({\n  selector: \"app-approved-suppliers-invoices\",\n  templateUrl: \"./approved-suppliers-invoices.component.html\",\n  styleUrls: [\"./approved-suppliers-invoices.component.sass\"],\n})\nexport class ApprovedSuppliersInvoicesComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"invoiceCode\",\n    \"supplierCode\",\n    \"supplierName\",\n    \"paymentAmount\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  supplierInvoiceArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageAccountsPayableComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private accountsPayableManService: AccountsPayableService\n  ) {}\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData(this.currentPage, this.pageSize);\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.supplierInvoiceArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    if (this.input) {\n      this.getData(this.currentPage, this.pageSize);\n    }\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  // getData() {\n  //   this.accountsPayableManService\n  //     .getAllSupplierInvoices()\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"Status:\", res)\n  //         if (res) {\n  //            this.data = res;\n  //            console.log(\"this is my \",res)\n  //           //this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //         } else {\n  //           this.snackbar.showNotification(\n  //             \"snackbar-danger\",\n  //             // res.message\n  //             res.message\n  //           )\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => { },\n  //     }),\n  //     Subscription;\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n      status: \"APPROVED\",\n      approvalType: 'AllInvoices'\n    };\n\n    this.accountsPayableManService\n      .getSupplierInvoicesByStatusAndApprovalType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(\n              this.data.content.reverse()\n            );\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select Invoice Code</div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container>\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                       />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\"  *ngIf=\"!isLoading\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <ng-container matColumnDef=\"select\">\n                    \n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n\n\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let index = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"><span>{{ index+1 }}</span></mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"invoiceCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      Invoice Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.invoiceCode }}\n                    </mat-cell>\n                  </ng-container>  \n\n                  <ng-container matColumnDef=\"supplierCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                      Supplier Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                      {{ row.supplierCode }}\n                    </mat-cell>\n                  </ng-container>\n\n                <ng-container matColumnDef=\"supplierName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      Supplier Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.supplierName }}\n                    </mat-cell>\n                  </ng-container>\n\n                <ng-container matColumnDef=\"paymentAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      Payment Amount\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.invoiceAmount }}\n                    </mat-cell>\n                  </ng-container>\n    \n  \n                \n                \n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                \n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                      }}\"</td>\n              </tr>\n\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { AccountService } from 'src/app/account/data/services/account.service';\nimport { MiddlewareService } from '../../services/middlware.service';\nimport { ManageCustomersComponent } from 'src/app/erp-finance/modules/finance-parameters/pages/customer-management/manage-customers/manage-customers.component';\n\n@Component({\n  selector: 'app-banks-lookup',\n  templateUrl: './banks-lookup.component.html',\n  styleUrls: ['./banks-lookup.component.sass']\n})\nexport class BanksLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"BankID\",\n    \"BankName\",\n    \n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n\n  selection = new SelectionModel<any>(false, []);\n\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  array: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCustomersComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private accountService: AccountService,\n    private middlewareService: MiddlewareService\n\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.action === 'Single Bank') {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.array.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    this.isLoading = true;\n\n    // let params = { status: \"APPROVED\" }\n    this.middlewareService\n      .getBanksFromCore()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n\n          console.log(\"RESPONSE =>: \", res);\n\n          this.data = res;\n\n\n          console.log(\"this.data: \", this.data);\n\n          this.dataSource = new MatTableDataSource<any>(this.data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n        <div class=\"mb-3\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n        <div class=\"modalHeader\">\n            <div class=\"contact-details-name mb-1\">Select Bank</div>\n            <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <mat-card-content>\n                <div *ngIf=\"isLoading\">\n                    <div class=\"d-flex justify-content-center\">\n                        <img src=\"assets/images/loading.gif\"\n                            style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                    </div>\n                </div>\n                <div class=\"body\">\n                    <div class=\"table-responsi m-t-5\">\n                        <ng-container *ngIf=\"!isLoading\">\n                            <div class=\"table-header py-3\"\n                                style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                                <div class=\"row\">\n                                    <div class=\"col-6 px-4\">\n                                        <div class=\"mx-auto\">\n                                            <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                                placeholder=\"Filter...\" #input />\n                                        </div>\n                                    </div>\n                                    <div class=\"col-6 px-4\">\n                                        <div class=\"mx-auto\">\n                                            <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                    [class.auth-spinner]=\"multimodifyloading\"\n                                                    [disabled]=\"multimodifyloading\">\n                                                    <mat-icon class=\"col-white\">done_all </mat-icon>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-container>\n\n\n                        <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                            #exporter=\"matTableExporter\">\n\n                            <ng-container matColumnDef=\"select\">\n                                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-15'\">\n                                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                        [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                    </mat-checkbox>\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-15'\">\n                                    <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                        [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                    </mat-checkbox>\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"BankID\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-25\">Bank ID</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{\n                                    row.BankID }}</mat-cell>\n                            </ng-container>\n\n                            <!-- Bank Name -->\n                            <ng-container matColumnDef=\"BankName\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-60\">Bank Name</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-60\">{{\n                                    row.BankName }}</mat-cell>\n                            </ng-container>\n\n\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\"\n                                matRipple>\n                            </mat-row>\n                            <mat-cell *matNoDataRow colspan=\"4\">\n                                No data matching the filter \"{{ input.value }}\"\n                            </mat-cell>\n                        </mat-table>\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                            <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                            </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                            aria-label=\"Select page of users\"></mat-paginator>\n                    </div>\n                </div>\n            </mat-card-content>\n        </div>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { ManageCustomerInvoicesComponent } from 'src/app/erp-finance/modules/finance-management/account-receivables/customerInvoices/manage-customer-invoices/manage-customer-invoices.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { CustomerManagementService } from '../../services/customer-management.service';\nimport { CustomerInvoicesService } from '../../services/customer-invoices.service';\n\n@Component({\n  selector: 'app-customer-invoice-lookup',\n  templateUrl: './customer-invoice-lookup.component.html',\n  styleUrls: ['./customer-invoice-lookup.component.sass']\n})\nexport class CustomerInvoiceLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"invoiceCode\",\n    \"customerCode\",\n    \"customerName\",\n    \"invoiceDate\",\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  selection = new SelectionModel<any>(false, []);\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  dataSourceFilteredList: any[] = [];\n  glsArray: any[] = [];\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCustomerInvoicesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private customerInvoiceManService: CustomerInvoicesService,\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n\n  }\n\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    this.dataSource.data.forEach((element) => {\n      this.glsArray.forEach((item) => {\n        if (item === element.id) {\n          this.selection.select(element);\n        }\n      });\n    });\n    console.log(\"dataSourceFilteredList::\", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  //******************************************************************************************************\n  //Select stock items\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  glsSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n  }\n\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  tableDetails: any[] = [];\n\n  //******************************************************************************************************\n  getData(){\n    this.customerInvoiceManService.getAllApprovedCustomerInvoices()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe({\n      next: (res) => {\n        if (res.statusCode == 200){\n          this.data = res.entity;\n          this.isLoading = false;\n          this.dataSource = new MatTableDataSource(this.data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        } else {\n          this.snackbar.showNotification(\n            \"snackbar-danger\", \n            res.message\n          );\n        }\n      }, \n      error: (err) => {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n         err.message\n        );\n      }, \n      complete: ()=> {},\n    }), Subscription;\n  }\n}\n\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select Customer Invoice </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"glsSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"glsSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Invoice Code -->\n                <ng-container matColumnDef=\"invoiceCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      Invoice Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.invoiceCode }}\n                    </mat-cell>\n                  </ng-container>\n\n                <!-- Customer Code -->\n                <ng-container matColumnDef=\"customerCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Customer Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.customerCode }}\n                  </mat-cell>\n                </ng-container>\n  \n                <!-- Customer Name -->\n                <ng-container matColumnDef=\"customerName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  Customer Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.customerName }}\n                  </mat-cell>\n                </ng-container>\n\n                  <!-- Customer Type -->\n                  <ng-container matColumnDef=\"customerType\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Customer Type\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.customerType }}\n                    </mat-cell>\n                  </ng-container>\n\n                      <!-- Invoice Date -->\n                      <ng-container matColumnDef=\"invoiceDate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                        Invoice Date \n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                          {{ row.invoiceDate }}\n                        </mat-cell>\n                      </ng-container>\n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { ManageRfqsComponent } from \"src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { PaymentMethodService } from \"../../services/payment-method.service\";\nimport { ManageCustomersComponent } from \"src/app/erp-finance/modules/finance-parameters/pages/customer-management/manage-customers/manage-customers.component\";\n\n@Component({\n  selector: \"app-customer-type-lookup\",\n  templateUrl: \"./customer-type-lookup.component.html\",\n  styleUrls: [\"./customer-type-lookup.component.sass\"],\n})\nexport class CustomerTypeLookupComponent implements OnInit {\n  displayedColumns: string[] = [\"select\", \"id\", \"customerType\", \"description\"];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCustomersComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private paymentMethodManService: PaymentMethodService\n  ) {}\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  getData() {\n    let params = { status: \"APPROVED\" };\n    this.paymentMethodManService.getCustomerTypesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"Status:\", res);\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select Customer Type</div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let index = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"><span>{{ index+1 }}</span></mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"customerType\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    Customer Type\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    {{ row.customerTypeName }}\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"description\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Description\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.description }}\n                  </mat-cell>\n                </ng-container>\n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { ManageRfqsComponent } from \"src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { CurrencyService } from \"../../services/currency.service\";\nimport { PaymentMethodService } from \"../../services/payment-method.service\";\nimport { ManageCustomersComponent } from \"src/app/erp-finance/modules/finance-parameters/pages/customer-management/manage-customers/manage-customers.component\";\n\n@Component({\n  selector: \"app-payment-methods-look-up\",\n  templateUrl: \"./payment-methods-look-up.component.html\",\n  styleUrls: [\"./payment-methods-look-up.component.sass\"],\n})\nexport class PaymentMethodsLookUpComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"paymentMethodType\",\n    \"description\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCustomersComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private paymentMethodManService: PaymentMethodService\n  ) {}\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  getData() {\n    let params = {\n      status: \"APPROVED\",\n    };\n    this.paymentMethodManService\n      .getPaymentMethodsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"Status:\", res);\n          if (res.statusCode ===  200) {\n\n            console.log(\"Err Status:\", res);\n\n            // this.data = res.entity;\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n           \n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n  <div class=\"contact-details\">\n    <div class=\"mb-3\" *ngIf=\"isLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\">Select Payment Method</div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n        <div *ngIf=\"isLoading\">\n          <div class=\"d-flex justify-content-center\">\n            <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n          </div>\n        </div>\n        <div class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                          [class.auth-spinner]=\"multimodifyloading\" [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n\n\n\n            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n              #exporter=\"matTableExporter\">\n\n              <ng-container matColumnDef=\"select\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">Id\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row; let index = index\"\n                  class=\"column-nowrap psl-3 tbl-col-width-per-10\"><span>{{ index+1 }}</span></mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"paymentMethodType\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                  Payment Method\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                  {{ row.paymentMethodType }}\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"description\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  Description\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.description }}\n                </mat-cell>\n              </ng-container>\n\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n              <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n              <mat-cell *matNoDataRow colspan=\"4\">\n                No data matching the filter \"{{ input.value }}\"\n              </mat-cell>\n            </mat-table>\n\n            <!-- Loading spinner -->\n            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n              </mat-progress-spinner>\n            </div>\n            <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n              aria-label=\"Select page of users\"></mat-paginator>\n          </div>\n        </div>\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { FixedAssetsServiceService } from '../../../services/fixed-assets-service.service';\nimport { ViewAssetsComponent } from 'src/app/erp-fixedassets/modules/fixed-assests-management/view-assets/view-assets.component';\n\n@Component({\n  selector: 'app-asset-validation',\n  templateUrl: './asset-validation.component.html',\n  styleUrls: ['./asset-validation.component.sass']\n})\nexport class AssetValidationComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  Data: any;\n  action!: string;\n  statusForm: FormGroup;\n  rejected: boolean = false;\n  approved: boolean = false;\n  returned: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private fixedAssetservice: FixedAssetsServiceService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n    console.log(\"DATADATA: \", this.Data)\n  }\n\n  //***************************************************************************************************** */\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n    \n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    if (this.postedBy === this.currentUser) {\n\n      this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n      this.canVerify = false;\n\n    } \n    \n    else {\n      this.canVerify = true;\n    }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.action = \"APPROVED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n \n    const params = new HttpParams()\n      .set(\"remarks\", this.statusForm.value.reason)\n \n      let body = [];\n\n        this.Data.forEach((element) =>\n        {\n          let expense = {id: element.id, status: this.action};\n          body.push(expense);\n          console.log(\"params\", body);\n\n        })\n\n    this.fixedAssetservice\n      .validateAssets(body,params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n\n          console.log(\"params\", params);\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            \"Asset validation successful!\"\n          );\n    \n          \n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: \" + err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-fixed-assets/fixed-assets-management/assets-record\"]);\n        }\n      });\n  }\n\n  \n\n}\n\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Validate Asset(s)</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n            \n            <!-- <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">Expense Code:</dt>\n                <dd>{{Data.expenseCode}}</dd>\n                <dt class=\"pull-left me-2\">Expense Name:</dt>\n                <dd> {{ Data.expenseName }}</dd>\n                <dt class=\"pull-left me-2\">Posted By:</dt>\n                <dd> {{ Data.postedBy }}</dd>\n              </dl>\n            </div> -->\n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <!-- Approve -->\n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n\n              <!-- Return -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n\n              <!-- Reject -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n              \n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ExpenseManagementService } from '../../../services/expense-management.service';\nimport { ReceivablePaymentsService } from '../../../services/receivable-payments.service';\nimport { ManageReceivablePaymentsComponent } from 'src/app/erp-finance/modules/finance-management/account-receivables/receivablePayments/manage-receivable-payments/manage-receivable-payments.component';\n\n@Component({\n  selector: 'app-receivable-payments-validation',\n  templateUrl: './receivable-payments-validation.component.html',\n  styleUrls: ['./receivable-payments-validation.component.sass']\n})\nexport class ReceivablePaymentsValidationComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  action!: string;\n\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  returned: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageReceivablePaymentsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private receivablePaymentManService: ReceivablePaymentsService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n    console.log(\"DATADATA: \", this.Data)\n  }\n\n  //***************************************************************************************************** */\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n    console.log(\"ids: \", this.Data)\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    if (this.postedBy === this.currentUser) {\n\n      this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n      this.canVerify = false;\n\n    }\n\n    else {\n      this.canVerify = true;\n    }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"REJECT\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"RETURN\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.action = \"APPROVED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n\n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n\n\n    const params = new HttpParams()\n      .set(\"remarks\", this.statusForm.value.reason)\n\n\n    // let body = [\n    //   {\n    //     id: this.Data.id,\n    //   //  id: this.Data.map((element)=> \n    //   //   {\n    //   //    element.id\n    //   //   }),\n    //     status: this.action\n    //   }]\n\n    let body = [];\n\n    console.log(\"params\", params);\n\n    this.Data.forEach((element) => {\n      let expense = { id: element.id, status: this.action, remarks: this.statusForm.value.reason };\n      body.push(expense);\n      console.log(\"Expense\", expense);\n    })\n\n    console.log(\"Body\", body);\n    this.receivablePaymentManService\n      .validateReceivablePayment(params, body)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"resres:: \", res);\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            res.message\n          );\n          if (res) {\n\n\n          }\n\n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-finance/finance-management/all-recPayments\"]);\n        }\n      });\n  }\n\n\n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Validate Receivable Payment(s)</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n            \n            <!-- <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">Expense Code:</dt>\n                <dd>{{Data.expenseCode}}</dd>\n                <dt class=\"pull-left me-2\">Expense Name:</dt>\n                <dd> {{ Data.expenseName }}</dd>\n                <dt class=\"pull-left me-2\">Posted By:</dt>\n                <dd> {{ Data.postedBy }}</dd>\n              </dl>\n            </div> -->\n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <!-- Approve -->\n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n\n              <!-- Return -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n\n              <!-- Reject -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n              \n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { ManageReceivablePaymentsComponent } from 'src/app/erp-finance/modules/finance-management/account-receivables/receivablePayments/manage-receivable-payments/manage-receivable-payments.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ReceivablePaymentsService } from '../../../services/receivable-payments.service';\nimport { AssestRegisterComponent } from 'src/app/erp-fixedassets/modules/fixed-assests-management/assest-register/assest-register.component';\nimport { FixedAssetsServiceService } from '../../../services/fixed-assets-service.service';\nimport { ViewAssetsComponent } from 'src/app/erp-fixedassets/modules/fixed-assests-management/view-assets/view-assets.component';\n\n@Component({\n  selector: 'app-single-asset-verification-dialog',\n  templateUrl: './single-asset-verification-dialog.component.html',\n  styleUrls: ['./single-asset-verification-dialog.component.sass']\n})\nexport class SingleAssetVerificationDialogComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  action!: string;\n\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  returned: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewAssetsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private fixedAssetService: FixedAssetsServiceService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n    console.log(\"DATADATA: \", this.Data)\n  }\n\n  //***************************************************************************************************** */\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n    console.log(\"ids: \", this.Data)\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    if (this.postedBy === this.currentUser) {\n\n      this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this Asset!\");\n\n      this.canVerify = false;\n\n    } \n    \n    else {\n      this.canVerify = true;\n    }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"REJECT\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"RETURN\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.action = \"APPROVE\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n \n    const params = new HttpParams()\n      .set(\"remarks\", this.statusForm.value.reason)\n \n      let body = [];\n\n        this.Data.forEach((element) =>\n        {\n          let expense = {id: element.id, status: this.action};\n          body.push(expense);\n          console.log(\"params\", body);\n\n        })\n\n    this.fixedAssetService\n      .validateAssets(body,params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n\n          console.log(\"params\", params);\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            \"Validation successfully!\"\n          );\n    \n          \n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: \" + err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-fixed-assets/fixed-assets-management/assets-record\"]);\n        }\n      });\n  }\n\n\n  // changeStatus() {\n  //   this.validationIsLoading = true;\n  \n  //   let todayDate = this.datepipe.transform(\n  //     new Date(),\n  //     \"yyyy-MM-ddTHH:mm:ss\"\n  //   );\n  \n \n  //   const params = new HttpParams()\n  //     .set(\"remarks\", this.statusForm.value.reason)\n      \n      \n  //     // let body = [\n  //     //   {\n  //     //     id: this.Data.id,\n  //     //   //  id: this.Data.map((element)=> \n  //     //   //   {\n  //     //   //    element.id\n  //     //   //   }),\n  //     //     status: this.action\n  //     //   }]\n\n  //     let body = [];\n      \n\n\n  //       this.Data.forEach((element) =>\n  //       {\n  //         let expense = {id: element.id, status: this.action};\n  //         body.push(expense);\n  //       })\n  \n  //   this.fixedAssetService\n  //     .validateasset(body, params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n\n  //         this.snackbar.showNotification(\n  //           \"snackbar-success\",\n  //           \"Asset Validated Successfully!\"\n  //         );\n  //         if (res) {\n            \n            \n  //         }\n          \n  //       },\n  //       error: (err) => {\n  //         console.log(\"err = \", err);\n  //         this.snackbar.showNotification(\n  //           \"snackbar-danger\",\n  //           \"Server Error: \" + err.message\n  //         );\n  //       },\n  //       complete: () => {\n  //         this.dialogRef.close();\n  //         this.router.navigate([\"/erp-fixed-assets/fixed-assets-management/assets-record\"]);\n  //       }\n  //     });\n  // }\n\n  \n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Validate Asset(s)</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n            \n            <!-- <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">Expense Code:</dt>\n                <dd>{{Data.expenseCode}}</dd>\n                <dt class=\"pull-left me-2\">Expense Name:</dt>\n                <dd> {{ Data.expenseName }}</dd>\n                <dt class=\"pull-left me-2\">Posted By:</dt>\n                <dd> {{ Data.postedBy }}</dd>\n              </dl>\n            </div> -->\n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <!-- Approve -->\n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n\n              <!-- Return -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n\n              <!-- Reject -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n              \n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FixedAssetsServiceService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n\n \n\n  getData(): Observable<any[]> {\n    const fxAssetUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/getAssetsToUpdate`;\n    return this.http.get<any[]>(fxAssetUrl)\n  }\n\n  // Update asset manually\n  updateAsset(data: any[]): Observable<any> {\n    const fxAssetUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/modify`;\n    return this.http.put(fxAssetUrl, data);\n  }\n\n  modifyAsset(data: any[]): Observable<any> {\n    const fxAssetUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/modify`;\n    return this.http.put(fxAssetUrl, data);\n  }\n\n\n\n  \n\n  getAllUpdatedAssets(): Observable<any[]> {\n    const fxAssetUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/getUpdatedAssets`;\n    return this.http.get<any[]>(fxAssetUrl)\n  }\n\n  // add asset manually\n  addAsset(data: any): Observable<any> {\n    const RfqUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/create`;\n    return this.http.post<any>(RfqUrl, data);\n  }\n\n  // add bulk assets using excel upload\n  addBulkAssets(data: any): Observable<any> {\n    const RfqUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/upload/bulk`;\n    return this.http.post<any>(RfqUrl, data);\n  }\n\n\n \n\n  receiveAssets(): Observable<any> {\n    const RfqUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/getAssetsToUpdate`;\n    return this.http.get<any[]>(RfqUrl)\n  }\n\n  getUpdatedAssets(params: any): Observable<any> {\n    const RfqUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/getUpdatedAssets`;\n    return this.http.get<any[]>(RfqUrl, { params })\n  }\n\n\n   validateAssets(body:any, params: any): Observable<any> {\n     const imprestUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/bulkyApproval`;\n     return this.http.put<any>(imprestUrl, body, {params:params});\n     \n   }\n\n\n   validateasset( body: any, params: any): Observable<any>{\n    const receivablePaymentUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/approveOrRejectOrReturn`;\n    return this.http.post<any>(receivablePaymentUrl, body,  {params: params} )\n  }\n  \n  \n  \n  deleteAsset(params: any): Observable<any>   {\n    const deleteAssetUrl = `${environment.baseUrlFinance}/api/fixedAssetsMaintenance/delete`;\n    return this.http.delete<any[]>(deleteAssetUrl, { params: params, });\n  }\n\n  \n  \n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReceivablePaymentsService {\n\n  constructor(\n  private http: HttpClient\n  ) { }\n\n  getAllReceivablePayments(): Observable<any>{\n    const receivablePaymentUrl = `${environment.baseUrlFinance}/api/v1/ReceivablePayment/fetchAll`;\n    return this.http.get<any[]>(receivablePaymentUrl);\n  }\n\n  addReceivablePayments(dataBody: any):Observable<any>{\n    const receivablePaymentUrl = `${environment.baseUrlFinance}/api/v1/ReceivablePayment/create`;\n    return this.http.post<any[]>(receivablePaymentUrl, dataBody);\n  }\n\n  deleteReceivablePayment(params: any): Observable<any>{\n    const receivablePaymentUrl = `${environment.baseUrlFinance}/api/v1/ReceivablePayment/delete`;\n    return this.http.delete<any[]>(receivablePaymentUrl, {params} );\n  }\n  getReceivablePaymentsByStatusAndApprovalType(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/ReceivablePayment/fetchbyStatus`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n  updateReceivablePayment(dataBody: any): Observable<any>{\n    const receivablePaymentUrl = `${environment.baseUrlFinance}/api/v1/ReceivablePayment/modify`;\n    return this.http.put<any[]>(receivablePaymentUrl, dataBody);\n  }\n\n  validateReceivablePayment(params: any, body: any): Observable<any> {\n    const receivablePaymentUrl = `${environment.baseUrlFinance}/api/v1/ReceivablePayment/bulkyApproval`;\n    return this.http.put<any>(receivablePaymentUrl, body, { params: params });\n  }\n\n  uploadBatchReceivablePayments(items: any,): Observable<any>{\n    const receivablePaymentUrl = `${environment.baseUrlFinance}/api`;\n    return this.http.post<any>(receivablePaymentUrl, items )\n  }\n\n\n  validateReceivablesPayments(params: any, dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/ReceivablePayment/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate, {params});\n  }\n\n\n\n  downloadExcelReceivablesReport(){\n    let headers = new HttpHeaders().append(\"Accept\", \"application/octet-stream\");\n\n    let requestOptions: any = {\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n\n    let API_URL = `${environment.baseUrlFinance}/api/v1/ReceivablePayment/excel-report`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Download report\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/octet-stream\" }),\n        };\n      })\n    );\n  }\n\n  //********************************************************************************************************** */\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n\n  {\n    path: \"dashboard\",\n    loadChildren: () =>\n      import(\"./modules/dashboard/dashboard.module\").then(\n        (m) => m.DashboardModule\n      ),\n  },\n  \n  {\n  path: \"finance-parameters\",\n  loadChildren: () =>\n    import(\"./modules/finance-parameters/finance-parameters.module\").then(\n      (m) => m.FinanceParametersModule\n    ),\n  },\n\n  {\n    path: \"finance-management\",\n    loadChildren: () =>\n      import(\"./modules/finance-management/finance-management.module\").then(\n        (m) => m.FinanceManagementModule\n      ),\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ErpFinanceRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ErpFinanceRoutingModule } from './erp-finance-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from '../shared/components/components.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { DashboardModule } from './modules/dashboard/dashboard.module';\nimport { CustomerLookupComponent } from './data/lookups/customer-lookup/customer-lookup.component';\nimport { CustomerInvoiceLookupComponent } from './data/lookups/customer-invoice-lookup/customer-invoice-lookup.component';\nimport { CustomerInvoiceValidationComponent } from './data/lookups/validation/customer-invoice-validation/customer-invoice-validation.component';\nimport { ReceivablePaymentsValidationComponent } from './data/lookups/validation/receivable-payments-validation/receivable-payments-validation.component';\nimport { PaymentMethodsLookUpComponent } from './data/lookups/payment-methods-look-up/payment-methods-look-up.component';\nimport { CustomerTypeLookupComponent } from './data/lookups/customer-type-lookup/customer-type-lookup.component';\nimport { SupplierInvoiceValidationComponent } from './data/lookups/validation/supplier-invoice-validation/supplier-invoice-validation.component';\nimport { ApprovedSuppliersInvoicesComponent } from './data/lookups/approved-suppliers-invoices/approved-suppliers-invoices.component';\nimport { MaintainedSuppliersLookUpComponent } from './data/lookups/maintained-suppliers-look-up/maintained-suppliers-look-up.component';\nimport { PurchaseRequisitionLookUpComponent } from './data/lookups/purchase-requisition-look-up/purchase-requisition-look-up.component';\nimport { DepartmentLookupComponent } from './data/lookups/department-lookup/department-lookup.component';\nimport { AssetValidationComponent } from './data/lookups/validation/asset-validation/asset-validation.component';\nimport { SingleAssetVerificationDialogComponent } from './data/lookups/validation/single-asset-verification-dialog/single-asset-verification-dialog.component';\nimport { BanksLookupComponent } from './data/lookups/banks-lookup/banks-lookup.component';\nimport { BranchesLookupComponent } from './data/lookups/branches-lookup/branches-lookup.component';\n\n\n@NgModule({\n  declarations: [\n    CustomerLookupComponent,\n    CustomerInvoiceLookupComponent,\n    CustomerInvoiceValidationComponent,\n    ReceivablePaymentsValidationComponent,\n    PaymentMethodsLookUpComponent,\n    CustomerTypeLookupComponent,\n    SupplierInvoiceValidationComponent,\n    ApprovedSuppliersInvoicesComponent,\n    MaintainedSuppliersLookUpComponent,\n    PurchaseRequisitionLookUpComponent,\n    DepartmentLookupComponent,\n    AssetValidationComponent,\n    SingleAssetVerificationDialogComponent,\n\n    BanksLookupComponent,\n    BranchesLookupComponent\n    \n  ],\n  imports: [\n    CommonModule,\n    ErpFinanceRoutingModule,\n\n     //Material Imports\n     DashboardModule,\n     MatIconModule,\n     NgApexchartsModule,\n     PerfectScrollbarModule,\n     MatMenuModule,\n     MatTooltipModule,\n     MatProgressBarModule,\n \n     MatTableModule,\n     MatPaginatorModule,\n     MatInputModule,\n     MatSortModule,\n \n     MatSelectModule,\n     MatTabsModule,\n     MatCheckboxModule,\n     MatTableExporterModule,\n     MatProgressSpinnerModule,\n \n     MatFormFieldModule,\n \n     MatButtonModule,\n     MatDialogModule,\n     MatDatepickerModule,\n     ComponentsModule,\n     MatCardModule,\n     ReactiveFormsModule,\n \n     MatSnackBarModule,\n     MatToolbarModule,\n \n     SharedModule,\n     MatStepperModule,\n     NgxMaskModule,\n     MatChipsModule,\n \n \n     FormsModule,\n     MatBadgeModule,\n     MatAutocompleteModule,\n     MatBottomSheetModule,\n     MatListModule,\n     MatSidenavModule,\n     MatExpansionModule,\n     MatSliderModule,\n     NgbModule,\n  ],\n\n})\nexport class ErpFinanceModule { }\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { DashboardComponent } from \"./pages/dashboard/dashboard.component\";\nimport { RoutePrivilegeGuard } from \"src/app/erp-procurement/data/services/_AccessControlAuthGuard.service\";\n\nconst routes: Routes = [\n  // { path: \"\", component: DashboardComponent },\n{ path: '', component: DashboardComponent, canActivate: [RoutePrivilegeGuard], data: {  clientName: 'FinanceModule', requiredPrivilege: ['Dashboard'] } },];\n\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { GenWidgetsComponent } from './pages/gen-widgets/gen-widgets.component';\n\n\n\n\nimport { NgxEchartsModule } from \"ngx-echarts\";\nimport { ChartsModule as chartjsModule } from \"ng2-charts\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { GaugeModule } from \"angular-gauge\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { NgxGaugeModule } from \"ngx-gauge\";\n\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ResetPasswordComponent } from './pages/components/reset-password/reset-password.component';\nimport { AnalyticsComponent } from './pages/components/analytics/analytics.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    GenWidgetsComponent,\n\n    ResetPasswordComponent,\n    AnalyticsComponent,\n    \n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    ComponentsModule,\n    SharedModule,\n\n    NgxEchartsModule.forRoot({\n      echarts: () => import(\"echarts\"),\n    }),\n    chartjsModule,\n    NgxChartsModule,\n    NgApexchartsModule,\n    MatMenuModule,\n    MatIconModule,\n    GaugeModule.forRoot(),\n    NgxGaugeModule,\n    ComponentsModule,\n    NgApexchartsModule,\n\n    MatFormFieldModule,\n    MatSelectModule,\n    CommonModule,\n\n    MatProgressBarModule\n \n    \n  ],\n  exports: [GenWidgetsComponent]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexStroke,\n  ApexMarkers,\n  ApexYAxis,\n  ApexGrid,\n  ApexTitleSubtitle,\n  ApexTooltip,\n  ApexLegend,\n  ApexFill,\n  ApexResponsive,\n} from \"ng-apexcharts\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  stroke: ApexStroke;\n  dataLabels: ApexDataLabels;\n  markers: ApexMarkers;\n  colors: string[];\n  yaxis: ApexYAxis;\n  grid: ApexGrid;\n  legend: ApexLegend;\n  tooltip: ApexTooltip;\n  fill: ApexFill;\n  title: ApexTitleSubtitle;\n  responsive: ApexResponsive[];\n  labels: any;\n};\n\n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.sass']\n})\nexport class AnalyticsComponent implements OnInit {\n  public performanceRateChartOptions: Partial<ChartOptions>;\n\n  public lineChartOptions: Partial<ChartOptions>;\n  public pieChartOptions: any;\n  //  color: [\"#3FA7DC\", \"#F6A025\", \"#9BC311\"],\n\n  currentUser: any;\n\n  constructor(private tokenCookieService: TokenCookieService,) { }\n  ngOnInit() {\n    this.currentUser = this.tokenCookieService.getUser().username;\n    this.chart1();\n    this.chart2();\n    this.chart4();\n  }\n\n\n  //*************************************************************************************************************************** */\n  //Received Details from child component\n  //*************************************************************************************************************************** */\n\n  receivedGlDetails: any;\n\n  onGlDetailsChange(glDetails: any) {\n    this.receivedGlDetails = glDetails;\n\n    console.log(\"this.receivedGlDetails:: \", this.receivedGlDetails);\n\n  }\n  //*************************************************************************************************************************** */\n\n  private chart1() {\n    this.lineChartOptions = {\n      series: [\n        {\n          name: \"Supplier 1\",\n          data: [70, 200, 80, 180, 170, 105, 210, 0, 250, 30, 120, 260],\n        },\n        {\n          name: \"Supplier 2\",\n          data: [80, 250, 30, 120, 260, 100, 180, 5, 130, 85, 225, 80],\n        },\n        {\n          name: \"Supplier 3\",\n          data: [85, 130, 85, 225, 80, 190, 120, 130, 85, 225, 80, 190],\n        },\n      ],\n      chart: {\n        height: 350,\n        type: \"line\",\n        foreColor: \"#9aa0ac\",\n        dropShadow: {\n          enabled: true,\n          color: \"#000\",\n          top: 18,\n          left: 7,\n          blur: 10,\n          opacity: 0.2,\n        },\n        toolbar: {\n          show: false,\n        },\n      },\n      colors: [\"#A5A5A5\", \"#875692\", \"#4CB5AC\"],\n      stroke: {\n        curve: \"smooth\",\n      },\n      grid: {\n        row: {\n          colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n          opacity: 0.5,\n        },\n      },\n      markers: {\n        size: 3,\n      },\n      xaxis: {\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"],\n        title: {\n          text: \"Month\",\n        },\n      },\n      yaxis: {\n        // opposite: true,\n        title: {\n          text: \"Payment Amount\",\n        },\n      },\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        floating: true,\n        offsetY: -25,\n        offsetX: -5,\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true,\n        },\n        x: {\n          show: true,\n        },\n      },\n    };\n  }\n\n  private chart2() {\n    this.pieChartOptions = {\n      series: [44, 55, 13, 43, 22],\n      chart: {\n        type: \"donut\",\n        width: 225,\n      },\n      legend: {\n        show: false,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      labels: [\"Science\", \"Mathes\", \"Economics\", \"History\", \"Music\"],\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {},\n        },\n      ],\n    };\n  }\n\n\n  private chart4() {\n    this.performanceRateChartOptions = {\n      series: [\n        {\n          name: \"Invoice Amount\",\n          data: [0, 20, 12, 6, 15, 25, 0],\n        },\n      ],\n      chart: {\n        height: 380,\n        type: \"line\",\n        dropShadow: {\n          enabled: true,\n          color: \"#000\",\n          top: 18,\n          left: 7,\n          blur: 10,\n          opacity: 0.2,\n        },\n        foreColor: \"#9aa0ac\",\n        toolbar: {\n          show: false,\n        },\n      },\n      colors: [\"#545454\"],\n      dataLabels: {\n        enabled: true,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      markers: {\n        size: 1,\n      },\n      xaxis: {\n        categories: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        title: {\n          text: \"Weekday\",\n        },\n      },\n      yaxis: {\n        title: {\n          text: \"Invoice Amount($)\",\n        },\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true,\n        },\n        x: {\n          show: true,\n        },\n      },\n    };\n  }\n}\n","\n\n<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"card\">\n      <div class=\"body\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-md-2 p-2\">\n            <img src=\"assets/images/pngegg8.png\" alt=\"\" width=\"250px\" height=\"170px\" class=\"px-2 mx-2\">\n          </div>\n          \n          <div class=\"col-md-10\">\n            <h4 class=\"font-20 weight-500 mb-2\">\n              Welcome back <div class=\"weight-600 font-30 col-green pt-1\">{{currentUser}}!</div>\n            </h4>\n            <p class=\"font-18 max-width-600\">We strive to offer a seamless payment and invoicing experience to meet your needs. For any inquiries or concerns, please don't hesitate to reach out to us. Thank you for choosing our finance system..</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n<!-- <app-gl-details [glAccount]=\"'600007'\"\n              (glDetailsChange)=\"onGlDetailsChange($event)\"></app-gl-details>   -->\n\n            \n\n<!-- <div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"card\">\n      <div class=\"body\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-md-4\">\n            <img src=\"assets/images/dashImg2.jpg\" alt=\"Welcome Image\" class=\"w-100\">\n          </div>\n          <div class=\"col-md-8\">\n            <h4 class=\"font-24 weight-500 mb-2\">\n              Welcome back <div class=\"weight-600 font-30 col-blue pt-1\">John Doe!</div>\n            </h4>\n            <p class=\"font-18 max-width-600\">Thank you for choosing our finance system for your payment and invoicing needs. We are committed to providing you with reliable and efficient service. Please feel free to contact us if you have any questions or concerns.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<!-- <div class=\"body\">\n  <div class=\"row align-items-center\">\n    <div class=\"col-md-4\">\n      <img src=\"assets/images/finance-system/welcome-image.png\" alt=\"Welcome Image\" class=\"w-100\">\n    </div>\n    <div class=\"col-md-8\">\n      <h4 class=\"font-24 weight-500 mb-2\">\n        Welcome back <div class=\"weight-600 font-30 col-blue pt-1\">John Doe!</div>\n      </h4>\n      <p class=\"font-18 max-width-600\">Thank you for choosing our finance system for your payment and invoicing needs. We are committed to providing you with reliable and efficient service. Please feel free to contact us if you have any questions or concerns.</p>\n    </div>\n  </div>\n</div> -->\n\n\n<div class=\"row clearfix\">\n  <!-- Bar chart with line -->\n  <div class=\"col-xl-8 col-lg-8 col-md-12 col-sm-12\" >\n    <div class=\"card\" style=\"position: relative; height: 490px;\">\n      <div class=\"header\">\n        <h2>Supplier Payments</h2>\n      </div>\n      <div class=\"body\">\n        <div class=\"recent-report__chart\">\n          <apx-chart [series]=\"lineChartOptions.series\" [chart]=\"lineChartOptions.chart\"\n            [xaxis]=\"lineChartOptions.xaxis\" [stroke]=\"lineChartOptions.stroke\" [colors]=\"lineChartOptions.colors\"\n            [dataLabels]=\"lineChartOptions.dataLabels\" [legend]=\"lineChartOptions.legend\"\n            [tooltip]=\"lineChartOptions.tooltip\" [markers]=\"lineChartOptions.markers\" [grid]=\"lineChartOptions.grid\"\n            [yaxis]=\"lineChartOptions.yaxis\" [title]=\"lineChartOptions.title\" [fill]=\"lineChartOptions.fill\">\n          </apx-chart>\n        </div>\n      </div>\n    </div>\n  </div>\n \n  <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"float-start\">\n          <h6 class=\"text-muted\">Average Daily Invoices</h6>\n          <h5>12 Invoices <span class=\"text-muted font-12\">(Average)</span></h5>\n        </div>\n        <div class=\"mb-5\">\n          <apx-chart [series]=\"performanceRateChartOptions.series\" [chart]=\"performanceRateChartOptions.chart\"\n            [xaxis]=\"performanceRateChartOptions.xaxis\" [stroke]=\"performanceRateChartOptions.stroke\"\n            [colors]=\"performanceRateChartOptions.colors\" [dataLabels]=\"performanceRateChartOptions.dataLabels\"\n            [legend]=\"performanceRateChartOptions.legend\" [markers]=\"performanceRateChartOptions.markers\"\n            [grid]=\"performanceRateChartOptions.grid\" [yaxis]=\"performanceRateChartOptions.yaxis\"\n            [tooltip]=\"performanceRateChartOptions.tooltip\" [title]=\"performanceRateChartOptions.title\"></apx-chart>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\n\n\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\nimport { DashboardComponent } from \"../../dashboard/dashboard.component\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"./reset-password.component.html\",\n  styleUrls: [\"./reset-password.component.sass\"],\n})\nexport class ResetPasswordComponent implements OnInit {\n  isSuccessful = false;\n  isUploadFailed = false;\n  errorMessage = \"\";\n\n  action: string;\n  dialogTitle: string;\n  //employeesForm: FormGroup;\n  sender: any;\n\n  Data?: any;\n  message?: any;\n  Form!: FormGroup;\n\n  //categorys = [{ name: \"Company\" }, { name: \"Individual\" }];\n\n  selectFeedback: \" \";\n\n  currentUserName: any;\n  hide1 = true;\n  hide2 = true;\n\n  loading: boolean = false;\n\n  constructor(\n\n    private router: Router,\n    private tokenStorage: TokenCookieService,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    public dialogRef: MatDialogRef<DashboardComponent>,\n    @Inject(MAT_DIALOG_DATA) data\n  ) {\n    this.Data = data.test;\n  }\n\n  ngOnInit(): void {\n    this.currentUserName = this.tokenStorage.getUser().username;\n    this.Form = this.createForm();\n  }\n\n  createForm(): FormGroup {\n    return this.fb.group({\n      username: [this.currentUserName, [Validators.required]],\n      password: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n          ),\n          Validators.minLength(10),\n          Validators.maxLength(25),\n        ],\n      ],\n\n      confirmpassword: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n          ),\n          Validators.minLength(10),\n          Validators.maxLength(25),\n        ],\n      ],\n\n      // password: [\"\", [Validators.required]],\n      // confirmpassword: [\"\", [Validators.required]],\n    });\n  }\n\n  // {\n  //   \"headers\": {\n  //     \"normalizedNames\": {},\n  //     \"lazyUpdate\": null\n  //   },\n  //   \"status\": 200,\n  //   \"statusText\": \"OK\",\n  //   \"url\": \"https://uraintegration-auth.postbank.co.ug/soa/auth/logout\",\n  //   \"ok\": true,\n  //   \"type\": 4,\n  //   \"body\": {\n  //     \"name\": null,\n  //     \"account_no\": null,\n  //     \"scheme_code\": null,\n  //     \"scheme_type\": null,\n  //     \"message\": \"Logged Out Successfully!\",\n  //     \"entity\": null,\n  //     \"statusCode\": 200\n  //   }\n  // }\n\n  // resetPassword() {\n  //   if (this.Form.value.password !== this.Form.value.confirmpassword) {\n  //     this.snackbar.showNotification(\n  //       \"snackbar-danger\",\n  //       \"Passwords don't match, please check and retry!\"\n  //     );\n  //   } else {\n  //     this.loading = true;\n  //     this.staticsService.firstTimeResetPassword(this.Form.value).subscribe(\n  //       (res) => {\n  //         console.log(\"res: \", res);\n        \n  //         this.loading = false;\n  //         if (res.message) {\n  //           this.dialogRef.close({ event: \"close\", data: \"Password reset\" });\n  //           this.notificationAPI.alertSuccess(res.message);\n  //         } else {\n  //           this.notificationAPI.alertWarning(\"Password reset was not succesful\");\n  //         }\n  //       },\n  //       (err) => {\n  //         this.loading = false;\n  //         // this.notificationAPI.alertWarning(err);\n  //         this.notificationAPI.alertWarning(\n  //           \"Password policy not met. Use a different password!\"\n  //         );\n  //       }\n  //     );\n  //   }\n  // }\n\n  resetPassword() {\n    // if (this.Form.value.password !== this.Form.value.confirmpassword) {\n    //   this.snackbar.showNotification(\n    //     \"snackbar-danger\",\n    //     \"Passwords don't match, please check and retry!\"\n    //   );\n    // } else if (this.Form.value.password.includes(this.currentUserName)) {\n    //   this.notificationAPI.alertWarning(\n    //     \"Password policy not met. Use a different password!\"\n    //   );\n    // } else {\n    //   this.loading = true;\n\n    // }\n  }\n\n  \n  onClose(): void {\n    // this.tokenStorage.signOut().subscribe(\n    //   (res) => {\n    //     console.log(\"res: \", res);\n    //     if (res) {\n    //       this.dialogRef.close();\n    //       this.router.navigate([\"/authentication/signin\"]);\n    //       this.notificationAPI.alertWarning(\n    //         \"Password reset required before proceeding!\"\n    //       );\n    //     }\n    //   },\n    //   (err) => {\n    //     console.log(err);\n    //     this.dialogRef.close();\n    //     this.router.navigate([\"/authentication/signin\"]);\n    //     this.notificationAPI.alertWarning(err);\n    //   }\n    // );\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <!-- <img [src]='asset.img' alt=\"avatar\"> -->\n                <img src=\"assets/images/emtec.png\" alt=\"avatar\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <h3 class=\"mb-1 text-dark text-center\">Reset Password</h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"onClose()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"card-body my-3\">\n            <p class=\"text-dark\">\n                Please use this form to reset your password using the registered\n                username.\n            </p>\n            <br />\n            <form [formGroup]=\"Form\">\n                <div class=\"row\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Username</mat-label>\n                            <input class=\"text-dark\" matInput formControlName=\"username\" required />\n                            <mat-error *ngIf=\"\n                  Form.get('username').hasError('required') ||\n                  Form.get('username').touched\n                \">\n                                Please enter a valid username\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>New Password</mat-label>\n                            <input matInput formControlName=\"password\" [type]=\"hide1 ? 'password' : 'text'\" required />\n                            <button mat-icon-button matSuffix (click)=\"hide1 = !hide1\"\n                                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide1\">\n                                <mat-icon>{{ hide1 ? \"visibility_off\" : \"visibility\"\n                                    }}</mat-icon>\n                            </button>\n                            <mat-error *ngIf=\"\n                Form\n                  .get('password')\n                  .hasError('required')\n              \"> New password is required </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('password')\n                  .hasError('pattern')\n              \"> Password must contain at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special\n                                character. </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('password')\n                  .hasError('minLength')\n              \"> Please enter atleast 10 characters. </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('password')\n                  .hasError('maxLength')\n              \"> Characters must not exceed 25. </mat-error>\n                        </mat-form-field>\n\n\n                    </div>\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Confirm Password</mat-label>\n                            <input matInput formControlName=\"confirmpassword\" [type]=\"hide2 ? 'password' : 'text'\"\n                                required />\n                            <button mat-icon-button matSuffix (click)=\"hide2 = !hide2\"\n                                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide2\">\n                                <mat-icon>{{ hide2 ? \"visibility_off\" : \"visibility\"\n                                    }}</mat-icon>\n                            </button>\n                            <mat-error *ngIf=\"\n                Form\n                  .get('confirmpassword')\n                  .hasError('required')\n              \"> Confirm password is required </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('confirmpassword')\n                  .hasError('pattern')\n              \"> Password must contain at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special\n                                character. </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('confirmpassword')\n                  .hasError('minLength')\n              \"> Please enter atleast 10 characters. </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('confirmpassword')\n                  .hasError('maxLength')\n              \"> Characters must not exceed 25. </mat-error>\n                        </mat-form-field>\n\n\n                    </div>\n                    <div class=\"d-grid my-2\">\n                        <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\n                        class=\"auth-form-btn\" [disabled]=\"!Form.valid\" (click)=\"resetPassword()\">\n                            Reset Password\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- <br />\n  Form value = {{ Form.value | json }}\n  <br />\n  Form Status = {{ Form }} -->","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { NavigationStart, Router } from \"@angular/router\";\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexFill,\n  ApexGrid,\n  ApexLegend,\n  ApexNonAxisChartSeries,\n  ApexPlotOptions,\n  ApexResponsive,\n  ApexStroke,\n  ApexTooltip,\n  ApexXAxis,\n  ApexYAxis,\n  ChartComponent,\n} from \"ng-apexcharts\";\n\n\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { ResetPasswordComponent } from \"../components/reset-password/reset-password.component\";\nimport { element } from \"protractor\";\nimport { ItemCategoryService } from \"src/app/erp-inventory/data/services/item-category.service\";\n\n\nexport type chartOptions = {\n  series: ApexAxisChartSeries;\n  radialseries: ApexNonAxisChartSeries;\n  series2: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  tooltip: ApexTooltip;\n  grid: ApexGrid;\n  stroke: ApexStroke;\n  legend: ApexLegend;\n  colors: string[];\n  responsive: ApexResponsive[];\n  labels: string[];\n};\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.sass\"],\n})\nexport class DashboardComponent implements OnInit {\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public barChartOptions: Partial<chartOptions>;\n  public radialChartOptions: Partial<chartOptions>;\n  public gaugeChartOptions: Partial<chartOptions>;\n  public stackBarChart: Partial<chartOptions>;\n\n  passwordFlag: any;\n  isPageReloaded = false;\n  currentUser: any;\n\n\n  constructor(\n    private tokenCookieService: TokenCookieService,\n    private dialog: MatDialog,\n    private itemCatMan: ItemCategoryService,\n  )\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.passwordFlag = this.tokenCookieService.getUser().systemGenPassword;\n    this.currentUser = this.tokenCookieService.getUser().username;\n     \n\n    this.getPage();\n\n    // this.resetPassword();\n\n    this.chart1();\n    this.chart2();\n    this.gaugechart();\n    this.stackChart();\n\n  }\n  getPage() {\n    if (this.passwordFlag && this.currentUser!=='soaadmin') {\n      this.resetPassword();\n    } else if (!this.passwordFlag) {\n      //this.resetPassword();\n    }\n  }\n\n  reLoadPage() {\n    // Perform password reset logic here\n    location.reload();\n  }\n\n  resetPassword() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      test: \"username\",\n    };\n\n    const dialogRef = this.dialog.open(ResetPasswordComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {});\n  }\n\n  private chart1() {\n    this.barChartOptions = {\n      series: [\n        {\n          name: \"Work Hours\",\n          data: [6.3, 5.5, 4.1, 6.7, 2.2, 4.3],\n        },\n        {\n          name: \"Break Hours\",\n          data: [1.3, 2.3, 2.0, 0.8, 1.3, 2.7],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n        stackType: \"100%\",\n        foreColor: \"#9aa0ac\",\n      },\n      colors: [\"#674EC9\", \"#C1C1C1\"],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: \"35%\",\n        },\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: \"bottom\",\n              offsetX: -10,\n              offsetY: 0,\n            },\n          },\n        },\n      ],\n      xaxis: {\n        categories: [\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ],\n      },\n      fill: {\n        opacity: 1,\n      },\n      legend: {\n        position: \"bottom\",\n        offsetX: 0,\n        offsetY: 0,\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true,\n        },\n        x: {\n          show: true,\n        },\n      },\n    };\n  }\n  private chart2() {\n    this.radialChartOptions = {\n      radialseries: [44, 55, 67],\n      chart: {\n        height: 290,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              fontSize: \"22px\",\n            },\n            value: {\n              fontSize: \"16px\",\n            },\n            total: {\n              show: true,\n              label: \"Total\",\n              formatter: function (w) {\n                return \"52%\";\n              },\n            },\n          },\n        },\n      },\n      labels: [\"Project 1\", \"Project 2\", \"Project 3\"],\n    };\n  }\n  private gaugechart() {\n    this.gaugeChartOptions = {\n      series2: [72],\n      chart: {\n        height: 310,\n        type: \"radialBar\",\n        offsetY: -10,\n      },\n      plotOptions: {\n        radialBar: {\n          startAngle: -135,\n          endAngle: 135,\n          dataLabels: {\n            name: {\n              fontSize: \"22px\",\n              fontWeight: 600,\n              color: \"#6777EF\",\n              offsetY: 120,\n            },\n            value: {\n              offsetY: 76,\n              fontSize: \"22px\",\n              color: \"#9aa0ac\",\n              formatter: function (val) {\n                return val + \"%\";\n              },\n            },\n          },\n        },\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"dark\",\n          shadeIntensity: 0.15,\n          inverseColors: false,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 50, 65, 91],\n        },\n      },\n      stroke: {\n        dashArray: 4,\n      },\n      labels: [\"Closed Ticket\"],\n    };\n  }\n  private stackChart() {\n    this.stackBarChart = {\n      series: [\n        {\n          name: \"Project 1\",\n          data: [44, 55, 41, 67, 22, 43],\n        },\n        {\n          name: \"Project 2\",\n          data: [13, 23, 20, 8, 13, 27],\n        },\n        {\n          name: \"Project 3\",\n          data: [11, 17, 15, 15, 21, 14],\n        },\n        {\n          name: \"Project 4\",\n          data: [21, 7, 25, 13, 22, 8],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 300,\n        foreColor: \"#9aa0ac\",\n        stacked: true,\n        toolbar: {\n          show: false,\n        },\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: \"bottom\",\n              offsetX: -10,\n              offsetY: 0,\n            },\n          },\n        },\n      ],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: \"30%\",\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      grid: {\n        borderColor: \"#9aa0ac\",\n      },\n      xaxis: {\n        type: \"category\",\n        categories: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      },\n      legend: {\n        show: false,\n      },\n      fill: {\n        opacity: 1,\n        colors: [\"#F0457D\", \"#704DAD\", \"#FFC107\", \"#a5a5a5\"],\n      },\n    };\n  }\n\n\n\n  \n\n\n     \n      \n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Dashboard'\" [items]=\"['Home']\" [active_item]=\"'Dashboard'\">\n      </app-breadcrumb>\n    </div>\n    <!-- Widgets -->\n   <app-gen-widgets></app-gen-widgets>\n    <!-- #END# Widgets -->\n\n\n    \n\n    <div class=\"row\">\n      <app-analytics></app-analytics>\n    </div>\n\n  </div>\n</section>\n  \n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemCategoryService {\n\n  constructor(private http: HttpClient) { }\n\n  getItemCategories(): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/all`;\n    return this.http.get<any[]>(ItemCatUrl);\n  }\n\n  getItemCategoriesId(id: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/ItemCategory/getById/${id}`);\n  }\n\n  addItemCategories(data: any): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/create`;\n    return this.http.post<any>(ItemCatUrl, data);\n  }\n\n  updateItemCategories(TaxesDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/update/`;\n    return this.http.put<any>(updateBillUrl, TaxesDetails)\n  }\n\n\n  deleteItemCategoriesPemanently(params: any): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/delete`;\n    return this.http.delete<any>(ItemCatUrl, {params});\n  }\n\n\n  uploadBatchItemCats(excelUpload: any[]): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/uploadBulk`;\n    return this.http.post<any>(ItemCatUrl, excelUpload);\n  }\n\n  // ********************************************************************************************************************\n\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierCategoriesService {\n\n  constructor(private http: HttpClient) { }\n  \n  getCategories(): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/view`;\n    return this.http.get<any[]>(SupplierCatUrl);\n  }\n  getCategoriesById(id: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/supplierCategory/view_byId/${id}`);\n  }\n\n\n  addCategories(data: any): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/add`;\n    return this.http.post<any>(SupplierCatUrl, data);\n  }\n\n  updateCategories(CategoryDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/update/`;\n    return this.http.put<any>(updateBillUrl, CategoryDetails)\n  }\n\n\n  deleteCurrencyPemanently(id: any): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/delete/${id}`;\n    return this.http.delete<any>(SupplierCatUrl, id);\n  }\n\n\n    // ********************************************************************************************************************\n\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}