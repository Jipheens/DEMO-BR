{"version":3,"file":"src_app_erp-procurement_modules_recievefrompurchaseorder_recievefrompurchaseorder_module_ts.js","mappings":";;;;;;;;;;;;;;;AAA+D;;;AAW/D,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAKtB,MAAM,mBAAmB;IAM9B,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN1B,YAAO,GAAG,IAAI,6DAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEpE,uBAAkB,GAAkC,KAAK,CAAC;QAC1D,qBAAgB,GAAgC,KAAK,CAAC;IAKnD,CAAC;IAEG,QAAQ;QACb,yCAAyC;QACzC,MAAM,IAAI,GAAG,aAAa,CAAC;QAC3B,uEAAuE;QACvE,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/C,kEAAkE;QAClE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAC5B,2CAA2C;YAC3C,mDAAmD;YACnD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBAC/B,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC9B;YACD,uEAAuE;YACvE,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC9B,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;aACrD;SACF;QACD,2CAA2C;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,QAAQ,CAAC,IAAS;QACvB,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC;IAEM,OAAO;QACZ,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IACM,QAAQ;QACb,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO;IAC/B,CAAC;;sFAhDU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;;;;;;;;;;;;;;;;;;;ACf2C;AAExB;AACyB;;;AAKzD,MAAM,kBAAkB;IAC7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,wDAAwD;IAExD,eAAe;QACb,MAAM,gBAAgB,GAAG,GAAG,6FAA8B,kCAAkC,CAAC;QAC7F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,gBAAgB,CAAC,CAAC;IAChD,CAAC;IAED,uBAAuB,CAAC,MAAW;QACjC,MAAM,gBAAgB,GAAG,GAAG,6FAA8B,yDAAyD,CAAC;QACpH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,gBAAgB,EAAE;YAC5C,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,MAAW;QAC7B,MAAM,gBAAgB,GAAG,GAAG,6FAA8B,wCAAwC,CAAC;QAEnG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,gBAAgB,EAAE;YAC5C,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,MAAW;QAC/B,MAAM,gBAAgB,GAAG,GAAG,6FAA8B,0CAA0C,CAAC;QAErG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,gBAAgB,EAAE;YAC5C,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,IAAS;QACvB,MAAM,gBAAgB,GAAG,GAAG,6FAA8B,iCAAiC,CAAC;QAC5F,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,gBAAgB,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,kBAAkB,CAAC,mBAAwB;QACzC,MAAM,aAAa,GAAG,GAAG,6FAA8B,oCAAoC,CAAC;QAC5F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,aAAa,EAAE,mBAAmB,CAAC,CAAC;IAChE,CAAC;IAED,6BAA6B,CAAC,MAAW;QACvC,MAAM,gBAAgB,GAAG,GAAG,6FAA8B,oCAAoC,CAAC;QAC/F,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,gBAAgB,EAAE;YAC/C,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,MAAW;QAC7B,MAAM,OAAO,GAAG,GAAG,6FAA8B,qDAAqD,CAAC;QACvG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,OAAO,EACP,EAAE,EACF;YACE,MAAM,EAAE,MAAM;SACf,CACF,CAAC;IACJ,CAAC;IAED,uHAAuH;IAEvH,iBAAiB,CAAC,MAAW;QAC3B,MAAM,gBAAgB,GAAG,GAAG,6FAA8B,qCAAqC,CAAC;QAChG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,gBAAgB,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,qBAAqB,CAAC,MAAW;QAC/B,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;QAC5C,IAAI,cAAc,GAAQ;YACxB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;YAChB,YAAY,EAAE,MAAM;YACpB,eAAe,EAAE,KAAK;SACvB,CAAC;QACF,IAAI,OAAO,GAAG,GAAG,6FAA8B,yCAAyC,CAAC;QACzF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,IAAI,CAChD,yCAAG,CAAC,CAAC,QAAkB,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;YACjD,OAAO;gBACL,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;aACxD,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD,4HAA4H;IAE5H,yBAAyB,CAAC,IAAS;QACjC,MAAM,UAAU,GAAG,GAAG,6FAA8B,0CAA0C,CAAC;QAC/F,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,UAAU,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IACD,6BAA6B,CAAC,MAAW;QACvC,MAAM,UAAU,GAAG,GAAG,6FAA8B,qDAAqD,CAAC;QAE1G,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,UAAU,EAAE;YACtC,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB,CAAC,MAAW;QAClC,MAAM,UAAU,GAAG,GAAG,6FAA8B,0DAA0D,CAAC;QAC/G,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,UAAU,EAAE;YACtC,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,8BAA8B,CAAC,MAAW;QACxC,MAAM,UAAU,GAAG,GAAG,6FAA8B,oCAAoC,CAAC;QACzF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,UAAU,EAAE;YACzC,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,+BAA+B,CAAC,IAAS,EAAE,MAAW;QACpD,MAAM,UAAU,GAAG,GAAG,6FAA8B,0DAA0D,CAAC;QAE/G,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,4DAA4D;IAC5D,qCAAqC;IACrC,iDAAiD;IACjD,gCAAgC;IAChC,sBAAsB;IACtB,wBAAwB;IACxB,4BAA4B;IAC5B,8BAA8B;IAC9B,OAAO;IACP,oHAAoH;IACpH,wDAAwD;IACxD,oCAAoC;IACpC,2DAA2D;IAC3D,iBAAiB;IACjB,8BAA8B;IAC9B,mEAAmE;IACnE,WAAW;IACX,SAAS;IACT,OAAO;IACP,IAAI;IAGJ,+BAA+B,CAAC,MAAW;QACzC,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;QAC5C,IAAI,cAAc,GAAQ;YACxB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;YAChB,YAAY,EAAE,MAAM;YACpB,eAAe,EAAE,KAAK;SACvB,CAAC;QACF,IAAI,OAAO,GAAG,GAAG,6FAA8B,sEAAsE,CAAC;QACtH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,IAAI,CAChD,yCAAG,CAAC,CAAC,QAAkB,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAC;YAClD,OAAO;gBACL,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;aACxD,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACD,oCAAoC,CAAC,MAAM;QACzC,MAAM,aAAa,GAAG,GAAG,6FAA8B,0DAA0D,CAAC;QAClH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,aAAa,EAAE,EAAE,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IACzD,CAAC;;oFAvKU,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNsC;AACR;AAEkB;AAET;AACV;AACY;AAEL;AAGzB;;;;;;;;;;;;;;;;;;;;;;;;ICCrB,0EAA2D;IACzD,kFACmB;IACvB,4DAAM;;;;IA+BQ,qEAAyC;IAED,ySAAS,4BAAoB,QAAQ,CAAC,IAAC;IAEzE,+EAA4B;IAAA,gEAAK;IAAA,4DAAW;;;IAoE9C,iFAA2E;IAAA,uDAE3E;IAAA,4DAAa;;;IAFqC,qFAAwB;IAAC,0DAE3E;IAF2E,6FAE3E;;;IAGF,4EAA2D;IACzD,iFACF;IAAA,4DAAY;;;IAgCV,iFACsC;IAAA,uDAEtC;IAAA,4DAAa;;;IAFX,gGAAmC;IAAC,0DAEtC;IAFsC,wGAEtC;;;IAGF,4EAAsE;IACpE,4FACF;IAAA,4DAAY;;;;IAoClB,sFAAqE;IACrD,6UAAmB,sBAAc,GAAG,IAAI,IAAC,sQAG3C,qBAAa,IAH8B;IAIvD,4DAAe;;;IALkB,0FAAiC;IAEhE,0DAAmD;IAAnD,0HAAmD;;;;IAKvD,+EAAkE;IAClD,yKAAS,wBAAwB,IAAC,yUAAoB,iCAAqB,GAAG,IAAI,IAAhD,+PAEpC,qBAAa,IAFuB;IAGhD,4DAAe;;;;IAJe,0FAAiC;IAE7D,0DAAqC;IAArC,0GAAqC;;;IAQzC,sFAAmG;IAAA,6DAAE;IAAA,4DAAkB;;;IACvH,+EAAgF;IAAA,uDAAY;IAAA,4DAAW;;;IAAvB,0DAAY;IAAZ,2EAAY;;;IAI5F,sFAAmG;IAAA,iEAAM;IAAA,4DAAkB;;;IAC3H,+EAAgF;IAAA,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,+EAAgB;;;IAIhG,sFAAoG;IAAA,qEAAU;IAAA,4DAAkB;;;IAChI,+EAAiF;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,mFAAoB;;;IAIrG,sFAAmG;IAAA,4EAAiB;IAAA,4DAAkB;;;IACtI,+EAAgF;IAAA,uDAA2B;IAAA,4DAAW;;;IAAtC,0DAA2B;IAA3B,0FAA2B;;;IAI3G,sFAAmG;IAAA,2EAAgB;IAAA,4DAAkB;;;IACrI,+EAAgF;IAAA,uDAA0B;IAAA,4DAAW;;;IAArC,0DAA0B;IAA1B,yFAA0B;;;IAI1G,sFAAmG;IAAA,uEAAY;IAAA,4DAAkB;;;IACjI,+EAAgF;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,qFAAsB;;;IAItG,sFAAmG;IAAA,wEAAa;IAAA,4DAAkB;;;IAClI,+EAAgF;IAAA,uDAAuB;IAAA,4DAAW;;;IAAlC,0DAAuB;IAAvB,sFAAuB;;;IA6BvG,sFAAmG;IAAA,iEAAM;IAAA,4DAAkB;;;IAIvH,8EAAsF;IACpF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,gGAEjC;;;IACA,8EAAuF;IACrF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,gGAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,gGAExC;;;IAdJ,+EAAgF;IAC9E,4EAAsC;IAEpC,yIAGS;IACT,yIAGS;IACT,yIAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAAuB;IAAvB,oFAAuB;IAE1B,0DAAwB;IAAxB,oFAAwB;IAIxB,0DAAwB;IAAxB,oFAAwB;;;IAarC,sFAAmG;IAAA,0EAAe;IAAA,4DAAkB;;;IAGhI,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,2GAErC;;;IAEA,8EAAoF;IAClF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,2GAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,2GAExC;;;IAdJ,+EAAgF;IAC9E,4EAAiD;IAC/C,0IAGS;IAET,0IAGS;IACT,yIAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAAkC;IAAlC,+FAAkC;IACrC,0DAAsB;IAAtB,kFAAsB;IAKtB,0DAAuB;IAAvB,mFAAuB;;;IAepC,sFAAmG;IAAA,sEAAW;IAAA,4DAAkB;;;IAChI,+EAAgF;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,oFAAqB;;;IAIrG,sFAAmG;IAAA,sEAAW;IAAA,4DAAkB;;;IAChI,+EAAgF;IAAA,uDAAqC;;IAAA,4DAAW;;;IAAhD,0DAAqC;IAArC,8JAAqC;;;IAIrH,sFAAmG;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/H,+EAAgF;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,mFAAoB;;;IAIpG,sFAAmG;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/H,+EAAgF;IAAA,uDAAoC;;IAAA,4DAAW;;;IAA/C,0DAAoC;IAApC,6JAAoC;;;IAIpH,uFACmD;IAAA,uEAAY;IAAA,4DAAkB;;;;IACjF,gFACqC;IAAnC,sKAAS,wBAAwB,IAAC;IAClC,8EAAoH;IAA3B,2WAAS,4BAAgB,IAAC;IACjH,oEAA+B;IAAA,6EACjC;IAAA,4DAAS;;;IAFD,0DAA4B;IAA5B,6FAA4B;;;IAUtC,uFACoB;IAAA,iEAAM;IAAA,4DAAkB;;;;IAC5C,gFAAqG;IAC5D,oKAAS,wBAAwB,IAAC,mTAAU,mCAAuB,aAAa,CAAC,IAA/C;IAEvE,oFAAgF;IAClF,4DAAS;IAET,8EACyB;IADe,oKAAS,wBAAwB,IAAC,mTAAU,mCAAuB,MAAM,CAAC,IAAxC;IAExE,oFAA8E;IAChF,4DAAS;;IAN4B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;IAKA,0DAAuB;IAAvB,uEAAuB;IAAtC,uEAAc;;;IASvC,4EAAqE;;;;IACrE,+EACuC;IADkB,2WAAS,yBAAa,IAAC;IAEhF,4DAAU;;IADR,8EAA0B;;;IAE5B,gFAAoC;IAClC,uDAA+C;IAAA,4DAAW;;;IAA1D,0DAA+C;IAA/C,8HAA+C;;;IAEnD,2EAA2C;IACzC,uFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;;AD7W9D,MAAM,yBAAyB;IA2CpC,YACU,EAAe,EACf,MAAc,EACd,QAAyB,EACzB,kBAAsC;QAHtC,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QA9ChD,qBAAgB,GAAa;YAC3B,QAAQ;YACR,IAAI;YACJ,QAAQ;YACR,YAAY;YACZ,mBAAmB;YACnB,kBAAkB;YAClB,cAAc;YACd,eAAe;YACf,aAAa;YACb,aAAa;YACb,cAAc;YACd,eAAe;YACf,iBAAiB;YACjB,QAAQ;YACR,mBAAmB;YACnB,aAAa;YACb,aAAa;YACb,YAAY;YACZ,YAAY;YACZ,aAAa;YACb,QAAQ;SACT,CAAC;QAMF,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAI9C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,QAAQ,CAAC;QACtB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QA8BjC,gBAAW,GAAU,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAElE,2BAAsB,GAAU,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;QAE1E,mBAAc,GAAW,UAAU,CAAC;QACpC,8BAAyB,GAAW,SAAS,CAAC;QA6H9C,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;IAxJhC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,UAAU,EAAE,+DAAmB,CAAC;YACzC,iBAAiB,EAAE,CAAC,SAAS,EAAE,+DAAmB,CAAC;SACpD,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAOD,uBAAuB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,kCAAkC;QAChC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,4BAA4B,CAAC,iBAAsB;QACjD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,iBAAiB,EAAE,iBAAiB;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;QACnE,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE;aAC5B,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aACrC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAE/D,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,CAAC,kBAAkB;aACpB,wBAAwB,CAAC,MAAM,CAAC;aAChC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,sCAAsC,CACvC,CAAC;iBACH;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC;SACpB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,gGAAgG;IAEhG,iBAAiB,CAAC,IAAS,EAAE,MAAW;QACtC,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,IAAI,KAAK,GAAG,8DAA8D,CAAC;QAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,MAAM;gBACjB,MAAM,EAAE,MAAM;aACf;SACF,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,mBAAmB;SACvC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAE9C,IAAI,CAAC,kBAAkB;qBACpB,8BAA8B,CAAC,MAAM,CAAC;qBACtC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,2BAA2B,CAC5B,CAAC;oBACJ,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAAQ,GAAG,CAAC,QAAQ,GAAG,CACrF,EAAE,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB,KAAK,CAAC;IAEtB,mBAAmB,CAAC,MAAW;QAC7B,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,uHAAuH;YAC7H,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,UAAU;SAC9B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;oBACtD,OAAO;wBACL,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,MAAM,EAAE,MAAM;qBACf,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;gBAEpC,IAAI,MAAM,GAAG,EAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,qBAAqB,EAAC;gBAGrE,IAAI,CAAC,kBAAkB;qBACpB,+BAA+B,CAAC,aAAa,EAAE,MAAM,CAAC;qBACtD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EACnB,GAAG,CAAC,OAAO,CACX,CAAC;4BACF,uDAAS,CACP,SAAS,EACT,uCAAuC,EACvC,SAAS,CACV,CAAC;4BAEF,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;yBACpD;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;yBACH;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oHAAoH;IAEpH,WAAW,CAAC,GAAQ;QAClB,sCAAsC;QACtC,uDAAS,CAAC;YACR,KAAK,EAAE,mBAAmB;YAC1B,IAAI,EAAE;;;OAGL;YACD,UAAU,EAAE,GAAG,EAAE;gBACf,MAAM,QAAQ,GAAsB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAE,CAAC,KAAK,CAAC;gBAC/E,MAAM,MAAM,GAAsB,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAE,CAAC,KAAK,CAAC;gBAC3E,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;YAC9B,CAAC;SACF,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;YACtB,2BAA2B;YAC3B,4BAA4B;YAC5B,+CAA+C;YAE/C,qCAAqC;YACrC,oCAAoC;YACpC,6CAA6C;YAC7C,iCAAiC;YACjC,8BAA8B;YAE9B,kDAAkD;YAClD,4BAA4B;YAC5B,yCAAyC;YACzC,sCAAsC;YACtC,mBAAmB;YACnB,mCAAmC;YACnC,UAAU;YACV,WAAW;YACX,6BAA6B;YAC7B,0EAA0E;YAC1E,IAAI;QACN,CAAC,CAAC,CAAC;IACL,CAAC;;kGAjVU,yBAAyB;uHAAzB,yBAAyB;kEA0BzB,sEAAY;kEACZ,4DAAO;;;;;;;QC9CpB,6EAAyB;QAInB,+EACiB;QACnB,4DAAM;QAEN,6EAAmC;QAEnC,yEAAiB;QAGX,qHAGI;QACJ,yEAAkB;QAOA,yEAAa;QAAA,4DAAK;QAExB,0EAA4B;QACsC,kEAAM;QAAA,4DAAI;QAC1E,iFACiE;QADtB,uJAAS,uBAAmB,IAAC;QAAxE,4DACiE;QAEnE,sEAAI;QAEqC,kJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAIhD,sEAAI;QAEqC,kJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,mEAAO;QAAA,4DAAW;QAMpD,sHAOK;QAiBP,4DAAK;QAGP,2EAAmB;QAIoC,6RAEzE,gBAAqB,MAAM,cAClB,oBAAoB,SACP,QAAQ,GACA,IAAD;QALH,4DAKM;QAGV,sEAAI;QAE8C,6RAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAG1F,sEAAI;QAE+C,6RAAS,gBAAqB,MAAM,CAAC,IAAC;QAArF,4DAAwF;QAG5F,sEAAI;QAE8C,6RAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAQlG,2EAAsC;QAM1B,2EAAe;QAAA,4DAAK;QAE1B,2EAAmB;QAEJ,kEAAM;QAAA,4DAAY;QAE7B,kFAAmF;QAA9C,0KAAmB,6BAAyB,IAAC;QAChF,sIAEa;QACf,4DAAa;QAEb,oIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAIe,kJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,wEAAY;QAAA,4DAAW;QACjC,sEACF;QAAA,4DAAS;QAET,8EACsE;QAAxC,kJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,sEACF;QAAA,4DAAS;QAOb,2EAAmB;QACb,8EAAkB;QAAA,4DAAK;QAE7B,2EAAmB;QAEJ,6EAAiB;QAAA,4DAAY;QAExC,kFAC2D;QAAzD,0KAAmB,wCAAoC,IAAC;QACxD,sIAGa;QACf,4DAAa;QAEb,oIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAKc,kJAAS,iCAA6B,SAAS,CAAC,IAAC;QAC5E,4EAAU;QAAA,mEAAO;QAAA,4DAAW;QAC5B,qEACF;QAAA,4DAAS;QAGT,8EAC+E;QAAjD,kJAAS,iCAA6B,QAAQ,CAAC,IAAC;QAC5E,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC7B,oEACF;QAAA,4DAAS;QAenB,qFAC+B;QAC7B,6EAAoC;QAClC,gJAMkB;QAClB,kIAKW;QACb,qEAAe;QAGf,6EAAgC;QAC9B,gJAAuH;QACvH,oIAAuG;QACzG,qEAAe;QAEf,8EAAoC;QAClC,kJAA2H;QAC3H,oIAA2G;QAC7G,qEAAe;QAEf,8EAAwC;QACtC,kJAAgI;QAChI,oIAAgH;QAClH,qEAAe;QAEf,8EAA+C;QAC7C,kJAAsI;QACtI,oIAAsH;QACxH,qEAAe;QAEf,8EAA8C;QAC5C,kJAAqI;QACrI,oIAAqH;QACvH,qEAAe;QAEf,8EAA0C;QACxC,kJAAiI;QACjI,oIAAiH;QACnH,qEAAe;QAEf,8EAA2C;QACzC,kJAAkI;QAClI,oIAAkH;QACpH,qEAAe;QA2Bf,8EAAoC;QAClC,kJAA2H;QAC3H,oIAgBW;QACb,qEAAe;QAEf,8EAA+C;QAC7C,kJAAoI;QACpI,oIAgBW;QACb,qEAAe;QAIf,8EAAyC;QACvC,kJAAgI;QAChI,oIAAgH;QAClH,qEAAe;QAEf,8EAAyC;QACvC,kJAAgI;QAChI,oIAAgI;QAClI,qEAAe;QAEf,8EAAwC;QACtC,kJAA+H;QAC/H,oIAA+G;QACjH,qEAAe;QAEf,8EAAwC;QACtC,kJAA+H;QAC/H,oIAA+H;QACjI,qEAAe;QAEf,8EAAyC;QACvC,kJACiF;QACjF,oIAKW;QACb,qEAAe;QAKf,8EAAoC;QAClC,kJAC4C;QAC5C,oIAeW;QACb,qEAAe;QACf,gJAAqE;QACrE,kIAEU;QACV,oIAC4D;QAC9D,4DAAY;QACZ,0HAGM;QACN,iFACoD;QACtD,4DAAM;;QAjYI,0DAA6B;QAA7B,sFAA6B;QASlB,0DAAkC;QAAlC,sGAAkC;QAkCxC,2DAAkC;QAAlC,6FAAkC;QA6DvC,2DAAkB;QAAlB,+EAAkB;QAWoB,2DAAc;QAAd,oFAAc;QAKtC,0DAA6C;QAA7C,6GAA6C;QAQ/B,0DAA8C;QAA9C,sGAA8C;QAM9C,0DAA8C;QAA9C,sGAA8C;QAoBzB,2DAAyB;QAAzB,+FAAyB;QAM5D,0DAAwD;QAAxD,wHAAwD;QAS1C,0DAAwD;QAAxD,gHAAwD;QAOxD,0DAAuD;QAAvD,+GAAuD;QAmBxD,0DAAyB;QAAzB,sFAAyB;QAiLzC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAMnD,0DAAe;QAAf,+EAAe;QAIN,0DAAe;QAAf,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnYc;AACR;AAEkB;AAET;AACV;AACY;AAEL;AAGzB;;;;;;;;;;;;;;;;;;;;;;;;ICCrB,0EAA2D;IACzD,kFACmB;IACvB,4DAAM;;;;IA+BQ,qEAAyC;IAED,ySAAS,4BAAoB,QAAQ,CAAC,IAAC;IAEzE,+EAA4B;IAAA,gEAAK;IAAA,4DAAW;;;IAoE9C,iFAA2E;IAAA,uDAE3E;IAAA,4DAAa;;;IAFqC,qFAAwB;IAAC,0DAE3E;IAF2E,6FAE3E;;;IAGF,4EAA2D;IACzD,iFACF;IAAA,4DAAY;;;IAgCV,iFACqC;IAAA,uDAErC;IAAA,4DAAa;;;IAFX,+FAAkC;IAAC,0DAErC;IAFqC,uGAErC;;;IAGF,4EAAqE;IACnE,2FACF;IAAA,4DAAY;;;;IAoClB,sFAAqE;IACrD,6UAAmB,sBAAc,GAAG,IAAI,IAAC,sQAG3C,qBAAa,IAH8B;IAIvD,4DAAe;;;IALkB,0FAAiC;IAEhE,0DAAmD;IAAnD,0HAAmD;;;;IAKvD,+EAAkE;IAClD,yKAAS,wBAAwB,IAAC,yUAAoB,iCAAqB,GAAG,IAAI,IAAhD,+PAEpC,qBAAa,IAFuB;IAGhD,4DAAe;;;;IAJe,0FAAiC;IAE7D,0DAAqC;IAArC,0GAAqC;;;IAQzC,sFAAmG;IACjG,8DAAE;IAAA,4DAAkB;;;IACtB,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,2EAC5E;;;IAIJ,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAC1B,+EAAgF;IAAA,uDAChF;IAAA,4DAAW;;;IADqE,0DAChF;IADgF,yFAChF;;;IAIA,sFACmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/E,+EAAiF;IAAA,uDAC7E;IAAA,4DAAW;;;IADkE,0DAC7E;IAD6E,mFAC7E;;;IAIJ,sFAAmG;IACjG,uEAAW;IAAA,4DAAkB;;;IAC/B,+EAAgF;IAAA,uDACtD;IAAA,4DAAW;;;IAD2C,0DACtD;IADsD,0FACtD;;;IAI1B,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDACvD;IAAA,4DAAW;;;IAD4C,0DACvD;IADuD,yFACvD;;;IAIzB,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAC1B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,qFAC5E;;;IAIJ,sFAAmG;IACjG,mEAAO;IAAA,4DAAkB;;;IAC3B,+EAAgF;IAAA,uDAC1D;IAAA,4DAAW;;;IAD+C,0DAC1D;IAD0D,sFAC1D;;;IA6BtB,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAItB,8EAAsF;IACpF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,gGAEjC;;;IACA,8EAAuF;IACrF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,gGAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,gGAExC;;;IAdJ,+EAAgF;IAC9E,4EAAsC;IAEpC,yIAGS;IACT,0IAGS;IACT,0IAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAAuB;IAAvB,oFAAuB;IAE1B,0DAAwB;IAAxB,oFAAwB;IAIxB,0DAAwB;IAAxB,oFAAwB;;;IAarC,sFAAmG;IACjG,4EAAgB;IAAA,4DAAkB;;;IAGhC,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,oGAErC;;;IAEA,8EAAoF;IAClF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,oGAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,oGAExC;;;IAdJ,+EAAgF;IAC9E,4EAA0C;IACxC,0IAGS;IAET,0IAGS;IACT,0IAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAA2B;IAA3B,wFAA2B;IAC9B,0DAAsB;IAAtB,kFAAsB;IAKtB,0DAAuB;IAAvB,mFAAuB;;;IAepC,sFAAmG;IACjG,uEAAW;IAAA,4DAAkB;;;IAC/B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,oFAC5E;;;IAIJ,uFACmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAG3E,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,2GAErC;;;IAEA,8EAAoF;IAClF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,2GAEjC;;;IAVJ,gFAAiF;IAC/E,4EAAiD;IAC/C,0IAGS;IAET,yIAGS;IACX,qEAAe;IACjB,4DAAW;;;IAXK,0DAAkC;IAAlC,+FAAkC;IACrC,0DAAuB;IAAvB,mFAAuB;IAKvB,0DAAsB;IAAtB,kFAAsB;;;IASnC,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,mFAC5E;;;IAIJ,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDAC9D;;IAAA,4DAAW;;;IADmD,0DAC9D;IAD8D,6JAC9D;;;IAelB,uFACmD;IAAA,uEAAY;IAAA,4DAAkB;;;;IACjF,gFACqC;IAAnC,sKAAS,wBAAwB,IAAC;IAClC,8EACmC;IAAjC,2WAAS,kCAAsB,IAAC;IAChC,oEAA+B;IAAA,6EACjC;IAAA,4DAAS;;;IAHD,0DAA4B;IAA5B,6FAA4B;;;IAUtC,uFAAyF;IAAA,mEACzF;IAAA,4DAAkB;;;;IAEhB,8EACyE;IADX,6KAAS,wBAAwB,IAAC,0VACrF,mCAAuB,aAAa,CAAC,IADgD;IAE9F,oFAAgF;IAClF,4DAAS;;IAD4B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;;;;IAHtC,gFAAqG;IACnG,0IAGS;IAET,8EACkE;IAD1B,oKAAS,wBAAwB,IAAC,oTAC/D,mCAAuB,MAAM,CAAC,IADiC;IAExE,oFAA8E;IAChF,4DAAS;;;IARA,0DAAoB;IAApB,wFAAoB;IAOO,0DAAuB;IAAvB,uEAAuB;IAAtC,uEAAc;;;IASvC,4EAAqE;;;;IACrE,+EACuC;IADkB,8WAAS,qCAAuB,MAAM,CAAC,IAAC;IAEjG,4DAAU;;IADR,8EAA0B;;;IAE5B,gFAAoC;IAClC,uDAA+C;IAAA,4DAAW;;;IAA1D,0DAA+C;IAA/C,8HAA+C;;;IAEnD,2EAA2C;IACzC,uFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;;AD3Z9D,MAAM,yBAAyB;IA4CpC,YACU,EAAe,EACf,MAAc,EACd,QAAyB,EACzB,kBAAsC;QAHtC,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QA/ChD,qBAAgB,GAAa;YAC3B,QAAQ;YACR,IAAI;YACJ,QAAQ;YACR,YAAY;YACZ,mBAAmB;YACnB,kBAAkB;YAClB,cAAc;YACd,eAAe;YACf,aAAa;YACb,aAAa;YACb,cAAc;YACd,eAAe;YACf,iBAAiB;YACjB,QAAQ;YACR,mBAAmB;YACnB,kBAAkB;YAClB,aAAa;YAEb,YAAY;YACZ,YAAY;YACZ,aAAa;YACb,QAAQ;SACT,CAAC;QAMF,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAI9C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,QAAQ,CAAC;QACtB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QA8BjC,gBAAW,GAAU,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAElE,0BAAqB,GAAU,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;QAEzE,mBAAc,GAAW,UAAU,CAAC;QACpC,6BAAwB,GAAW,SAAS,CAAC;QAW7C,mBAAc,GAAY,KAAK,CAAC;QA8DhC,qBAAgB,GAAW,SAAS,CAAC;QAyGrC,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;IA7MjC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,UAAU,EAAE,+DAAmB,CAAC;YACzC,gBAAgB,EAAE,CAAC,SAAS,EAAE,+DAAmB,CAAC;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAOD,uBAAuB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iCAAiC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAE1D,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,2BAA2B,CAAC,gBAAqB;QAC/C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,gBAAgB,EAAE,gBAAgB;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,kBAAkB,CAAC,gBAAgB;QACjC,IAAI,gBAAgB,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAErD,IAAI,CAAC,gBAAgB,GAAG;gBACtB,QAAQ;gBACR,IAAI;gBACJ,QAAQ;gBACR,YAAY;gBACZ,mBAAmB;gBACnB,kBAAkB;gBAClB,cAAc;gBACd,eAAe;gBACf,QAAQ;gBACR,mBAAmB;gBACnB,kBAAkB;gBAClB,aAAa;gBACb,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,QAAQ;aACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAErD,IAAI,CAAC,gBAAgB,GAAG;gBAEtB,IAAI;gBACJ,QAAQ;gBACR,YAAY;gBACZ,mBAAmB;gBACnB,kBAAkB;gBAClB,cAAc;gBACd,eAAe;gBAEf,QAAQ;gBACR,mBAAmB;gBACnB,kBAAkB;gBAClB,aAAa;gBAEb,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,QAAQ;aACT,CAAC;SACH;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;QACjE,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE;aAC5B,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aACrC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACnD,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEvD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,CAAC,kBAAkB;aACpB,wBAAwB,CAAC,MAAM,CAAC;aAChC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;iBACH;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,gGAAgG;IAEhG,iBAAiB,CAAC,IAAS,EAAE,MAAW;QACtC,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,IAAI,KAAK,GAAG,8DAA8D,CAAC;QAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,MAAM;gBACjB,MAAM,EAAE,MAAM;aACf;SACF,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,mBAAmB;SACvC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAE9C,IAAI,CAAC,kBAAkB;qBACpB,8BAA8B,CAAC,MAAM,CAAC;qBACtC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAC9D,GAAG,CAAC,QAAQ,GAAG,CACjB,EAAE,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB,KAAI,CAAC;IAErB,mBAAmB,CAAC,MAAW;QAC7B,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,kHAAkH;YACxH,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,UAAU;SAC9B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;oBACtD,OAAO;wBACL,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,MAAM,EAAE,MAAM;qBACf,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;gBAEpC,IAAI,MAAM,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAEnD,IAAI,CAAC,kBAAkB;qBACpB,+BAA+B,CAAC,aAAa,EAAE,MAAM,CAAC;qBACtD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;4BACF,uDAAS,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;4BAE7C,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;yBACpD;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;yBACH;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oHAAoH;IAEpH,0BAA0B;IAC1B,2CAA2C;IAC3C,gBAAgB;IAChB,kCAAkC;IAClC,cAAc;IACd,sFAAsF;IACtF,kFAAkF;IAClF,SAAS;IACT,0BAA0B;IAC1B,wFAAwF;IACxF,oFAAoF;IACpF,qCAAqC;IACrC,QAAQ;IACR,+BAA+B;IAC/B,kCAAkC;IAClC,gCAAgC;IAChC,mDAAmD;IAEnD,wCAAwC;IACxC,+CAA+C;IAC/C,mCAAmC;IACnC,+BAA+B;IAC/B,gCAAgC;IAEhC,+CAA+C;IAE/C,kCAAkC;IAClC,6CAA6C;IAC7C,0CAA0C;IAC1C,uBAAuB;IACvB,6BAA6B;IAC7B,yCAAyC;IACzC,8DAA8D;IAE9D,oDAAoD;IACpD,gCAAgC;IAEhC,mDAAmD;IACnD,4CAA4C;IAC5C,wDAAwD;IACxD,iDAAiD;IACjD,4BAA4B;IAC5B,qDAAqD;IACrD,mEAAmE;IACnE,yBAAyB;IACzB,+CAA+C;IAC/C,0BAA0B;IAE1B,4CAA4C;IAE5C,8CAA8C;IAC9C,oCAAoC;IACpC,4BAA4B;IAC5B,iBAAiB;IACjB,+CAA+C;IAC/C,0BAA0B;IAC1B,mFAAmF;IACnF,mBAAmB;IACnB,eAAe;IACf,8BAA8B;IAC9B,8CAA8C;IAC9C,mCAAmC;IACnC,4BAA4B;IAC5B,iBAAiB;IACjB,4CAA4C;IAC5C,eAAe;IACf,8BAA8B;IAC9B,4CAA4C;IAC5C,eAAe;IACf,cAAc;IACd,wBAAwB;IACxB,eAAe;IACf,iCAAiC;IACjC,8EAA8E;IAC9E,QAAQ;IACR,QAAQ;IACR,IAAI;IAKJ,iBAAiB,CAAC,GAAQ;QACxB,sCAAsC;QAEtC,uDAAS,CAAC;YACR,KAAK,EAAE,8BAA8B;YACrC,IAAI,EAAE,4DAA4D;YAClE,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;YACtB,2BAA2B;YAC3B,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE;qBAC5B,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,YAAY,CAAC;qBACrC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC;qBAC3B,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;gBAEzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;gBAC5C,IAAI,CAAC,eAAe,GAAG,IAAI;gBACrB,IAAI,CAAC,kBAAkB;qBACpB,+BAA+B,CAAC,MAAM,CAAC;qBACvC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAE/C,sBAAsB;wBACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAEjB,mBAAmB;wBACnB,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAC7B,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;wBACzC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;wBACb,CAAC,CAAC,QAAQ,GAAG,qBAAqB,GAAG,CAAC,OAAO,MAAM,CAAC;wBACpD,CAAC,CAAC,KAAK,EAAE,CAAC;wBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;wBAChC,CAAC,CAAC,MAAM,EAAE,CAAC;wBAEX,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;wBAE7B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;wBACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC/B,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC/B,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;iBAAM;gBACL,wBAAwB;gBACxB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kGAjfU,yBAAyB;uHAAzB,yBAAyB;kEA2BzB,sEAAY;kEACZ,4DAAO;;;;;;;QC/CpB,6EAAyB;QAInB,+EACiB;QACnB,4DAAM;QAEN,6EAAmC;QAEnC,yEAAiB;QAGX,qHAGI;QACJ,yEAAkB;QAOA,kFAAsB;QAAA,4DAAK;QAEjC,0EAA4B;QACsC,kEAAM;QAAA,4DAAI;QAC1E,iFACiE;QADtB,uJAAS,uBAAmB,IAAC;QAAxE,4DACiE;QAEnE,sEAAI;QAEqC,kJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAIhD,sEAAI;QAEqC,kJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,mEAAO;QAAA,4DAAW;QAMpD,sHAOK;QAiBP,4DAAK;QAGP,2EAAmB;QAIoC,8RAEvE,gBAAqB,MAAM,cAClB,oBAAoB,SACP,QAAQ,GACA,IAAD;QALL,4DAKQ;QAGZ,sEAAI;QAE8C,8RAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAG1F,sEAAI;QAE+C,8RAAS,gBAAqB,MAAM,CAAC,IAAC;QAArF,4DAAwF;QAG5F,sEAAI;QAE8C,8RAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAQlG,2EAAsC;QAM1B,2EAAe;QAAA,4DAAK;QAE1B,2EAAmB;QAEJ,kEAAM;QAAA,4DAAY;QAE7B,kFAAmF;QAA9C,0KAAmB,6BAAyB,IAAC;QAChF,sIAEa;QACf,4DAAa;QAEb,oIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAIe,kJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,wEAAY;QAAA,4DAAW;QACjC,sEACF;QAAA,4DAAS;QAET,8EACsE;QAAxC,kJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,sEACF;QAAA,4DAAS;QAOb,2EAAmB;QACb,8EAAkB;QAAA,4DAAK;QAE7B,2EAAmB;QAEJ,4EAAgB;QAAA,4DAAY;QAEvC,kFAC0D;QAAxD,0KAAmB,uCAAmC,IAAC;QACvD,sIAGa;QACf,4DAAa;QAEb,oIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAKc,kJAAS,gCAA4B,SAAS,CAAC,IAAC;QAC3E,4EAAU;QAAA,mEAAO;QAAA,4DAAW;QAC5B,qEACF;QAAA,4DAAS;QAGT,8EAC8E;QAAhD,kJAAS,gCAA4B,QAAQ,CAAC,IAAC;QAC3E,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC7B,oEACF;QAAA,4DAAS;QAenB,qFAC+B;QAC7B,6EAAoC;QAClC,gJAMkB;QAClB,kIAKW;QACb,qEAAe;QAGf,6EAAgC;QAC9B,gJACsB;QACtB,oIACe;QACjB,qEAAe;QAEf,8EAAoC;QAClC,kJAC0B;QAC1B,oIACW;QACb,qEAAe;QAEf,8EAAwC;QACtC,kJAC+E;QAC/E,oIACe;QACjB,qEAAe;QAEf,8EAA+C;QAC7C,kJAC+B;QAC/B,oIACqC;QACvC,qEAAe;QAEf,8EAA8C;QAC5C,kJAC8B;QAC9B,oIACoC;QACtC,qEAAe;QAEf,8EAA0C;QACxC,kJAC0B;QAC1B,oIACe;QACjB,qEAAe;QAEf,8EAA2C;QACzC,kJAC2B;QAC3B,oIACiC;QACnC,qEAAe;QA2Bf,8EAAoC;QAClC,kJAC0B;QAC1B,oIAgBW;QACb,qEAAe;QAEf,8EAA8C;QAC5C,kJACoC;QACpC,oIAgBW;QACb,qEAAe;QAIf,8EAAyC;QACvC,kJAC+B;QAC/B,oIACe;QACjB,qEAAe;QAEf,8EAA+C;QAC7C,kJAC+E;QAC/E,oIAYW;QACb,qEAAe;QAEf,8EAAwC;QACtC,kJAC8B;QAC9B,oIACe;QACjB,qEAAe;QAEf,8EAAwC;QACtC,kJAC8B;QAC9B,oIAC6B;QAC/B,qEAAe;QAaf,8EAAyC;QACvC,kJACiF;QACjF,oIAMW;QACb,qEAAe;QAIf,8EAAoC;QAClC,kJACkB;QAClB,oIAeW;QACb,qEAAe;QACf,gJAAqE;QACrE,kIAEU;QACV,oIAC4D;QAC9D,4DAAY;QACZ,0HAGM;QACN,iFACoD;QACtD,4DAAM;;QA/aI,0DAAsC;QAAtC,+FAAsC;QAS3B,0DAAkC;QAAlC,sGAAkC;QAkCxC,2DAAkC;QAAlC,6FAAkC;QA6DvC,2DAAkB;QAAlB,+EAAkB;QAWoB,2DAAc;QAAd,oFAAc;QAKtC,0DAA6C;QAA7C,6GAA6C;QAQ/B,0DAA8C;QAA9C,sGAA8C;QAM9C,0DAA8C;QAA9C,sGAA8C;QAoB1B,2DAAwB;QAAxB,8FAAwB;QAM1D,0DAAuD;QAAvD,uHAAuD;QASzC,0DAAuD;QAAvD,+GAAuD;QAOvD,0DAAsD;QAAtD,8GAAsD;QAmBvD,0DAAyB;QAAzB,sFAAyB;QA+NzC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAMnD,0DAAe;QAAf,+EAAe;QAIN,0DAAe;QAAf,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjbc;AACR;AAEkB;AAET;AACV;AACY;AAEL;AAGzB;;;;;;;;;;;;;;;;;;;;;;;;ICErB,0EAA2D;IACzD,kFACmB;IACvB,4DAAM;;;;IA+BQ,qEAAyC;IAED,4SAAS,4BAAoB,QAAQ,CAAC,IAAC;IAEzE,+EAA4B;IAAA,gEAAK;IAAA,4DAAW;;;IAoE9C,iFAA2E;IAAA,uDAE3E;IAAA,4DAAa;;;IAFqC,qFAAwB;IAAC,0DAE3E;IAF2E,6FAE3E;;;IAGF,4EAA2D;IACzD,iFACF;IAAA,4DAAY;;;IAgCV,iFACqC;IAAA,uDAErC;IAAA,4DAAa;;;IAFX,+FAAkC;IAAC,0DAErC;IAFqC,uGAErC;;;IAGF,4EAAqE;IACnE,2FACF;IAAA,4DAAY;;;;IAoClB,sFAAqE;IACrD,gVAAmB,sBAAc,GAAG,IAAI,IAAC,yQAG3C,qBAAa,IAH8B;IAIvD,4DAAe;;;IALkB,0FAAiC;IAEhE,0DAAmD;IAAnD,0HAAmD;;;;IAKvD,+EAAkE;IAClD,4KAAS,wBAAwB,IAAC,4UAAoB,iCAAqB,GAAG,IAAI,IAAhD,kQAEpC,qBAAa,IAFuB;IAGhD,4DAAe;;;;IAJe,0FAAiC;IAE7D,0DAAqC;IAArC,0GAAqC;;;IAQzC,sFAAmG;IACjG,8DAAE;IAAA,4DAAkB;;;IACtB,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,2EAC5E;;;IAIJ,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAC1B,+EAAgF;IAAA,uDAChF;IAAA,4DAAW;;;IADqE,0DAChF;IADgF,yFAChF;;;IAIA,sFACmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/E,+EAAiF;IAAA,uDAC7E;IAAA,4DAAW;;;IADkE,0DAC7E;IAD6E,mFAC7E;;;IAIJ,sFAAmG;IACjG,uEAAW;IAAA,4DAAkB;;;IAC/B,+EAAgF;IAAA,uDACtD;IAAA,4DAAW;;;IAD2C,0DACtD;IADsD,0FACtD;;;IAI1B,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDACvD;IAAA,4DAAW;;;IAD4C,0DACvD;IADuD,yFACvD;;;IAIzB,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAC1B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,qFAC5E;;;IAIJ,sFAAmG;IACjG,mEAAO;IAAA,4DAAkB;;;IAC3B,+EAAgF;IAAA,uDAC1D;IAAA,4DAAW;;;IAD+C,0DAC1D;IAD0D,sFAC1D;;;IA6BtB,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAItB,8EAAsF;IACpF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,gGAEjC;;;IACA,8EAAuF;IACrF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,gGAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,gGAExC;;;IAdJ,+EAAgF;IAC9E,4EAAsC;IAEpC,4IAGS;IACT,6IAGS;IACT,6IAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAAuB;IAAvB,oFAAuB;IAE1B,0DAAwB;IAAxB,oFAAwB;IAIxB,0DAAwB;IAAxB,oFAAwB;;;IAarC,sFAAmG;IACjG,4EAAgB;IAAA,4DAAkB;;;IAGhC,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,oGAErC;;;IAEA,8EAAoF;IAClF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,oGAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,oGAExC;;;IAdJ,+EAAgF;IAC9E,4EAA0C;IACxC,6IAGS;IAET,6IAGS;IACT,6IAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAA2B;IAA3B,wFAA2B;IAC9B,0DAAsB;IAAtB,kFAAsB;IAKtB,0DAAuB;IAAvB,mFAAuB;;;IAepC,sFAAmG;IACjG,uEAAW;IAAA,4DAAkB;;;IAC/B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,oFAC5E;;;IAIJ,uFACmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAG3E,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,2GAErC;;;IAEA,8EAAoF;IAClF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,2GAEjC;;;IAVJ,gFAAiF;IAC/E,4EAAiD;IAC/C,6IAGS;IAET,4IAGS;IACX,qEAAe;IACjB,4DAAW;;;IAXK,0DAAkC;IAAlC,+FAAkC;IACrC,0DAAuB;IAAvB,mFAAuB;IAKvB,0DAAsB;IAAtB,kFAAsB;;;IASnC,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,mFAC5E;;;IAIJ,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDAC9D;;IAAA,4DAAW;;;IADmD,0DAC9D;IAD8D,6JAC9D;;;IAkBlB,uFACmD;IAAA,uEAAY;IAAA,4DAAkB;;;;IACjF,gFACqC;IAAnC,yKAAS,wBAAwB,IAAC;IAClC,8EACmC;IAAjC,8WAAS,kCAAsB,IAAC;IAChC,oEAA+B;IAAA,6EACjC;IAAA,4DAAS;;;IAHD,0DAA4B;IAA5B,6FAA4B;;;IAQtC,uFAAyF;IAAA,mEACzF;IAAA,4DAAkB;;;;IAEhB,8EACyE;IADX,gLAAS,wBAAwB,IAAC,6VACrF,mCAAuB,aAAa,CAAC,IADgD;IAE9F,oFAAgF;IAClF,4DAAS;;IAD4B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;;;;IAHtC,gFAAqG;IACnG,6IAGS;IAET,8EACkE;IAD1B,uKAAS,wBAAwB,IAAC,uTAC/D,mCAAuB,MAAM,CAAC,IADiC;IAExE,oFAA8E;IAChF,4DAAS;;;IARA,0DAAoB;IAApB,wFAAoB;IAOO,0DAAuB;IAAvB,uEAAuB;IAAtC,uEAAc;;;IASvC,4EAAqE;;;;IACrE,+EACuC;IADkB,iXAAS,qCAAuB,MAAM,CAAC,IAAC;IAEjG,4DAAU;;IADR,8EAA0B;;;IAE5B,gFAAoC;IAClC,uDAA+C;IAAA,4DAAW;;;IAA1D,0DAA+C;IAA/C,8HAA+C;;;IAEnD,2EAA2C;IACzC,uFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;;AD7Z9D,MAAM,4BAA4B;IA6CvC,YACU,EAAe,EACf,MAAc,EACd,QAAyB,EACzB,kBAAsC;QAHtC,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QA/ChD,qBAAgB,GAAa;YAC3B,QAAQ;YACR,IAAI;YACJ,QAAQ;YACR,YAAY;YACZ,mBAAmB;YACnB,kBAAkB;YAClB,cAAc;YACd,eAAe;YACf,aAAa;YACb,aAAa;YACb,cAAc;YACd,eAAe;YACf,iBAAiB;YACjB,QAAQ;YACR,mBAAmB;YACnB,kBAAkB;YAClB,aAAa;YAEb,YAAY;YACZ,YAAY;YACZ,aAAa;YACb,QAAQ;SACT,CAAC;QAMF,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAI9C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,QAAQ,CAAC;QACtB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QA8BjC,gBAAW,GAAU,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAElE,0BAAqB,GAAU,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;QAEzE,mBAAc,GAAW,UAAU,CAAC;QACpC,6BAAwB,GAAW,SAAS,CAAC;QAW7C,mBAAc,GAAY,KAAK,CAAC;QA+DhC,qBAAgB,GAAW,YAAY;QAyGvC,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;IA9MhC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,UAAU,EAAE,+DAAmB,CAAC;YACzC,gBAAgB,EAAE,CAAC,SAAS,EAAE,+DAAmB,CAAC;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAOD,uBAAuB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iCAAiC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAE1D,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,2BAA2B,CAAC,gBAAqB;QAC/C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,gBAAgB,EAAE,gBAAgB;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,kBAAkB,CAAC,gBAAgB;QACjC,IAAI,gBAAgB,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAErD,IAAI,CAAC,gBAAgB,GAAG;gBACtB,QAAQ;gBACR,IAAI;gBACJ,QAAQ;gBACR,YAAY;gBACZ,mBAAmB;gBACnB,kBAAkB;gBAClB,cAAc;gBACd,eAAe;gBACf,QAAQ;gBACR,mBAAmB;gBACnB,kBAAkB;gBAClB,aAAa;gBACb,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,QAAQ;aACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAErD,IAAI,CAAC,gBAAgB,GAAG;gBAEtB,IAAI;gBACJ,QAAQ;gBACR,YAAY;gBACZ,mBAAmB;gBACnB,kBAAkB;gBAClB,cAAc;gBACd,eAAe;gBAEf,QAAQ;gBACR,mBAAmB;gBACnB,kBAAkB;gBAClB,aAAa;gBAEb,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,QAAQ;aACT,CAAC;SACH;IACH,CAAC;IAGD,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;QACjE,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE;aAC5B,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aACrC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACnD,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEvD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,CAAC,kBAAkB;aACpB,wBAAwB,CAAC,MAAM,CAAC;aAChC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;iBACH;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,gGAAgG;IAEhG,iBAAiB,CAAC,IAAS,EAAE,MAAW;QACtC,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,IAAI,KAAK,GAAG,8DAA8D,CAAC;QAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,MAAM;gBACjB,MAAM,EAAE,MAAM;aACf;SACF,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,mBAAmB;SACvC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAE9C,IAAI,CAAC,kBAAkB;qBACpB,8BAA8B,CAAC,MAAM,CAAC;qBACtC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAC9D,GAAG,CAAC,QAAQ,GAAG,CACjB,EAAE,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB,KAAI,CAAC;IAErB,mBAAmB,CAAC,MAAW;QAC7B,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,yHAAyH;YAC/H,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,UAAU;SAC9B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;oBACtD,OAAO;wBACL,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,MAAM,EAAE,MAAM;qBACf,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;gBAEpC,IAAI,MAAM,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAEnD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAEhC,IAAI,CAAC,kBAAkB;qBACpB,+BAA+B,CAAC,aAAa,EAAE,MAAM,CAAC;qBACtD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;4BACF,uDAAS,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;4BAE7C,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;yBACpD;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;yBACH;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oHAAoH;IAGpH,0BAA0B;IAC1B,2CAA2C;IAC3C,gBAAgB;IAChB,kCAAkC;IAClC,cAAc;IACd,sFAAsF;IACtF,kFAAkF;IAClF,SAAS;IACT,0BAA0B;IAC1B,wFAAwF;IACxF,oFAAoF;IACpF,qCAAqC;IACrC,QAAQ;IACR,+BAA+B;IAC/B,kCAAkC;IAClC,gCAAgC;IAChC,mDAAmD;IAEnD,wCAAwC;IACxC,+CAA+C;IAC/C,mCAAmC;IACnC,+BAA+B;IAC/B,gCAAgC;IAEhC,+CAA+C;IAE/C,kCAAkC;IAClC,6CAA6C;IAC7C,0CAA0C;IAC1C,uBAAuB;IACvB,6BAA6B;IAC7B,yCAAyC;IACzC,8DAA8D;IAE9D,oDAAoD;IACpD,gCAAgC;IAEhC,mDAAmD;IACnD,4CAA4C;IAC5C,wDAAwD;IACxD,iDAAiD;IACjD,4BAA4B;IAC5B,qDAAqD;IACrD,mEAAmE;IACnE,yBAAyB;IACzB,+CAA+C;IAC/C,0BAA0B;IAE1B,4CAA4C;IAE5C,8CAA8C;IAC9C,oCAAoC;IACpC,4BAA4B;IAC5B,iBAAiB;IACjB,+CAA+C;IAC/C,0BAA0B;IAC1B,mFAAmF;IACnF,mBAAmB;IACnB,eAAe;IACf,8BAA8B;IAC9B,8CAA8C;IAC9C,mCAAmC;IACnC,4BAA4B;IAC5B,iBAAiB;IACjB,4CAA4C;IAC5C,eAAe;IACf,8BAA8B;IAC9B,4CAA4C;IAC5C,eAAe;IACf,cAAc;IACd,wBAAwB;IACxB,eAAe;IACf,iCAAiC;IACjC,8EAA8E;IAC9E,QAAQ;IACR,QAAQ;IACR,IAAI;IAIJ,iBAAiB,CAAC,GAAQ;QACxB,sCAAsC;QACtC,uDAAS,CAAC;YACR,KAAK,EAAE,8BAA8B;YACrC,IAAI,EAAE,4DAA4D;YAClE,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;YACtB,2BAA2B;YAC3B,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE;qBAC5B,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,YAAY,CAAC;qBACrC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC;qBAC3B,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;gBAEzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;gBACtC,IAAI,CAAC,eAAe,GAAG,IAAI;gBAE3B,IAAI,CAAC,kBAAkB;qBACpB,+BAA+B,CAAC,MAAM,CAAC;qBACvC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAE/C,sBAAsB;wBACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAEjB,mBAAmB;wBACnB,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAC7B,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;wBACzC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;wBACb,CAAC,CAAC,QAAQ,GAAG,qBAAqB,GAAG,CAAC,OAAO,MAAM,CAAC;wBACpD,CAAC,CAAC,KAAK,EAAE,CAAC;wBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;wBAChC,CAAC,CAAC,MAAM,EAAE,CAAC;wBAEX,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;wBAE7B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;wBACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC/B,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC/B,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;iBAAM;gBACL,wBAAwB;gBACxB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;wGAtfU,4BAA4B;0HAA5B,4BAA4B;kEA4B5B,sEAAY;kEACZ,4DAAO;;;;;;;QChDpB,6EAAyB;QAInB,+EAEiB;QACnB,4DAAM;QAEN,6EAAmC;QAEnC,yEAAiB;QAGX,wHAGI;QACJ,yEAAkB;QAOA,qFAAyB;QAAA,4DAAK;QAEpC,0EAA4B;QACsC,kEAAM;QAAA,4DAAI;QAC1E,iFACiE;QADtB,0JAAS,uBAAmB,IAAC;QAAxE,4DACiE;QAEnE,sEAAI;QAEqC,qJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAIhD,sEAAI;QAEqC,qJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,mEAAO;QAAA,4DAAW;QAMpD,yHAOK;QAiBP,4DAAK;QAGP,2EAAmB;QAIoC,iSAEvE,gBAAqB,MAAM,cAClB,oBAAoB,SACP,QAAQ,GACA,IAAD;QALL,4DAKQ;QAGZ,sEAAI;QAE8C,iSAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAG1F,sEAAI;QAE+C,iSAAS,gBAAqB,MAAM,CAAC,IAAC;QAArF,4DAAwF;QAG5F,sEAAI;QAE8C,iSAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAQlG,2EAAsC;QAM1B,2EAAe;QAAA,4DAAK;QAE1B,2EAAmB;QAEJ,kEAAM;QAAA,4DAAY;QAE7B,kFAAmF;QAA9C,6KAAmB,6BAAyB,IAAC;QAChF,yIAEa;QACf,4DAAa;QAEb,uIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAIe,qJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,wEAAY;QAAA,4DAAW;QACjC,sEACF;QAAA,4DAAS;QAET,8EACsE;QAAxC,qJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,sEACF;QAAA,4DAAS;QAOb,2EAAmB;QACb,8EAAkB;QAAA,4DAAK;QAE7B,2EAAmB;QAEJ,4EAAgB;QAAA,4DAAY;QAEvC,kFAC0D;QAAxD,6KAAmB,uCAAmC,IAAC;QACvD,yIAGa;QACf,4DAAa;QAEb,uIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAKc,qJAAS,gCAA4B,SAAS,CAAC,IAAC;QAC3E,4EAAU;QAAA,mEAAO;QAAA,4DAAW;QAC5B,qEACF;QAAA,4DAAS;QAGT,8EAC8E;QAAhD,qJAAS,gCAA4B,QAAQ,CAAC,IAAC;QAC3E,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC7B,oEACF;QAAA,4DAAS;QAenB,qFAC+B;QAC7B,6EAAoC;QAClC,mJAMkB;QAClB,qIAKW;QACb,qEAAe;QAGf,6EAAgC;QAC9B,mJACsB;QACtB,uIACe;QACjB,qEAAe;QAEf,8EAAoC;QAClC,qJAC0B;QAC1B,uIACW;QACb,qEAAe;QAEf,8EAAwC;QACtC,qJAC+E;QAC/E,uIACe;QACjB,qEAAe;QAEf,8EAA+C;QAC7C,qJAC+B;QAC/B,uIACqC;QACvC,qEAAe;QAEf,8EAA8C;QAC5C,qJAC8B;QAC9B,uIACoC;QACtC,qEAAe;QAEf,8EAA0C;QACxC,qJAC0B;QAC1B,uIACe;QACjB,qEAAe;QAEf,8EAA2C;QACzC,qJAC2B;QAC3B,uIACiC;QACnC,qEAAe;QA2Bf,8EAAoC;QAClC,qJAC0B;QAC1B,uIAgBW;QACb,qEAAe;QAEf,8EAA8C;QAC5C,qJACoC;QACpC,uIAgBW;QACb,qEAAe;QAIf,8EAAyC;QACvC,qJAC+B;QAC/B,uIACe;QACjB,qEAAe;QAEf,8EAA+C;QAC7C,qJAC+E;QAC/E,uIAYW;QACb,qEAAe;QAEf,8EAAwC;QACtC,qJAC8B;QAC9B,uIACe;QACjB,qEAAe;QAEf,8EAAwC;QACtC,qJAC8B;QAC9B,uIAC6B;QAC/B,qEAAe;QAgBf,8EAAyC;QACvC,qJACiF;QACjF,uIAMW;QACb,qEAAe;QAEf,8EAAoC;QAClC,qJACkB;QAClB,uIAeW;QACb,qEAAe;QACf,mJAAqE;QACrE,qIAEU;QACV,uIAC4D;QAC9D,4DAAY;QACZ,6HAGM;QACN,iFACoD;QACtD,4DAAM;;QAjbI,0DAAyC;QAAzC,kGAAyC;QAU9B,0DAAkC;QAAlC,sGAAkC;QAkCxC,2DAAkC;QAAlC,6FAAkC;QA6DvC,2DAAkB;QAAlB,+EAAkB;QAWoB,2DAAc;QAAd,oFAAc;QAKtC,0DAA6C;QAA7C,6GAA6C;QAQ/B,0DAA8C;QAA9C,sGAA8C;QAM9C,0DAA8C;QAA9C,sGAA8C;QAoB1B,2DAAwB;QAAxB,8FAAwB;QAM1D,0DAAuD;QAAvD,uHAAuD;QASzC,0DAAuD;QAAvD,+GAAuD;QAOvD,0DAAsD;QAAtD,8GAAsD;QAmBvD,0DAAyB;QAAzB,sFAAyB;QAgOzC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAMnD,0DAAe;QAAf,+EAAe;QAIN,0DAAe;QAAf,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnbc;AACR;AAEkB;AAET;AACV;AACY;AAEL;AAGzB;;;;;;;;;;;;;;;;;;;;;;;;IC+BP,qEAAyC;IAED,4SAAS,4BAAoB,QAAQ,CAAC,IAAC;IAEzE,+EAA4B;IAAA,gEAAK;IAAA,4DAAW;;;IAoE9C,iFAA2E;IAAA,uDAE3E;IAAA,4DAAa;;;IAFqC,qFAAwB;IAAC,0DAE3E;IAF2E,6FAE3E;;;IAGF,4EAA2D;IACzD,iFACF;IAAA,4DAAY;;;IAgCV,iFACqC;IAAA,uDAErC;IAAA,4DAAa;;;IAFX,+FAAkC;IAAC,0DAErC;IAFqC,uGAErC;;;IAGF,4EAAqE;IACnE,2FACF;IAAA,4DAAY;;;;IAoClB,sFAAqE;IACrD,gVAAmB,sBAAc,GAAG,IAAI,IAAC,yQAG3C,qBAAa,IAH8B;IAIvD,4DAAe;;;IALkB,0FAAiC;IAEhE,0DAAmD;IAAnD,0HAAmD;;;;IAKvD,+EAAkE;IAClD,4KAAS,wBAAwB,IAAC,4UAAoB,iCAAqB,GAAG,IAAI,IAAhD,kQAEpC,qBAAa,IAFuB;IAGhD,4DAAe;;;;IAJe,0FAAiC;IAE7D,0DAAqC;IAArC,yGAAqC;;;IAQzC,sFAAmG;IAAA,6DAAE;IAAA,4DAAkB;;;IACvH,+EAAgF;IAAA,uDAAY;IAAA,4DAAW;;;IAAvB,0DAAY;IAAZ,2EAAY;;;IAI5F,sFAAmG;IAAA,iEAAM;IAAA,4DAAkB;;;IAC3H,+EAAgF;IAAA,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,+EAAgB;;;IAIhG,sFAAoG;IAAA,qEAAU;IAAA,4DAAkB;;;IAChI,+EAAiF;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,mFAAoB;;;IAIrG,sFAAmG;IAAA,sEAAW;IAAA,4DAAkB;;;IAChI,+EAAgF;IAAA,uDAA2B;IAAA,4DAAW;;;IAAtC,0DAA2B;IAA3B,0FAA2B;;;IAI3G,sFAAmG;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/H,+EAAgF;IAAA,uDAA0B;IAAA,4DAAW;;;IAArC,0DAA0B;IAA1B,yFAA0B;;;IAI1G,sFAAmG;IAAA,iEAAM;IAAA,4DAAkB;;;IAC3H,+EAAgF;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,qFAAsB;;;IAItG,sFAAmG;IAAA,kEAAO;IAAA,4DAAkB;;;IAC5H,+EAAgF;IAAA,uDAAuB;IAAA,4DAAW;;;IAAlC,0DAAuB;IAAvB,sFAAuB;;;IA6BvG,sFAAmG;IAAA,iEAAM;IAAA,4DAAkB;;;IAIvH,6EAAsF;IACpF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,gGAEjC;;;IACA,8EAAuF;IACrF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,gGAE3C;;;IACA,6EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,gGAExC;;;IAdJ,+EAAgF;IAC9E,4EAAsC;IAEpC,4IAGS;IACT,4IAGS;IACT,4IAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAAuB;IAAvB,oFAAuB;IAE1B,0DAAwB;IAAxB,oFAAwB;IAIxB,0DAAwB;IAAxB,oFAAwB;;;IAarC,sFAAmG;IAAA,2EAAgB;IAAA,4DAAkB;;;IAGjI,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,oGAErC;;;IAEA,8EAAoF;IAClF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,oGAE3C;;;IACA,6EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,oGAExC;;;IAdJ,+EAAgF;IAC9E,4EAA0C;IACxC,6IAGS;IAET,6IAGS;IACT,4IAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAA2B;IAA3B,wFAA2B;IAC9B,0DAAsB;IAAtB,kFAAsB;IAKtB,0DAAuB;IAAvB,mFAAuB;;;IAepC,sFAAmG;IAAA,sEAAW;IAAA,4DAAkB;;;IAChI,+EAAgF;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,oFAAqB;;;IAIrG,uFACmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAG3E,8EACoD;IAClD,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,2GAErC;;;IAEA,6EACqD;IACnD,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,2GAEjC;;;IAZJ,gFAAiF;IAC/E,4EAAiD;IAC/C,6IAIS;IAET,4IAIS;IACX,qEAAe;IACjB,4DAAW;;;IAbK,0DAAkC;IAAlC,+FAAkC;IACrC,0DAAuB;IAAvB,mFAAuB;IAMvB,0DAAsB;IAAtB,kFAAsB;;;IAUnC,sFAAmG;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/H,+EAAgF;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,mFAAoB;;;IAIpG,sFAAmG;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/H,+EAAgF;IAAA,uDAAoC;;IAAA,4DAAW;;;IAA/C,0DAAoC;IAApC,6JAAoC;;;IAIpH,uFACmD;IAAA,uEAAY;IAAA,4DAAkB;;;;IACjF,gFACqC;IAAnC,yKAAS,wBAAwB,IAAC;IAClC,8EAAoH;IAA3B,8WAAS,4BAAgB,IAAC;IACjH,oEAA+B;IAAA,6EACjC;IAAA,4DAAS;;;IAFD,0DAA4B;IAA5B,6FAA4B;;;IAUtC,uFACoB;IAAA,iEAAM;IAAA,4DAAkB;;;;IAC5C,gFAAqG;IAC5D,uKAAS,wBAAwB,IAAC,sTAAU,mCAAuB,aAAa,CAAC,IAA/C;IAEvE,oFAAgF;IAClF,4DAAS;IAET,8EACyB;IADe,uKAAS,wBAAwB,IAAC,sTAAU,mCAAuB,MAAM,CAAC,IAAxC;IAExE,oFAA8E;IAChF,4DAAS;;IAN4B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;IAKA,0DAAuB;IAAvB,uEAAuB;IAAtC,uEAAc;;;IASvC,4EAAqE;;;;IACrE,+EACuC;IADkB,8WAAS,mCAAuB,MAAM,CAAC,IAAC;IAEjG,4DAAU;;IADR,8EAA0B;;;IAE5B,gFAAoC;IAClC,uDAA+C;IAAA,4DAAW;;;IAA1D,0DAA+C;IAA/C,8HAA+C;;;IAEnD,2EAA2C;IACzC,uFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;;ADxXhE,MAAM,4BAA4B;IA4CvC,YACU,EAAe,EACf,MAAc,EACd,QAAyB,EACzB,kBAAsC;QAHtC,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QA/ChD,qBAAgB,GAAa;YAC3B,QAAQ;YACR,IAAI;YACJ,QAAQ;YACR,YAAY;YACZ,mBAAmB;YACnB,kBAAkB;YAClB,cAAc;YACd,eAAe;YACf,aAAa;YACb,aAAa;YACb,cAAc;YACd,eAAe;YACf,iBAAiB;YACjB,QAAQ;YACR,mBAAmB;YACnB,kBAAkB;YAClB,aAAa;YAEb,YAAY;YACZ,YAAY;YACZ,aAAa;YACb,QAAQ;SACT,CAAC;QAMF,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAI9C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,QAAQ,CAAC;QACtB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QA8BjC,gBAAW,GAAU,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAElE,0BAAqB,GAAU,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;QAEzE,mBAAc,GAAW,UAAU,CAAC;QACpC,6BAAwB,GAAW,SAAS,CAAC;QAsB7C,qBAAgB,GAAW,YAAY;QAyGvC,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;IA1JhC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,UAAU,EAAE,+DAAmB,CAAC;YACzC,gBAAgB,EAAE,CAAC,SAAS,EAAE,+DAAmB,CAAC;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAOD,uBAAuB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iCAAiC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,2BAA2B,CAAC,gBAAqB;QAC/C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,gBAAgB,EAAE,gBAAgB;SACnC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAGD,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;QACjE,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE;aAC5B,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aACrC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACnD,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEvD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,CAAC,kBAAkB;aACpB,wBAAwB,CAAC,MAAM,CAAC;aAChC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;iBACH;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,gGAAgG;IAEhG,iBAAiB,CAAC,IAAS,EAAE,MAAW;QACtC,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,IAAI,KAAK,GAAG,8DAA8D,CAAC;QAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,MAAM;gBACjB,MAAM,EAAE,MAAM;aACf;SACF,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,mBAAmB;SACvC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAE9C,IAAI,CAAC,kBAAkB;qBACpB,8BAA8B,CAAC,MAAM,CAAC;qBACtC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAC9D,GAAG,CAAC,QAAQ,GAAG,CACjB,EAAE,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB,KAAI,CAAC;IAErB,mBAAmB,CAAC,MAAW;QAC7B,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,wHAAwH;YAC9H,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,UAAU;SAC9B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;oBACtD,OAAO;wBACL,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,MAAM,EAAE,MAAM;qBACf,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;gBAEpC,IAAI,MAAM,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAEnD,IAAI,CAAC,kBAAkB;qBACpB,+BAA+B,CAAC,aAAa,EAAE,MAAM,CAAC;qBACtD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;4BACF,uDAAS,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;4BAE7C,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;yBACpD;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;yBACH;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oHAAoH;IAEpH,WAAW,CAAC,GAAQ;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QAE1D,0BAA0B;QAC1B,uCAAuC;QACvC,oCAAoC;QACpC,iBAAiB;QACjB,uBAAuB;QACvB,mCAAmC;QACnC,wDAAwD;QAExD,8CAA8C;QAC9C,0BAA0B;QAE1B,6CAA6C;QAC7C,sCAAsC;QACtC,kDAAkD;QAClD,2CAA2C;QAC3C,sBAAsB;QACtB,+CAA+C;QAC/C,6DAA6D;QAC7D,mBAAmB;QACnB,yCAAyC;QACzC,oBAAoB;QAEpB,sCAAsC;QAEtC,wCAAwC;QACxC,8BAA8B;QAC9B,sBAAsB;QACtB,WAAW;QACX,yCAAyC;QACzC,oBAAoB;QACpB,6EAA6E;QAC7E,aAAa;QACb,SAAS;QACT,wBAAwB;QACxB,wCAAwC;QACxC,6BAA6B;QAC7B,sBAAsB;QACtB,WAAW;QACX,sCAAsC;QACtC,SAAS;QACT,wBAAwB;QACxB,sCAAsC;QACtC,SAAS;QACT,QAAQ;QACR,kBAAkB;IACpB,CAAC;;wGA9VU,4BAA4B;0HAA5B,4BAA4B;kEA2B5B,sEAAY;kEACZ,4DAAO;;;;;;;QC/CpB,6EAAyB;QAIjB,+EACiB;QACnB,4DAAM;QAEN,6EAAmC;QAEnC,yEAAiB;QAUO,qFAAyB;QAAA,4DAAK;QAEpC,0EAA4B;QACsC,kEAAM;QAAA,4DAAI;QAC1E,iFACiE;QADtB,0JAAS,uBAAmB,IAAC;QAAxE,4DACiE;QAEnE,sEAAI;QAEqC,qJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAIhD,sEAAI;QAEqC,qJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,mEAAO;QAAA,4DAAW;QAMpD,yHAOK;QAiBP,4DAAK;QAGP,2EAAmB;QAIoC,iSAEzE,gBAAqB,MAAM,cAClB,oBAAoB,SACP,QAAQ,GACA,IAAD;QALH,4DAKM;QAGV,sEAAI;QAE8C,iSAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAG1F,sEAAI;QAE+C,iSAAS,gBAAqB,MAAM,CAAC,IAAC;QAArF,4DAAwF;QAG5F,sEAAI;QAE8C,iSAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAQlG,2EAAsC;QAM1B,2EAAe;QAAA,4DAAK;QAE1B,2EAAmB;QAEJ,kEAAM;QAAA,4DAAY;QAE7B,kFAAmF;QAA9C,6KAAmB,6BAAyB,IAAC;QAChF,yIAEa;QACf,4DAAa;QAEb,uIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAIe,qJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,wEAAY;QAAA,4DAAW;QACjC,sEACF;QAAA,4DAAS;QAET,8EACsE;QAAxC,qJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,sEACF;QAAA,4DAAS;QAOb,2EAAmB;QACb,8EAAkB;QAAA,4DAAK;QAE7B,2EAAmB;QAEJ,4EAAgB;QAAA,4DAAY;QAEvC,kFAC0D;QAAxD,6KAAmB,uCAAmC,IAAC;QACvD,yIAGa;QACf,4DAAa;QAEb,uIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAKc,qJAAS,gCAA4B,SAAS,CAAC,IAAC;QAC3E,4EAAU;QAAA,mEAAO;QAAA,4DAAW;QAC5B,qEACF;QAAA,4DAAS;QAGT,8EAC8E;QAAhD,qJAAS,gCAA4B,QAAQ,CAAC,IAAC;QAC3E,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC7B,oEACF;QAAA,4DAAS;QAenB,qFAC+B;QAC7B,6EAAoC;QAClC,mJAMkB;QAClB,qIAKW;QACb,qEAAe;QAGf,6EAAgC;QAC9B,mJAAuH;QACvH,qIAAuG;QACzG,qEAAe;QAEf,8EAAoC;QAClC,qJAA2H;QAC3H,uIAA2G;QAC7G,qEAAe;QAEf,8EAAwC;QACtC,qJAAgI;QAChI,uIAAgH;QAClH,qEAAe;QAEf,8EAA+C;QAC7C,qJAAgI;QAChI,uIAAsH;QACxH,qEAAe;QAEf,8EAA8C;QAC5C,qJAA+H;QAC/H,uIAAqH;QACvH,qEAAe;QAEf,8EAA0C;QACxC,qJAA2H;QAC3H,uIAAiH;QACnH,qEAAe;QAEf,8EAA2C;QACzC,qJAA4H;QAC5H,uIAAkH;QACpH,qEAAe;QA2Bf,8EAAoC;QAClC,qJAA2H;QAC3H,uIAgBW;QACb,qEAAe;QAEf,8EAA8C;QAC5C,qJAAqI;QACrI,uIAgBW;QACb,qEAAe;QAIf,8EAAyC;QACvC,qJAAgI;QAChI,uIAAgH;QAClH,qEAAe;QAEhB,8EAA+C;QAC5C,qJAC+E;QAC/E,uIAcW;QACb,qEAAe;QAEf,8EAAwC;QACtC,qJAA+H;QAC/H,uIAA+G;QACjH,qEAAe;QAEf,8EAAwC;QACtC,qJAA+H;QAC/H,uIAA+H;QACjI,qEAAe;QAEf,8EAAyC;QACvC,qJACiF;QACjF,uIAKW;QACb,qEAAe;QAKf,8EAAoC;QAClC,qJAC4C;QAC5C,uIAeW;QACb,qEAAe;QACf,mJAAqE;QACrE,qIAEU;QACV,uIAC4D;QAC9D,4DAAY;QACZ,6HAGM;QACN,iFACoD;QACtD,4DAAM;;QA5YI,0DAAyC;QAAzC,kGAAyC;QAuCpC,2DAAkC;QAAlC,6FAAkC;QA6DvC,2DAAkB;QAAlB,+EAAkB;QAWoB,2DAAc;QAAd,oFAAc;QAKtC,0DAA6C;QAA7C,6GAA6C;QAQ/B,0DAA8C;QAA9C,sGAA8C;QAM9C,0DAA8C;QAA9C,sGAA8C;QAoB1B,2DAAwB;QAAxB,8FAAwB;QAM1D,0DAAuD;QAAvD,uHAAuD;QASzC,0DAAuD;QAAvD,+GAAuD;QAOvD,0DAAsD;QAAtD,8GAAsD;QAmBvD,0DAAyB;QAAzB,sFAAyB;QAgMzC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAMnD,0DAAe;QAAf,+EAAe;QAIN,0DAAe;QAAf,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9YY;AACR;AAEkB;AAET;AACV;AACY;AAEL;AAGzB;;;;;;;;;;;;;;;;;;;;;;;;ICCrB,0EAA2D;IACzD,kFACmB;IACrB,4DAAM;;;;IA+BM,qEAAyC;IAED,uSAAS,4BAAoB,QAAQ,CAAC,IAAC;IAEzE,+EAA4B;IAAA,gEAAK;IAAA,4DAAW;;;IAoE9C,iFAA2E;IAAA,uDAE3E;IAAA,4DAAa;;;IAFqC,qFAAwB;IAAC,0DAE3E;IAF2E,6FAE3E;;;IAGF,4EAA2D;IACzD,iFACF;IAAA,4DAAY;;;IAgCV,iFACqC;IAAA,uDAErC;IAAA,4DAAa;;;IAFX,+FAAkC;IAAC,0DAErC;IAFqC,uGAErC;;;IAGF,4EAAqE;IACnE,2FACF;IAAA,4DAAY;;;;IAqClB,sFAAqE;IACrD,2UAAmB,sBAAc,GAAG,IAAI,IAAC,oQAG3C,qBAAa,IAH8B;IAIvD,4DAAe;;;IALkB,0FAAiC;IAEhE,0DAAmD;IAAnD,0HAAmD;;;;IAKvD,+EAAkE;IAClD,uKAAS,wBAAwB,IAAC,uUAAoB,iCAAqB,GAAG,IAAI,IAAhD,6PAEpC,qBAAa,IAFuB;IAGhD,4DAAe;;;;IAJe,0FAAiC;IAE7D,0DAAqC;IAArC,0GAAqC;;;IAQzC,sFAAmG;IACjG,8DAAE;IAAA,4DAAkB;;;IACtB,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,2EAC5E;;;IAIJ,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAC1B,+EAAgF;IAAA,uDAChF;IAAA,4DAAW;;;IADqE,0DAChF;IADgF,yFAChF;;;IAIA,sFACmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/E,+EAAiF;IAAA,uDAC7E;IAAA,4DAAW;;;IADkE,0DAC7E;IAD6E,mFAC7E;;;IAIJ,sFAAmG;IACjG,uEAAW;IAAA,4DAAkB;;;IAC/B,+EAAgF;IAAA,uDACtD;IAAA,4DAAW;;;IAD2C,0DACtD;IADsD,0FACtD;;;IAI1B,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDACvD;IAAA,4DAAW;;;IAD4C,0DACvD;IADuD,yFACvD;;;IAIzB,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAC1B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,qFAC5E;;;IAIJ,sFAAmG;IACjG,mEAAO;IAAA,4DAAkB;;;IAC3B,+EAAgF;IAAA,uDAC1D;IAAA,4DAAW;;;IAD+C,0DAC1D;IAD0D,sFAC1D;;;IA6BtB,sFAAmG;IACjG,kEAAM;IAAA,4DAAkB;;;IAItB,8EAAsF;IACpF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,gGAEjC;;;IACA,8EAAuF;IACrF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,gGAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,gGAExC;;;IAdJ,+EAAgF;IAC9E,4EAAsC;IAEpC,uIAGS;IACT,wIAGS;IACT,wIAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAAuB;IAAvB,oFAAuB;IAE1B,0DAAwB;IAAxB,oFAAwB;IAIxB,0DAAwB;IAAxB,oFAAwB;;;IAarC,sFAAmG;IACjG,4EAAgB;IAAA,4DAAkB;;;IAGhC,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,oGAErC;;;IAEA,8EAAoF;IAClF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,oGAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,oGAExC;;;IAdJ,+EAAgF;IAC9E,4EAA0C;IACxC,wIAGS;IAET,wIAGS;IACT,wIAGS;IACX,qEAAe;IACjB,4DAAW;;;IAfK,0DAA2B;IAA3B,wFAA2B;IAC9B,0DAAsB;IAAtB,kFAAsB;IAKtB,0DAAuB;IAAvB,mFAAuB;;;IAepC,sFAAmG;IACjG,uEAAW;IAAA,4DAAkB;;;IAC/B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,oFAC5E;;;IAIJ,uFACmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAG3E,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,2GAErC;;;IAEA,8EAAoF;IAClF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,2GAEjC;;;IAVJ,gFAAiF;IAC/E,4EAAiD;IAC/C,wIAGS;IAET,uIAGS;IACX,qEAAe;IACjB,4DAAW;;;IAXK,0DAAkC;IAAlC,+FAAkC;IACrC,0DAAuB;IAAvB,mFAAuB;IAKvB,0DAAsB;IAAtB,kFAAsB;;;IASnC,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDAC5E;IAAA,4DAAW;;;IADiE,0DAC5E;IAD4E,mFAC5E;;;IAIJ,sFAAmG;IACjG,sEAAU;IAAA,4DAAkB;;;IAC9B,+EAAgF;IAAA,uDAC9D;;IAAA,4DAAW;;;IADmD,0DAC9D;IAD8D,6JAC9D;;;IAgBlB,uFACmD;IAAA,uEAAY;IAAA,4DAAkB;;;;IACjF,gFACqC;IAAnC,oKAAS,wBAAwB,IAAC;IAClC,8EACmC;IAAjC,yWAAS,kCAAsB,IAAC;IAChC,oEAA+B;IAAA,6EACjC;IAAA,4DAAS;;;IAHD,0DAA4B;IAA5B,6FAA4B;;;IAWtC,uFAAyF;IAAA,mEACzF;IAAA,4DAAkB;;;;IAEhB,8EACyE;IADX,2KAAS,wBAAwB,IAAC,wVACrF,mCAAuB,aAAa,CAAC,IADgD;IAE9F,oFAAgF;IAClF,4DAAS;;IAD4B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;;;;IAHtC,gFAAqG;IACnG,wIAGS;IAET,8EACkE;IAD1B,kKAAS,wBAAwB,IAAC,kTAC/D,mCAAuB,MAAM,CAAC,IADiC;IAExE,oFAA8E;IAChF,4DAAS;;;IARA,0DAAoB;IAApB,wFAAoB;IAOO,0DAAuB;IAAvB,uEAAuB;IAAtC,uEAAc;;;IASvC,4EAAqE;;;;IACrE,+EACuC;IADkB,4WAAS,qCAAuB,MAAM,CAAC,IAAC;IAEjG,4DAAU;;IADR,8EAA0B;;;IAE5B,gFAAoC;IAClC,uDAA+C;IAAA,4DAAW;;;IAA1D,0DAA+C;IAA/C,8HAA+C;;;IAEnD,2EAA2C;IACzC,uFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;;AD9Z9D,MAAM,uBAAuB;IA4ClC,YACU,EAAe,EACf,MAAc,EACd,QAAyB,EACzB,kBAAsC;QAHtC,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QA/ChD,qBAAgB,GAAa;YAC3B,QAAQ;YACR,IAAI;YACJ,QAAQ;YACR,YAAY;YACZ,mBAAmB;YACnB,kBAAkB;YAClB,cAAc;YACd,eAAe;YACf,aAAa;YACb,aAAa;YACb,cAAc;YACd,eAAe;YACf,iBAAiB;YACjB,QAAQ;YACR,mBAAmB;YACnB,kBAAkB;YAClB,aAAa;YAEb,YAAY;YACZ,YAAY;YACZ,aAAa;YACb,QAAQ;SACT,CAAC;QAMF,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAI9C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,QAAQ,CAAC;QACxB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEpD,oBAAe,GAAY,KAAK,CAAC;QAiCjC,gBAAW,GAAU,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAElE,0BAAqB,GAAU,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;QAEzE,mBAAc,GAAW,UAAU,CAAC;QACpC,6BAAwB,GAAW,SAAS,CAAC;QAW7C,mBAAc,GAAY,KAAK,CAAC;QA8DhC,qBAAgB,GAAW,OAAO,CAAC;QAiGnC,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;IAxMhC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,UAAU,EAAE,+DAAmB,CAAC;YACzC,gBAAgB,EAAE,CAAC,SAAS,EAAE,+DAAmB,CAAC;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAErC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAOD,uBAAuB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iCAAiC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAE1D,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,2BAA2B,CAAC,gBAAqB;QAC/C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,gBAAgB,EAAE,gBAAgB;SACnC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,kBAAkB,CAAC,gBAAgB;QACjC,IAAI,gBAAgB,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAErD,IAAI,CAAC,gBAAgB,GAAG;gBACtB,QAAQ;gBACR,IAAI;gBACJ,QAAQ;gBACR,YAAY;gBACZ,mBAAmB;gBACnB,kBAAkB;gBAClB,cAAc;gBACd,eAAe;gBACf,QAAQ;gBACR,mBAAmB;gBACnB,kBAAkB;gBAClB,aAAa;gBACb,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,QAAQ;aACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAErD,IAAI,CAAC,gBAAgB,GAAG;gBACtB,QAAQ;gBACR,IAAI;gBACJ,QAAQ;gBACR,YAAY;gBACZ,mBAAmB;gBACnB,kBAAkB;gBAClB,cAAc;gBACd,eAAe;gBAEf,QAAQ;gBACR,mBAAmB;gBACnB,kBAAkB;gBAClB,aAAa;gBAEb,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,QAAQ;aACT,CAAC;SACH;IACH,CAAC;IAGD,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;QACjE,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE;aAC5B,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aACrC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACnD,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEvD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,CAAC,kBAAkB;aACpB,wBAAwB,CAAC,MAAM,CAAC;aAChC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC;SACpB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,gGAAgG;IAEhG,iBAAiB,CAAC,IAAS,EAAE,MAAW;QACtC,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,IAAI,KAAK,GAAG,8DAA8D,CAAC;QAC3E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,MAAM;gBACjB,MAAM,EAAE,MAAM;aACf;SACF,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,mBAAmB;SACvC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAE9C,IAAI,CAAC,kBAAkB;qBACpB,8BAA8B,CAAC,MAAM,CAAC;qBACtC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBAClE,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBACjE,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAAQ,GAAG,CAAC,QAAQ,GAAG,CACrF,EAAE,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB,KAAK,CAAC;IAEtB,mBAAmB,CAAC,MAAW;QAC7B,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,sHAAsH;YAC5H,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,UAAU;SAC9B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;oBACtD,OAAO;wBACL,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,MAAM,EAAE,MAAM;qBACf,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;gBAEpC,IAAI,MAAM,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAEnD,IAAI,CAAC,kBAAkB;qBACpB,+BAA+B,CAAC,aAAa,EAAE,MAAM,CAAC;qBACtD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;4BAChE,uDAAS,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;4BAE7C,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;yBACpD;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;yBAChE;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBACjE,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oHAAoH;IAEpH,0BAA0B;IAC1B,2CAA2C;IAC3C,gBAAgB;IAChB,kCAAkC;IAClC,cAAc;IACd,sFAAsF;IACtF,kFAAkF;IAClF,SAAS;IACT,0BAA0B;IAC1B,wFAAwF;IACxF,oFAAoF;IACpF,qCAAqC;IACrC,QAAQ;IACR,+BAA+B;IAC/B,kCAAkC;IAClC,gCAAgC;IAChC,mDAAmD;IAEnD,wCAAwC;IACxC,+CAA+C;IAC/C,mCAAmC;IACnC,+BAA+B;IAC/B,gCAAgC;IAEhC,+CAA+C;IAE/C,kCAAkC;IAClC,mDAAmD;IACnD,0CAA0C;IAC1C,uBAAuB;IACvB,6BAA6B;IAC7B,yCAAyC;IACzC,8DAA8D;IAE9D,oDAAoD;IACpD,gCAAgC;IAEhC,mDAAmD;IACnD,4CAA4C;IAC5C,wDAAwD;IACxD,iDAAiD;IACjD,4BAA4B;IAC5B,qDAAqD;IACrD,mEAAmE;IACnE,yBAAyB;IACzB,+CAA+C;IAC/C,0BAA0B;IAE1B,4CAA4C;IAE5C,8CAA8C;IAC9C,oCAAoC;IACpC,4BAA4B;IAC5B,iBAAiB;IACjB,+CAA+C;IAC/C,0BAA0B;IAC1B,mFAAmF;IACnF,mBAAmB;IACnB,eAAe;IACf,8BAA8B;IAC9B,8CAA8C;IAC9C,mCAAmC;IACnC,4BAA4B;IAC5B,iBAAiB;IACjB,4CAA4C;IAC5C,eAAe;IACf,8BAA8B;IAC9B,4CAA4C;IAC5C,eAAe;IACf,cAAc;IACd,wBAAwB;IACxB,eAAe;IACf,iCAAiC;IACjC,8EAA8E;IAC9E,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,iBAAiB,CAAC,GAAQ;QACxB,sCAAsC;QACtC,uDAAS,CAAC;YACR,KAAK,EAAE,8BAA8B;YACrC,IAAI,EAAE,4DAA4D;YAClE,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,KAAK;YACxB,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;YACtB,2BAA2B;YAC3B,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE;qBAC5B,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,YAAY,CAAC;qBACrC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC;qBAC3B,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;gBAEzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;gBACtC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAE5B,IAAI,CAAC,kBAAkB;qBACpB,+BAA+B,CAAC,MAAM,CAAC;qBACvC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAC1B,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAE/C,sBAAsB;wBACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAEjB,mBAAmB;wBACnB,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAC7B,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;wBACzC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;wBACb,CAAC,CAAC,QAAQ,GAAG,qBAAqB,GAAG,CAAC,OAAO,MAAM,CAAC;wBACpD,CAAC,CAAC,KAAK,EAAE,CAAC;wBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;wBAChC,CAAC,CAAC,MAAM,EAAE,CAAC;wBAEX,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;wBAE7B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBAClE,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;wBAC/D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC/B,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC/B,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;iBAAM;gBACL,wBAAwB;gBACxB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;8FAzdU,uBAAuB;qHAAvB,uBAAuB;kEA2BvB,sEAAY;kEACZ,4DAAO;;;;;;;QC/CpB,6EAAyB;QAInB,+EACiB;QACnB,4DAAM;QAEN,6EAAmC;QAEnC,yEAAiB;QAGX,mHAGM;QACN,yEAAkB;QAOA,gFAAoB;QAAA,4DAAK;QAE/B,0EAA4B;QACsC,kEAAM;QAAA,4DAAI;QAC1E,iFACiE;QADtB,qJAAS,uBAAmB,IAAC;QAAxE,4DACiE;QAEnE,sEAAI;QAEqC,gJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAIhD,sEAAI;QAEqC,gJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,mEAAO;QAAA,4DAAW;QAMpD,oHAOK;QAiBP,4DAAK;QAGP,2EAAmB;QAIoC,4RAEvE,gBAAqB,MAAM,cAClB,oBAAoB,SACP,QAAQ,GACA,IAAD;QALL,4DAKQ;QAGZ,sEAAI;QAE8C,4RAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAG1F,sEAAI;QAE+C,4RAAS,gBAAqB,MAAM,CAAC,IAAC;QAArF,4DAAwF;QAG5F,sEAAI;QAE8C,4RAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAQlG,2EAAsC;QAM1B,2EAAe;QAAA,4DAAK;QAE1B,2EAAmB;QAEJ,kEAAM;QAAA,4DAAY;QAE7B,kFAAmF;QAA9C,wKAAmB,6BAAyB,IAAC;QAChF,oIAEa;QACf,4DAAa;QAEb,kIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAIe,gJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,wEAAY;QAAA,4DAAW;QACjC,sEACF;QAAA,4DAAS;QAET,8EACsE;QAAxC,gJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,sEACF;QAAA,4DAAS;QAOb,2EAAmB;QACb,8EAAkB;QAAA,4DAAK;QAE7B,2EAAmB;QAEJ,4EAAgB;QAAA,4DAAY;QAEvC,kFAC0D;QAAxD,wKAAmB,uCAAmC,IAAC;QACvD,oIAGa;QACf,4DAAa;QAEb,kIAEY;QACd,4DAAiB;QAEnB,2EAAmB;QAMb,gJAAS,gCAA4B,SAAS,CAAC,IAAC;QAChD,4EAAU;QAAA,mEAAO;QAAA,4DAAW;QAC5B,qEACF;QAAA,4DAAS;QAGT,8EAC8E;QAAhD,gJAAS,gCAA4B,QAAQ,CAAC,IAAC;QAC3E,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC7B,oEACF;QAAA,4DAAS;QAenB,qFAC+B;QAC7B,6EAAoC;QAClC,8IAMkB;QAClB,gIAKW;QACb,qEAAe;QAGf,6EAAgC;QAC9B,8IACsB;QACtB,kIACe;QACjB,qEAAe;QAEf,8EAAoC;QAClC,gJAC0B;QAC1B,kIACW;QACb,qEAAe;QAEf,8EAAwC;QACtC,gJAC+E;QAC/E,kIACe;QACjB,qEAAe;QAEf,8EAA+C;QAC7C,gJAC+B;QAC/B,kIACqC;QACvC,qEAAe;QAEf,8EAA8C;QAC5C,gJAC8B;QAC9B,kIACoC;QACtC,qEAAe;QAEf,8EAA0C;QACxC,gJAC0B;QAC1B,kIACe;QACjB,qEAAe;QAEf,8EAA2C;QACzC,gJAC2B;QAC3B,kIACiC;QACnC,qEAAe;QA2Bf,8EAAoC;QAClC,gJAC0B;QAC1B,kIAgBW;QACb,qEAAe;QAEf,8EAA8C;QAC5C,gJACoC;QACpC,kIAgBW;QACb,qEAAe;QAIf,8EAAyC;QACvC,gJAC+B;QAC/B,kIACe;QACjB,qEAAe;QAEf,8EAA+C;QAC7C,gJAC+E;QAC/E,kIAYW;QACb,qEAAe;QAEf,8EAAwC;QACtC,gJAC8B;QAC9B,kIACe;QACjB,qEAAe;QAEf,8EAAwC;QACtC,gJAC8B;QAC9B,kIAC6B;QAC/B,qEAAe;QAcf,8EAAyC;QACvC,gJACiF;QACjF,kIAMW;QACb,qEAAe;QAKf,8EAAoC;QAClC,gJACkB;QAClB,kIAeW;QACb,qEAAe;QACf,8IAAqE;QACrE,gIAEU;QACV,kIAC4D;QAC9D,4DAAY;QACZ,wHAGM;QACN,iFACoD;QACtD,4DAAM;;QAlbI,0DAAoC;QAApC,6FAAoC;QASzB,0DAAkC;QAAlC,sGAAkC;QAkCxC,2DAAkC;QAAlC,6FAAkC;QA6DvC,2DAAkB;QAAlB,+EAAkB;QAWoB,2DAAc;QAAd,oFAAc;QAKtC,0DAA6C;QAA7C,6GAA6C;QAQ/B,0DAA8C;QAA9C,sGAA8C;QAM9C,0DAA8C;QAA9C,sGAA8C;QAoB1B,2DAAwB;QAAxB,8FAAwB;QAM1D,0DAAuD;QAAvD,uHAAuD;QAUjE,0DAAuD;QAAvD,+GAAuD;QAO/B,0DAAsD;QAAtD,8GAAsD;QAmBvD,0DAAyB;QAAzB,sFAAyB;QAiOzC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;QAMnD,0DAAe;QAAf,+EAAe;QAIN,0DAAe;QAAf,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpbc;AAER;AAEkB;AACE;AAEX;AACV;AACY;AAEL;AAKzB;AAEwK;;;;;;;;;;;;;;;;;;;;;;;;;;ICN7L,2EAA2D;IACzD,mFACmB;IACvB,6DAAM;;;;IA+BQ,yEAAmE;IACjE,sEAAI;IAEqC,yTAAS,4BAAoB,UAAU,CAAC,IAAC;IAE5E,gFAA4B;IAAA,iEAAK;IAAA,6DAAW;IAIlD,sEAAI;IAEkC,yTAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzE,gFAA4B;IAAA,mEAAM;IAAA,6DAAW;IAInD,uEAAI;IAEoC,0TAAS,4BAAoB,UAAU,CAAC,IAAC;IAE3E,iFAA4B;IAAA,iEAAI;IAAA,6DAAW;IAajD,uEAAI;IAEqC,0TAAS,iCAAyB,MAAM,CAAC,IAAC;IAC7E,iFAA4B;IAAA,uEAAU;IAAA,6DAAW;IAIzD,sEAAe;;;;IAkJnB,uFAAqE;IACrD,oVAAmB,qCAA6B,GAAG,IAAI,IAAC;IAOtE,6DAAe;;;IARkB,2FAAiC;IACK,2DAGpE;IAHoE,yJAGpE;;;;IAML,gFAAkE;IAClD,8KAAS,wBAAwB,IAAC,+UACV,gDACzC,GAAG,IAAI,IAF4C;IAIhD,6DAAe;;;;IALe,2FAAiC;IAG3D,2DAAoD;IAApD,yHAAoD;;;IAO1D,wFAAmG;IAAA,+DACnG;IAAA,6DAAkB;;;IAEhB,wEAAqB;IAAA,wDAAY;IAAA,6DAAO;;;IAAnB,2DAAY;IAAZ,4EAAY;;;IADnC,iFAAgF;IAC9E,yIAAwC;IAC1C,6DAAW;;;IADF,2DAAY;IAAZ,6EAAY;;;IAKrB,wFACmD;IAAA,0EACnD;IAAA,6DAAkB;;;IAEhB,wEAA+B;IAC7B,wDAAsB;IAAA,6DAAO;;;IAA7B,2DAAsB;IAAtB,gGAAsB;;;IAF1B,iFAA+F;IAC7F,yIAC+B;IACjC,6DAAW;;;IAFF,2DAAsB;IAAtB,uFAAsB;;;IAM/B,wFACmD;IAAA,0EACnD;IAAA,6DAAkB;;;IAEhB,wEAA+B;IAC7B,wDAAsB;IAAA,6DAAO;;;IAA7B,2DAAsB;IAAtB,gGAAsB;;;IAF1B,iFAA+F;IAC7F,yIAC+B;IACjC,6DAAW;;;IAFF,2DAAsB;IAAtB,uFAAsB;;;IAM/B,wFAAoG;IAAA,oEAEpG;IAAA,6DAAkB;;;IAEhB,wEAAyB;IAAC,wDAAgB;IAAA,6DAAO;;;IAAvB,2DAAgB;IAAhB,0FAAgB;;;IAD5C,iFAA+F;IAC7F,yIAAiD;IACnD,6DAAW;;;IADF,2DAAgB;IAAhB,iFAAgB;;;IAKzB,wFACmD;IAAA,yEACnD;IAAA,6DAAkB;;;IAEhB,wEAA8B;IAAC,wDAAqB;IAAA,6DAAO;;;IAA5B,2DAAqB;IAArB,+FAAqB;;;IADtD,iFAA+F;IAC7F,yIAA2D;IAC7D,6DAAW;;;IADF,2DAAqB;IAArB,sFAAqB;;;IAK9B,wFACmD;IAAA,2EACnD;IAAA,6DAAkB;;;IAEhB,wEAAgC;IAC9B,wDAIF;;IAAA,6DAAO;;;IAJL,2DAIF;IAJE,yMAIF;;;IANF,iFAA+F;IAC7F,yIAKO;IACT,6DAAW;;;IANF,2DAAuB;IAAvB,wFAAuB;;;IAUhC,wFACmD;IAAA,wEAAY;IAAA,6DAAkB;;;IACjF,iFAA+F;IAE3F,wDAKF;;;IAAA,6DAAO;;;IALL,2DAKF;IALE,2SAKF;;;IAKF,wFACmD;IAAA,qEACnD;IAAA,6DAAkB;;;IAEhB,wEAA0B;IACxB,wDAAuC;;IAAA,6DAAO;;;IAA9C,2DAAuC;IAAvC,2KAAuC;;;IAF3C,iFAA+F;IAC7F,yIACgD;IAClD,6DAAW;;;IAFF,2DAAiB;IAAjB,kFAAiB;;;IAM1B,wFACiC;IAC/B,sEACF;IAAA,6DAAkB;;;IAClB,iFAAiF;IAC/E,wDACF;IAAA,6DAAW;;;IADT,2DACF;IADE,oGACF;;;IAIA,wFAAoG;IAClG,wEACF;IAAA,6DAAkB;;;IAGd,+EAAoF;IAClF,qEAAmC;IAAA,wDAErC;IAAA,6DAAS;;;IAF4B,2DAErC;IAFqC,4GAErC;;;IAEA,+EAAoF;IAClF,qEAA+B;IAAA,wDAEjC;IAAA,6DAAS;;;IAFwB,2DAEjC;IAFiC,4GAEjC;;;IAEA,yEAA+B;IAAC,iEAAI;IAAA,sEAAe;;;IAZvD,iFAAiF;IAC/E,8EAAiD;IAC/C,8IAGS;IAET,8IAGS;IAET,0JAAmD;IACrD,sEAAe;IACjB,6DAAW;;;IAbK,2DAAkC;IAAlC,gGAAkC;IACrC,2DAAuB;IAAvB,oFAAuB;IAKvB,2DAAsB;IAAtB,mFAAsB;;;IAWnC,wFAAoG;IAClG,uEACF;IAAA,6DAAkB;;;IAClB,iFAAiF;IAC/E,wDACF;;IAAA,6DAAW;;;IADT,2DACF;IADE,mMACF;;;IAMA,wFACiE;IAAA,kEAAM;IAAA,6DAAkB;;;IAIrF,+EAAsF;IACpF,qEAAmC;IAAA,wDAErC;IAAA,6DAAS;;;IAF4B,2DAErC;IAFqC,iGAErC;;;IACA,+EAAoF;IAClF,qEAAmC;IAAA,wDAErC;IAAA,6DAAS;;;IAF4B,2DAErC;IAFqC,iGAErC;;;IACA,+EAAsF;IACpF,qEAA+B;IAAA,wDAEjC;IAAA,6DAAS;;;IAFwB,2DAEjC;IAFiC,iGAEjC;;;IACA,+EAAoF;IAClF,qEAAyC;IAAA,wDAE3C;IAAA,6DAAS;;;IAFkC,2DAE3C;IAF2C,iGAE3C;;;IACA,+EAA6E;IAC3E,qEAAsC;IAAA,wDAExC;IAAA,6DAAS;;;IAF+B,2DAExC;IAFwC,iGAExC;;;IAtBJ,iFACoG;IAAnC,0KAAS,wBAAwB,IAAC;IACjG,8EAAsC;IACpC,8IAGS;IACT,8IAGS;IACT,8IAGS;IACT,8IAGS;IACT,8IAGS;IACX,sEAAe;IACjB,6DAAW;;;IAtBK,2DAAuB;IAAvB,qFAAuB;IAC1B,2DAAwB;IAAxB,qFAAwB;IAIxB,2DAAwB;IAAxB,qFAAwB;IAIxB,2DAAwB;IAAxB,qFAAwB;IAIxB,2DAAuB;IAAvB,oFAAuB;;;IAapC,wFACoB;IAAA,kEAAM;IAAA,6DAAkB;;;;IAC5C,iFACsE;IAC5B,wKAAS,wBAAwB,IAAC,wTAC/D,oCAAwB,IADuC;IAExE,qFACoB;IACtB,6DAAS;IAET,+EACuE;IAA9B,iXAAS,+BAAmB,IAAC;IACpE,qFAA+E;IACjF,6DAAS;IAQT,+EACkE;IAAhE,iXAAS,0CAA8B,IAAC;IACxC,qFAAqF;IACvF,6DAAS;;;IAlB2B,2DAAuB;IAAvB,wEAAuB;IAAtC,wEAAc;IAKjC,2DAAsC;IAAtC,8HAAsC;IACH,2DAAuB;IAAvB,wEAAuB;IAAvC,yEAAe;IASG,2DAAsC;IAAtC,8HAAsC;IAErC,2DAA0B;IAA1B,2EAA0B;IAA7C,4EAAkB;;;IAI3C,6EAAqE;;;IACrE,2EACU;;IAD+C,+EAA0B;;;IAEnF,iFAAoC;IAClC,wDAA+C;IAAA,6DAAW;;;IAA1D,2DAA+C;IAA/C,+HAA+C;;;IAEnD,4EAA2C;IACzC,wFACuB;IACzB,6DAAM;;IAFkC,2DAAe;IAAf,yEAAe;;;;ADla9D,MAAM,4BAA4B;IA+CvC,YACU,MAAc,EACd,QAAyB,EACzB,yBAAiD,EACjD,EAAe,EACf,QAAkB,EAClB,iBAAqC,EACrC,MAAiB,EACjB,oBAA0C,EAC1C,kBAAuC;QARvC,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,8BAAyB,GAAzB,yBAAyB,CAAwB;QACjD,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAU;QAClB,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,WAAM,GAAN,MAAM,CAAW;QACjB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,uBAAkB,GAAlB,kBAAkB,CAAqB;QAvDjD,qBAAgB,GAAa;YAC3B,kBAAkB;YAClB,IAAI;YACJ,cAAc;YACd,cAAc;YACd,QAAQ;YACR,aAAa;YACb,eAAe;YACf,aAAa;YACb,SAAS;YACT,UAAU;YACV,mBAAmB;YACnB,UAAU;YACV,QAAQ;YACR,QAAQ;SACT,CAAC;QAMF,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAI9C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,QAAQ,CAAC;QACtB,aAAQ,GAAqB,IAAI,0CAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QAGjC,gBAAW,GAAS,IAAI,IAAI,EAAE,CAAC;QAC/B,iBAAY,GAAS,IAAI,IAAI,CAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CACrD,CAAC;QACF,eAAU,GAAS,IAAI,IAAI,CACzB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CACrD,CAAC;QAwCF,+HAA+H;QAE/H,gBAAW,GAAU;YACnB,EAAE,IAAI,EAAE,SAAS,EAAE;YACnB,wBAAwB;YACxB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,UAAU,EAAE;SACrB,CAAC;QAEF,mBAAc,GAAW,SAAS,CAAC;QAYnC,yBAAoB,GAAW,KAAK,CAAC;QA2PrC,2HAA2H;QAC3H,mBAAmB;QACnB,2HAA2H;QAE3H,yCAAyC;QACzC,6BAAwB,GAAG,IAAI,qEAAc,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;QAC9D,kCAA6B,GAAY,KAAK,CAAC;QA6C/C,sBAAiB,GAAW,EAAE,CAAC;QAuB/B,YAAY;QACZ,YAAY;QACZ,cAAc;QACd,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,eAAe;QACf,WAAW;QACX,WAAW;QACX,+HAA+H;QAC/H,oBAAe,GAAW,iBAAiB,CAAC;QAwF5C,+HAA+H;QAC/H,iBAAY,GAAU,EAAE,CAAC;QAtdvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,YAAY,CAAC;IACnE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,SAAS,EAAE,gEAAmB,CAAC;YACxC,YAAY,EAAE,CAAC,aAAa,EAAE,gEAAmB,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAaD,uBAAuB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAGD,mCAAmC;QACjC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,6BAA6B,CAAC,YAAiB;QAC7C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,YAAY,EAAE,YAAY;SAC3B,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,wBAAwB;IACxB,2DAA2D;IAC3D,gCAAgC;IAChC,kBAAkB;IAClB,cAAc;IACd,oBAAoB;IACpB,yBAAyB;IACzB,2BAA2B;IAC3B,kBAAkB;IAClB,uBAAuB;IACvB,oBAAoB;IACpB,sBAAsB;IACtB,kBAAkB;IAClB,kBAAkB;IAClB,SAAS;IACT,gBAAgB;IAChB,kEAAkE;IAClE,6DAA6D;IAC7D,QAAQ;IACR,gCAAgC;IAChC,kBAAkB;IAClB,cAAc;IACd,oBAAoB;IACpB,yBAAyB;IACzB,2BAA2B;IAC3B,gCAAgC;IAChC,uBAAuB;IACvB,oBAAoB;IACpB,sBAAsB;IACtB,kBAAkB;IAClB,kBAAkB;IAClB,SAAS;IACT,gBAAgB;IAChB,yDAAyD;IACzD,uDAAuD;IACvD,uDAAuD;IACvD,+DAA+D;IAC/D,+DAA+D;IAC/D,+DAA+D;IAC/D,+DAA+D;IAC/D,wDAAwD;IACxD,wDAAwD;IACxD,oEAAoE;IACpE,QAAQ;IACR,gCAAgC;IAChC,kBAAkB;IAClB,cAAc;IACd,oBAAoB;IACpB,yBAAyB;IACzB,2BAA2B;IAC3B,uBAAuB;IACvB,oBAAoB;IACpB,sBAAsB;IACtB,kBAAkB;IAClB,kBAAkB;IAClB,SAAS;IACT,MAAM;IACN,IAAI;IAEJ,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAEzD,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;YAC9B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY;SAC3C,CAAC;QACF,4BAA4B;QAC5B,IAAI,CAAC,yBAAyB;aAC3B,0CAA0C,CAAC,MAAM,CAAC;aAClD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,GAAG,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;YACrD,CAAC;SACF,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,+HAA+H;IAE/H,iBAAiB,CAAC,EAAU;QAC1B,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,gDAAgD;YACtD,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,0BAA0B;SAC9C,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,MAAM,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBAExB,IAAI,CAAC,kBAAkB;qBACpB,6BAA6B,CAAC,MAAM,CAAC;qBACrC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBAClE,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBACjE,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+HAA+H;IAE/H,sBAAsB,CAAC,EAAU;QAC/B,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAE9C,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAErC,uDAAS,CAAC;YACR,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,oDAAoD;YAC3D,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,iBAAiB;YACpC,gBAAgB,EAAE,QAAQ;SAC3B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,yBAAyB,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,SAAS,CACpE,GAAG,EAAE;oBACH,uDAAS,CAAC;wBACR,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,8BAA8B;qBACtC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;wBACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;4BACnB,qDAAqD;yBACtD,CAAC,CAAC;wBACH,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC,CAAC,CAAC;gBACL,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;oBACR,uDAAS,CAAC;wBACR,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,uBAAuB;wBAC9B,IAAI,EAAE,8CAA8C;qBACrD,CAAC,CAAC;gBACL,CAAC,CACF,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;IACd,yEAAyE;IACzE,wCAAwC;IACxC,6EAA6E;IAC7E,qBAAqB;IACrB,uCAAuC;IACvC,kCAAkC;IAClC,gCAAgC;IAChC,gCAAgC;IAChC,kEAAkE;IAClE,oDAAoD;IACpD,0CAA0C;IAE1C,4DAA4D;IAE5D,+CAA+C;IAC/C,eAAe;IACf,wEAAwE;IACxE,QAAQ;IACR,OAAO;IACP,sBAAsB;IACtB,sCAAsC;IACtC,sEAAsE;IACtE,OAAO;IACP,wBAAwB;IACxB,MAAM;IACN,kBAAkB;IAClB,IAAI;IAEJ,iBAAiB;QACf,IAAI,KAAK,GAAG,mDAAmD,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,eAAe,KAAK,CAAC;IACrB,cAAc,CAAC,GAAQ;QACrB,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAED,cAAc,CAAC,IAAS;QACtB,IAAI,KAAK,GAAG,mDAAmD,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE;SAC/C,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;IACxB,mBAAmB,CAAC,IAAS;QAC3B,IAAI,KAAK,GAAG,mDAAmD,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;SAC7C,CAAC,CAAC;IACL,CAAC;IAED,2BAA2B;IAC3B,sBAAsB,CAAC,IAAS;QAC9B,IAAI,KAAK,GAAG,mDAAmD,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE;SAC/C,CAAC,CAAC;IACL,CAAC;IAWD,4BAA4B;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,2BAA2B;QACzB,IAAI,IAAI,CAAC,4BAA4B,EAAE,EAAE;YACvC,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;YACtC,OAAO;SACR;QAED,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,4BAA4B,CAAC,GAAS;QACpC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAC3D,MAAM,CAAC;SACV;QACD,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QACrE,QAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC;IAC/B,CAAC;IAED,6BAA6B;QAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,IAAI,WAAW,KAAK,OAAO,EAAE;YAC3B,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;SAC3C;aAAM,IAAI,WAAW,KAAK,OAAO,EAAE;YAClC,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;SAC5C;QACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CACT,iCAAiC,EACjC,IAAI,CAAC,6BAA6B,CACnC,CAAC;IACJ,CAAC;IAGD,wBAAwB,CAAC,MAAW;QAClC,+EAA+E;QAE/E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAChC,OAAO,CAAC,GAAG,CACT,uCAAuC,EACvC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CACnD,CAAC;QAEF,IACE,IAAI,CAAC,iBAAiB,KAAK,KAAK;YAChC,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI;gBAC1D,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,EACnE;YACA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,wCAAwC,CACzC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAcD,iBAAiB;QACf,OAAO,CAAC,GAAG,CACT,kCAAkC,EAClC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC1C,CAAC;QAEF,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,iBAAiB,KAAK,KAAK,EAAE;YACpC,OAAO,GAAG;gBACR,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM;gBACxD,aAAa,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW;gBACpE,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE;oBACT;wBACE,SAAS,EAAE,EAAE;wBACb,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa;wBAC/D,aAAa,EAAE,OAAO;qBACvB;iBACF;aACF,CAAC;SACH;QAED,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC9B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,IAAI,CAAC,iBAAiB;YAC9B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnD,UAAU,EAAE,OAAO;YACnB,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;SAC7D,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,iNAAsC,EACtC,YAAY,CACb,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEjC,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,GAAG,EAAE;gBACjD,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC9C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACxE,IAAI,CAAC,+BAA+B,EAAE,CAAC;aACxC;iBAAM,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,GAAG,EAAE;gBACxD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxE;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,mCAAmC,CACpC,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAA+B;QAC7B,IAAI,MAAM,GAAG;YACX,eAAe,EAAE,IAAI,CAAC,mBAAmB,CAAC,eAAe;YACzD,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAQ;YAC3C,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAQ;YAC3C,aAAa,EAAE,IAAI,CAAC,mBAAmB,CAAC,aAAa;SACtD,CAAC;QACF,IAAI,CAAC,kBAAkB;aACpB,wCAAwC,CAAC,MAAM,CAAC;aAChD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBAChE,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,yBAAyB;oBACzB,sDAAsD;oBACtD,MAAM;iBACP;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC;SACpB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAID,mBAAmB,CAAC,MAAW;QAC7B,uDAAS,CAAC;YACR,KAAK,EAAE,kBAAkB;YACzB,KAAK,EAAE,QAAQ;YACf,YAAY,EAAE;gBACZ,GAAG,EAAE,KAAK;aAEX;YACD,gBAAgB,EAAE,kBAAkB;YACpC,iBAAiB,EAAE,QAAQ;YAC3B,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,QAAQ;SAC3B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,gBAAgB,GAAG,MAAM,CAAC,KAAK,CAAC;gBACtC,iCAAiC;gBAEjC,IAAI,SAAS,GAAG,EAAE,CAAC;gBAEnB,IAAI,gBAAgB,KAAK,KAAK,EAAE;oBAC9B,SAAS,GAAG,WAAW,CAAC;iBACzB;gBAGD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CACrD,eAAe,EACf,CAAC,SAAS,CAAC,CACZ,CAAC;gBAEF,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,uDAAS,CAAC;wBACR,KAAK,EACH,8DAA8D;wBAChE,KAAK,EAAE,UAAU;wBACjB,gBAAgB,EAAE,2BAA2B;wBAC7C,iBAAiB,EAAE,QAAQ;wBAC3B,gBAAgB,EAAE,IAAI;wBACtB,gBAAgB,EAAE,QAAQ;wBAE1B,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;4BACxB,IAAI,CAAC,KAAK,EAAE;gCACV,OAAO,2BAA2B,CAAC;6BACpC;wBACH,CAAC;qBACF,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;wBACjB,IAAI,MAAM,CAAC,WAAW,EAAE;4BACtB,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC;4BAErC,MAAM,aAAa,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,GAAG,CAC9D,CAAC,OAAO,EAAE,EAAE;gCACV,OAAO;oCACL,EAAE,EAAE,OAAO,CAAC,EAAE;oCACd,MAAM,EAAE,MAAM;oCACd,eAAe,EAAE,eAAe;iCACjC,CAAC;4BACJ,CAAC,CACF,CAAC;4BAEF,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;4BAEpC,IAAI,MAAM,GAAG,EAAE,YAAY,EAAE,gBAAgB,EAAE,CAAC;4BAEhD,IAAI,CAAC,yBAAyB;iCAC3B,wBAAwB,CAAC,MAAM,EAAE,aAAa,CAAC;iCAC/C,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iCAC9B,SAAS,CAAC;gCACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oCACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oCAC1B,IACE,GAAG,CAAC,UAAU,IAAI,GAAG;wCACrB,GAAG,CAAC,UAAU,IAAI,GAAG;wCACrB,GAAG,CAAC,UAAU,IAAI,GAAG,EACrB;wCACA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;wCAEF,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;wCACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;qCACxB;yCAAM;wCACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;qCACH;gCACH,CAAC;gCACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oCACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;gCACJ,CAAC;gCACD,QAAQ,EAAE,GAAG,EAAE;oCACb,IAAI,CAAC,OAAO,EAAE,CAAC;gCACjB,CAAC;6BACF,CAAC,CAAC;yBACN;6BAAM;4BACL,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;4BACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;yBACxB;oBACH,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;wGA3nBU,4BAA4B;2HAA5B,4BAA4B;mEAmB5B,sEAAY;mEACZ,4DAAO;;;;;;;QC7CpB,8EAAyB;QAInB,gFACiB;QACnB,6DAAM;QACN,8EAAmC;QAEnC,0EAAiB;QAGX,yHAGI;QACJ,0EAAkB;QAOA,8EAAiB;QAAA,6DAAK;QAE5B,2EAA4B;QACsC,mEAAM;QAAA,6DAAI;QAC1E,kFACiE;QADtB,2JAAS,uBAAmB,IAAC;QAAxE,6DACiE;QAGnE,uEAAI;QAEqC,sJAAS,uBAAmB,IAAC;QAChE,iFAA4B;QAAA,gEAAG;QAAA,6DAAW;QAIhD,uEAAI;QAEqC,sJAAS,aAAS,IAAC;QACtD,iFAA4B;QAAA,oEAAO;QAAA,6DAAW;QAKpD,+IAyCe;QACjB,6DAAK;QAEP,4EAAmB;QAIoC,oSAEzE,gBAAqB,MAAM,cACX,aAAa,SACP,QAAQ,GACA,IAAD;QALH,6DAKM;QAGV,uEAAI;QAE8C,oSAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,6DAAsF;QAG1F,uEAAI;QAE+C,oSAAS,gBAAqB,MAAM,CAAC,IAAC;QAArF,6DAAwF;QAG5F,uEAAI;QAE8C,oSAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,6DAAsF;QAQlG,4EAAiD;QAGvC,2EAAc;QAAA,6DAAK;QAGzB,4EAAyD;QAId,sJAAS,kCAA8B,aAAa,CAAC,IAAC;QAC3F,6EAAU;QAAA,wEAAW;QAAA,6DAAW;QAChC,2EACF;QAAA,6DAAS;QAGT,+EAC6E;QAA/C,sJAAS,kCAA8B,KAAK,CAAC,IAAC;QAC1E,6EAAU;QAAA,+EAAkB;QAAA,6DAAW;QACvC,2EACF;QAAA,6DAAS;QAET,+EAE6D;QAA3D,sJAAS,kCAA8B,iBAAiB,CAAC,IAAC;QAC1D,6EAAU;QAAA,mFAAsB;QAAA,6DAAW;QAC3C,8EACF;QAAA,6DAAS;QAET,+EAEoE;QAAlE,sJAAS,kCAA8B,wBAAwB,CAAC,IAAC;QACjE,6EAAU;QAAA,mFAAsB;QAAA,6DAAW;QAC3C,qFACF;QAAA,6DAAS;QAET,+EAE0E;QAAxE,sJAAS,kCAA8B,8BAA8B,CAAC,IAAC;QACvE,6EAAU;QAAA,+EAAkB;QAAA,6DAAW;QACvC,2FACF;QAAA,6DAAS;QAET,+EAEuE;QAArE,sJAAS,kCAA8B,2BAA2B,CAAC,IAAC;QACpE,6EAAU;QAAA,uEAAU;QAAA,6DAAW;QAC/B,wFACF;QAAA,6DAAS;QAMjB,4EAA4C;QAGlC,oEAAO;QAAA,6DAAK;QAGlB,4EAAoD;QAI9C,sJAAS,sBAAkB,SAAS,CAAC,IAAC;QACtC,6EAAU;QAAA,oEAAO;QAAA,6DAAW;QAC5B,sEACF;QAAA,6DAAS;QAGT,+EACsE;QAAxC,sJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,6EAAU;QAAA,qEAAQ;QAAA,6DAAW;QAC7B,uEACF;QAAA,6DAAS;QAGT,+EACsE;QAAxC,sJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,6EAAU;QAAA,kEAAK;QAAA,6DAAW;QAC1B,uEACF;QAAA,6DAAS;QAGT,+EACsE;QAAxC,sJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,8EAAU;QAAA,oEAAM;QAAA,6DAAW;QAC3B,wEACF;QAAA,6DAAS;QAoBjB,uFAC+B;QAC7B,+EAA8C;QAC5C,sJASkB;QAClB,wIAMW;QACb,sEAAe;QAEf,+EAAgC;QAC9B,sJACkB;QAClB,wIAEW;QACb,sEAAe;QAEf,+EAA0C;QACxC,sJAEkB;QAClB,wIAGW;QACb,sEAAe;QAEf,+EAA0C;QACxC,sJAEkB;QAClB,wIAGW;QACb,sEAAe;QAEf,+EAAoC;QAClC,sJAEkB;QAClB,wIAEW;QACb,sEAAe;QAEf,+EAAyC;QACvC,sJAEkB;QAClB,wIAEW;QACb,sEAAe;QAEf,+EAA2C;QACzC,sJAEkB;QAClB,wIAOW;QACb,sEAAe;QAEf,+EAAyC;QACvC,sJACiF;QACjF,wIAQW;QACb,sEAAe;QAEf,+EAAqC;QACnC,sJAEkB;QAClB,wIAGW;QACb,sEAAe;QAEf,+EAAsC;QACpC,sJAGkB;QAClB,wIAEW;QACb,sEAAe;QAEf,+EAA+C;QAC7C,sJAEkB;QAClB,wIAcW;QACb,sEAAe;QAEf,+EAAsC;QACpC,sJAEkB;QAClB,wIAEW;QACb,sEAAe;QAIf,+EAAoC;QAClC,sJACyF;QACzF,wIAwBW;QACb,sEAAe;QAEf,+EAAoC;QAClC,sJAC4C;QAC5C,yIAuBW;QACb,sEAAe;QACf,oJAAqE;QACrE,sIACU;QACV,wIAC4D;QAC9D,6DAAY;QACZ,8HAGM;QACN,kFACoD;QACtD,6DAAM;;QA5bI,2DAA6B;QAA7B,uFAA6B;QAQlB,2DAAkC;QAAlC,uGAAkC;QAkC9B,4DAAkD;QAAlD,mHAAkD;QAqFvC,4DAAuD;QAAvD,gHAAuD;QAOvD,2DAA+C;QAA/C,wGAA+C;QAM/C,2DAA2D;QAA3D,oHAA2D;QAO3D,2DAAkE;QAAlE,2HAAkE;QAOlE,2DAAwE;QAAxE,iIAAwE;QAOxE,2DAAqE;QAArE,8HAAqE;QAoBrE,4DAA6C;QAA7C,sGAA6C;QAO7C,2DAA8C;QAA9C,uGAA8C;QAO9C,2DAA8C;QAA9C,uGAA8C;QAO9C,2DAA8C;QAA9C,uGAA8C;QAwB7C,2DAAyB;QAAzB,uFAAyB;QA8MzC,4DAAiC;QAAjC,kGAAiC;QACpB,2DAAyB;QAAzB,mGAAyB;QAKnD,2DAAe;QAAf,gFAAe;QAIN,2DAAe;QAAf,yEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtbpB;AAE8C;AACX;AACE;AAEY;AAIoF;AAQM;AACT;AACA;AACxG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICZtC,2EAA+C;IAC7C,sEACM;IACR,6DAAM;;;IAgBE,6EAA8D;IAAA,8EACpD;IAAA,6DAAY;;;IAQtB,6EAAoE;IAAA,qFAC1D;IAAA,6DAAY;;;IAStB,6EAAoE;IAAA,qFAC1D;IAAA,6DAAY;;;IAQtB,6EAAqE;IAAA,qFAC3D;IAAA,6DAAY;;;IAmBtB,6EAAgE;IAC9D,sFACF;IAAA,6DAAY;;;IAqBZ,6EAAmE;IAAA,mFACzD;IAAA,6DAAY;;;IAUtB,6EAA+D;IAAA,gFAAoB;IAAA,6DAAY;;;IAC/F,6EAAuE;IAAA,6FAChE;IAAA,6DAAY;;;IAQnB,6EAA+D;IAAA,+EACrD;IAAA,6DAAY;;;IASxB,4EAAU;IAAA,uEAAW;IAAA,6DAAW;IAAC,0FACnC;;;IAoCY,uFACkD;IAAA,8DAAE;IAAA,6DAAkB;;;IACtE,gFACkD;IAChD,wDACF;IAAA,6DAAW;;;IAHwC,qFAAuB;IAExE,2DACF;IADE,0FACF;;;IAIA,uFACiE;IAAA,oEAAQ;IAAA,6DAAkB;;;IAC3F,gFACiE;IAElD,oEAAQ;IAAA,6DAAY;IAC/B,wEACmB;IACrB,6DAAiB;;;IANgC,qFAAuB;;;IAU1E,uFACiE;IAAA,oEAAQ;IAAA,6DAAkB;;;IAC3F,gFACiE;IAElD,oEAAQ;IAAA,6DAAY;IAC/B,wEACmB;IACrB,6DAAiB;;;IANgC,qFAAuB;;;IAW1E,uFACmE;IAAA,uEAC7D;IAAA,6DAAkB;;;;IACxB,gFACmE;IAE/D,6eAAU,oDAAoC,IAAC;;IADjD,6DAEgD;;;;IAJC,qFAAuB;IAE/C,2DAA2D;IAA3D,wLAA2D;;;IAQtF,uFACoB;IAAA,oEAAQ;IAAA,6DAAkB;;;;IAC9C,gFACmD;IACT,iLAAS,wBAAwB,IAAC,kUAC/D,iCAAqB,IAD0C;IAExE,gFAAgC;IAAA,yEAAa;IAAA,6DAAW;;;IAK5D,uFACoB;IAAA,kEAAM;IAAA,6DAAkB;;;;IAC5C,gFACmD;IACV,iLAAS,wBAAwB,IAAC,kUAC9D,2BAAe,IAD+C;IAEvE,oFAAqF;IACvF,6DAAS;;IAD+B,2DAA0B;IAA1B,2EAA0B;IAA7C,4EAAkB;;;IAK3C,6EAAmE;;;IACnE,0EAIqD;;IAA/C,+EAA0B;;;IAChC,gFAAoC;IAAA,wDAE/B;IAAA,6DAAW;;;IAFoB,2DAE/B;IAF+B,8HAE/B;;;IAGP,2EAAmD;IACjD,uFACuB;IACzB,6DAAM;;IAFkC,2DAAe;IAAf,yEAAe;;;;;IAhPrE,0EAAmC;IACjC,mIAGM;IACN,2EAAoB;IAEZ,wDAAmC;IAAA,6DAAK;IAKhD,4EAAyC;IAKtB,oEAAO;IAAA,6DAAY;IAC9B,yEAA+E;IAC/E,iFAA0D;IAAtC,qTAAS,mCAA2B,IAAC;IAAC,mEAAM;IAAA,6DAAW;IAC3E,iJACsB;IACxB,6DAAiB;IAGnB,4EAAwD;IAEzC,yEAAY;IAAA,6DAAY;IACnC,yEAAqF;IACrF,iJACsB;IACxB,6DAAiB;IAGnB,4EAAwD;IAEzC,0EAAa;IAAA,6DAAY;IACpC,yEAAqF;IAErF,iJACsB;IACxB,6DAAiB;IAGnB,4EAAwD;IAEzC,0EAAa;IAAA,6DAAY;IACpC,yEAA6E;IAC7E,iJACsB;IACxB,6DAAiB;IAGnB,4EAAwD;IAEzC,gFAAmB;IAAA,6DAAY;IAC1C,mFAA4E;IAAhE,qXAAiC;IAC3C,mFAA4B;IAAA,4EAAe;IAAA,6DAAa;IACxD,mFAAyB;IAAA,yEAAY;IAAA,6DAAa;IAKxD,4EAAwD;IAExC,uEAAS;IAAA,6DAAY;IACjC,yEAAwE;IACxE,iFAA+C;IAA3B,qTAAS,wBAAgB,IAAC;IAAC,mEAAM;IAAA,6DAAW;IAChE,iJAEY;IACd,6DAAiB;IAgBnB,4EAAwD;IAEzC,yEAAY;IAAA,6DAAY;IACnC,yEAA2E;IAC3E,iJACsB;IACxB,6DAAiB;IAGnB,4EAAwD;IAEpD,yEACkB;IAGlB,iJAA+F;IAC/F,iJACmB;IACrB,6DAAiB;IAGnB,4EAAwD;IAEzC,oEAAO;IAAA,6DAAY;IAC9B,yEAAuE;IACvE,iJACsB;IACxB,6DAAiB;IAKvB,kFAAe;IAEX,qJAEc;IACd,4EAAkB;IAUI,6EAAgB;IAAA,6DAAK;IAE3B,2EAA4B;IACsC,mEAAM;IAAA,6DAAI;IAC1E,kFACiE;IADtB,wTAAS,2BAAmB,IAAC;IAAxE,6DACiE;IAGnE,uEAAI;IAEqC,mTAAS,oBAAY,IAAC;IACzD,iFAA4B;IAAA,gEAAG;IAAA,6DAAW;IAMpD,uEAAyB;IAC3B,6DAAM;IAGR,sFACoF;IAElF,+EAAgC;IAC9B,+JACsE;IACtE,iJAGW;IACb,sEAAe;IAEf,+EAAsC;IACpC,+JAC2F;IAC3F,iJAOW;IACb,sEAAe;IACf,+EAAsC;IACpC,+JAC2F;IAC3F,iJAOW;IACb,sEAAe;IAEf,+EAAwC;IACtC,+JAEwB;IACxB,iJAMW;IACb,sEAAe;IAEf,+EAAsC;IACpC,+JAC8C;IAC9C,iJAMW;IACb,sEAAe;IACf,+EAAoC;IAClC,+JAC4C;IAC5C,iJAMW;IACb,sEAAe;IAEf,6JAAmE;IACnE,+IAIqD;IACrD,iJAEgB;IAClB,6DAAY;IAEZ,uIAGM;IACN,kFACyE;IAE3E,6DAAM;IAMhB,mEAAI;IACJ,6EAA4C;IACwC,oTAAS,gBAAQ,IAAC;IAClG,8EAAU;IAAA,oEAAM;IAAA,6DAAW;IAC3B,sEACF;IAAA,6DAAS;IACT,gFAC4F;IAAvD,oTAAS,kBAAU,IAAC;IACvD,8EAAU;IAAA,kEAAI;IAAA,6DAAW;IACzB,0DACF;IAAA,6DAAS;;;;IArQO,2DAA2B;IAA3B,gGAA2B;IAMrC,2DAAmC;IAAnC,+GAAmC;IAKxB,2DAAqB;IAArB,sFAAqB;IAMkB,2DAAiB;IAAjB,2EAAiB;IAEvD,2DAAgD;IAAhD,oHAAgD;IAQJ,2DAAiB;IAAjB,2EAAiB;IAC7D,2DAAsD;IAAtD,0HAAsD;IAQV,2DAAiB;IAAjB,2EAAiB;IAE7D,2DAAsD;IAAtD,0HAAsD;IAQT,2DAAiB;IAAjB,2EAAiB;IAC9D,2DAAuD;IAAvD,2HAAuD;IAQvD,2DAAiC;IAAjC,gGAAiC;IAUO,2DAAiB;IAAjB,2EAAiB;IAEzD,2DAAkD;IAAlD,sHAAkD;IAsBP,2DAAiB;IAAjB,2EAAiB;IAC5D,2DAAqD;IAArD,yHAAqD;IAOjD,2DAA+B;IAA/B,+EAA+B;IAEd,2DAAqB;IAArB,qEAAqB;IAE1C,2DAAiD;IAAjD,qHAAiD;IACjD,2DAAyD;IAAzD,6HAAyD;IAQlB,2DAAiB;IAAjB,2EAAiB;IACxD,2DAAiD;IAAjD,qHAAiD;IAazD,2DAA2B;IAA3B,4FAA2B;IA8BQ,4DAAqC;IAArC,sGAAqC;IAyErD,4DAA+B;IAA/B,mGAA+B;IAKjE,2DAAuB;IAAvB,oGAAuB;IAMF,2DAAuB;IAAvB,2FAAuB;IAId,2DAAe;IAAf,yEAAe;IAed,2DAA4B;IAA5B,wFAA4B;IAAC,4GAAoC;IAGzF,2DACF;IADE,wGACF;;;ADzOP,MAAM,+BAA+B;IAyB1C,YACU,EAAe,EACf,GAAgB,EAChB,YAA0B,EAC1B,aAA2B,EAC3B,mBAAwC,EACxC,yBAAiD,EACjD,QAAyB,EACzB,MAAc,EACd,KAAwB,EACxB,WAA8B,EAC9B,oBAA0C,EAC1C,KAAqB,EACrB,MAAiB,EACjB,iBAAqC,EACrC,kBAAsC;QAdtC,OAAE,GAAF,EAAE,CAAa;QACf,QAAG,GAAH,GAAG,CAAa;QAChB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAc;QAC3B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,8BAAyB,GAAzB,yBAAyB,CAAwB;QACjD,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAmB;QACxB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAW;QACjB,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAnChD,aAAQ,GAAY,IAAI,CAAC;QACzB,iBAAY,GAAW,KAAK,CAAC;QAG7B,iBAAY,GAAU,EAAE,CAAC;QAEzB,kBAAa,GAAG,IAAI,CAAC;QAGrB,iBAAY,GAAmB;YAC7B,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE;YAC5C,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE;SACnD,CAAC;QAEA,aAAQ,GAAqB,IAAI,0CAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QACjC,eAAU,GAAG,IAAI,wEAAkB,CAAM,EAAE,CAAC,CAAC;QAiI7C,eAAU,GAAY,KAAK,CAAC;QAmK5B,UAAK,GAAU,EAAE,CAAC,CAAC,iBAAiB;QAEpC,eAAU,GAAgC,EAAE,CAAC;QAiC7C,kBAAa,GAAY,IAAI,CAAC;QAa9B,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,IAAI,CAAC;QAC1B,qBAAgB,GAAW,CAAC,CAAC,CAAC,CAAC,sCAAsC;QAOrE,8GAA8G;QAE9G,2BAAsB,GAAG,IAAI,kDAAe,CAAoB,EAAE,CAAC,CAAC;QACpE,mBAAc,GAAG;YACf,IAAI;YACJ,UAAU;YACV,UAAU;YACV,YAAY;YACZ,UAAU;YACV,QAAQ;SACT,CAAC;QAEF,kBAAa,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC7C,SAAI,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpC,kBAAa,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QACrE,sBAAiB,GAAY,IAAI,CAAC;QAuC3B,kBAAa,GAAoB,EAAE,CAAC;QACpC,kBAAa,GAAG,IAAI,kDAAe,CAAC,KAAK,CAAC,CAAC;QAqKlD,UAAK,GAAY,KAAK;QAriBpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QACtD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC1C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAqB;IACrB,4EAA4E;IAC5E,gDAAgD;IAChD,+BAA+B;IAE/B,yDAAyD;IACzD,4EAA4E;IAC5E,oDAAoD;IAEpD,iEAAiE;IACjE,kDAAkD;IAClD,YAAY;IACZ,+EAA+E;IAE/E,uCAAuC;IACvC,gCAAgC;IAChC,yEAAyE;IACzE,oEAAoE;IACpE,iDAAiD;IACjD,kCAAkC;IAClC,0DAA0D;IAC1D,SAAS;IACT,6BAA6B;IAC7B,mCAAmC;IACnC,+CAA+C;IAC/C,kCAAkC;IAClC,0DAA0D;IAC1D,SAAS;IACT,2CAA2C;IAC3C,6BAA6B;IAC7B,iDAAiD;IACjD,kCAAkC;IAClC,0DAA0D;IAC1D,SAAS;IACT,2CAA2C;IAC3C,6BAA6B;IAC7B,kCAAkC;IAClC,MAAM;IACN,IAAI;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC1C,iEAAiE;YACjE,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAE3B,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;gBAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAChC,IAAI,MAAM,IAAI,QAAQ,EAAE;oBACtB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;iBAC9B;qBAAM,IAAI,MAAM,IAAI,MAAM,EAAE;oBAC3B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;iBAC5B;qBAAM,IAAI,MAAM,IAAI,QAAQ,EAAE;oBAC7B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;iBAC9B;gBAED,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBAEvB,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAID,WAAW;QACT,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,yBAAyB;aAC3B,sBAAsB,CAAC,MAAM,CAAC;aAC9B,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,IAAI,GAAG,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;oBAE3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAErB,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEf,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC/C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;iBACH;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;YACJ,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;YAC/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YACvC,IAAI,CAAC,4BAA4B,EAAE,CAAC;YACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,4BAA4B,EAAE,CAAC;YACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;IACH,CAAC;IAED,uHAAuH;IAEvH,cAAc;QACZ,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,eAAe;YACvB,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,uKAAmC,EACnC,YAAY,CACb,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,QAAQ,EAAE,OAAO,CAAC,YAAY;iBAC/B,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACzC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACzC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACpC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACxC,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YAClC,kBAAkB,EAAE,CAAC,EAAE,CAAC;SACzB,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;QAED,sCAAsC;QACtC,yCAAyC;QACzC,IAAI;IACN,CAAC;IAED,oBAAoB;QAClB,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC7C,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACjE,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACjE,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACrD,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACvD,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACzD,aAAa,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACnE,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC/D,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC/D,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,gEAAmB,CAAC;YACrD,kBAAkB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC;YACtD,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,gEAAmB,CAAC,CAAC;SACtD,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;QAC1B,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACxE,YAAY,EAAE;gBACZ,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACrD,CAAC,gEAAmB,CAAC;aACtB;YACD,YAAY,EAAE;gBACZ,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACrD,CAAC,gEAAmB,CAAC;aACtB;YACD,MAAM,EAAE;gBACN,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC/C,CAAC,gEAAmB,CAAC;aACtB;YACD,OAAO,EAAE;gBACP,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAChD,CAAC,gEAAmB,CAAC;aACtB;YACD,QAAQ,EAAE;gBACR,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACjD,CAAC,gEAAmB,CAAC;aACtB;YACD,aAAa,EAAE;gBACb,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACtD,CAAC,gEAAmB,CAAC;aACtB;YACD,WAAW,EAAE;gBACX,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC;aAC5E;YACD,WAAW,EAAE;gBACX,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACpD,CAAC,gEAAmB,CAAC;aACtB;YACD,OAAO,EAAE;gBACP,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAChD,gEAAmB;aACpB;YACD,kBAAkB,EAAE;gBAClB,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,QAAQ,EAAE,IAAI,EAAE;aAC5D;SACF,CAAC,CAAC;IACL,CAAC;IAED,cAAc;;QACZ,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE;YACpC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBACnD,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBAC3B,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;oBAChB,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;oBACpB,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;oBAC5B,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;iBAC7B,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QAED,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE/C,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACpD,MAAM,mBAAmB,GAAG,WAAI,CAAC,WAAW,0CAAE,KAAK,KAAI,EAAE,CAAC;QAC1D,MAAM,mBAAmB,GAAG,WAAI,CAAC,WAAW,0CAAE,YAAY,KAAI,EAAE,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,mBAAmB,CAAC,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,mBAAmB,CAAC,CAAC;QAEzD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QAEtE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,4BAA4B,EAAE,CAAC;QAEpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAKD,aAAa,CAAC,OAAwB,EAAE,OAAe,EAAE;QACvD,IAAI,OAAO,YAAY,sDAAS,EAAE;YAChC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC5C,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBAC7C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC9B,IAAI,MAAM,EAAE;gBACV,MAAM,SAAS,GAAG;oBAChB,KAAK,EAAE,IAAI;oBACX,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;iBACtC,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACjC;SACF;IACH,CAAC;IAED,YAAY,CAAC,IAAY,EAAE,GAAW;QACpC,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;IACvC,CAAC;IAED,eAAe,CAAC,MAAW;QACzB,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,OAAO,yBAAyB,CAAC;SAClC;aAAM,IAAI,MAAM,CAAC,OAAO,EAAE;YACzB,OAAO,gBAAgB,CAAC;SACzB;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAGD,gBAAgB;QACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAMD,SAAS;QACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,+BAA+B;IAC7D,CAAC;IAoBD,cAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC3C,CAAC;IAED,UAAU;QACR,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,UAAU,CAAC,GAAoB;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC;QACzD,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAErC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SAC1C;IACH,CAAC;IASD,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK;QACpC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAE/C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE9B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACtD,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAE/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;gBAEnD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAExE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;gBAEjD,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;gBAEhD,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACtC,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC9C,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAElD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;gBACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;gBAE1B,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;oBAC7B,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,MAAM;oBACtC,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,SAAS;iBACpB,CAAC,CAAC;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC;gBAElB,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAc,CAAC;gBACvE,MAAM,QAAQ,GAAG;oBACf,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK;oBAC7B,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;oBACjC,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,SAAS;iBACpB,CAAC;gBACF,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;gBACnC,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,GAAQ;QACvB,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1B,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;QAElC,MAAM,MAAM,GAAG,GAAG,IAAI,EAAE,CAAC;QACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,GAAG,QAAQ,IAAI,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAGD,UAAU,CAAC,QAAQ;QACjB,qCAAqC;QAErC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,QAAQ,QAAQ,EAAE;YAChB,KAAK,KAAK;gBACR,SAAS,GAAG,iCAAiC,CAAC;gBAC9C,iDAAiD;gBACjD,MAAM;YACR,KAAK,SAAS;gBACZ,SAAS,GAAG,qCAAqC,CAAC;gBAClD,qDAAqD;gBACrD,MAAM;YACR;gBACE,OAAO;SACV;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,eAAe,EAAE;YACvE,SAAS;SACV,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;YAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;YAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;YAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;YAC7B,YAAY,CAAC,IAAI,GAAG;gBAClB,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACrB,QAAQ,EAAE,QAAQ;aACnB,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE9C,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,6KAAkC,EAClC,YAAY,CACb,CAAC;YAEF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACnB,iDAAiD;iBAClD,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,yGAAyG;IACzG,6BAA6B;IAC7B,yBAAyB;QACvB,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,iBAAiB;YACzB,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,oKAAkC,EAClC,YAAY,CACb,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,YAAY,EAAE,OAAO,CAAC,WAAW;oBACjC,YAAY,EAAE,OAAO,CAAC,YAAY;iBACnC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAqD;IACrD,8BAA8B;IAC9B,yBAAyB;QACvB,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,sBAAsB;YAC9B,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,oKAAkC,EAClC,YAAY,CACb,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,MAAM,EAAE,OAAO,CAAC,uBAAuB;oBACvC,YAAY,EAAE,OAAO,CAAC,YAAY;oBAClC,YAAY,EAAE,OAAO,CAAC,YAAY;oBAClC,aAAa,EAAE,OAAO,CAAC,WAAW;iBACnC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW;SACzD,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI;QACjB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAEhC,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;QACjD,IAAI,IAAI,CAAC,YAAY,IAAI,KAAK,EAAE;YAC9B,IAAI,CAAC,yBAAyB;iBAC3B,UAAU,CAAC,MAAM,CAAC;iBAClB,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EACnB,GAAG,CAAC,OAAO,CACX,CAAC;wBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;4BACnB,iDAAiD;yBAClD,CAAC,CAAC;qBACJ;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;qBAChE;gBACH,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,KAAK,GAAG,KAAK;oBAClB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EAClB,GAAG,CAAC,OAAO,CACX,CAAC;gBACJ,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE;oBAAM,IAAI,CAAC,KAAK,GAAG,KAAK;gBACvC,CAAC;aACF,CAAC;gBACF,+CAAY,CAAC;SAChB;aAAM,IAAI,IAAI,CAAC,YAAY,IAAI,QAAQ,EAAE;YACxC,IAAI,CAAC,yBAAyB;iBAC3B,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;iBACjC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;wBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;4BACnB,iDAAiD;yBAClD,CAAC,CAAC;qBACJ;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;qBAChE;gBACH,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,KAAK,GAAG,KAAK;oBAClB,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;oBACvC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;gBACJ,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAI,IAAI,CAAC,KAAK,GAAG,KAAK,GAAC;aACvC,CAAC;gBACF,+CAAY,CAAC;SAChB;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iDAAiD,EAAG,CAAC,CAAC;IAC9E,CAAC;IAGA,oHAAoH;IAEpH,WAAW;QACT,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAEpE,IAAI,CAAC,kBAAkB;aACpB,+BAA+B,CAAC,MAAM,CAAC;aACvC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAE/C,qCAAqC;gBACrC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAEjB,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;gBACzC,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;gBAClC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;gBACb,sCAAsC;gBACtC,CAAC,CAAC,QAAQ,GAAG,qBAAqB,IAAI,CAAC,QAAQ,CAAC,OAAO,MAAM,CAAC;gBAC9D,CAAC,CAAC,KAAK,EAAE,CAAC;gBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC,CAAC,MAAM,EAAE,CAAC;gBAEX,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAE7B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,+BAA+B,CAChC,CAAC;gBACF,gCAAgC;gBAChC,WAAW;gBACX,oEAAoE;gBACpE,IAAI;YACN,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;gBACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC;SACF,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;;8GA/sBS,+BAA+B;8HAA/B,+BAA+B;mEAuB/B,sEAAY;;;;;QCpEzB,8EAAyB;QAGnB,gFACiB;QACnB,6DAAM;QAGN,0EAA0B;QAIpB,qEAEM;QAEN,+HAoRM;QACR,6DAAM;;QAlSQ,2DAAoC;QAApC,8FAAoC;QAa7B,2DAAc;QAAd,+EAAc;;;;;;;;;;;;;;;;;;;;;;;;;;ACfY;AAC6C;AACV;AACE;AACiB;AACX;AACS;AACkB;AACS;;;AAEtI,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,6GAAyB;QACpC,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,oBAAoB,CAAC,EAAE;KACrF;IAKD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qGAAuB;QAClC,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,iBAAiB,CAAC,EAAE;KAClF;IAED;QACE,IAAI,EAAE,uBAAuB;QAC7B,SAAS,EAAE,sHAA4B;QACvC,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,uBAAuB,CAAC,EAAE;KACxF;IACD;QACE,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,2GAAyB;QACpC,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,mBAAmB,CAAC,EAAE;KACpF;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,oHAA4B;QACvC,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,sBAAsB,CAAC,EAAE;KACvF;IAID;QACE,IAAI,EAAE,uBAAuB;QAC7B,SAAS,EAAE,sIAA4B;QACvC,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,uBAAuB,EAAE,WAAW,CAAC,EAAE;KACrG;IACD;QACE,IAAI,EAAE,yBAAyB;QAC/B,SAAS,EAAE,+IAA+B;QAC1C,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,0BAA0B,EAAE,WAAW,CAAC,EAAE;KACxG;CACF,CAAC;AAMK,MAAM,qCAAqC;;0HAArC,qCAAqC;kIAArC,qCAAqC;sIAHvC,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,qCAAqC,oFAFtC,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEiC;AAEyC;AACE;AAClC;AACK;AACd;AACa;AACX;AACJ;AACQ;AACN;AACU;AACR;AACM;AACC;AACX;AACE;AACF;AACA;AACU;AACK;AACQ;AACnB;AACE;AACF;AACK;AACT;AACM;AACJ;AACF;AACM;AACA;AACN;AACK;AACT;AACV;AACsB;AACgB;AACnB;AACI;AAC4B;AACiB;AACX;AACS;AACkB;AACS;;AAoE/H,MAAM,8BAA8B;;4GAA9B,8BAA8B;4HAA9B,8BAA8B;iIAF9B,CAAC,sDAAQ,CAAC,YArDZ;YACP,0DAAY;YACZ,2GAAqC;YAGpC,oBAAoB;YACpB,wEAAe;YACf,kEAAa;YACb,8DAAkB;YAClB,0EAAsB;YACtB,kEAAa;YACb,wEAAgB;YAChB,iFAAoB;YAEpB,oEAAc;YACd,4EAAkB;YAClB,oEAAc;YACd,kEAAa;YAEb,sEAAe;YACf,kEAAa;YACb,0EAAiB;YACjB,uEAAsB;YACtB,yFAAwB;YAExB,6EAAkB;YAElB,sEAAe;YACf,sEAAe;YACf,8EAAmB;YACnB,yFAAgB;YAChB,kEAAa;YACb,gEAAmB;YAEnB,2EAAiB;YACjB,wEAAgB;YAEhB,sEAAY;YACZ,wEAAgB;YAChB,oDAAa;YACb,oEAAc;YAEd,wDAAW;YACX,oEAAc;YACd,kFAAqB;YACrB,iFAAoB;YACpB,kEAAa;YACb,wEAAgB;YAChB,4EAAkB;YAClB,sEAAe;YACf,kEAAS;SAEX;oIAGU,8BAA8B,mBA/DvC,6GAAyB;QACzB,qGAAuB;QACvB,sHAA4B;QAC5B,2GAAyB;QACzB,oHAA4B;QAC5B,sIAA4B;QAC5B,gJAA+B,aAG/B,0DAAY;QACZ,2GAAqC;QAGpC,oBAAoB;QACpB,wEAAe;QACf,kEAAa;QACb,8DAAkB;QAClB,0EAAsB;QACtB,kEAAa;QACb,wEAAgB;QAChB,iFAAoB;QAEpB,oEAAc;QACd,4EAAkB;QAClB,oEAAc;QACd,kEAAa;QAEb,sEAAe;QACf,kEAAa;QACb,0EAAiB;QACjB,uEAAsB;QACtB,yFAAwB;QAExB,6EAAkB;QAElB,sEAAe;QACf,sEAAe;QACf,8EAAmB;QACnB,yFAAgB;QAChB,kEAAa;QACb,gEAAmB;QAEnB,2EAAiB;QACjB,wEAAgB;QAEhB,sEAAY;QACZ,wEAAgB;QAChB,oDAAa;QACb,oEAAc;QAEd,wDAAW;QACX,oEAAc;QACd,kFAAqB;QACrB,iFAAoB;QACpB,kEAAa;QACb,wEAAgB;QAChB,4EAAkB;QAClB,sEAAe;QACf,kEAAS","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-procurement/data/services/requisition.service.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/all-recieved-items/all-recieved-items.component.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/all-recieved-items/all-recieved-items.component.html","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/received-expenses/received-expenses.component.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/received-expenses/received-expenses.component.html","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/received-fixed-assets/received-fixed-assets.component.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/received-fixed-assets/received-fixed-assets.component.html","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/received-prepayments/received-prepayments.component.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/received-prepayments/received-prepayments.component.html","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/received-stocks/received-stocks.component.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/received-stocks/received-stocks.component.html","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/supplierInvoice/all-supplier-invoices/all-supplier-invoices.component.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/supplierInvoice/all-supplier-invoices/all-supplier-invoices.component.html","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/supplierInvoice/manage-supplier-invoices/manage-supplier-invoices.component.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/pages/supplierInvoice/manage-supplier-invoices/manage-supplier-invoices.component.html","./src/app/erp-procurement/modules/recievefrompurchaseorder/recievefrompurchaseorder-routing.module.ts","./src/app/erp-procurement/modules/recievefrompurchaseorder/recievefrompurchaseorder.module.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RequisitionService {\n  constructor(private http: HttpClient) {}\n\n  // http://localhost:9090/api/v1/purchaseRequisition/view\n\n  getRequisitions(): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/view`;\n    return this.http.get<any[]>(RequisitionssUrl);\n  }\n\n  getRequisitionsByStatus(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/all/by/approval/status`;\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  getRequisitionsById(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/by/id`;\n\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  getRequisitionsByCode(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/by/code`;\n\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  addRequisitions(data: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/add`;\n    return this.http.post<any>(RequisitionssUrl, data);\n  }\n\n  updateRequisitions(RequisitionsDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update`;\n    return this.http.put<any>(updateBillUrl, RequisitionsDetails);\n  }\n\n  deleteRequisitionsTemporarily(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/delete`;\n    return this.http.delete<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  validateRequisition(params: any): Observable<any> {\n    const API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/approveOrRejectOrReturn`;\n    return this.http.put(\n      API_URL,\n      {},\n      {\n        params: params,\n      }\n    );\n  }\n\n  // ********************************************************************************************************************\n\n  sendPurchaseOrder(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/send/po`;\n    return this.http.post<any>(RequisitionssUrl, {}, { params });\n  }\n\n  donwloadPurchaseOrder(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/download/po`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download PO\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  //*********************************************************************************************************************** */\n\n  receivePurchaseOrderItems(data: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive`;\n    return this.http.post<any>(ReceiveUrl, data);\n  }\n  getReceivedPurchaseOrderItems(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/delivery/by/prCode`;\n\n    return this.http.get<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  getReceivedItemsByStatus(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/delivery/by/pr_category`;\n    return this.http.get<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  deleteReceivedItemsTemporarily(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/delete`;\n    return this.http.delete<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  validateReceivedItemsAllocation(data: any, params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/post/delivery/to/allocations`;\n\n    return this.http.put<any>(ReceiveUrl, data, { params });\n  }\n\n  // donwloadGoodsReceivedNote(params: any): Observable<any> {\n  //   let headers = new HttpHeaders();\n  //   headers.append(\"Accept\", \"application/pdf\");\n  //   let requestOptions: any = {\n  //     params: params,\n  //     headers: headers,\n  //     responseType: \"blob\",\n  //     withCredentials: false,\n  //   };\n  //   let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive/download/receiptnote`;\n  //   return this.http.get(API_URL, requestOptions).pipe(\n  //     map((response: BlobPart) => {\n  //       console.log(\"Hey this is download GRN\", response);\n  //       return {\n  //         filename: \"Report\",\n  //         data: new Blob([response], { type: \"application/pdf\" }),\n  //       };\n  //     })\n  //   );\n  // }\n\n\n  donwloadSingleGoodsReceivedNote(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive/download/receiptnote/single`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download GRN\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  updateReceivedItemsTransactionStatus(params): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update/record/on/transaction`;\n    return this.http.put<any>(updateBillUrl, {}, {params});\n  }\n  \n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-recieved-items\",\n  templateUrl: \"./all-recieved-items.component.html\",\n  styleUrls: [\"./all-recieved-items.component.scss\"],\n})\nexport class AllRecievedItemsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"prCode\",\n    \"prItemCode\",\n    \"quantityDelivered\",\n    \"quantityCanceled\",\n    \"quantityOpen\",\n    \"accountNumber\",\n    // \"taxName\",\n    // \"taxRate\",\n    // \"subTotal\",\n    // \"taxAmount\",\n    // \"totalAmount\",\n    \"status\",\n    \"toMainStoreStatus\",\n    \"deliveredBy\",\n    \"deliveredOn\",\n    \"receivedBy\",\n    \"receivedOn\",\n    \"downloadGrn\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackbar: SnackbarService,\n    private requisitionService: RequisitionService\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"RECEIVED\", Validators.required],\n      toMainStoreStatus: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  reqStatuses: any[] = [{ name: \"RECEIVED\" }, { name: \"RETURNED\" }];\n\n  reqToMainStoreStatuses: any[] = [{ name: \"PENDING\" }, { name: \"POSTED\" }];\n\n  selectedStatus: string = \"RECEIVED\";\n  selectedToMainStoreStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n  getSelectSelectedToMainStoreStatus() {\n    this.getData();\n  }\n  getSelectedToMainStoreStatus(toMainStoreStatus: any) {\n    this.Form.patchValue({\n      toMainStoreStatus: toMainStoreStatus,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedToMainStoreStatus = this.Form.value.toMainStoreStatus;\n    const params = new HttpParams()\n      .set(\"status\", this.Form.value.status)\n      .set(\"toMainStoreStatus\", this.Form.value.toMainStoreStatus);\n\n    console.log(\"this.Form.value :\", this.Form.value);\n\n    this.requisitionService\n      .getReceivedItemsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              \"No data matching entered parameters!\"\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  //******************************************************************************************* */\n\n  poAcknowledgement(data: any, action: any) {\n    const additionalData = data;\n    let route = \"/erp-procurement/requisitions/purchase-order-acknowledgement\";\n    this.router.navigate([route], {\n      queryParams: {\n        code: data.prCode,\n        action: action,\n      },\n    });\n  }\n  addItem() {\n    this.router.navigate([\"/erp-procurement/requisitions/all-requisitions\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  deleteItem(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Item?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Item!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n\n        this.requisitionService\n          .deleteReceivedItemsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Item Deleted Successfully\"\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //******************************************************************************************************\n  //Select ReceivedItems\n  ItemDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  customSweetAlert() { }\n\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Please ensure all selected items are fully delivered. They will be posted to main-store. This action is irreversible!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Proceed!\",\n    }).then((result) => {\n      if (result.value) {\n        const processedRows = this.selectedRows.map((element) => {\n          return {\n            id: element.id,\n            status: status,\n          };\n        });\n\n        console.log(\"LOG: \", processedRows);\n\n        let params = {allocation: this.selectedRows[0].purchaseOrderCategory}\n\n\n        this.requisitionService\n          .validateReceivedItemsAllocation(processedRows, params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                 res.message\n                );\n                Swal.fire(\n                  \"Posted!\",\n                  \"Main-store status posted successfully\",\n                  \"success\"\n                );\n\n                this.selection = new SelectionModel<any>(true, []);\n              } else {\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n  //*************************************************************************************************************** */\n\n  downloadGrn(row: any) {\n    // Show SweetAlert to prompt for dates\n    Swal.fire({\n      title: 'Select Date Range',\n      html: `\n        <input id=\"fromDate\" class=\"swal2-input\" placeholder=\"From Date\" type=\"date\">\n        <input id=\"toDate\" class=\"swal2-input\" placeholder=\"To Date\" type=\"date\">\n      `,\n      preConfirm: () => {\n        const fromDate = (<HTMLInputElement>document.getElementById('fromDate')).value;\n        const toDate = (<HTMLInputElement>document.getElementById('toDate')).value;\n        return { fromDate, toDate };\n      }\n    }).then((result: any) => {\n      // If user clicks 'Confirm'\n      // if (result.isConfirmed) {\n      //   const { fromDate, toDate } = result.value;\n  \n      //   // Structure dates as YYYY-MM-DD\n      //   const params = new HttpParams()\n      //     .set('supplierCode', row.supplierCode)\n      //     .set('fromDate', fromDate)\n      //     .set('toDate', toDate);\n  \n      //   // Your existing code for downloading the GRN\n      //   this.requisitionService\n      //     .donwloadGoodsReceivedNote(params)\n      //     .pipe(takeUntil(this.destroy$))\n      //     .subscribe({\n      //       // ... (rest of your code)\n      //     });\n      // } else {\n      //   // User clicked 'Cancel'\n      //   this.snackbar.showNotification('snackbar-info', 'Download canceled');\n      // }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All ReceivedItems'\" [items]=\"['ReceivedItems']\" [active_item]=\"'All ReceivedItems'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>ReceivedItems</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addItem()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"POST TO MAIN STORE\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('POSTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li> -->\n                    </ul>\n                  </div>\n\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'ReceivedItems-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n\n                <form [formGroup]=\"Form\">\n\n                  <div class=\"row mx-2\">\n                    <div class=\"col-1\">\n                      <h6>Receive Status:</h6>\n                    </div>\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <div class=\"button-container mt-1\">\n                        <!-- Button for RECEIVED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RECEIVED'\"\n                          class=\"mat-button verified\" (click)=\"getSelectedStatus('RECEIVED')\">\n                          <mat-icon>check_circle</mat-icon>\n                          RECEIVED\n                        </button>\n                        <!-- Button for RETURNED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                          class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                          <mat-icon>reply</mat-icon>\n                          RETURNED\n                        </button>\n\n\n\n\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <h6>Main Store Status:</h6>\n                    </div>\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>ToMainStoreStatus</mat-label>\n\n                        <mat-select formControlName=\"toMainStoreStatus\"\n                          (selectionChange)=\"getSelectSelectedToMainStoreStatus()\">\n                          <mat-option *ngFor=\"let reqToMainStoreStatus of reqToMainStoreStatuses\"\n                            [value]=\"reqToMainStoreStatus.name\">{{ reqToMainStoreStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('toMainStoreStatus').hasError('required')\">\n                          Please select ToMainStoreStatus\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <div class=\"button-container mt-1\">\n\n                        <!-- Button for PENDING status -->\n                        <button mat-raised-button [class.active]=\"selectedToMainStoreStatus === 'PENDING'\"\n                          class=\"mat-button pending\" (click)=\"getSelectedToMainStoreStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n\n                        <!-- Button for APPROVED status -->\n                        <button mat-raised-button [class.active]=\"selectedToMainStoreStatus === 'POSTED'\"\n                          class=\"mat-button approved\" (click)=\"getSelectedToMainStoreStatus('POSTED')\">\n                          <mat-icon>thumb_up</mat-icon>\n                          POSTED\n                        </button>\n\n\n\n                      </div>\n                    </div>\n                  </div>\n\n\n\n                </form>\n\n\n\n              </div>\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-4\">Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-4\">{{ row.id }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"prCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">PrCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.prCode }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"prItemCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">PrItemCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.prItemCode }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"quantityDelivered\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">QuantityDelivered</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityDelivered }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"quantityCanceled\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">QuantityCanceled</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityCanceled }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"quantityOpen\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">QuantityOpen</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityOpen }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"accountNumber\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">AccountNumber</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.accountNumber }}</mat-cell>\n                </ng-container>\n                \n                <!-- <ng-container matColumnDef=\"taxName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxName</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxName }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"taxRate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxRate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxRate }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"subTotal\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">subTotal</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.subTotal }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"taxAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxAmount</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxAmount }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"totalAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">totalAmount</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.totalAmount }}</mat-cell>\n                </ng-container> -->\n                \n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                     \n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RECEIVED'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"toMainStoreStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">MainStoreStatus</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    <ng-container [ngSwitch]=\"row.toMainStoreStatus\">\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.toMainStoreStatus }}\n                      </button>\n                      \n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.toMainStoreStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.toMainStoreStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n                \n       \n                \n                <ng-container matColumnDef=\"deliveredBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">DeliveredBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.deliveredBy }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"deliveredOn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">DeliveredOn</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.deliveredOn | date: 'short' }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"receivedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">ReceivedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedBy }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"receivedOn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">ReceivedOn</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedOn | date: 'short' }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"downloadGrn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download GRN</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\" (click)=\"downloadGrn(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                \n\n               \n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"poAcknowledgement(row, 'Acknowledge')\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\" (click)=\"poAcknowledgement(row, 'View')\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteItem(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button> -->\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewItem(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-received-expenses\",\n  templateUrl: \"./received-expenses.component.html\",\n  styleUrls: [\"./received-expenses.component.scss\"],\n})\nexport class ReceivedExpensesComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"prCode\",\n    \"prItemCode\",\n    \"quantityDelivered\",\n    \"quantityCanceled\",\n    \"quantityOpen\",\n    \"accountNumber\",\n    // \"taxName\",\n    // \"taxRate\",\n    // \"subTotal\",\n    // \"taxAmount\",\n    // \"totalAmount\",\n    \"status\",\n    \"transactionStatus\",\n    \"allocationStatus\",\n    \"deliveredBy\",\n    \n    \"receivedBy\",\n    \"receivedOn\",\n    \"downloadGrn\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackbar: SnackbarService,\n    private requisitionService: RequisitionService\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"RECEIVED\", Validators.required],\n      allocationStatus: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  reqStatuses: any[] = [{ name: \"RECEIVED\" }, { name: \"RETURNED\" }];\n\n  reqallocationStatuses: any[] = [{ name: \"PENDING\" }, { name: \"POSTED\" }];\n\n  selectedStatus: string = \"RECEIVED\";\n  selectedallocationStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n  showEditButton: boolean = false;\n  getSelectSelectedAllocationStatus() {\n    this.toggleDatabaseData(this.Form.value.allocationStatus);\n\n    this.getData();\n  }\n  getSelectedAllocationStatus(allocationStatus: any) {\n    this.Form.patchValue({\n      allocationStatus: allocationStatus,\n    });\n    this.toggleDatabaseData(allocationStatus);\n    this.getData();\n  }\n  toggleDatabaseData(allocationStatus) {\n    if (allocationStatus === \"PENDING\") {\n      this.showEditButton = true;\n      console.log(\"showEditButton: \", this.showEditButton);\n\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"prCode\",\n        \"prItemCode\",\n        \"quantityDelivered\",\n        \"quantityCanceled\",\n        \"quantityOpen\",\n        \"accountNumber\",\n        \"status\",\n        \"transactionStatus\",\n        \"allocationStatus\",\n        \"deliveredBy\",\n        \"receivedBy\",\n        \"receivedOn\",\n        \"downloadGrn\",\n        \"action\",\n      ];\n    } else {\n      this.showEditButton = false;\n      console.log(\"showEditButton: \", this.showEditButton);\n\n      this.displayedColumns = [\n       \n        \"id\",\n        \"prCode\",\n        \"prItemCode\",\n        \"quantityDelivered\",\n        \"quantityCanceled\",\n        \"quantityOpen\",\n        \"accountNumber\",\n\n        \"status\",\n        \"transactionStatus\",\n        \"allocationStatus\",\n        \"deliveredBy\",\n\n        \"receivedBy\",\n        \"receivedOn\",\n        \"downloadGrn\",\n        \"action\",\n      ];\n    }\n  }\n  purchaseCategory: string = \"Expense\";\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedallocationStatus = this.Form.value.allocationStatus;\n    const params = new HttpParams()\n      .set(\"status\", this.Form.value.status)\n      .set(\"pushStatus\", this.Form.value.allocationStatus)\n      .set(\"purchaseOrderCategory\", this.purchaseCategory);\n\n    console.log(\"this.Form.value :\", this.Form.value);\n\n    this.requisitionService\n      .getReceivedItemsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  //******************************************************************************************* */\n\n  poAcknowledgement(data: any, action: any) {\n    const additionalData = data;\n    let route = \"/erp-procurement/requisitions/purchase-order-acknowledgement\";\n    this.router.navigate([route], {\n      queryParams: {\n        code: data.prCode,\n        action: action,\n      },\n    });\n  }\n  addItem() {\n    this.router.navigate([\"/erp-procurement/requisitions/all-requisitions\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  deleteItem(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Item?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Item!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n\n        this.requisitionService\n          .deleteReceivedItemsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //******************************************************************************************************\n  //Select ReceivedItems\n  ItemDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  customSweetAlert() {}\n\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Please ensure all selected items are fully delivered. They will be posted to *****. This action is irreversible!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Proceed!\",\n    }).then((result) => {\n      if (result.value) {\n        const processedRows = this.selectedRows.map((element) => {\n          return {\n            id: element.id,\n            status: status,\n          };\n        });\n\n        console.log(\"LOG: \", processedRows);\n\n        let params = { allocation: this.purchaseCategory };\n\n        this.requisitionService\n          .validateReceivedItemsAllocation(processedRows, params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n                Swal.fire(\"Posted!\", res.message, \"success\");\n\n                this.selection = new SelectionModel<any>(true, []);\n              } else {\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n  //*************************************************************************************************************** */\n\n  // downloadGrn(row: any) {\n  //   // Show SweetAlert to prompt for dates\n  //   Swal.fire({\n  //     title: 'Select Date Range',\n  //     html: `\n  //       <input id=\"fromDate\" class=\"swal2-input\" placeholder=\"From Date\" type=\"date\">\n  //       <input id=\"toDate\" class=\"swal2-input\" placeholder=\"To Date\" type=\"date\">\n  //     `,\n  //     preConfirm: () => {\n  //       const fromDate = (<HTMLInputElement>document.getElementById('fromDate')).value;\n  //       const toDate = (<HTMLInputElement>document.getElementById('toDate')).value;\n  //       return { fromDate, toDate };\n  //     }\n  //   }).then((result: any) => {\n  //     // If user clicks 'Confirm'\n  //     if (result.isConfirmed) {\n  //       const { fromDate, toDate } = result.value;\n  \n  //       const params = new HttpParams()\n  //       .set('supplierCode', row.supplierCode)\n  //       .set('fromDate', fromDate)\n  //       .set('toDate', toDate)\n  //       .set('type', row.type);\n\n  //       console.log(\"paramsparams :\", params);\n  \n  //         this.requisitionService\n  //         .donwloadGoodsReceivedNote(params)\n  //         .pipe(takeUntil(this.destroy$))\n  //         .subscribe({\n  //           next: (res) => {\n  //             console.log(\"res :\", res);\n  //             let url = window.URL.createObjectURL(res.data);\n    \n  //             // if you want to open PDF in new tab\n  //             window.open(url);\n    \n  //             let a = document.createElement(\"a\");\n  //             document.body.appendChild(a);\n  //             a.setAttribute(\"style\", \"display: none\");\n  //             a.setAttribute(\"target\", \"blank\");\n  //             a.href = url;\n  //             // Append row.code to the download URL\n  //             a.download = `GoodsReceivedNote_${row.grnCode}.pdf`;\n  //             a.click();\n  //             window.URL.revokeObjectURL(url);\n  //             a.remove();\n    \n  //             this.downloadLoading = false;\n    \n  //             this.snackbar.showNotification(\n  //               \"snackbar-success\",\n  //               res.message\n  //             );\n  //             // if (res.statusCode === 200) {\n  //             // } else {\n  //             //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //             // }\n  //           },\n  //           error: (err) => {\n  //             this.snackbar.showNotification(\n  //               \"snackbar-danger\",\n  //               err.message\n  //             );\n  //             this.downloadLoading = false;\n  //           },\n  //           complete: () => {\n  //             this.downloadLoading = false;\n  //           },\n  //         }),\n  //         Subscription;\n  //     } else {\n  //       // User clicked 'Cancel'\n  //       this.snackbar.showNotification('snackbar-info', 'Download canceled');\n  //     }\n  //   });\n  // }\n\n\n  \n\n  downloadSingleGrn(row: any) {\n    // Show SweetAlert to confirm download\n\n    Swal.fire({\n      title: 'Download Goods Received Note',\n      text: 'Are you sure you want to download the Goods Received Note?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n    }).then((result: any) => {\n      // If user clicks 'Confirm'\n      if (result.isConfirmed) {\n        const params = new HttpParams()\n          .set('supplierCode', row.supplierCode)\n          .set('grnCode', row.grnCode)\n          .set('type', row.type);\n  \n        console.log(\"paramsparams :\", params);\n  this.downloadLoading = true\n        this.requisitionService\n          .donwloadSingleGoodsReceivedNote(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res :\", res);\n              let url = window.URL.createObjectURL(res.data);\n  \n              // Open PDF in new tab\n              window.open(url);\n  \n              // Download the PDF\n              let a = document.createElement(\"a\");\n              document.body.appendChild(a);\n              a.setAttribute(\"style\", \"display: none\");\n              a.href = url;\n              a.download = `GoodsReceivedNote_${row.grnCode}.pdf`;\n              a.click();\n              window.URL.revokeObjectURL(url);\n              a.remove();\n  \n              this.downloadLoading = false;\n  \n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n              this.downloadLoading = false;\n            },\n            complete: () => {\n              this.downloadLoading = false;\n            },\n          }),\n          Subscription;\n      } else {\n        // User clicked 'Cancel'\n        this.snackbar.showNotification('snackbar-info', 'Download canceled');\n      }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Received Expense Items'\" [items]=\"['Expense Items']\" [active_item]=\"'All Received'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Received Expense Items</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addItem()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"POST ITEM\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('POSTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                            <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">cancel</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">undo</mat-icon>\n                            </button>\n                          </div>\n                        </li> -->\n                    </ul>\n                  </div>\n\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                exporter.exportTable('xlsx', {\n                                  fileName: 'ReceivedItems-list',\n                                  sheet: 'sheet1'\n                                })\n                              \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n\n                <form [formGroup]=\"Form\">\n\n                  <div class=\"row mx-2\">\n                    <div class=\"col-1\">\n                      <h6>Receive Status:</h6>\n                    </div>\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <div class=\"button-container mt-1\">\n                        <!-- Button for RECEIVED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RECEIVED'\"\n                          class=\"mat-button verified\" (click)=\"getSelectedStatus('RECEIVED')\">\n                          <mat-icon>check_circle</mat-icon>\n                          RECEIVED\n                        </button>\n                        <!-- Button for RETURNED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                          class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                          <mat-icon>reply</mat-icon>\n                          RETURNED\n                        </button>\n\n\n\n\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <h6>Allocation Status:</h6>\n                    </div>\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>AllocationStatus</mat-label>\n\n                        <mat-select formControlName=\"allocationStatus\"\n                          (selectionChange)=\"getSelectSelectedAllocationStatus()\">\n                          <mat-option *ngFor=\"let reqallocationStatus of reqallocationStatuses\"\n                            [value]=\"reqallocationStatus.name\">{{ reqallocationStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('allocationStatus').hasError('required')\">\n                          Please select allocationStatus\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <div class=\"button-container mt-1\">\n\n                        <!-- Button for PENDING status -->\n                        <button mat-raised-button [class.active]=\"selectedallocationStatus === 'PENDING'\"\n                          class=\"mat-button pending\" (click)=\"getSelectedAllocationStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n\n                        <!-- Button for APPROVED status -->\n                        <button mat-raised-button [class.active]=\"selectedallocationStatus === 'POSTED'\"\n                          class=\"mat-button approved\" (click)=\"getSelectedAllocationStatus('POSTED')\">\n                          <mat-icon>thumb_up</mat-icon>\n                          POSTED\n                        </button>\n\n\n\n                      </div>\n                    </div>\n                  </div>\n\n\n\n                </form>\n\n\n\n              </div>\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-4\">\n                    Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-4\">{{ row.id\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    PrCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.prCode }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prItemCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">PrItemCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.prItemCode\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityDelivered\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Delivered</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.quantityDelivered }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityCanceled\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Canceled</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.quantityCanceled }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityOpen\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Open</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityOpen\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"accountNumber\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Acc. No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.accountNumber }}</mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"taxName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxName</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxName }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"taxRate\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxRate</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxRate }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"subTotal\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">subTotal</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.subTotal }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"taxAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxAmount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxAmount }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"totalAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">totalAmount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.totalAmount }}</mat-cell>\n                  </ng-container> -->\n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    <ng-container [ngSwitch]=\"row.status\">\n\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RECEIVED'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"allocationStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    AllocationStatus</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    <ng-container [ngSwitch]=\"row.pushStatus\">\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"deliveredBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    DeliveredBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.deliveredBy\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-28\">TranStatus</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"receivedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    ReceivedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedBy\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"receivedOn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    ReceivedOn</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedOn |\n                    date: 'short' }}</mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"downloadGrn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download GRN</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\"\n                      (click)=\"downloadGrn(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container> -->\n                <ng-container matColumnDef=\"downloadGrn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download GRN</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\"\n                      (click)=\"downloadSingleGrn(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>Actions\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button *ngIf=\"showEditButton\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"poAcknowledgement(row, 'Acknowledge')\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"poAcknowledgement(row, 'View')\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteItem(row.id)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button> -->\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"poAcknowledgement(row, 'View')\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { RequisitionService } from 'src/app/erp-procurement/data/services/requisition.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-received-fixed-assets',\n  templateUrl: './received-fixed-assets.component.html',\n  styleUrls: ['./received-fixed-assets.component.scss']\n})\nexport class ReceivedFixedAssetsComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"prCode\",\n    \"prItemCode\",\n    \"quantityDelivered\",\n    \"quantityCanceled\",\n    \"quantityOpen\",\n    \"accountNumber\",\n    // \"taxName\",\n    // \"taxRate\",\n    // \"subTotal\",\n    // \"taxAmount\",\n    // \"totalAmount\",\n    \"status\",\n    \"transactionStatus\",\n    \"allocationStatus\",\n    \"deliveredBy\",\n    \n    \"receivedBy\",\n    \"receivedOn\",\n    \"downloadGrn\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackbar: SnackbarService,\n    private requisitionService: RequisitionService\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"RECEIVED\", Validators.required],\n      allocationStatus: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  reqStatuses: any[] = [{ name: \"RECEIVED\" }, { name: \"RETURNED\" }];\n\n  reqallocationStatuses: any[] = [{ name: \"PENDING\" }, { name: \"POSTED\" }];\n\n  selectedStatus: string = \"RECEIVED\";\n  selectedallocationStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n  showEditButton: boolean = false;\n  getSelectSelectedAllocationStatus() {\n    this.toggleDatabaseData(this.Form.value.allocationStatus);\n\n    this.getData();\n  }\n  getSelectedAllocationStatus(allocationStatus: any) {\n    this.Form.patchValue({\n      allocationStatus: allocationStatus,\n    });\n    this.toggleDatabaseData(allocationStatus);\n    this.getData();\n  }\n  toggleDatabaseData(allocationStatus) {\n    if (allocationStatus === \"PENDING\") {\n      this.showEditButton = true;\n      console.log(\"showEditButton: \", this.showEditButton);\n\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"prCode\",\n        \"prItemCode\",\n        \"quantityDelivered\",\n        \"quantityCanceled\",\n        \"quantityOpen\",\n        \"accountNumber\",\n        \"status\",\n        \"transactionStatus\",\n        \"allocationStatus\",\n        \"deliveredBy\",\n        \"receivedBy\",\n        \"receivedOn\",\n        \"downloadGrn\",\n        \"action\",\n      ];\n    } else {\n      this.showEditButton = false;\n      console.log(\"showEditButton: \", this.showEditButton);\n\n      this.displayedColumns = [\n       \n        \"id\",\n        \"prCode\",\n        \"prItemCode\",\n        \"quantityDelivered\",\n        \"quantityCanceled\",\n        \"quantityOpen\",\n        \"accountNumber\",\n\n        \"status\",\n        \"transactionStatus\",\n        \"allocationStatus\",\n        \"deliveredBy\",\n\n        \"receivedBy\",\n        \"receivedOn\",\n        \"downloadGrn\",\n        \"action\",\n      ];\n    }\n  }\n\n  purchaseCategory: string = \"FixedAsset\"\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedallocationStatus = this.Form.value.allocationStatus;\n    const params = new HttpParams()\n      .set(\"status\", this.Form.value.status)\n      .set(\"pushStatus\", this.Form.value.allocationStatus)\n      .set(\"purchaseOrderCategory\", this.purchaseCategory);\n\n    console.log(\"this.Form.value :\", this.Form.value);\n\n    this.requisitionService\n      .getReceivedItemsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  //******************************************************************************************* */\n\n  poAcknowledgement(data: any, action: any) {\n    const additionalData = data;\n    let route = \"/erp-procurement/requisitions/purchase-order-acknowledgement\";\n    this.router.navigate([route], {\n      queryParams: {\n        code: data.prCode,\n        action: action,\n      },\n    });\n  }\n  addItem() {\n    this.router.navigate([\"/erp-procurement/requisitions/all-requisitions\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  deleteItem(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Item?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Item!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n\n        this.requisitionService\n          .deleteReceivedItemsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //******************************************************************************************************\n  //Select ReceivedItems\n  ItemDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  customSweetAlert() {}\n\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Please ensure all selected items are fully delivered. They will be posted to Fixed Assets. This action is irreversible!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Proceed!\",\n    }).then((result) => {\n      if (result.value) {\n        const processedRows = this.selectedRows.map((element) => {\n          return {\n            id: element.id,\n            status: status,\n          };\n        });\n\n        console.log(\"LOG: \", processedRows);\n\n        let params = { allocation: this.purchaseCategory };\n\n        console.log(\"params: \", params);\n\n        this.requisitionService\n          .validateReceivedItemsAllocation(processedRows, params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n                Swal.fire(\"Posted!\", res.message, \"success\");\n\n                this.selection = new SelectionModel<any>(true, []);\n              } else {\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              console.log(\"err: \", err);\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n  //*************************************************************************************************************** */\n\n  \n  // downloadGrn(row: any) {\n  //   // Show SweetAlert to prompt for dates\n  //   Swal.fire({\n  //     title: 'Select Date Range',\n  //     html: `\n  //       <input id=\"fromDate\" class=\"swal2-input\" placeholder=\"From Date\" type=\"date\">\n  //       <input id=\"toDate\" class=\"swal2-input\" placeholder=\"To Date\" type=\"date\">\n  //     `,\n  //     preConfirm: () => {\n  //       const fromDate = (<HTMLInputElement>document.getElementById('fromDate')).value;\n  //       const toDate = (<HTMLInputElement>document.getElementById('toDate')).value;\n  //       return { fromDate, toDate };\n  //     }\n  //   }).then((result: any) => {\n  //     // If user clicks 'Confirm'\n  //     if (result.isConfirmed) {\n  //       const { fromDate, toDate } = result.value;\n  \n  //       const params = new HttpParams()\n  //       .set('supplierCode', row.supplierCode)\n  //       .set('fromDate', fromDate)\n  //       .set('toDate', toDate)\n  //       .set('type', row.type);\n\n  //       console.log(\"paramsparams :\", params);\n  \n  //         this.requisitionService\n  //         .donwloadGoodsReceivedNote(params)\n  //         .pipe(takeUntil(this.destroy$))\n  //         .subscribe({\n  //           next: (res) => {\n  //             console.log(\"res :\", res);\n  //             let url = window.URL.createObjectURL(res.data);\n    \n  //             // if you want to open PDF in new tab\n  //             window.open(url);\n    \n  //             let a = document.createElement(\"a\");\n  //             document.body.appendChild(a);\n  //             a.setAttribute(\"style\", \"display: none\");\n  //             a.setAttribute(\"target\", \"blank\");\n  //             a.href = url;\n  //             // Append row.code to the download URL\n  //             a.download = `GoodsReceivedNote_${row.grnCode}.pdf`;\n  //             a.click();\n  //             window.URL.revokeObjectURL(url);\n  //             a.remove();\n    \n  //             this.downloadLoading = false;\n    \n  //             this.snackbar.showNotification(\n  //               \"snackbar-success\",\n  //               res.message\n  //             );\n  //             // if (res.statusCode === 200) {\n  //             // } else {\n  //             //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //             // }\n  //           },\n  //           error: (err) => {\n  //             this.snackbar.showNotification(\n  //               \"snackbar-danger\",\n  //               err.message\n  //             );\n  //             this.downloadLoading = false;\n  //           },\n  //           complete: () => {\n  //             this.downloadLoading = false;\n  //           },\n  //         }),\n  //         Subscription;\n  //     } else {\n  //       // User clicked 'Cancel'\n  //       this.snackbar.showNotification('snackbar-info', 'Download canceled');\n  //     }\n  //   });\n  // }\n\n\n\n  downloadSingleGrn(row: any) {\n    // Show SweetAlert to confirm download\n    Swal.fire({\n      title: 'Download Goods Received Note',\n      text: 'Are you sure you want to download the Goods Received Note?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n    }).then((result: any) => {\n      // If user clicks 'Confirm'\n      if (result.isConfirmed) {\n        const params = new HttpParams()\n          .set('supplierCode', row.supplierCode)\n          .set('grnCode', row.grnCode)\n          .set('type', row.type);\n  \n        console.log(\"paramsparams :\", params);\n        this.downloadLoading = true\n\n        this.requisitionService\n          .donwloadSingleGoodsReceivedNote(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res :\", res);\n              let url = window.URL.createObjectURL(res.data);\n  \n              // Open PDF in new tab\n              window.open(url);\n  \n              // Download the PDF\n              let a = document.createElement(\"a\");\n              document.body.appendChild(a);\n              a.setAttribute(\"style\", \"display: none\");\n              a.href = url;\n              a.download = `GoodsReceivedNote_${row.grnCode}.pdf`;\n              a.click();\n              window.URL.revokeObjectURL(url);\n              a.remove();\n  \n              this.downloadLoading = false;\n  \n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n              this.downloadLoading = false;\n            },\n            complete: () => {\n              this.downloadLoading = false;\n            },\n          }),\n          Subscription;\n      } else {\n        // User clicked 'Cancel'\n        this.snackbar.showNotification('snackbar-info', 'Download canceled');\n      }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Received FixedAsset Items'\" [items]=\"['FixedAsset Items']\"\n        [active_item]=\"'All Received'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Received FixedAsset Items</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addItem()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"POST ITEM\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('POSTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                            <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">cancel</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">undo</mat-icon>\n                            </button>\n                          </div>\n                        </li> -->\n                    </ul>\n                  </div>\n\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                exporter.exportTable('xlsx', {\n                                  fileName: 'ReceivedItems-list',\n                                  sheet: 'sheet1'\n                                })\n                              \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n\n                <form [formGroup]=\"Form\">\n\n                  <div class=\"row mx-2\">\n                    <div class=\"col-1\">\n                      <h6>Receive Status:</h6>\n                    </div>\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <div class=\"button-container mt-1\">\n                        <!-- Button for RECEIVED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RECEIVED'\"\n                          class=\"mat-button verified\" (click)=\"getSelectedStatus('RECEIVED')\">\n                          <mat-icon>check_circle</mat-icon>\n                          RECEIVED\n                        </button>\n                        <!-- Button for RETURNED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                          class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                          <mat-icon>reply</mat-icon>\n                          RETURNED\n                        </button>\n\n\n\n\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <h6>Allocation Status:</h6>\n                    </div>\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>AllocationStatus</mat-label>\n\n                        <mat-select formControlName=\"allocationStatus\"\n                          (selectionChange)=\"getSelectSelectedAllocationStatus()\">\n                          <mat-option *ngFor=\"let reqallocationStatus of reqallocationStatuses\"\n                            [value]=\"reqallocationStatus.name\">{{ reqallocationStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('allocationStatus').hasError('required')\">\n                          Please select allocationStatus\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <div class=\"button-container mt-1\">\n\n                        <!-- Button for PENDING status -->\n                        <button mat-raised-button [class.active]=\"selectedallocationStatus === 'PENDING'\"\n                          class=\"mat-button pending\" (click)=\"getSelectedAllocationStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n\n                        <!-- Button for APPROVED status -->\n                        <button mat-raised-button [class.active]=\"selectedallocationStatus === 'POSTED'\"\n                          class=\"mat-button approved\" (click)=\"getSelectedAllocationStatus('POSTED')\">\n                          <mat-icon>thumb_up</mat-icon>\n                          POSTED\n                        </button>\n\n\n\n                      </div>\n                    </div>\n                  </div>\n\n\n\n                </form>\n\n\n\n              </div>\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-4\">\n                    Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-4\">{{ row.id\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    PrCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.prCode }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prItemCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">PrItemCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.prItemCode\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityDelivered\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Delivered</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.quantityDelivered }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityCanceled\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Canceled</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.quantityCanceled }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityOpen\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Open</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityOpen\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"accountNumber\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Acc. No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.accountNumber }}</mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"taxName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxName</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxName }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"taxRate\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxRate</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxRate }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"subTotal\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">subTotal</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.subTotal }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"taxAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxAmount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxAmount }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"totalAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">totalAmount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.totalAmount }}</mat-cell>\n                  </ng-container> -->\n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    <ng-container [ngSwitch]=\"row.status\">\n\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RECEIVED'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"allocationStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    AllocationStatus</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    <ng-container [ngSwitch]=\"row.pushStatus\">\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"deliveredBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    DeliveredBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.deliveredBy\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-28\">TranStatus</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"receivedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    ReceivedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedBy\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"receivedOn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    ReceivedOn</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedOn |\n                    date: 'short' }}</mat-cell>\n                </ng-container>\n<!-- \n                <ng-container matColumnDef=\"downloadGrn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download GRN</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\"\n                      (click)=\"downloadGrn(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container> -->\n\n\n\n                <ng-container matColumnDef=\"downloadGrn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download GRN</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\"\n                      (click)=\"downloadSingleGrn(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>Actions\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button *ngIf=\"showEditButton\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"poAcknowledgement(row, 'Acknowledge')\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"poAcknowledgement(row, 'View')\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteItem(row.id)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button> -->\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"poAcknowledgement(row, 'View')\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { RequisitionService } from 'src/app/erp-procurement/data/services/requisition.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-received-prepayments',\n  templateUrl: './received-prepayments.component.html',\n  styleUrls: ['./received-prepayments.component.scss']\n})\nexport class ReceivedPrepaymentsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"prCode\",\n    \"prItemCode\",\n    \"quantityDelivered\",\n    \"quantityCanceled\",\n    \"quantityOpen\",\n    \"accountNumber\",\n    // \"taxName\",\n    // \"taxRate\",\n    // \"subTotal\",\n    // \"taxAmount\",\n    // \"totalAmount\",\n    \"status\",\n    \"transactionStatus\",\n    \"allocationStatus\",\n    \"deliveredBy\",\n    \n    \"receivedBy\",\n    \"receivedOn\",\n    \"downloadGrn\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackbar: SnackbarService,\n    private requisitionService: RequisitionService\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"RECEIVED\", Validators.required],\n      allocationStatus: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  reqStatuses: any[] = [{ name: \"RECEIVED\" }, { name: \"RETURNED\" }];\n\n  reqallocationStatuses: any[] = [{ name: \"PENDING\" }, { name: \"POSTED\" }];\n\n  selectedStatus: string = \"RECEIVED\";\n  selectedallocationStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n  getSelectSelectedAllocationStatus() {\n    this.getData();\n  }\n  getSelectedAllocationStatus(allocationStatus: any) {\n    this.Form.patchValue({\n      allocationStatus: allocationStatus,\n    });\n\n    this.getData();\n  }\n\n  purchaseCategory: string = \"Prepayment\"\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedallocationStatus = this.Form.value.allocationStatus;\n    const params = new HttpParams()\n      .set(\"status\", this.Form.value.status)\n      .set(\"pushStatus\", this.Form.value.allocationStatus)\n      .set(\"purchaseOrderCategory\", this.purchaseCategory);\n\n    console.log(\"this.Form.value :\", this.Form.value);\n\n    this.requisitionService\n      .getReceivedItemsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  //******************************************************************************************* */\n\n  poAcknowledgement(data: any, action: any) {\n    const additionalData = data;\n    let route = \"/erp-procurement/requisitions/purchase-order-acknowledgement\";\n    this.router.navigate([route], {\n      queryParams: {\n        code: data.prCode,\n        action: action,\n      },\n    });\n  }\n  addItem() {\n    this.router.navigate([\"/erp-procurement/requisitions/all-requisitions\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  deleteItem(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Item?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Item!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n\n        this.requisitionService\n          .deleteReceivedItemsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //******************************************************************************************************\n  //Select ReceivedItems\n  ItemDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  customSweetAlert() {}\n\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Please ensure all selected items are fully delivered. They will be posted to Prepayments. This action is irreversible!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Proceed!\",\n    }).then((result) => {\n      if (result.value) {\n        const processedRows = this.selectedRows.map((element) => {\n          return {\n            id: element.id,\n            status: status,\n          };\n        });\n\n        console.log(\"LOG: \", processedRows);\n\n        let params = { allocation: this.purchaseCategory };\n\n        this.requisitionService\n          .validateReceivedItemsAllocation(processedRows, params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n                Swal.fire(\"Posted!\", res.message, \"success\");\n\n                this.selection = new SelectionModel<any>(true, []);\n              } else {\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n  //*************************************************************************************************************** */\n\n  downloadGrn(row: any) {\n    this.downloadLoading = true;\n\n    const params = new HttpParams().set(\"grnNo\", row.grnCode);\n\n    // this.requisitionService\n    //   .donwloadGoodsReceivedNote(params)\n    //   .pipe(takeUntil(this.destroy$))\n    //   .subscribe({\n    //     next: (res) => {\n    //       console.log(\"res :\", res);\n    //       let url = window.URL.createObjectURL(res.data);\n\n    //       // if you want to open PDF in new tab\n    //       window.open(url);\n\n    //       let a = document.createElement(\"a\");\n    //       document.body.appendChild(a);\n    //       a.setAttribute(\"style\", \"display: none\");\n    //       a.setAttribute(\"target\", \"blank\");\n    //       a.href = url;\n    //       // Append row.code to the download URL\n    //       a.download = `GoodsReceivedNote_${row.grnCode}.pdf`;\n    //       a.click();\n    //       window.URL.revokeObjectURL(url);\n    //       a.remove();\n\n    //       this.downloadLoading = false;\n\n    //       this.snackbar.showNotification(\n    //         \"snackbar-success\",\n    //         res.message\n    //       );\n    //       // if (res.statusCode === 200) {\n    //       // } else {\n    //       //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n    //       // }\n    //     },\n    //     error: (err) => {\n    //       this.snackbar.showNotification(\n    //         \"snackbar-danger\",\n    //         err.message\n    //       );\n    //       this.downloadLoading = false;\n    //     },\n    //     complete: () => {\n    //       this.downloadLoading = false;\n    //     },\n    //   }),\n    //   Subscription;\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n      <div class=\"block-header\">\n        <!-- breadcrumb -->\n        <app-breadcrumb [title]=\"'All Received Prepayment Items'\" [items]=\"['Prepayment Items']\" [active_item]=\"'All Received'\">\n        </app-breadcrumb>\n      </div>\n  \n      <app-gen-widgets></app-gen-widgets>\n  \n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div class=\"card\">\n            <div class=\"body\">\n              <div class=\"table-responsive\">\n                <div class=\"materialTableHeader\">\n                  <div class=\"row\">\n                    <div class=\"col-6\">\n                      <ul class=\"header-buttons-left ms-0\">\n                        <li class=\"dropdown\">\n                          <h2>Received Prepayment Items</h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                            class=\"browser-default search-field\" aria-label=\"Search box\" />\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"ADD\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"addItem()\">\n                              <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                              <mat-icon class=\"col-white\">refresh</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n  \n                        <!-- Container element with *ngIf condition -->\n                        <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"POST ITEM\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('POSTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">check</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <!-- <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                            <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">cancel</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">undo</mat-icon>\n                            </button>\n                          </div>\n                        </li> -->\n                      </ul>\n                    </div>\n  \n                    <div class=\"col-6\">\n                      <ul class=\"header-buttons\">\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                exporter.exportTable('xlsx', {\n                                  fileName: 'ReceivedItems-list',\n                                  sheet: 'sheet1'\n                                })\n                              \" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                            <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                            <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                            <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n  \n                <div class=\"materialTableHeader mt-2\">\n  \n                  <form [formGroup]=\"Form\">\n  \n                    <div class=\"row mx-2\">\n                      <div class=\"col-1\">\n                        <h6>Receive Status:</h6>\n                      </div>\n                      <div class=\"col-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                          <mat-label>Status</mat-label>\n  \n                          <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                            <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                              }}\n                            </mat-option>\n                          </mat-select>\n  \n                          <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                            Please select Status\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                      <div class=\"col-2\">\n                        <div class=\"button-container mt-1\">\n                          <!-- Button for RECEIVED status -->\n                          <button mat-raised-button [class.active]=\"selectedStatus === 'RECEIVED'\"\n                            class=\"mat-button verified\" (click)=\"getSelectedStatus('RECEIVED')\">\n                            <mat-icon>check_circle</mat-icon>\n                            RECEIVED\n                          </button>\n                          <!-- Button for RETURNED status -->\n                          <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                            class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                            <mat-icon>reply</mat-icon>\n                            RETURNED\n                          </button>\n  \n  \n  \n  \n                        </div>\n                      </div>\n                      <div class=\"col-1\">\n                        <h6>Allocation Status:</h6>\n                      </div>\n                      <div class=\"col-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                          <mat-label>AllocationStatus</mat-label>\n  \n                          <mat-select formControlName=\"allocationStatus\"\n                            (selectionChange)=\"getSelectSelectedAllocationStatus()\">\n                            <mat-option *ngFor=\"let reqallocationStatus of reqallocationStatuses\"\n                              [value]=\"reqallocationStatus.name\">{{ reqallocationStatus.name\n                              }}\n                            </mat-option>\n                          </mat-select>\n  \n                          <mat-error *ngIf=\"Form.get('allocationStatus').hasError('required')\">\n                            Please select allocationStatus\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                      <div class=\"col-2\">\n                        <div class=\"button-container mt-1\">\n  \n                          <!-- Button for PENDING status -->\n                          <button mat-raised-button [class.active]=\"selectedallocationStatus === 'PENDING'\"\n                            class=\"mat-button pending\" (click)=\"getSelectedAllocationStatus('PENDING')\">\n                            <mat-icon>pending</mat-icon>\n                            PENDING\n                          </button>\n  \n                          <!-- Button for APPROVED status -->\n                          <button mat-raised-button [class.active]=\"selectedallocationStatus === 'POSTED'\"\n                            class=\"mat-button approved\" (click)=\"getSelectedAllocationStatus('POSTED')\">\n                            <mat-icon>thumb_up</mat-icon>\n                            POSTED\n                          </button>\n  \n  \n  \n                        </div>\n                      </div>\n                    </div>\n  \n  \n  \n                  </form>\n  \n  \n  \n                </div>\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                  #exporter=\"matTableExporter\">\n                  <ng-container matColumnDef=\"select\">\n                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                        (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                      <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                        (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-cell>\n                  </ng-container>\n  \n  \n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-4\">Id</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-4\">{{ row.id }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"prCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">PrCode</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.prCode }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"prItemCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">PrItemCode</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.prItemCode }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"quantityDelivered\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">Q.Delivered</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityDelivered }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"quantityCanceled\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">Q.Canceled</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityCanceled }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"quantityOpen\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">Q.Open</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityOpen }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"accountNumber\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">Acc. No</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.accountNumber }}</mat-cell>\n                  </ng-container>\n                  \n                  <!-- <ng-container matColumnDef=\"taxName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxName</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxName }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"taxRate\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxRate</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxRate }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"subTotal\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">subTotal</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.subTotal }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"taxAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxAmount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxAmount }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"totalAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">totalAmount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.totalAmount }}</mat-cell>\n                  </ng-container> -->\n                  \n                  <ng-container matColumnDef=\"status\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">Status</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                      <ng-container [ngSwitch]=\"row.status\">\n                       \n                        <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                          <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                          {{ row.status }}\n                        </button>\n                        <button *ngSwitchCase=\"'RECEIVED'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                          <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                          {{ row.status }}\n                        </button>\n                        <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                          <i class=\"fas fa-question-circle\"></i>&nbsp;\n                          {{ row.status }}\n                        </button>\n                      </ng-container>\n                    </mat-cell>\n                  </ng-container>\n  \n                  <ng-container matColumnDef=\"allocationStatus\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">AllocationStatus</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                      <ng-container [ngSwitch]=\"row.pushStatus\">\n                        <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                          <i class=\"fas fa-check-circle\"></i>&nbsp;\n                          {{ row.pushStatus }}\n                        </button>\n                        \n                        <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                          <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                          {{ row.pushStatus }}\n                        </button>\n                        <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                          <i class=\"fas fa-question-circle\"></i>&nbsp;\n                          {{ row.pushStatus }}\n                        </button>\n                      </ng-container>\n                    </mat-cell>\n                  </ng-container>\n                  \n         \n                  \n                  <ng-container matColumnDef=\"deliveredBy\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">DeliveredBy</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.deliveredBy }}</mat-cell>\n                  </ng-container>\n                  \n                 <ng-container matColumnDef=\"transactionStatus\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                      class=\"column-nowrap psl-3 tbl-col-width-per-28\">TranStatus</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <ng-container [ngSwitch]=\"row.transactionStatus\">\n                        <button *ngSwitchCase=\"'PENDING'\"\n                          class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                          <i class=\"fas fa-check-circle\"></i>&nbsp;\n                          {{ row.transactionStatus }}\n                        </button>\n\n                        <button *ngSwitchCase=\"'POSTED'\"\n                          class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                          <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                          {{ row.transactionStatus }}\n                        </button>\n                      </ng-container>\n                    </mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"receivedBy\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">ReceivedBy</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedBy }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"receivedOn\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">ReceivedOn</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedOn | date: 'short' }}</mat-cell>\n                  </ng-container>\n  \n                  <ng-container matColumnDef=\"downloadGrn\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                      class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download GRN</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                      (click)=\"$event.stopPropagation()\">\n                      <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\" (click)=\"downloadGrn(row)\">\n                        <i class=\"fas fa-download\"></i>&nbsp; Download..\n                      </button>\n                    </mat-cell>\n                  </ng-container>\n                  \n  \n                 \n  \n                  <ng-container matColumnDef=\"action\">\n                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                      *matHeaderCellDef>Action</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"poAcknowledgement(row, 'Acknowledge')\"\n                        class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                      </button>\n  \n                      <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\" (click)=\"poAcknowledgement(row, 'View')\"\n                        class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                      </button>\n  \n                      <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteItem(row.id)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button> -->\n                    </mat-cell>\n                  </ng-container>\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"poAcknowledgement(row, 'View')\"\n                    [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                  <mat-cell *matNoDataRow colspan=\"4\">\n                    No data matching the filter \"{{ input.value }}\"</mat-cell>\n                </mat-table>\n                <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                  </mat-progress-spinner>\n                </div>\n                <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                  aria-label=\"Select page of users\"></mat-paginator>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-received-stocks\",\n  templateUrl: \"./received-stocks.component.html\",\n  styleUrls: [\"./received-stocks.component.scss\"],\n})\nexport class ReceivedStocksComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"prCode\",\n    \"prItemCode\",\n    \"quantityDelivered\",\n    \"quantityCanceled\",\n    \"quantityOpen\",\n    \"accountNumber\",\n    // \"taxName\",\n    // \"taxRate\",\n    // \"subTotal\",\n    // \"taxAmount\",\n    // \"totalAmount\",\n    \"status\",\n    \"transactionStatus\",\n    \"allocationStatus\",\n    \"deliveredBy\",\n\n    \"receivedBy\",\n    \"receivedOn\",\n    \"downloadGrn\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackbar: SnackbarService,\n    private requisitionService: RequisitionService\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"RECEIVED\", Validators.required],\n      allocationStatus: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n    this.toggleDatabaseData('PENDING');\n\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  reqStatuses: any[] = [{ name: \"RECEIVED\" }, { name: \"RETURNED\" }];\n\n  reqallocationStatuses: any[] = [{ name: \"PENDING\" }, { name: \"POSTED\" }];\n\n  selectedStatus: string = \"RECEIVED\";\n  selectedallocationStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n  showEditButton: boolean = false;\n  getSelectSelectedAllocationStatus() {\n    this.toggleDatabaseData(this.Form.value.allocationStatus);\n\n    this.getData();\n  }\n  getSelectedAllocationStatus(allocationStatus: any) {\n    this.Form.patchValue({\n      allocationStatus: allocationStatus,\n    });\n    this.toggleDatabaseData(allocationStatus);\n    this.getData();\n  }\n  toggleDatabaseData(allocationStatus) {\n    if (allocationStatus === \"PENDING\") {\n      this.showEditButton = true;\n      console.log(\"showEditButton: \", this.showEditButton);\n\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"prCode\",\n        \"prItemCode\",\n        \"quantityDelivered\",\n        \"quantityCanceled\",\n        \"quantityOpen\",\n        \"accountNumber\",\n        \"status\",\n        \"transactionStatus\",\n        \"allocationStatus\",\n        \"deliveredBy\",\n        \"receivedBy\",\n        \"receivedOn\",\n        \"downloadGrn\",\n        \"action\",\n      ];\n    } else {\n      this.showEditButton = false;\n      console.log(\"showEditButton: \", this.showEditButton);\n\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"prCode\",\n        \"prItemCode\",\n        \"quantityDelivered\",\n        \"quantityCanceled\",\n        \"quantityOpen\",\n        \"accountNumber\",\n\n        \"status\",\n        \"transactionStatus\",\n        \"allocationStatus\",\n        \"deliveredBy\",\n\n        \"receivedBy\",\n        \"receivedOn\",\n        \"downloadGrn\",\n        \"action\",\n      ];\n    }\n  }\n  purchaseCategory: string = \"Stock\";\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedallocationStatus = this.Form.value.allocationStatus;\n    const params = new HttpParams()\n      .set(\"status\", this.Form.value.status)\n      .set(\"pushStatus\", this.Form.value.allocationStatus)\n      .set(\"purchaseOrderCategory\", this.purchaseCategory);\n\n    console.log(\"this.Form.value :\", this.Form.value);\n\n    this.requisitionService\n      .getReceivedItemsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  //******************************************************************************************* */\n\n  poAcknowledgement(data: any, action: any) {\n    const additionalData = data;\n    let route = \"/erp-procurement/requisitions/purchase-order-acknowledgement\";\n    this.router.navigate([route], {\n      queryParams: {\n        code: data.prCode,\n        action: action,\n      },\n    });\n  }\n  addItem() {\n    this.router.navigate([\"/erp-procurement/requisitions/all-requisitions\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  deleteItem(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Item?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Item!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n\n        this.requisitionService\n          .deleteReceivedItemsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //******************************************************************************************************\n  //Select ReceivedItems\n  ItemDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  customSweetAlert() { }\n\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Please ensure all selected items are fully delivered. They will be posted to Inventory. This action is irreversible!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Proceed!\",\n    }).then((result) => {\n      if (result.value) {\n        const processedRows = this.selectedRows.map((element) => {\n          return {\n            id: element.id,\n            status: status,\n          };\n        });\n\n        console.log(\"LOG: \", processedRows);\n\n        let params = { allocation: this.purchaseCategory };\n\n        this.requisitionService\n          .validateReceivedItemsAllocation(processedRows, params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                Swal.fire(\"Posted!\", res.message, \"success\");\n\n                this.selection = new SelectionModel<any>(true, []);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n  //*************************************************************************************************************** */\n\n  // downloadGrn(row: any) {\n  //   // Show SweetAlert to prompt for dates\n  //   Swal.fire({\n  //     title: 'Select Date Range',\n  //     html: `\n  //       <input id=\"fromDate\" class=\"swal2-input\" placeholder=\"From Date\" type=\"date\">\n  //       <input id=\"toDate\" class=\"swal2-input\" placeholder=\"To Date\" type=\"date\">\n  //     `,\n  //     preConfirm: () => {\n  //       const fromDate = (<HTMLInputElement>document.getElementById('fromDate')).value;\n  //       const toDate = (<HTMLInputElement>document.getElementById('toDate')).value;\n  //       return { fromDate, toDate };\n  //     }\n  //   }).then((result: any) => {\n  //     // If user clicks 'Confirm'\n  //     if (result.isConfirmed) {\n  //       const { fromDate, toDate } = result.value;\n\n  //       const params = new HttpParams()\n  //       .set('supplierCode', row.supplierCode)\n  //       .set('fromDate', fromDate)\n  //       .set('toDate', toDate)\n  //       .set('type', row.type);\n\n  //       console.log(\"paramsparams :\", params);\n\n  //         this.requisitionService\n  //         .donwloadSingleGoodsReceivedNote(params)\n  //         .pipe(takeUntil(this.destroy$))\n  //         .subscribe({\n  //           next: (res) => {\n  //             console.log(\"res :\", res);\n  //             let url = window.URL.createObjectURL(res.data);\n\n  //             // if you want to open PDF in new tab\n  //             window.open(url);\n\n  //             let a = document.createElement(\"a\");\n  //             document.body.appendChild(a);\n  //             a.setAttribute(\"style\", \"display: none\");\n  //             a.setAttribute(\"target\", \"blank\");\n  //             a.href = url;\n  //             // Append row.code to the download URL\n  //             a.download = `GoodsReceivedNote_${row.grnCode}.pdf`;\n  //             a.click();\n  //             window.URL.revokeObjectURL(url);\n  //             a.remove();\n\n  //             this.downloadLoading = false;\n\n  //             this.snackbar.showNotification(\n  //               \"snackbar-success\",\n  //               res.message\n  //             );\n  //             // if (res.statusCode === 200) {\n  //             // } else {\n  //             //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //             // }\n  //           },\n  //           error: (err) => {\n  //             this.snackbar.showNotification(\n  //               \"snackbar-danger\",\n  //               err.message\n  //             );\n  //             this.downloadLoading = false;\n  //           },\n  //           complete: () => {\n  //             this.downloadLoading = false;\n  //           },\n  //         }),\n  //         Subscription;\n  //     } else {\n  //       // User clicked 'Cancel'\n  //       this.snackbar.showNotification('snackbar-info', 'Download canceled');\n  //     }\n  //   });\n  // }\n\n  downloadSingleGrn(row: any) {\n    // Show SweetAlert to confirm download\n    Swal.fire({\n      title: \"Download Goods Received Note\",\n      text: \"Are you sure you want to download the Goods Received Note?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"No\",\n    }).then((result: any) => {\n      // If user clicks 'Confirm'\n      if (result.isConfirmed) {\n        const params = new HttpParams()\n          .set(\"supplierCode\", row.supplierCode)\n          .set(\"grnCode\", row.grnCode)\n          .set(\"type\", row.type);\n\n        console.log(\"paramsparams :\", params);\n        this.downloadLoading = true;\n\n        this.requisitionService\n          .donwloadSingleGoodsReceivedNote(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res :\", res);\n              let url = window.URL.createObjectURL(res.data);\n\n              // Open PDF in new tab\n              window.open(url);\n\n              // Download the PDF\n              let a = document.createElement(\"a\");\n              document.body.appendChild(a);\n              a.setAttribute(\"style\", \"display: none\");\n              a.href = url;\n              a.download = `GoodsReceivedNote_${row.grnCode}.pdf`;\n              a.click();\n              window.URL.revokeObjectURL(url);\n              a.remove();\n\n              this.downloadLoading = false;\n\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              this.downloadLoading = false;\n            },\n            complete: () => {\n              this.downloadLoading = false;\n            },\n          }),\n          Subscription;\n      } else {\n        // User clicked 'Cancel'\n        this.snackbar.showNotification(\"snackbar-info\", \"Download canceled\");\n      }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Received Stock Items'\" [items]=\"['Stock Items']\" [active_item]=\"'All Received'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Received Stock Items</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addItem()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"POST ITEM\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('POSTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                            <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">cancel</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">undo</mat-icon>\n                            </button>\n                          </div>\n                        </li> -->\n                    </ul>\n                  </div>\n\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                exporter.exportTable('xlsx', {\n                                  fileName: 'ReceivedItems-list',\n                                  sheet: 'sheet1'\n                                })\n                              \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n\n                <form [formGroup]=\"Form\">\n\n                  <div class=\"row mx-2\">\n                    <div class=\"col-1\">\n                      <h6>Receive Status:</h6>\n                    </div>\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <div class=\"button-container mt-1\">\n                        <!-- Button for RECEIVED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RECEIVED'\"\n                          class=\"mat-button verified\" (click)=\"getSelectedStatus('RECEIVED')\">\n                          <mat-icon>check_circle</mat-icon>\n                          RECEIVED\n                        </button>\n                        <!-- Button for RETURNED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                          class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                          <mat-icon>reply</mat-icon>\n                          RETURNED\n                        </button>\n\n\n\n\n                      </div>\n                    </div>\n                    <div class=\"col-1\">\n                      <h6>Allocation Status:</h6>\n                    </div>\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>AllocationStatus</mat-label>\n\n                        <mat-select formControlName=\"allocationStatus\"\n                          (selectionChange)=\"getSelectSelectedAllocationStatus()\">\n                          <mat-option *ngFor=\"let reqallocationStatus of reqallocationStatuses\"\n                            [value]=\"reqallocationStatus.name\">{{ reqallocationStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('allocationStatus').hasError('required')\">\n                          Please select allocationStatus\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <div class=\"button-container mt-1\">\n\n                        <!-- Button for PENDING status -->\n                        <button  mat-raised-button\n                          [class.active]=\"selectedallocationStatus === 'PENDING'\" class=\"mat-button pending\"\n                          (click)=\"getSelectedAllocationStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n\n                        <!-- Button for APPROVED status -->\n                        <button mat-raised-button [class.active]=\"selectedallocationStatus === 'POSTED'\"\n                          class=\"mat-button approved\" (click)=\"getSelectedAllocationStatus('POSTED')\">\n                          <mat-icon>thumb_up</mat-icon>\n                          POSTED\n                        </button>\n\n\n\n                      </div>\n                    </div>\n                  </div>\n\n\n\n                </form>\n\n\n\n              </div>\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-4\">\n                    Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-4\">{{ row.id\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    PrCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.prCode }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prItemCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">PrItemCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.prItemCode\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityDelivered\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Delivered</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.quantityDelivered }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityCanceled\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Canceled</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.quantityCanceled }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"quantityOpen\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Q.Open</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.quantityOpen\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"accountNumber\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Acc. No</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{\n                    row.accountNumber }}</mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"taxName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxName</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxName }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"taxRate\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxRate</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxRate }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"subTotal\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">subTotal</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.subTotal }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"taxAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">taxAmount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.taxAmount }}</mat-cell>\n                  </ng-container>\n                  \n                  <ng-container matColumnDef=\"totalAmount\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">totalAmount</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.totalAmount }}</mat-cell>\n                  </ng-container> -->\n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    <ng-container [ngSwitch]=\"row.status\">\n\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RECEIVED'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"allocationStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    AllocationStatus</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    <ng-container [ngSwitch]=\"row.pushStatus\">\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.pushStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"deliveredBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    DeliveredBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.deliveredBy\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-28\">TranStatus</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"receivedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    ReceivedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedBy\n                    }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"receivedOn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-9\">\n                    ReceivedOn</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-9\">{{ row.receivedOn |\n                    date: 'short' }}</mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"downloadGrn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download GRN</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\"\n                      (click)=\"downloadGrn(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container> -->\n\n                <ng-container matColumnDef=\"downloadGrn\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download GRN</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\"\n                      (click)=\"downloadSingleGrn(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n\n\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>Actions\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button *ngIf=\"showEditButton\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"poAcknowledgement(row, 'Acknowledge')\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"poAcknowledgement(row, 'View')\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteItem(row.id)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button> -->\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"poAcknowledgement(row, 'View')\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { AccountsPayableService } from \"src/app/erp-finance/data/services/accounts-payable.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { AccountingJournalTransactionsComponent } from \"src/app/erp-finance/modules/finance-management/transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\n\n@Component({\n  selector: \"app-all-supplier-invoices\",\n  templateUrl: \"./all-supplier-invoices.component.html\",\n  styleUrls: [\"./all-supplier-invoices.component.scss\"],\n})\nexport class AllSupplierInvoicesComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"accountingSelect\",\n    \"id\",\n    \"supplierName\",\n    \"supplierCode\",\n    \"prCode\",\n    \"invoiceCode\",\n    \"invoiceAmount\",\n    \"invoiceDate\",\n    \"dueDate\",\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  currentDate: Date = new Date();\n  dateTomorrow: Date = new Date(\n    this.currentDate.getTime() + 1 * 24 * 60 * 60 * 1000\n  );\n  oneWeekAgo: Date = new Date(\n    this.currentDate.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n\n  currentUser: any;\n\n\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private supplierInvoiceManService: AccountsPayableService,\n    private fb: FormBuilder,\n    private datepipe: DatePipe,\n    private tokenCookiService: TokenCookieService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private transactionService: TransactionsService\n  ) {\n    this.currentUser = this.tokenCookiService.getUser().supplierCode;\n  }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      approvalType: [\"AllInvoices\", Validators.required],\n    });\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  selectedApprovalType: string = \"HOD\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData();\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData();\n  }\n\n  // alignTableColumns() {\n  //   if (this.Form.value.transactionType === \"Receiving\") {\n  //     this.displayedColumns = [\n  //       \"select\",\n  //       \"id\",\n  //       \"tranCode\",\n  //       \"referenceCode\",\n  //       \"transactionType\",\n  //       \"prCode\",\n  //       \"description\",\n  //       \"postedBy\",\n  //       \"postedTime\",\n  //       \"status\",\n  //       \"action\",\n  //     ];\n  //   } else if (\n  //     this.Form.value.transactionType === \"ImprestApplication\" ||\n  //     this.Form.value.transactionType === \"ImprestClearance\"\n  //   ) {\n  //     this.displayedColumns = [\n  //       \"select\",\n  //       \"id\",\n  //       \"tranCode\",\n  //       \"referenceCode\",\n  //       \"transactionType\",\n  //       \"imprestAccountStatus\",\n  //       \"description\",\n  //       \"postedBy\",\n  //       \"postedTime\",\n  //       \"status\",\n  //       \"action\",\n  //     ];\n  //   } else if (\n  //     this.Form.value.transactionType === \"Inventory\" ||\n  //     this.Form.value.transactionType === \"Invoice\" ||\n  //     this.Form.value.transactionType === \"Payment\" ||\n  //     this.Form.value.transactionType === \"CustomerInvoice\" ||\n  //     this.Form.value.transactionType === \"SupplierInvoice\" ||\n  //     this.Form.value.transactionType === \"SupplierPayment\" ||\n  //     this.Form.value.transactionType === \"CustomerPayment\" ||\n  //     this.Form.value.transactionType === \"Standard\" ||\n  //     this.Form.value.transactionType === \"Salaries\" ||\n  //     this.Form.value.transactionType === \"FixedAssetsDepreciation\"\n  //   ) {\n  //     this.displayedColumns = [\n  //       \"select\",\n  //       \"id\",\n  //       \"tranCode\",\n  //       \"referenceCode\",\n  //       \"transactionType\",\n  //       \"description\",\n  //       \"postedBy\",\n  //       \"postedTime\",\n  //       \"status\",\n  //       \"action\",\n  //     ];\n  //   }\n  // }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n\n    let params = {\n      status: this.Form.value.status,\n      approvalType: this.Form.value.approvalType,\n    };\n    // this.alignTableColumns();\n    this.supplierInvoiceManService\n      .getSupplierInvoicesByStatusAndApprovalType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.selection = new SelectionModel<any>(true, []);\n        },\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n\n  deleteTransaction(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Transaction?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Transaction!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = { id: id };\n\n        this.transactionService\n          .deleteTransactionsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  onDeleteInvoiceDetails(id: string) {\n    const params = new HttpParams().set(\"id\", id);\n\n    console.log(\"the id to delete:\", id);\n\n    Swal.fire({\n      icon: \"warning\",\n      title: \"Are you sure you want to delete this Invoice Info?\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.supplierInvoiceManService.deleteSupplierInvoice(params).subscribe(\n          () => {\n            Swal.fire({\n              icon: \"success\",\n              title: \"Record deleted successfully!\",\n            }).then(() => {\n              this.router.navigate([\n                \"/erp-finance/finance-management/allSupplierInvoices\",\n              ]);\n              this.getData();\n            });\n          },\n          (error) => {\n            Swal.fire({\n              icon: \"error\",\n              title: \"Error deleting record\",\n              text: \"An error occurred while deleting the record.\",\n            });\n          }\n        );\n      }\n    });\n  }\n\n  // getData() {\n  // const params = new HttpParams().set(\"supplierCode\", this.currentUser);\n  // console.log(\"this.params :\", params);\n  // this.supplierInvoiceManService.getAllInvoicesbySupcode(params).subscribe({\n  //   next: (res) => {\n  //     console.log(\"this.data :\", res);\n  //     if (res.statusCode===200) {\n  //       this.data = res.entity;\n  //       this.isLoading = false;\n  //       this.dataSource = new MatTableDataSource<any>(this.data);\n  //       this.dataSource.paginator = this.paginator;\n  //       this.dataSource.sort = this.sort;\n\n  //       this.selection = new SelectionModel<any>(true, []);\n\n  //       console.log(\"this.data :\", this.data);\n  //     } else {\n  //       this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //     }\n  //   },\n  //   error: (err) => {\n  //     console.log(\"this.err :\", err);\n  //     this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //   },\n  //   complete: () => {},\n  // }),\n  //   Subscription;\n  // }\n\n  addSuplierInvoice() {\n    let route = \"/erp-procurement/received/manage-supplier-invoice\";\n    this.router.navigate([route]);\n  }\n\n  editRequisition() { }\n  toggleFavorite(row: any) {\n    row.favorite = !row.favorite;\n  }\n\n  handleNavigate(data: any) {\n    let route = \"/erp-procurement/received/manage-supplier-invoice\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Update\" },\n    });\n  }\n\n  // View Supplier Invoice\n  viewSupplierInvoice(data: any) {\n    let route = \"/erp-procurement/received/manage-supplier-invoice\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"View\" },\n    });\n  }\n\n  // Approve Supplier Invoice\n  approveSupplierInvoice(data: any) {\n    let route = \"/erp-procurement/received/manage-supplier-invoice\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Verify\" },\n    });\n  }\n\n  //********************************************************************************************************************** */\n  //accounting Select\n  //********************************************************************************************************************** */\n\n  // New selection for a different MatTable\n  accountingTableSelection = new SelectionModel<any>(false, []);\n  accountingSelectItemsSelected: boolean = false;\n  accountingCheckboxSelectedRows: any;\n\n  isAllaccountingTableSelected() {\n    const numSelected = this.accountingTableSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masteraccountingTableToggle() {\n    if (this.isAllaccountingTableSelected()) {\n      this.accountingTableSelection.clear();\n      return;\n    }\n\n    this.accountingTableSelection.select(...this.dataSource.data);\n  }\n\n  checkboxaccountingTableLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllaccountingTableSelected() ? \"deselect\" : \"select\"\n        } all`;\n    }\n    return `${this.accountingTableSelection.isSelected(row) ? \"deselect\" : \"select\"\n      } row ${row.position + 1}`;\n  }\n\n  checkaccountingTableSelection() {\n    const numSelected = this.accountingTableSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    if (numSelected === numRows) {\n      this.accountingSelectItemsSelected = true;\n    } else if (numSelected !== numRows) {\n      this.accountingSelectItemsSelected = false;\n    }\n    this.selectedRows = [];\n\n    this.selectedRows = this.selection.selected;\n\n    console.log(\n      \"accountingSelectItemsSelected: \",\n      this.accountingSelectItemsSelected\n    );\n  }\n\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n    //this.accountingCheckboxSelectedRows = this.accountingTableSelection.selected;\n\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.accountingTableSelection.selected[0].tranCode\n    );\n\n    if (\n      this.transactionAction !== \"Add\" &&\n      (this.accountingTableSelection.selected[0].tranCode === null ||\n        this.accountingTableSelection.selected[0].tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    } else {\n      this.transactionLookUp();\n    }\n  }\n  // Receiving\n  // Inventory\n  // FixedAssets\n  // SupplierInvoice\n  // CustomerInvoice\n  // SupplierPayment\n  // CustomerPayment\n  // Disbursement\n  // Imprests\n  // Salaries\n  // ****************************************************************************************************************************\n  transactionType: string = \"SupplierInvoice\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\n      \"this.accountingTableSelection:: \",\n      this.accountingTableSelection.selected[0]\n    );\n\n    let addBody = {};\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n        prCode: this.accountingTableSelection.selected[0].prCode,\n        referenceCode: this.accountingTableSelection.selected[0].invoiceCode,\n        itemCode: \"\",\n        parttrans: [\n          {\n            accountNo: \"\",\n            amount: this.accountingTableSelection.selected[0].invoiceAmount,\n            partTranstype: \"Debit\",\n          },\n        ],\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.accountingTableSelection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.accountingTableSelection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n        this.updateReceivedTransactionStatus();\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  updateReceivedTransactionStatus() {\n    let params = {\n      transactionType: this.transactionResponse.transactionType,\n      tranCode: this.transactionResponse.tranCode,\n      tranDate: this.transactionResponse.tranDate,\n      referenceCode: this.transactionResponse.referenceCode,\n    };\n    this.transactionService\n      .updateAccountingTransactionDetailsStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n            this.getData();\n            // this.router.navigate([\n            //   \"/erp-procurement/requisitions/all-requisitions\",\n            // ]);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        HOD: \"HOD\",\n\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"HOD\") {\n          privilege = \"Dashboard\";\n        }\n\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.accountingTableSelection.selected.map(\n                (element) => {\n                  return {\n                    id: element.id,\n                    status: status,\n                    verifierRemarks: verifierRemarks,\n                  };\n                }\n              );\n\n              console.log(\"LOG: \", processedRows);\n\n              let params = { approvalType: selectedUserType };\n\n              this.supplierInvoiceManService\n                .validateSupplierInvoices(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData();\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Supplier Invoices'\" [items]=\"['Invoicing']\" [active_item]=\"'All Invoices'\">\n      </app-breadcrumb>\n    </div>\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Supplier Invoices</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addSuplierInvoice()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <ng-container *ngIf=\"accountingTableSelection.selected.length > 0\">\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">check</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                            <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">cancel</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">undo</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n\n                        <!-- <li>\n                          <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Update')\">\n                              <mat-icon class=\"col-white\">edit</mat-icon>\n                            </button>\n                          </div>\n                        </li> -->\n\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"View Accounting Details\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('View')\">\n                              <mat-icon class=\"col-white\">visibility</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ng-container>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Approval Type:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- All Invoices -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'AllInvoices'\"\n                        class=\"mat-button all-invoices mb-1\" (click)=\"getApprovalTypeSelectedStatus('AllInvoices')\">\n                        <mat-icon>description</mat-icon>\n                        ALL INVOICES\n                      </button>\n\n                      <!-- HOD -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'HOD'\"\n                        class=\"mat-button hod mb-1\" (click)=\"getApprovalTypeSelectedStatus('HOD')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HOD VERIFIER\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'Finance Manager'\"\n                        class=\"mat-button finance-manager mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Finance Manager')\">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        FINANCE MANAGER\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'Senior Finance Manager'\"\n                        class=\"mat-button senior-finance-manager mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Senior Finance Manager')\">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        SENIOR FINANCE MANAGER\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'Head of Finance And Strategy'\"\n                        class=\"mat-button head-of-finance-strategy mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Head of Finance And Strategy')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HEAD OF FINANCE AND STRATEGY\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'Managing Director And CEO'\"\n                        class=\"mat-button managing-director-ceo mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Managing Director And CEO')\">\n                        <mat-icon>person_pin</mat-icon>\n                        MANAGING DIRECTOR AND CEO\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeaderCustom mt-1\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Status:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- <div class=\"materialTableHeader mt-2\" *ngIf=\"accountingTableSelection.selected.length > 0\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Accounting Actions:</h2>\n                      </li>\n\n                      \n                    </ul>\n                  </div>\n                </div>\n              </div> -->\n\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"accountingSelect\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masteraccountingTableToggle() : null\" [checked]=\"\n                        accountingTableSelection.hasValue() &&\n                        isAllaccountingTableSelected()\n                      \" [indeterminate]=\"\n                        accountingTableSelection.hasValue() &&\n                        !isAllaccountingTableSelected()\n                      \" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"\n                        $event ? accountingTableSelection.toggle(row) : null\n                      \" [checked]=\"accountingTableSelection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                      [aria-label]=\"checkboxaccountingTableLabel(row)\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-5\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    <span *ngIf=\"row.id\">{{ row.id }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"supplierName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">Supplier Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.supplierName\">\n                      {{ row.supplierName }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"supplierCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Supplier Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.supplierCode\">\n                      {{ row.supplierCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">Pr\n                    Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.prCode\"> {{ row.prCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"invoiceCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">Invoice Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.invoiceCode\"> {{ row.invoiceCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"invoiceAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Invoice Amount\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.invoiceAmount\">\n                      {{\n                      row.invoiceAmount\n                      | currency : row.currency : \"symbol\" : \"1.2-2\"\n                      }}\n                    </span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"invoiceDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Invoice Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span>\n                      {{\n                      row.postedTime\n                      ? (row.postedTime | date : \"MM/dd/yyyy\")\n                      : (row.modifiedTime | date : \"MM/dd/yyyy\")\n                      }}\n                    </span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"dueDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Due Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.dueDate\">\n                      {{ row.dueDate | date : \"dd/MM/yyyy\" }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"tranCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    matTooltip=\"QuantityCancelled\">\n                    TranCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranCode || \"-\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    TranStatus\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <ng-container *ngSwitchDefault> N.A </ng-container>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"tranDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Tran Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranDate ? (row.tranDate | date : \"short\") : \"N.A\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Approval Status -->\n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\"\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\" (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\"\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewSupplierInvoice(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" class=\"tbl-action-btn\"\n                      [disabled]=\"row?.status !== 'PENDING'\" (click)=\"handleNavigate(row)\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"approveSupplierInvoice(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button> -->\n\n                    <button mat-icon-button color=\"accent\" [disabled]=\"row?.status !== 'PENDING'\"\n                      (click)=\"onDeleteInvoiceDetails(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\" showFirstLastButtons\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n  FormControl,\n} from \"@angular/forms\";\nimport { DateAdapter } from \"@angular/material/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, BehaviorSubject, takeUntil, Subscription } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { AccountsPayableService } from \"src/app/erp-finance/data/services/accounts-payable.service\";\nimport { MaintainedCurrenciesLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { CustomerInvoiceValidationComponent } from \"src/app/erp-finance/data/lookups/validation/customer-invoice-validation/customer-invoice-validation.component\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SupplierInvoiceValidationComponent } from \"src/app/erp-finance/data/lookups/validation/supplier-invoice-validation/supplier-invoice-validation.component\";\nimport { MaintainedSuppliersLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-suppliers-look-up/maintained-suppliers-look-up.component\";\nimport { PurchaseRequisitionLookUpComponent } from \"src/app/erp-finance/data/lookups/purchase-requisition-look-up/purchase-requisition-look-up.component\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\n\n\ninterface PaymentTypes {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n\n  selector: \"app-manage-supplier-invoices\",\n  templateUrl: \"./manage-supplier-invoices.component.html\",\n  styleUrls: [\"./manage-supplier-invoices.component.scss\"],\n\n})\nexport class ManageSupplierInvoicesComponent implements OnInit {\n\n\n  \n  mngForm: FormGroup;\n  showForm: boolean = true;\n  pageFunction: string = \"Add\";\n  currentUser: any;\n  formData: any;\n  selectedItem: any[] = [];\n  minDate: Date;\n  hideApprovals = true;\n  selectedPaymentType: string;\n\n  paymentTypes: PaymentTypes[] = [\n    { value: 'FULL', viewValue: 'Full Payment' },\n    { value: 'PARTIAL', viewValue: 'Partial Payment' },\n  ];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private fb: FormBuilder,\n    private tfb: FormBuilder,\n    private filesService: FilesService,\n    private tfilesService: FilesService,\n    private tokenStorageService: TokenStorageService,\n    private supplierInvoiceManService: AccountsPayableService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private cdRef: ChangeDetectorRef,\n    private dateAdapter: DateAdapter<Date>,\n    private accessControlService: AccessControlService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private tokenCookiService: TokenCookieService,\n    private requisitionService: RequisitionService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser();\n    this.minDate = this.dateAdapter.today();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ngOnInit(): void {\n  //   this.pageFunction = this.route.snapshot.queryParams[\"action\"] || \"Add\";\n  //   this.dataSource.paginator = this.paginator;\n  //   this.minDate = new Date();\n\n  //   const queryParams = this.route.snapshot.queryParams;\n  //   const purchaseRequisitionCode = queryParams[\"purchaseRequisitionCode\"];\n  //   const totalAmount = queryParams[\"totalAmount\"];\n\n  //   const cleanPurchaseRequisitionCode = purchaseRequisitionCode\n  //     ? purchaseRequisitionCode.replace(/\"/g, \"\")\n  //     : \"\";\n  //   const cleanTotalAmount = totalAmount ? totalAmount.replace(/\"/g, \"\") : \"\";\n\n  //   if (this.pageFunction === \"Add\") {\n  //     this.generateEmptyForm();\n  //     this.mngForm.get(\"prCode\").setValue(cleanPurchaseRequisitionCode);\n  //     this.mngForm.get(\"invoiceAmount\").setValue(cleanTotalAmount);\n  //   } else if (this.pageFunction === \"Update\") {\n  //     this.formData = JSON.parse(\n  //       this.route.snapshot.queryParams[\"additionalData\"]\n  //     );\n  //     this.initializeData();\n  //     this.generateFormWithData();\n  //   } else if (this.pageFunction === \"View\") {\n  //     this.formData = JSON.parse(\n  //       this.route.snapshot.queryParams[\"additionalData\"]\n  //     );\n  //     this.generateDisabledFormWithData();\n  //     this.initializeData();\n  //   } else if (this.pageFunction === \"Verify\") {\n  //     this.formData = JSON.parse(\n  //       this.route.snapshot.queryParams[\"additionalData\"]\n  //     );\n  //     this.generateDisabledFormWithData();\n  //     this.initializeData();\n  //     this.hideApprovals = false;\n  //   }\n  // }\n\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action == \"Verify\") {\n          this.pageFunction = \"Verify\";\n        }\n\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n\n  id: any;\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.supplierInvoiceManService\n      .getSupplierInvoiceById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n  hideSubmit: boolean = false;\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = false;\n    }\n  }\n\n  //****************************************************************************************************************** */\n\n  currencyLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedCurrenciesLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode,\n        });\n      });\n    });\n  }\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      supplierName: ['', [Validators.required]],\n      supplierCode: ['', [Validators.required]],\n      prCode: ['', [Validators.required]],\n      grnCode: ['', [Validators.required]],\n      currency: ['KES', [Validators.required]],\n      invoiceAmount: ['', [Validators.required]],\n      paymentType: ['', [Validators.required]],\n      invoiceCode: ['', [Validators.required]],\n      dueDate: ['', Validators.required],\n      invoiceAttachments: [[]],\n    });\n\n    if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n\n    // if (this.pageFunction === 'View') {\n    //   this.generateDisabledFormWithData();\n    // }\n  }\n\n  generateFormWithData() {\n    console.log(\"generateFormWithData: \", this.formData);\n    this.mngForm = this.fb.group({\n      id: [this.formData.id, [Validators.required]],\n      supplierName: [this.formData.supplierName, [Validators.required]],\n      supplierCode: [this.formData.supplierCode, [Validators.required]],\n      prCode: [this.formData.prCode, [Validators.required]],\n      grnCode: [this.formData.grnCode, [Validators.required]],\n      currency: [this.formData.currency, [Validators.required]],\n      invoiceAmount: [this.formData.invoiceAmount, [Validators.required]],\n      paymentType: [this.formData.paymentType, [Validators.required]],\n      invoiceCode: [this.formData.invoiceCode, [Validators.required]],\n      dueDate: [this.formData.dueDate, Validators.required],\n      invoiceAttachments: [this.formData.invoiceAttachments],\n      status: [this.formData.status, [Validators.required]],\n    });\n  }\n\n  generateDisabledFormWithData() {\n    console.log(\"generateFormWithData: \", this.formData);\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }, [Validators.required]],\n      supplierName: [\n        { value: this.formData.supplierName, disabled: true },\n        [Validators.required],\n      ],\n      supplierCode: [\n        { value: this.formData.supplierCode, disabled: true },\n        [Validators.required],\n      ],\n      prCode: [\n        { value: this.formData.prCode, disabled: true },\n        [Validators.required],\n      ],\n      grnCode: [\n        { value: this.formData.grnCode, disabled: true },\n        [Validators.required],\n      ],\n      currency: [\n        { value: this.formData.currency, disabled: true },\n        [Validators.required],\n      ],\n      invoiceAmount: [\n        { value: this.formData.invoiceAmount, disabled: true },\n        [Validators.required],\n      ],\n      paymentType: [\n        { value: this.formData.paymentType, disabled: true }, [Validators.required]\n      ],\n      invoiceCode: [\n        { value: this.formData.invoiceCode, disabled: true },\n        [Validators.required],\n      ],\n      dueDate: [\n        { value: this.formData.dueDate, disabled: true },\n        Validators.required,\n      ],\n      invoiceAttachments: [\n        { value: this.formData.invoiceAttachments, disabled: true },\n      ],\n    });\n  }\n\n  initializeData() {\n    if (this.formData.invoiceAttachments) {\n      this.isFileDataLoading = false;\n      this.formData.invoiceAttachments.forEach((element) => {\n        const newRow = this.fb.group({\n          id: [element.id],\n          file: [element.file],\n          fileName: [element.fileName],\n          fileType: [element.fileType],\n        });\n        this.rows.push(newRow);\n      });\n      this.updateView();\n    }\n\n    console.log(\"Additional Data:\", this.formData);\n\n    this.generateFormWithData();\n    this.generateDisabledFormWithData();\n    this.showForm = true;\n    this.currentUser = this.tokenCookiService.getUser();\n    const defaultSupplierName = this.currentUser?.email || \"\";\n    const defaultSupplierCode = this.currentUser?.supplierCode || \"\";\n    console.log(\"defaultSupplierName:\", defaultSupplierName);\n    console.log(\"defaultSupplierCode:\", defaultSupplierCode);\n\n    this.mngForm.controls[\"supplierName\"].patchValue(defaultSupplierName);\n\n    this.generateFormWithData();\n    this.generateDisabledFormWithData();\n\n    this.showForm = true;\n  }\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  enterManually: boolean = true;\n  manualItemsEntry() {\n    this.enterManually = true;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1; // Track the index of the selected row\n\n  clearForm() {\n    this.editButton = false;\n    this.addButton = true;\n    this.selectedRowIndex = -1; // Reset the selected row index\n  }\n  // ************************************financial**************************************************************\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"filename\",\n    \"filetype\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n\n  combinedFiles: FormArray = this.fb.array([]);\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n  isFileDataLoading: boolean = true;\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n\n    this.paginator.length = this.rows.length;\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue();\n    const index = dataArray.indexOf(row);\n\n    if (index !== -1) {\n      dataArray.splice(index, 1);\n      this.attachementsDataSource.next(dataArray);\n      this.paginator.length = this.rows.length;\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currFilename: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n\n    this.isFileLoading.next(true);\n\n    this.filesService.toBase64(files, []).subscribe((res) => {\n      if (res && res.length > 0) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles.push(...res);\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[index].base64;\n\n        const fileName = this.selectedFiles[index].name;\n\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\");\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name);\n        console.log(\"Extension:\", extension);\n        console.log(\"selectedFiles: \", this.selectedFiles);\n        this.currFilename = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.selectedFiles[index].base64,\n          fileName: name,\n          fileType: extension,\n        });\n        this.updateView();\n\n        const filesArray = this.mngForm.get(\"invoiceAttachments\") as FormArray;\n        const fileData = {\n          id: this.rows.get(\"id\").value,\n          file: this.rows.get(\"file\").value,\n          fileName: name,\n          fileType: extension,\n        };\n        filesArray.push(this.fb.group(fileData));\n        console.log(\"File data\", fileData);\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  hasAccess: boolean;\n  onValidate(userType) {\n    // let privilege = \"Manage Expenses\";\n\n    let privilege = \"\";\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"HOD Customer Invoice Validation\";\n        // privilege = \"HOD Supplier Invoice Validation\";\n        break;\n      case \"FINANCE\":\n        privilege = \"Finance Customer Invoice Validation\";\n        // privilege = \"Finance Supplier Invoice Validation\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType,\n      };\n\n      console.log(\"this.formData: \", this.formData);\n\n      const dialogRef = this.dialog.open(\n        SupplierInvoiceValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\n          \"/erp-procurement/received/all-supplier-invoices\",\n        ]);\n      });\n    }\n  }\n\n  // ******************************************************************************************************\n  // Maintained supplier lookup\n  maintainedSuppliersLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"500px\";\n    dialogConfig.data = {\n      action: \"single supplier\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedSuppliersLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          supplierName: element.companyName,\n          supplierCode: element.supplierCode,\n        });\n      });\n    });\n  }\n\n  // **************************************************\n  // Purchase requisition LookUp\n  purchaseRequisitionLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"single purchaseorder\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      PurchaseRequisitionLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          prCode: element.purchaseRequisitionCode,\n          supplierCode: element.supplierCode,\n          supplierName: element.supplierName,\n          invoiceAmount: element.totalAmount\n        });\n      });\n    });\n  }\n\n  onSub: boolean = false\n  onSubmit() {\n    this.mngForm.patchValue({\n      invoiceAttachments: this.documentsForm.value.filedetails,\n    });\n\n    this.onSub = true\n    let upload = this.mngForm.value;\n\n    console.log(\"this is the upload object\", upload);\n    if (this.pageFunction == \"Add\") {\n      this.supplierInvoiceManService\n        .addInvoice(upload)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode === 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n               res.message\n              );\n              this.router.navigate([\n                \"/erp-procurement/received/all-supplier-invoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.onSub = false\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n             err.message\n            );\n          },\n          complete: () => {    this.onSub = false\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Update\") {\n      this.supplierInvoiceManService\n        .updateInvoice(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode === 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-procurement/received/all-supplier-invoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.onSub = false\n            console.log(\"this is the error:\", err);\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {  this.onSub = false},\n        }),\n        Subscription;\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-procurement/received/all-supplier-invoices\", ]);\n  }\n\n\n   //*************************************************************************************************************** */\n\n   downloadGrn() {\n     this.downloadLoading = true;\n \n     const params = new HttpParams().set(\"grnNo\", this.formData.grnCode);\n \n     this.requisitionService\n       .donwloadSingleGoodsReceivedNote(params)\n       .pipe(takeUntil(this.destroy$))\n       .subscribe({\n         next: (res) => {\n           console.log(\"res :\", res);\n           let url = window.URL.createObjectURL(res.data);\n \n           // if you want to open PDF in new tab\n           window.open(url);\n \n           let a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.setAttribute(\"style\", \"display: none\");\n           a.setAttribute(\"target\", \"blank\");\n           a.href = url;\n           // Append row.code to the download URL\n           a.download = `GoodsReceivedNote_${this.formData.grnCode}.pdf`;\n           a.click();\n           window.URL.revokeObjectURL(url);\n           a.remove();\n \n           this.downloadLoading = false;\n \n           this.snackbar.showNotification(\n             \"snackbar-success\",\n             \"Report generated successfully\"\n           );\n           // if (res.statusCode === 200) {\n           // } else {\n           //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n           // }\n         },\n         error: (err) => {\n           this.snackbar.showNotification(\n             \"snackbar-danger\",\n             err.message\n           );\n           this.downloadLoading = false;\n         },\n         complete: () => {\n           this.downloadLoading = false;\n         },\n       }),\n       Subscription;\n   }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <app-breadcrumb [title]=\"' Manage Supplier Invoice'\" [items]=\"['Invoice']\" [active_item]=\"'Supplier Invoice'\">\n      </app-breadcrumb>\n    </div>\n\n\n    <div class=\"row clearfix\">\n\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"\">\n            <!-- <app-invoice-widgets></app-invoice-widgets>    -->\n          </div>\n\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !=='Add'\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n              </div>\n            </div>\n            <div class=\"header\">\n              <div class=\"row\">\n                <h2>{{ pageFunction }} Supplier Invoice</h2>\n              </div>\n\n            </div>\n\n            <form class=\"mx-4\" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Pr Code</mat-label>\n                    <input matInput formControlName=\"prCode\" required [disabled]=\"true\" readonly />\n                    <mat-icon matSuffix (click)=\"purchaseRequisitionLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('prCode').hasError('required')\">prCode is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>SupplierCode</mat-label>\n                    <input matInput formControlName=\"supplierCode\" required [disabled]=\"true\" readonly />\n                    <mat-error *ngIf=\"mngForm.get('supplierCode').hasError('required')\">Supplier Code is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Supplier Name</mat-label>\n                    <input matInput formControlName=\"supplierName\" required [disabled]=\"true\" readonly />\n                    <!-- <mat-icon matSuffix (click)=\"maintainedSuppliersLookUp()\">search</mat-icon> -->\n                    <mat-error *ngIf=\"mngForm.get('supplierName').hasError('required')\">Supplier Name is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>invoiceAmount</mat-label>\n                    <input matInput formControlName=\"invoiceAmount\" required [disabled]=\"true\" />\n                    <mat-error *ngIf=\"mngForm.get('invoiceAmount').hasError('required')\">invoiceAmount is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Select Payment Type</mat-label>\n                    <mat-select [(ngModel)]=\"selectedPaymentType\" formControlName=\"paymentType\">\n                      <mat-option value=\"PARTIAL\">Partial Payment</mat-option>\n                      <mat-option value=\"FULL\">Full Payment</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label> Currency </mat-label>\n                    <input matInput formControlName=\"currency\" required [disabled]=\"true\" />\n                    <mat-icon matSuffix (click)=\"currencyLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('currency').hasError('required')\">\n                      The Currency is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Payment Type</mat-label>\n                    <mat-select formControlName=\"paymentType\">\n                      <mat-option *ngFor=\"let paymentType of paymentTypes\" [value]=\"paymentType.value\">\n                        {{paymentType.viewValue}}\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"mngForm.get('paymentType').hasError('required')\">paymentType is\n                      required</mat-error>\n                  </mat-form-field>\n                </div> -->\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Invoice Code</mat-label>\n                    <input matInput formControlName=\"invoiceCode\" required [disabled]=\"true\" />\n                    <mat-error *ngIf=\"mngForm.get('invoiceCode').hasError('required')\">invoiceCode is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <input matInput [matDatepicker]=\"dueDatePicker\" formControlName=\"dueDate\" placeholder=\"Due Date\"\n                      [min]=\"minDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\n                    <mat-error *ngIf=\"mngForm.get('dueDate').hasError('required')\">Due Date is required</mat-error>\n                    <mat-error *ngIf=\"mngForm.get('dueDate').hasError('matDatepickerMin')\">Due Date must be later than\n                      today</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>grnCode</mat-label>\n                    <input matInput formControlName=\"grnCode\" required [disabled]=\"true\" />\n                    <mat-error *ngIf=\"mngForm.get('grnCode').hasError('required')\">grnCode is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n              </div>\n            </form>\n            <mat-tab-group>\n              <mat-tab>\n                <ng-template mat-tab-label>\n                  <mat-icon>attach_file</mat-icon> Upload Financial Attachments\n                </ng-template>\n                <div class=\"mt-3\">\n                  <form [formGroup]=\"documentsForm\">\n\n                    <div style=\"margin: 20px\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                          <div class=\"row\">\n                            <div class=\"col-8\">\n                              <ul class=\"header-buttons-left ms-0\">\n                                <li class=\"dropdown\">\n                                  <h2>Upload Documents</h2>\n                                </li>\n                                <li class=\"dropdown m-l-20\">\n                                  <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                  <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                    class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                </li>\n\n                                <li>\n                                  <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                    <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                      <mat-icon class=\"col-white\">add</mat-icon>\n                                    </button>\n                                  </div>\n                                </li>\n                              </ul>\n                            </div>\n                            <div class=\"col-4\"></div>\n                          </div>\n                        </div>\n\n                        <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                          formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n                          <!-- ID Column -->\n                          <ng-container matColumnDef=\"id\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                              {{ index + 1 }}\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"filename\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filename</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Filename</mat-label>\n                                <input matInput type=\"text\" formControlName=\"fileName\" placeholder=\"Filename\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"filetype\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filetype</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Filetype</mat-label>\n                                <input matInput type=\"text\" formControlName=\"fileType\" placeholder=\"Filetype\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"selectFile\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                              File</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                              <input #file type=\"file\" [disabled]=\"(this.isFileLoading | async) || otherCondition\"\n                                (change)=\"onSelectFile(file.files, row, index)\" [multiple]=\"'multiple'\"\n                                [hidden]=\"pageFunction === 'View'\" required />\n\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"download\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Download</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"action\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Action</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n                          <!-- Row definitions -->\n                          <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                          <mat-row *matRowDef=\"\n                                let row;\n                                let i = index;\n                                columns: displayColumns\n                              \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                          <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                            input.value\n                            }}\"</mat-cell>\n                        </mat-table>\n\n                        <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                          <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                          </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                          showFirstLastButtons aria-label=\"Select page of users\"></mat-paginator>\n\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </mat-tab>\n            </mat-tab-group>\n            <hr>\n            <div class=\"example-button-row\" align=\"end\">\n              <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                <mat-icon>cancel</mat-icon>\n                Cancel\n              </button>\n              <button class=\"btn-space\" [class.auth-spinner]=\"onSub\" [disabled]=\"onSub || !mngForm.valid\" [hidden]=\"hideSubmit\"\n                [hidden]=\"pageFunction === 'View'\" (click)=\"onSubmit()\" mat-raised-button color=\"primary\">\n                <mat-icon>send</mat-icon>\n                {{ pageFunction }} Invoice\n              </button>\n\n              <!-- <ng-container *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\">\n                <button class=\"btn-space\" (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                  <mat-icon>done_outline</mat-icon>\n                  HOD Approval\n                </button>\n\n                <button class=\"btn-space\" (click)=\"onValidate('FINANCE')\" mat-raised-button color=\"primary\">\n                  <mat-icon>done_outline</mat-icon>\n                  FINANCE Approval\n                </button>\n              </ng-container> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllRecievedItemsComponent } from './pages/all-recieved-items/all-recieved-items.component';\nimport { RoutePrivilegeGuard } from '../../data/services/_AccessControlAuthGuard.service';\nimport { ReceivedStocksComponent } from './pages/received-stocks/received-stocks.component';\nimport { ReceivedFixedAssetsComponent } from './pages/received-fixed-assets/received-fixed-assets.component';\nimport { ReceivedExpensesComponent } from './pages/received-expenses/received-expenses.component';\nimport { ReceivedPrepaymentsComponent } from './pages/received-prepayments/received-prepayments.component';\nimport { AllSupplierInvoicesComponent } from './pages/supplierInvoice/all-supplier-invoices/all-supplier-invoices.component';\nimport { ManageSupplierInvoicesComponent } from './pages/supplierInvoice/manage-supplier-invoices/manage-supplier-invoices.component';\n\nconst routes: Routes = [\n  {\n    path: \"all-received-items\",\n    component: AllRecievedItemsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"All Received Items\"] },\n  },\n\n\n\n\n  {\n    path: \"received-stocks\",\n    component: ReceivedStocksComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Received Stocks\"] },\n  },\n\n  {\n    path: \"received-fixed-assets\",\n    component: ReceivedFixedAssetsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Received Fixed Assets\"] },\n  },\n  {\n    path: \"received-expenses\",\n    component: ReceivedExpensesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Received Expenses\"] },\n  },\n  {\n    path: \"received-prepayments\",\n    component: ReceivedPrepaymentsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Received Prepayments\"] },\n  },\n\n  \n\n  {\n    path: \"all-supplier-invoices\",\n    component: AllSupplierInvoicesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"All Supplier Invoices\", \"Dashboard\"] },\n  },\n  {\n    path: \"manage-supplier-invoice\",\n    component: ManageSupplierInvoicesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Manage Supplier Invoices\", \"Dashboard\"] },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RecievefrompurchaseorderRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { RecievefrompurchaseorderRoutingModule } from './recievefrompurchaseorder-routing.module';\nimport { AllRecievedItemsComponent } from './pages/all-recieved-items/all-recieved-items.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { ReceivedStocksComponent } from './pages/received-stocks/received-stocks.component';\nimport { ReceivedFixedAssetsComponent } from './pages/received-fixed-assets/received-fixed-assets.component';\nimport { ReceivedExpensesComponent } from './pages/received-expenses/received-expenses.component';\nimport { ReceivedPrepaymentsComponent } from './pages/received-prepayments/received-prepayments.component';\nimport { AllSupplierInvoicesComponent } from './pages/supplierInvoice/all-supplier-invoices/all-supplier-invoices.component';\nimport { ManageSupplierInvoicesComponent } from './pages/supplierInvoice/manage-supplier-invoices/manage-supplier-invoices.component';\n\n\n@NgModule({\n  declarations: [\n    AllRecievedItemsComponent,\n    ReceivedStocksComponent,\n    ReceivedFixedAssetsComponent,\n    ReceivedExpensesComponent,\n    ReceivedPrepaymentsComponent,\n    AllSupplierInvoicesComponent,\n    ManageSupplierInvoicesComponent\n  ],\n  imports: [\n    CommonModule,\n    RecievefrompurchaseorderRoutingModule,\n\n\n     //Additional imports\n     DashboardModule,\n     MatIconModule,\n     NgApexchartsModule,\n     PerfectScrollbarModule,\n     MatMenuModule,\n     MatTooltipModule,\n     MatProgressBarModule,\n \n     MatTableModule,\n     MatPaginatorModule,\n     MatInputModule,\n     MatSortModule,\n \n     MatSelectModule,\n     MatTabsModule,\n     MatCheckboxModule,\n     MatTableExporterModule,\n     MatProgressSpinnerModule,\n \n     MatFormFieldModule,\n \n     MatButtonModule,\n     MatDialogModule,\n     MatDatepickerModule,\n     ComponentsModule,\n     MatCardModule,\n     ReactiveFormsModule,\n \n     MatSnackBarModule,\n     MatToolbarModule,\n \n     SharedModule,\n     MatStepperModule,\n     NgxMaskModule,\n     MatChipsModule,\n \n     FormsModule,\n     MatBadgeModule,\n     MatAutocompleteModule,\n     MatBottomSheetModule,\n     MatListModule,\n     MatSidenavModule,\n     MatExpansionModule,\n     MatSliderModule,\n     NgbModule,\n \n  ],\n  providers: [DatePipe]\n})\nexport class RecievefrompurchaseorderModule { }\n"],"names":[],"sourceRoot":"webpack:///"}