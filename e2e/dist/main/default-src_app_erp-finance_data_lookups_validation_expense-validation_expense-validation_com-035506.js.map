{"version":3,"file":"default-src_app_erp-finance_data_lookups_validation_expense-validation_expense-validation_com-035506.js","mappings":"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","sources":["./src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component.ts","./src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component.html","./src/app/erp-finance/data/services/expense-management.service.ts","./src/app/erp-inventory/data/services/brancstores-management.service.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { CostCentreManagementService } from 'src/app/erp-finance/data/services/cost-centre-management.service';\nimport { ExpenseManagementService } from 'src/app/erp-finance/data/services/expense-management.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\n\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-expense-validation',\n  templateUrl: './expense-validation.component.html',\n  styleUrls: ['./expense-validation.component.sass']\n})\nexport class ExpenseValidationComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  action!: string;\n\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  returned: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private expenseManService: ExpenseManagementService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n    console.log(\"DATADATA: \", this.Data)\n  }\n\n  //***************************************************************************************************** */\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n    console.log(\"ids: \", this.Data)\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    if (this.postedBy === this.currentUser) {\n\n      this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n      this.canVerify = false;\n\n    } \n    \n    else {\n      this.canVerify = true;\n    }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.action = \"APPROVED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n \n    const params = new HttpParams()\n      .set(\"remarks\", this.statusForm.value.reason)\n      \n      \n      // let body = [\n      //   {\n      //     id: this.Data.id,\n      //   //  id: this.Data.map((element)=> \n      //   //   {\n      //   //    element.id\n      //   //   }),\n      //     status: this.action\n      //   }]\n\n      let body = [];\n      \n\n\n        this.Data.forEach((element) =>\n        {\n          let expense = {id: element.id, status: this.action};\n          body.push(expense);\n        })\n  \n    // this.expenseManService\n    //   .validateExpense(\n    //     params, body)\n    //   .pipe(takeUntil(this.destroy$))\n    //   .subscribe({\n    //     next: (res) => {\n\n    //       this.snackbar.showNotification(\n    //         \"snackbar-success\",\n    //         \"Expense validated successfully!\"\n    //       );\n    //       if (res) {\n            \n            \n    //       }\n          \n    //     },\n    //     error: (err) => {\n    //       console.log(\"err = \", err);\n    //       this.snackbar.showNotification(\n    //         \"snackbar-danger\",\n    //         \"Server Error: \" + err.message\n    //       );\n    //     },\n    //     complete: () => {\n    //       this.dialogRef.close();\n    //       this.router.navigate([\"/erp-finance/finance-parameters/all-expenses\"]);\n    //     }\n    //   });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Validate Expense</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n            \n            <!-- <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">Expense Code:</dt>\n                <dd>{{Data.expenseCode}}</dd>\n                <dt class=\"pull-left me-2\">Expense Name:</dt>\n                <dd> {{ Data.expenseName }}</dd>\n                <dt class=\"pull-left me-2\">Posted By:</dt>\n                <dd> {{ Data.postedBy }}</dd>\n              </dl>\n            </div> -->\n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <!-- Approve -->\n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n\n              <!-- Return -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n\n              <!-- Reject -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n              \n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ExpenseManagementService {\n  constructor(private http: HttpClient) {}\n\n  // ****************************************************************************************************************************\n\n  getExpenses(): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/all`;\n    return this.http.get<any[]>(expenseUrl);\n  }\n\n  addExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create`;\n    return this.http.post<any[]>(expenseUrl, data);\n  }\n\n  updateExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update`;\n    return this.http.put<any[]>(expenseUrl, data);\n  }\n\n  deleteExpenseTemporarily(params: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/delete`;\n    return this.http.delete<any[]>(expenseUrl, {params});\n  }\n\n  uploadBatchExpenses(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create/bulk`;\n    return this.http.post<any>(expenseUrl, data);\n  }\n\n  getCostCentersByExpenseCode(expenseGlCode: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/expenses/allCostCenters?expenseCode=${expenseGlCode}`;\n    return this.http.get<any>(expenseUrl, expenseGlCode);\n  }\n\n  getExpensesByStatus(params): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/fetchbyStatus`;\n    return this.http.get<any[]>(expenseUrl, { params });\n  }\n  getExpenseById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/expenses/find/by/id`,\n      { params }\n    );\n  }\n\n  validateBulkExpense(processedRows: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AnyARecord } from 'dns';\nimport { Observable, ObservedValueOf } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { BranchstoreLookupComponent } from '../lookups/branchstore-lookup/branchstore-lookup.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrancstoresManagementService {\n\n  constructor(private http: HttpClient) { }\n\n  getbranchStore(): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores`;\n    return this.http.get<any[]>(branchStoreUrl);\n  }\n  getbranchStoreById(id: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/costManagement/fetchBy/${id}`);\n  }\n\n  getbranchStoreByCode(branchStoreCode: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/branchStore/find/by/branchStore/code/${branchStoreCode}`);\n  }\n\n  addbranchStore(data: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/add`;\n    return this.http.post<any>(branchStoreUrl, data);\n  }\n\n  updatebranchStore(branchStoreDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/branch_stores/update`;\n    return this.http.put<any>(updateBillUrl, branchStoreDetails)\n  }\n  // http://localhost:9090/api/branch_stores/receiveGoods?branchCode=11111&requisitionCode=REQ-2023-002\n  receiveItemsFromMain(params: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/branch_stores/receiveGoods`;\n    return this.http.put(\n      invItemUrl,\n      {},\n       {\n        params: params\n       });\n  }\n\n  validateStoreRequisition(params: any): Observable<any> {\n    const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/update/state`;\n    return this.http.put(\n      storeRequisitionUrl,\n      {},\n      {\n        params: params\n      })\n  }\n\n  deletebranchStorePemanently(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/delete`;\n    return this.http.delete<any>(branchStoreUrl, { params })\n  }\n\n  //fetching the requested goods by branchstore\n  fetchAllRequisitionsByBranchcode(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/getAllRequestedItems`;\n    return this.http.get<any>(branchStoreUrl, { params });\n  }\n\n  // ********************************************************************************************************************\n  //Main store requsitions: Requistions to the main store \n  //Requesting goods from the main stores\n  requestFromMainStore(data: any, params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/requestGoods`;\n    return this.http.post<any>(branchStoreUrl, data, { params });\n  }\n\n  getItemsInTransitByCode(params: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/branch_stores/getItemsInTransit`;\n    return this.http.get<any>(invItemUrl, { params });\n  }\n\n  //fetching requistions from the main store by status\n  getAllRequisitionsByStatus(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/allMainStoreRequisitions`;\n    return this.http.get<any>(branchStoreUrl, { params })\n  }\n\n  //fetch requisitions to the main store by requisition code\n  // http://localhost:9090/api/branch_stores/getMainStoreRequisitionByRequisitionCode?requisitionCode=123232\n  fetchRequisitionByCode(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/getMainStoreRequisitionByRequisitionCode`;\n    return this.http.get<any>(branchStoreUrl, { params });\n  }\n\n  //update main store requisition \n  // http://localhost:9090/api/branch_stores/updateMainStoreRequisition\n  updateMainStoreRequisition(requisitionDetails: any): Observable<any>{\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/updateMainStoreRequisition`;\n    return this.http.put<any>(branchStoreUrl, requisitionDetails);\n  }\n\n  //deleting a main store requisition \n  // http://localhost:9090/api/branch_stores/deleteMainStoreRequisition?requisitionCode=123123123\n  deleteMainStoreRequisition(params: any):Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/deleteMainStoreRequisition`;\n    return this.http.delete<any>(branchStoreUrl, {params});\n  }\n\n  // ********************************************************************************************************************\n  //Management of items at the branch Level\n  fetchAllBranchStock(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/allBranchStoreInventory`;\n    return this.http.get<any[]>(branchStoreUrl, {params});\n  }\n\n// ********************************************************************************************************************\n//Statistics at branch level\ncalculateTotalValue(params: any): Observable<any>{\n  const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/`;\n  return this.http.get<any[]> (branchStoreUrl, {params});\n}\n\n\n}"],"names":[],"sourceRoot":"webpack:///"}