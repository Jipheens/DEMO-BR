{"version":3,"file":"src_app_erp-inventory_erp-inventory_module_ts.js","mappings":"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","sources":["./src/app/erp-inventory/data/lookups/branch-store-items-lookup/branch-store-items-lookup.component.ts","./src/app/erp-inventory/data/lookups/branch-store-items-lookup/branch-store-items-lookup.component.html","./src/app/erp-inventory/data/lookups/branchstore-lookup/branchstore-lookup.component.ts","./src/app/erp-inventory/data/lookups/branchstore-lookup/branchstore-lookup.component.html","./src/app/erp-inventory/data/lookups/category-lookup/category-lookup.component.ts","./src/app/erp-inventory/data/lookups/category-lookup/category-lookup.component.html","./src/app/erp-inventory/data/lookups/dialogs/request-urgency/request-urgency.component.ts","./src/app/erp-inventory/data/lookups/dialogs/request-urgency/request-urgency.component.html","./src/app/erp-inventory/data/lookups/dialogs/validate-store-requisition/validate-store-requisition.component.ts","./src/app/erp-inventory/data/lookups/dialogs/validate-store-requisition/validate-store-requisition.component.html","./src/app/erp-inventory/data/lookups/inven-items-lookup/inven-items-lookup.component.ts","./src/app/erp-inventory/data/lookups/inven-items-lookup/inven-items-lookup.component.html","./src/app/erp-inventory/data/lookups/mainstore-lookup/mainstore-lookup.component.ts","./src/app/erp-inventory/data/lookups/mainstore-lookup/mainstore-lookup.component.html","./src/app/erp-inventory/data/lookups/transit-lookup/transit-lookup.component.ts","./src/app/erp-inventory/data/lookups/transit-lookup/transit-lookup.component.html","./src/app/erp-inventory/data/lookups/units-of-meausure-lookup/units-of-meausure-lookup.component.ts","./src/app/erp-inventory/data/lookups/units-of-meausure-lookup/units-of-meausure-lookup.component.html","./src/app/erp-inventory/data/services/brancstores-management.service.ts","./src/app/erp-inventory/data/services/item-category.service.ts","./src/app/erp-inventory/data/services/mainstore.service.ts","./src/app/erp-inventory/data/services/stock-management.service.ts","./src/app/erp-inventory/data/services/store-requisitions-service.service.ts","./src/app/erp-inventory/data/services/units-of-measure.service.ts","./src/app/erp-inventory/erp-inventory-routing.module.ts","./src/app/erp-inventory/erp-inventory.module.ts","./src/app/erp-inventory/modules/dashboard/dashboard-routing.module.ts","./src/app/erp-inventory/modules/dashboard/dashboard.module.ts","./src/app/erp-inventory/modules/dashboard/pages/components/analytics/analytics.component.ts","./src/app/erp-inventory/modules/dashboard/pages/components/analytics/analytics.component.html","./src/app/erp-inventory/modules/dashboard/pages/components/reset-password/reset-password.component.ts","./src/app/erp-inventory/modules/dashboard/pages/components/reset-password/reset-password.component.html","./src/app/erp-inventory/modules/dashboard/pages/components/stats/cat-statistics/cat-statistics.component.ts","./src/app/erp-inventory/modules/dashboard/pages/components/stats/cat-statistics/cat-statistics.component.html","./src/app/erp-inventory/modules/dashboard/pages/dashboard/dashboard.component.ts","./src/app/erp-inventory/modules/dashboard/pages/dashboard/dashboard.component.html","./src/app/erp-inventory/modules/dashboard/pages/gen-widgets/gen-widgets.component.ts","./src/app/erp-inventory/modules/dashboard/pages/gen-widgets/gen-widgets.component.html"],"sourcesContent":["import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { StockManagementService } from '../../services/stock-management.service';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { HttpParams } from '@angular/common/http';\nimport { BrancstoresManagementService } from '../../services/brancstores-management.service';\n\n@Component({\n  selector: 'app-branch-store-items-lookup',\n  templateUrl: './branch-store-items-lookup.component.html',\n  styleUrls: ['./branch-store-items-lookup.component.scss']\n})\nexport class BranchStoreItemsLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"itemCode\",\n    \"name\",\n    \"itemCategory\",\n    \"quantity\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  catalogueDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n  currentBranch: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private StockManService: StockManagementService,\n    private branchStoreManService: BrancstoresManagementService,\n    private tokenCookieService: TokenCookieService,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentBranch = this.tokenCookieService.getUser().branchCode;\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    const params = new HttpParams()\n      .set(\"branchCode\", this.currentBranch)\n    this.branchStoreManService.fetchAllBranchStock(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode == 200) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: !!!\"\n          );\n        },\n        complete: () => {\n\n        }\n      }); Subscription\n  }\n}","<div class=\"card curve-card bg-card table-style\">\n  <div class=\"addContainer body\">\n    <div class=\"card  mat-elevation-z5\">\n      <div class=\"contact-details\">\n        <div class=\"mb-3\" *ngIf=\"isLoading\">\n          <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n          </mat-progress-bar>\n        </div>\n\n        <div class=\"modalHeader\">\n          <div class=\"contact-details-name mb-1 mx-2 my-2\">Select Item</div>\n          <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\" class=\"my-2\">\n            <mat-icon class=\"my-2\">close</mat-icon>\n          </button>\n        </div>\n        <div mat-dialog-content>\n          <mat-card-content>\n            <div *ngIf=\"isLoading\">\n              <div class=\"d-flex justify-content-center\">\n                <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n              </div>\n            </div>\n            <div *ngIf=\"!isLoading\" class=\"body\">\n              <div class=\"table-responsi m-t-5\">\n                <ng-container *ngIf=\"!isLoading\">\n                  <div class=\"table-header py-3 table-style\" style=\"background-color: #b1c9aa; margin: 5px\">\n                    <div class=\"row\">\n                      <div class=\"col-6 px-4\">\n                        <div class=\"mx-auto\">\n                          <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                            placeholder=\"Filter...\" #input />\n                        </div>\n                      </div>\n                      <div class=\"col-6 px-4\">\n                        <div class=\"mx-auto\">\n                          <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                              [class.auth-spinner]=\"multimodifyloading\" [disabled]=\"multimodifyloading\">\n                              <mat-icon class=\"col-white\">done_all </mat-icon>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                </ng-container>\n\n\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                  #exporter=\"matTableExporter\">\n\n                  <ng-container matColumnDef=\"select\">\n                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                        (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                      <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                        [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                      class=\"column-nowrap psl-3 tbl-col-width-per-10 start-col\">Id\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ row.id\n                      }}</mat-cell>\n                  </ng-container>\n\n                  <!-- Item Code -->\n                  <ng-container matColumnDef=\"itemCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                      Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                      {{ row.itemCode }}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- Item Name -->\n                  <ng-container matColumnDef=\"name\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.name }}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- Item Category -->\n                  <ng-container matColumnDef=\"itemCategory\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      Category\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.itemCategory }}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!--  Quantity-->\n                  <ng-container matColumnDef=\"quantity\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header=\"column-nowrap psl-3 tbl-col-width-per-50 \">\n                      Quantity\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.quantity }}\n                    </mat-cell>\n                  </ng-container>\n\n\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                  <mat-cell *matNoDataRow colspan=\"4\">\n                    No data matching the filter \"{{ input.value }}\"\n                  </mat-cell>\n                </mat-table>\n\n                <!-- Loading spinner -->\n                <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                  </mat-progress-spinner>\n                </div>\n                <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                  aria-label=\"Select page of users\"></mat-paginator>\n              </div>\n            </div>\n          </mat-card-content>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { CatalogueManagementService } from '../../services/catalogue-management.service';\nimport { BrancstoresManagementService } from '../../services/brancstores-management.service';\nimport { AllBudgetsComponent } from 'src/app/erp-budget/modules/budget/pages/budget/all-budgets/all-budgets.component';\n\n@Component({\n  selector: 'app-branchstore-lookup',\n  templateUrl: './branchstore-lookup.component.html',\n  styleUrls: ['./branchstore-lookup.component.scss']\n})\nexport class BranchstoreLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"branchCode\",\n    \"branchName\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  catalogueDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AllBudgetsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private branchStoreManService: BrancstoresManagementService,\n    \n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    this.branchStoreManService\n    .getbranchStore()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(\n      {\n        next: (res) => {\n          if (res.statusCode == 200) \n          {\n            \n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n    \n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n}\n","<div class=\"card curve-card bg-card table-style\">\n  <div class=\"addContainer body\">\n    <div class=\"card  mat-elevation-z5\">\n      <div class=\"contact-details\">\n        <div class=\"mb-3\" *ngIf=\"isLoading\">\n          <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n          </mat-progress-bar>\n        </div>\n\n        <div class=\"modalHeader\">\n          <div class=\"contact-details-name mb-1 mx-2 my-2\">Select Branch Store</div>\n          <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\" class=\"my-2\">\n            <mat-icon class=\"my-2\">close</mat-icon>\n          </button>\n        </div>\n        <div mat-dialog-content>\n          <mat-card-content>\n            <div *ngIf=\"isLoading\">\n              <div class=\"d-flex justify-content-center\">\n                <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n              </div>\n            </div>\n            <div *ngIf=\"!isLoading\" class=\"body\">\n              <div class=\"table-responsi m-t-5\">\n                <ng-container *ngIf=\"!isLoading\">\n                  <div class=\"table-header py-3 table-style\" style=\"background-color: #b1c9aa; margin: 5px\">\n                    <div class=\"row\">\n                      <div class=\"col-6 px-4\">\n                        <div class=\"mx-auto\">\n                          <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                            placeholder=\"Filter...\" #input />\n                        </div>\n                      </div>\n                      <div class=\"col-6 px-4\">\n                        <div class=\"mx-auto\">\n                          <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                              [class.auth-spinner]=\"multimodifyloading\" [disabled]=\"multimodifyloading\">\n                              <mat-icon class=\"col-white\">done_all </mat-icon>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </ng-container>\n\n\n\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                  #exporter=\"matTableExporter\">\n\n                  <ng-container matColumnDef=\"select\">\n                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                        (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                      <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                        [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                      class=\"column-nowrap psl-3 tbl-col-width-per-10 start-col\">Id\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ row.id\n                      }}</mat-cell>\n                  </ng-container>\n\n                  <!-- Branch  Code -->\n                  <ng-container matColumnDef=\"branchCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                      Branch Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                      {{ row.branchCode }}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- Branch Name -->\n                  <ng-container matColumnDef=\"branchName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      Branch Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.branchName }}\n                    </mat-cell>\n                  </ng-container>\n\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                  <mat-cell *matNoDataRow colspan=\"4\">\n                    No data matching the filter \"{{ input.value }}\"\n                  </mat-cell>\n                </mat-table>\n\n                <!-- Loading spinner -->\n                <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                  </mat-progress-spinner>\n                </div>\n                <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                  aria-label=\"Select page of users\"></mat-paginator>\n              </div>\n            </div>\n          </mat-card-content>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { CatalogueManagementService } from '../../services/catalogue-management.service';\nimport { ItemCategoryService } from '../../services/item-category.service';\n\n@Component({\n  selector: 'app-category-lookup',\n  templateUrl: './category-lookup.component.html',\n  styleUrls: ['./category-lookup.component.sass']\n})\nexport class CategoryLookupComponent implements OnInit {\n  //   {\n  //     \"categoryId\": 1,\n  //     \"categoryCode\": null,\n  //     \"categoryName\": \"Electronic\",\n  //     \"productType\": \"Goods\",\n  //     \"expenseType\": \"CAPEX\",\n  //     \"categoryDescription\": \"Appliances in the office\",\n  //     \"accountName\": null,\n  //     \"accountNumber\": null,\n  //     \"postedFlag\": \"Y\",\n  //     \"postedBy\": \"Superuser\",\n  //     \"postedTime\": \"2023-09-11T06:22:17\",\n  //     \"modifiedFlag\": \"N\",\n  //     \"modifiedBy\": null,\n  //     \"modifiedTime\": null,\n  //     \"deletedFlag\": \"N\",\n  //     \"deletedBy\": null,\n  //     \"deletedTime\": null\n  // }\n  displayedColumns: string[] = [\n    \"select\",\n    \"categoryId\",\n    \"categoryName\",\n    \"expenseType\",\n    \"productType\"\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  catalogueDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private catalogueManSerivice: CatalogueManagementService,\n    private ItemCatManService: ItemCategoryService,\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    this.ItemCatManService\n      .getItemCategories()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n\n          console.log(\"res.entity:: \", res.entity)\n\n          if (res.statusCode == 200) {\n            this.data = res.entity;\n\n            this.catalogueDetails = res.entity;\n          }\n\n          this.expenseArray = this.data.selected;\n\n\n\n          this.dataSource = new MatTableDataSource<any>(this.catalogueDetails);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select Category</div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"categoryId\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\"> ID\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ row.categoryId }}</mat-cell>\n                </ng-container>\n  \n               <!-- Category Name -->\n                <ng-container matColumnDef=\"categoryName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    Category Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    {{ row.categoryName }}\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"expenseType\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    ExpeType\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    {{ row.expenseType }}\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"productType\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    ProdType\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    {{ row.productType }}\n                  </mat-cell>\n                </ng-container>\n  \n        \n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { ExpenseManagementService } from 'src/app/erp-finance/data/services/expense-management.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-request-urgency',\n  templateUrl: './request-urgency.component.html',\n  styleUrls: ['./request-urgency.component.sass']\n})\nexport class RequestUrgencyComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  action!: string;\n\n\n  statusForm: FormGroup;\n\n  reserve: boolean = false;\n  issue: boolean = false;\n  returned: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  // canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  // hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private expenseManService: ExpenseManagementService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n    console.log(\"DATADATA: \", this.Data)\n  }\n\n  //***************************************************************************************************** */\n  ngOnInit(): void {\n    this.statusForm = this.createStatusForm();\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.reserve = true;\n    this.issue = false;\n\n    this.action = \"reserve\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.reserve = true;\n    this.issue = false;\n\n    this.action = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  immediateIssue() {\n    this.issue = true;\n    this.reserve = false;\n\n    this.action = \"issue\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n \n    const params = new HttpParams()\n      .set(\"remarks\", this.statusForm.value.reason)\n      \n      \n      \n      let body = [];\n      \n\n\n        this.Data.forEach((element) =>\n        {\n          let expense = {id: element.id, status: this.action};\n          body.push(expense);\n        })\n  \n    // this.expenseManService\n    //   .validateExpense(\n    //     params, body)\n    //   .pipe(takeUntil(this.destroy$))\n    //   .subscribe({\n    //     next: (res) => {\n\n    //       this.snackbar.showNotification(\n    //         \"snackbar-success\",\n    //         \"Expense validated successfully!\"\n    //       );\n    //       if (res) {\n            \n            \n    //       }\n          \n    //     },\n    //     error: (err) => {\n    //       console.log(\"err = \", err);\n    //       this.snackbar.showNotification(\n    //         \"snackbar-danger\",\n    //         \"Server Error: \" + err.message\n    //       );\n    //     },\n    //     complete: () => {\n    //       this.dialogRef.close();\n    //       this.router.navigate([\"/erp-finance/finance-parameters/all-expenses\"]);\n    //     }\n    //   });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Urgency Level</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n            \n           \n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <!-- immediateIssue -->\n            <div class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"immediateIssue()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    >Issue Immediately</button>\n                </div>\n              </div>\n\n              <!-- Return -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    >Return</button>\n                </div>\n              </div>\n\n              <!-- Reject -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    >Reject</button>\n                </div>\n              </div>\n              \n            </div>\n            <form class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"reserve\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { BrancstoresManagementService } from '../../../services/brancstores-management.service';\nimport { StoreRequisitionsServiceService } from '../../../services/store-requisitions-service.service';\nimport { AllBudgetsComponent } from 'src/app/erp-budget/modules/budget/pages/budget/all-budgets/all-budgets.component';\n\n@Component({\n  selector: 'app-validate-store-requisition',\n  templateUrl: './validate-store-requisition.component.html',\n  styleUrls: ['./validate-store-requisition.component.sass']\n})\nexport class ValidateStoreRequisitionComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  status!: string;\n\n  resData: any;\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<AllBudgetsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private router: Router,\n    private branchStoreManService: BrancstoresManagementService,\n    private datepipe: DatePipe,\n    private storeRequisitionManService: StoreRequisitionsServiceService,\n  ) {\n    this.Data = this.data.data;\n  }\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    this.canVerify = true;\n\n    // if (this.postedBy === this.currentUser) {\n\n    //   this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n    //   this.canVerify = false;\n\n    // } else {\n    //   this.canVerify = true;\n    // }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"REJECT\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"RETURN\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.status = \"APPROVE\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n\n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n\n\n    const params = new HttpParams()\n\n      .set(\"stRequisitionCode\", this.Data.stRequisitionCode)\n      .set(\"userType\", this.data.userType)\n      .set(\"action\", this.status)\n      .set(\"reason\", this.statusForm.value.reason)\n\n    console.log(\"Form = \", params);\n\n    // this.storeRequisitionManService\n    //   .validateInternalRequisitions(params)\n    //   .pipe(takeUntil(this.destroy$))\n    //   .subscribe({\n    //     next: (res) => {\n    //       if (res.statusCode == 200) {\n    //         this.snackbar.showNotification(\n    //           \"snackbar-success\",\n    //           \"Requistion validated successfully\"\n    //         );\n\n    //       }\n    //       else {\n    //         this.snackbar.showNotification(\"snackbar-danger\", res.message);\n    //       }\n    //     },\n    //     error: (err) => {\n    //       console.log(\"err = \", err);\n    //       this.snackbar.showNotification(\n    //         \"snackbar-danger\",\n    //         \"Server Error: \" + err.message\n    //       );\n    //     },\n    //     complete: () => {\n    //       this.dialogRef.close();\n    //       this.router.navigate([\"/erp-inventory/inventory/view-user-requisition\"]);\n    //     }\n    //   });\n  }\n\n\n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Validate Branch Requisition</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n         \n            <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">Requisition Code:</dt>\n                <dd>{{Data.stRequisitionCode}}</dd>\n                <dt class=\"pull-left me-2\">Requisition Title:</dt>\n                <dd> {{ Data.stRequisitionTitle }}</dd>\n                <dt class=\"pull-left me-2\">Description:</dt>\n                <dd> {{ Data.stRequisitionDescription }}</dd>\n              </dl>\n            </div>\n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { CatalogueManagementService } from '../../services/catalogue-management.service';\nimport { StockManagementService } from '../../services/stock-management.service';\n\n@Component({\n  selector: 'app-inven-items-lookup',\n  templateUrl: './inven-items-lookup.component.html',\n  styleUrls: ['./inven-items-lookup.component.scss']\n})\nexport class InvenItemsLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"itemCode\",\n    \"name\",\n    \"itemCategory\",\n    \"quantity\",\n\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  catalogueDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private StockManService: StockManagementService,\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    this.StockManService.getStock().pipe(takeUntil(this.destroy$)).subscribe(\n      {\n        next: (res) => {\n          console.log(\"status:\", res)\n          if (res.statusCode == 200 ) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n}\n","<div class=\"addContainer body\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n     \n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1 mx-2 my-2\">Select Item</div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\" class=\"my-2\">\n          <mat-icon class=\"my-2\">close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3 table-style\" style=\"background-color: #efefef; margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                          [class.auth-spinner]=\"multimodifyloading\" [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n\n\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10 start-col\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ row.id\n                    }}</mat-cell>\n                </ng-container>\n\n                <!-- Item Code -->\n                <ng-container matColumnDef=\"itemCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    {{ row.itemCode }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Item Name -->\n                <ng-container matColumnDef=\"name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.name }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Item Category -->\n                <ng-container matColumnDef=\"itemCategory\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Category\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.itemCategory }}\n                  </mat-cell>\n                </ng-container>\n\n                <!--  Quantity-->\n                <ng-container matColumnDef=\"quantity\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header=\"column-nowrap psl-3 tbl-col-width-per-50 \">\n                    Quantity \n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.quantity }}\n                  </mat-cell>\n                </ng-container>\n                \n\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n\n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n\n\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { CatalogueManagementService } from '../../services/catalogue-management.service';\nimport { UnitsOfMeasureService } from '../../services/units-of-measure.service';\nimport { MainstoreService } from '../../services/mainstore.service';\n\n@Component({\n  selector: 'app-mainstore-lookup',\n  templateUrl: './mainstore-lookup.component.html',\n  styleUrls: ['./mainstore-lookup.component.sass']\n})\nexport class MainstoreLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"storeId\",\n    \"storeName\"\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n\n\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private MainStoreService: MainstoreService\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n\n  tableDetails: any[] = [];\n\n\n  getData() {\n    this.MainStoreService.getMainStore().pipe(takeUntil(this.destroy$)).subscribe(\n      {\n        next: (res) => {\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n    \n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n\n}\n\n\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select Main Store</div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n  \n  \n                <!-- Main Store ID -->\n                <ng-container matColumnDef=\"storeId\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Main Store ID\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.storeId }}\n                  </mat-cell>\n                </ng-container>\n  \n                <!-- Store Name -->\n                <ng-container matColumnDef=\"storeName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Main Store Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.storeName }}\n                  </mat-cell>\n                </ng-container>\n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { CurrencyManagementService } from 'src/app/erp-procurement/data/services/currency-management.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { BrancstoresManagementService } from '../../services/brancstores-management.service';\nimport { StockManagementService } from '../../services/stock-management.service';\nimport { MainstoreService } from '../../services/mainstore.service';\n\n@Component({\n  selector: 'app-transit-lookup',\n  templateUrl: './transit-lookup.component.html',\n  styleUrls: ['./transit-lookup.component.sass']\n})\nexport class TransitLookupComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    // \"name\",\n    // \"itemCode\",\n    \"branchCode\",\n    // \"quantity\",\n    \n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  itemsDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  itemsArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n  branchCode:any;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private BranchStoreService: BrancstoresManagementService,\n    private StockManService: StockManagementService,\n    private MainStoreService: MainstoreService,\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    this.dataSource.data.forEach((element) => {\n      this.itemsArray.forEach((item) => {\n        if (item === element.branchCode) {\n          this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    this.MainStoreService\n      . getItemsInTransit()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"Variables:\",res)\n\n          if (res.statusCode == 200)\n          {\n            this.data = res.entity;\n\n          this.itemsDetails = res.entity;\n          }\n          \n          this.itemsArray = this.data.selected;\n\n\n          \n\n          this.dataSource = new MatTableDataSource<any>(this.itemsDetails);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select Branch Code</div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n  \n                <!-- <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ row.id }}</mat-cell>\n                </ng-container> \n  \n                <ng-container matColumnDef=\"name\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    {{ row.name }}\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"itemCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Item Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.itemCode }}\n                  </mat-cell>\n                </ng-container> -->\n\n                <ng-container matColumnDef=\"branchCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Branch Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.branchCode }}\n                  </mat-cell>\n                </ng-container>\n<!--   \n                <ng-container matColumnDef=\"quantity\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Quantity\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.quantity}}\n                  </mat-cell>\n                </ng-container> -->\n  \n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { CatalogueManagementService } from '../../services/catalogue-management.service';\nimport { ItemCategoryService } from '../../services/item-category.service';\nimport { UnitsOfMeasureService } from '../../services/units-of-measure.service';\n\n@Component({\n  selector: 'app-units-of-meausure-lookup',\n  templateUrl: './units-of-meausure-lookup.component.html',\n  styleUrls: ['./units-of-meausure-lookup.component.sass']\n})\nexport class UnitsOfMeausureLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"unitOfMeasureName\"\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n\n\n  // unitsArray:any [] =\n  //   [ { unit: \"bottles\"},\n  //   { unit: \"crates\"}\n  //   ];\n\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private catalogueManSerivice: CatalogueManagementService,\n    private unitManService: UnitsOfMeasureService,\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n\n  tableDetails: any[] = [];\n\n\n  getData() {\n    this.unitManService.getUnit().pipe(takeUntil(this.destroy$)).subscribe(\n      {\n        next: (res) => {\n          console.log(\"categories: \", res)\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n    \n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n\n\n\n  /**\n   * getting data from an existing array\n   * the array 'unitsArray' is consctructed as one of json objects a\n   * as follows: \n  unitsArray:any [] =\n    [ { unit: \"bottles\"},\n    { unit: \"crates\"}\n    ];\n   *  and attached to a table below\n   */\n  // getData() {\n\n  //   this.dataSource = new MatTableDataSource<any>(this.unitsArray);\n  //         this.dataSource.paginator = this.paginator;\n  //         this.dataSource.sort = this.sort;\n\n  //         this.isLoading = false;\n  // }\n\n}\n\n\n","<div class=\"addContainer\">\n\n  <div class=\"contact-details\">\n    <div class=\"mb-3\" *ngIf=\"isLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\">Select Unit of Measure</div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n        <div *ngIf=\"isLoading\">\n          <div class=\"d-flex justify-content-center\">\n            <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n          </div>\n        </div>\n        <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n            <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n              <div class=\"row\">\n                <div class=\"col-6 px-4\">\n                  <div class=\"mx-auto\">\n                    <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                      #input />\n                  </div>\n                </div>\n                <div class=\"col-6 px-4\">\n                  <div class=\"mx-auto\">\n                    <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                      <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                        [disabled]=\"multimodifyloading\">\n                        <mat-icon class=\"col-white\">done_all </mat-icon>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n\n\n            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n              #exporter=\"matTableExporter\">\n\n              <ng-container matColumnDef=\"select\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                    [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-cell>\n              </ng-container>\n\n\n              <!-- Unit of Measure ID -->\n              <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  ID\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.id }}\n                </mat-cell>\n              </ng-container>\n\n              <!-- Unit of Measure Name -->\n              <ng-container matColumnDef=\"unitOfMeasureName\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  Unit\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.unitOfMeasureName }}\n                </mat-cell>\n              </ng-container>\n\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n              <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n              <mat-cell *matNoDataRow colspan=\"4\">\n                No data matching the filter \"{{ input.value }}\"\n              </mat-cell>\n            </mat-table>\n\n            <!-- Loading spinner -->\n            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n              </mat-progress-spinner>\n            </div>\n            <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n              aria-label=\"Select page of users\"></mat-paginator>\n          </div>\n        </div>\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AnyARecord } from 'dns';\nimport { Observable, ObservedValueOf } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { BranchstoreLookupComponent } from '../lookups/branchstore-lookup/branchstore-lookup.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrancstoresManagementService {\n\n  constructor(private http: HttpClient) { }\n\n  getbranchStore(): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores`;\n    return this.http.get<any[]>(branchStoreUrl);\n  }\n  getbranchStoreById(id: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/costManagement/fetchBy/${id}`);\n  }\n\n  getbranchStoreByCode(branchStoreCode: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/branchStore/find/by/branchStore/code/${branchStoreCode}`);\n  }\n\n  addbranchStore(data: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/add`;\n    return this.http.post<any>(branchStoreUrl, data);\n  }\n\n  updatebranchStore(branchStoreDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/branch_stores/update`;\n    return this.http.put<any>(updateBillUrl, branchStoreDetails)\n  }\n  // http://localhost:9090/api/branch_stores/receiveGoods?branchCode=11111&requisitionCode=REQ-2023-002\n  receiveItemsFromMain(params: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/branch_stores/receiveGoods`;\n    return this.http.put(\n      invItemUrl,\n      {},\n       {\n        params: params\n       });\n  }\n\n  validateStoreRequisition(params: any): Observable<any> {\n    const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/update/state`;\n    return this.http.put(\n      storeRequisitionUrl,\n      {},\n      {\n        params: params\n      })\n  }\n\n  deletebranchStorePemanently(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/delete`;\n    return this.http.delete<any>(branchStoreUrl, { params })\n  }\n\n  //fetching the requested goods by branchstore\n  fetchAllRequisitionsByBranchcode(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/getAllRequestedItems`;\n    return this.http.get<any>(branchStoreUrl, { params });\n  }\n\n  // ********************************************************************************************************************\n  //Main store requsitions: Requistions to the main store \n  //Requesting goods from the main stores\n  requestFromMainStore(data: any, params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/requestGoods`;\n    return this.http.post<any>(branchStoreUrl, data, { params });\n  }\n\n  getItemsInTransitByCode(params: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/branch_stores/getItemsInTransit`;\n    return this.http.get<any>(invItemUrl, { params });\n  }\n\n  //fetching requistions from the main store by status\n  getAllRequisitionsByStatus(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/allMainStoreRequisitions`;\n    return this.http.get<any>(branchStoreUrl, { params })\n  }\n\n  //fetch requisitions to the main store by requisition code\n  // http://localhost:9090/api/branch_stores/getMainStoreRequisitionByRequisitionCode?requisitionCode=123232\n  fetchRequisitionByCode(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/getMainStoreRequisitionByRequisitionCode`;\n    return this.http.get<any>(branchStoreUrl, { params });\n  }\n\n  //update main store requisition \n  // http://localhost:9090/api/branch_stores/updateMainStoreRequisition\n  updateMainStoreRequisition(requisitionDetails: any): Observable<any>{\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/updateMainStoreRequisition`;\n    return this.http.put<any>(branchStoreUrl, requisitionDetails);\n  }\n\n  //deleting a main store requisition \n  // http://localhost:9090/api/branch_stores/deleteMainStoreRequisition?requisitionCode=123123123\n  deleteMainStoreRequisition(params: any):Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/deleteMainStoreRequisition`;\n    return this.http.delete<any>(branchStoreUrl, {params});\n  }\n\n  // ********************************************************************************************************************\n  //Management of items at the branch Level\n  fetchAllBranchStock(params: any): Observable<any> {\n    const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/allBranchStoreInventory`;\n    return this.http.get<any[]>(branchStoreUrl, {params});\n  }\n\n// ********************************************************************************************************************\n//Statistics at branch level\ncalculateTotalValue(params: any): Observable<any>{\n  const branchStoreUrl = `${environment.baseUrlProcurement}/api/branch_stores/`;\n  return this.http.get<any[]> (branchStoreUrl, {params});\n}\n\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemCategoryService {\n\n  constructor(private http: HttpClient) { }\n\n  getItemCategories(): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/all`;\n    return this.http.get<any[]>(ItemCatUrl);\n  }\n\n  getItemCategoriesId(id: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/ItemCategory/getById/${id}`);\n  }\n\n  addItemCategories(data: any): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/create`;\n    return this.http.post<any>(ItemCatUrl, data);\n  }\n\n  updateItemCategories(TaxesDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/update/`;\n    return this.http.put<any>(updateBillUrl, TaxesDetails)\n  }\n\n\n  deleteItemCategoriesPemanently(params: any): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/delete`;\n    return this.http.delete<any>(ItemCatUrl, {params});\n  }\n\n\n  uploadBatchItemCats(excelUpload: any[]): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/uploadBulk`;\n    return this.http.post<any>(ItemCatUrl, excelUpload);\n  }\n\n  // ********************************************************************************************************************\n\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainstoreService {\n\n  constructor(private http: HttpClient) { }\n\n  getMainStore(): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/allStores`;\n    return this.http.get<any[]>(mainStoreUrl);\n  }\n\n  addMainStore(data: any): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/add`;\n    return this.http.post<any>(mainStoreUrl, data);\n  }\n\n  updateMainStore(rfpDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/main_stores/update`;\n    return this.http.put<any>(updateBillUrl, rfpDetails)\n  }\n\n  getItemsInTransit(): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/allInTransitItems`;\n    return this.http.get<any[]>(mainStoreUrl);\n  }\n\n\n  deleteMainStorePemanently(params: any): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/delete`;\n    return this.http.delete<any>(mainStoreUrl, { params });\n  }\n\n  //*********************************************************************************************************** */\n  // requistions from the branch \n  // http://localhost:9090/api/main_stores/fetchAllRequisitions\n  fetchAllRequisitions(): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/fetchAllRequisitions`;\n    return this.http.get<any[]>(mainStoreUrl)\n  }\n\n  //fetch all branch store requsitions\n\n  // http://localhost:9090/api/main_stores/requestedGoods\n  getAllBranchRequsitions(): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/requestedGoods`;\n    return this.http.get<any[]>(mainStoreUrl)\n  }\n\n  //filter through branch requisitions by branch\n  // http://localhost:9090/api/main_stores/fetchAllRequisitionsByBranchCode?branchCode=11111\n  filterRequisitionsByBranch(params: any): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/fetchAllRequisitionsByBranchCode`;\n    return this.http.get<any>(mainStoreUrl, { params });\n  }\n\n  //filter all requisitions by status \n  // http://localhost:9090/api/main_stores/allRequisitions?status=InProgress\n  filterAllRequisitionsByStatus(params: any): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/allRequisitions`;\n    return this.http.get(mainStoreUrl, { params });\n  }\n\n  //realize a requisition to the branch store\n  // http://localhost:9090/api/main_stores/issueInventoryItemsToBranchStore?branchCode=11&requisitionCode=111\n  issueInventoryItemsToBranchStore(requestBody, params: any):Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/issueInventoryItemsToBranchStore`;\n    return this.http.post<any>(mainStoreUrl, requestBody, {params});\n  }\n\n  //*********************************************************************************************************** */\n  // Statistics\n\n  // http://52.15.152.26:9090/api/main_stores/delete?storeId=1\n  genReport(id: any): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/MainStoreReports/${id}`;\n    return this.http.post<any>(mainStoreUrl, id);\n  }\n\n\n  // http://localhost:9090/api/main_stores/inventory-items/total-stock-per-category\n  getTotalStockPerCategory(): Observable<any> {\n    const mainStoreUrl = `${environment.baseUrlProcurement}/api/main_stores/inventory-items/total-stock-per-category`;\n    return this.http.get<any>(mainStoreUrl)\n  }\n\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockManagementService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getStock(): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/all`;\n    return this.http.get<any[]>(invItemUrl);\n  }\n  getStockById(params: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}//api/v1/inventory-items/find/inventory/by/id`, { params });\n  }\n\n\n  addStock(params: any, details: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/add`;\n    return this.http.post<any>(invItemUrl, details, { params });\n  }\n\n  updateStock(CategoryDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/update`;\n    return this.http.put<any>(updateBillUrl, CategoryDetails)\n  }\n\n  calculateTotalCost(): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/inventory-items/cost`);\n  }\n\n\n  deleteStockPemanently(params: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/delete`;\n    return this.http.delete<any>(invItemUrl, { params });\n\n\n  }\n\n  checkStockAvailability(dataToValidate: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/check/availability/of/items`;\n    return this.http.post<any>(invItemUrl, dataToValidate)\n  }\n\n\n\n  // ********************************************************************************************************************\n  // Requistions\n\n  //transfer items to branchstores\n  transfer2BranchStore(params: any, details: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/main_stores/issueInventoryItemsToBranchStore`;\n    return this.http.post<any>(invItemUrl, details, { params });\n  }\n\n\n\n  //********************************************************************************************************************** */\n  getStocksFromProcurement(): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/register/items/all`;\n    return this.http.get<any[]>(invItemUrl);\n  }\n  getStockFromProcurementById(params: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/inventory-items/register/find/by/id`, { params });\n  }\n\n  getStockFromProcurementByStatus(params: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/inventory-items/register/items/all/by/status`, { params });\n  }\n\n\n\n  addStockFromProcurement(params: any, details: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/add`;\n    return this.http.post<any>(invItemUrl, details, { params });\n  }\n\n  updateStockFromProcurement(CategoryDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/register/update`;\n    return this.http.put<any>(updateBillUrl, CategoryDetails)\n  }\n\n\n  deleteStockFromProcurementPemanently(params: any): Observable<any> {\n    const invItemUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/delete`;\n    return this.http.delete<any>(invItemUrl, { params });\n\n\n  }\n\n  validateStocksFromProcurement(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlProcurement}/api/v1/inventory-items/register/push/to/inventory`;\n    return this.http.put<any>(imprestUrl, dataToValidate)\n  }\n\n\n\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreRequisitionsServiceService {\n\n  constructor(private http: HttpClient) { }\n\n\n\n  // ********************************************************************************************************************\n  //branchStore Requistions: Requistions to the branchstore\n  //requesting goosd from the branchstore \n  // requestFromBranch(details: any): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/create`;\n  //   return this.http.post<any>(storeRequisitionUrl, details)\n  // }\n\n  // //fetch all requisitions for users\n  // fetchAllRequisitions(): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/all`;\n  //   return this.http.get<any[]>(storeRequisitionUrl)\n  // }\n\n\n  // //updating the requsitions made to the store \n  // updateBranchRequsition(details: any): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/modify`;\n  //   return this.http.put<any>(storeRequisitionUrl, details)\n  // }\n\n  // //get requistion by stRequistionCode\n  // getRequisitionByCode(params: any): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/fetchByStoreRequisitionCode`;\n  //   return this.http.get<any[]>(storeRequisitionUrl, { params })\n  // }\n\n  // // validating requisitions \n  // validateStoreRequisition(params: any): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/update/state`;\n  //   return this.http.put(\n  //     storeRequisitionUrl,\n  //     {},\n  //     {\n  //       params: params\n  //     })\n  // }\n\n  // // Forwarding Requistions\n  // issueRequisition(params: any): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/itemIssuance`;\n  //   return this.http.post<any>(storeRequisitionUrl, {}, { params });\n\n  // }\n\n  // //get requistions by status\n  // getRequistionsBranchByStatus(params: any): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/fetchByStatus`;\n  //   return this.http.get<any>(storeRequisitionUrl, { params })\n  // }\n\n  // //deleting requisitions \n  // deleteBranchRequisition(params: any): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/delete`;\n  //   return this.http.delete<any>(storeRequisitionUrl, { params })\n  // }\n\n\n  // //Receiving requisitions\n  // // http://localhost:9090/api/v1/StoreRequisition/itemReceived\n  // receiveRequisition(params: any): Observable<any> {\n  //   const branchStoreUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/itemReceived`;\n  //   return this.http.post<any>(branchStoreUrl, { params })\n  // }\n\n  // //**************************************************************************************************************************** */\n  // //reserve goods\n  // placeReservation(reservationDetails: any): Observable<any> {\n  //   const branchStoreUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/reserve`;\n  //   return this.http.post<any>(branchStoreUrl, reservationDetails);\n  // }\n\n  // //fetch reservations\n  // fetchAllReserved(): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/onlyReserved`;\n  //   return this.http.get<any[]>(storeRequisitionUrl);\n  // }\n\n  // //claim reservation\n  // claimReservation(params: any): Observable<any> {\n  //   const storeRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/StoreRequisition/claiming`;\n  //   return this.http.post<any>(storeRequisitionUrl, {}, { params });\n  // }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitsOfMeasureService {\n\n  constructor\n  (\n    private http: HttpClient,\n  ) { }\n\n  // ****************************************************************************************************************************\n\n  getUnit(): Observable<any>\n    {\n      const unitUrl =`${environment.baseUrlProcurement}/api/unitsOfMeasure/all`; \n      return this.http.get<any[]>(unitUrl);\n    }\n  \n  //adding to Unit\n  addUnit(data: any): Observable<any>\n    {\n      const unitUrl =`${environment.baseUrlProcurement}/api/unitsOfMeasure/add`; \n      return this.http.post<any[]>(unitUrl, data);\n    }\n\n  //updating Unit\n  updateUnit(data: any): Observable<any>\n    {\n      const unitUrl =`${environment.baseUrlProcurement}/api/unitsOfMeasure/update`; \n      return this.http.put<any[]>(unitUrl, data);\n    }\n  \n  //deleting from Unit\n  deleteUnitPermanently(params: any): Observable<any> \n    {\n      const unitUrl = `${environment.baseUrlProcurement}/api/unitsOfMeasure/delete`;\n      return this.http.delete<any>(unitUrl, {params});\n    }\n  \n  //upload batch to Unit\n    uploadBatchUnit(data: any): Observable<any> \n      {\n        const unitUrl = `${environment.baseUrlProcurement}/api/Unit/upload`;\n        return this.http.post<any>(unitUrl, data);\n      }\n      \n\n\n  }","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: \"dashboard\",\n    loadChildren: () =>\n      import(\"./modules/dashboard/dashboard.module\").then(\n        (m) => m.DashboardModule\n      ),\n  },\n  {\n    path: \"inventory-parameters\",\n    loadChildren: () =>\n      import(\"./modules/inventory-parameters/inventory-parameters.module\").then(\n        (m) => m.InventoryParametersModule\n      ),\n  },\n  {\n    path: \"inventory\",\n    loadChildren: () =>\n      import(\"./modules/inventory-management/pages/Inventory-management.module\").then(\n        (m) => m.InventoryManagementModule\n      ),\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ErpInventoryRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ErpInventoryRoutingModule } from './erp-inventory-routing.module';\nimport { CatalogueLookupComponent } from './data/lookups/catalogue-lookup/catalogue-lookup.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from '../shared/components/components.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { DashboardModule } from './modules/dashboard/dashboard.module';\nimport { CategoryLookupComponent } from './data/lookups/category-lookup/category-lookup.component';\nimport { UnitsOfMeausureLookupComponent } from './data/lookups/units-of-meausure-lookup/units-of-meausure-lookup.component';\nimport { TransitLookupComponent } from './data/lookups/transit-lookup/transit-lookup.component';\nimport { MainstoreLookupComponent } from './data/lookups/mainstore-lookup/mainstore-lookup.component';\nimport { BranchstoreLookupComponent } from './data/lookups/branchstore-lookup/branchstore-lookup.component';\nimport { InvenItemsLookupComponent } from './data/lookups/inven-items-lookup/inven-items-lookup.component';\nimport { RequestUrgencyComponent } from './data/lookups/dialogs/request-urgency/request-urgency.component';\nimport { ValidateStoreRequisitionComponent } from './data/lookups/dialogs/validate-store-requisition/validate-store-requisition.component';\nimport { BranchStoreItemsLookupComponent } from './data/lookups/branch-store-items-lookup/branch-store-items-lookup.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    \n    CatalogueLookupComponent,\n         CategoryLookupComponent,\n         UnitsOfMeausureLookupComponent,\n         TransitLookupComponent,\n       \n         MainstoreLookupComponent,\n         BranchstoreLookupComponent,\n         InvenItemsLookupComponent,\n         RequestUrgencyComponent,\n         ValidateStoreRequisitionComponent,\n         BranchStoreItemsLookupComponent\n  ],\n  imports: [\n    CommonModule,\n    ErpInventoryRoutingModule,\n\n\n    //Material Imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n\n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n\n    MatFormFieldModule,\n\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n\n    MatSnackBarModule,\n    MatToolbarModule,\n\n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule,\n    MatChipsModule,\n\n\n    FormsModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatListModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatSliderModule,\n    NgbModule,\n  ]\n})\nexport class ErpInventoryModule { }\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { DashboardComponent } from \"./pages/dashboard/dashboard.component\";\nimport { RoutePrivilegeGuard } from \"src/app/erp-procurement/data/services/_AccessControlAuthGuard.service\";\n\nconst routes: Routes = [\n  // { path: \"\", component: DashboardComponent },\n{ path: '', component: DashboardComponent, canActivate: [RoutePrivilegeGuard], data: {  clientName: 'InventoryModule', requiredPrivilege:['Dashboard'] } },];\n\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { GenWidgetsComponent } from './pages/gen-widgets/gen-widgets.component';\n\n\n\n\nimport { NgxEchartsModule } from \"ngx-echarts\";\nimport { ChartsModule as chartjsModule } from \"ng2-charts\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { GaugeModule } from \"angular-gauge\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { NgxGaugeModule } from \"ngx-gauge\";\n\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ResetPasswordComponent } from './pages/components/reset-password/reset-password.component';\nimport { AnalyticsComponent } from './pages/components/analytics/analytics.component';\nimport { InventoryManagementModule } from '../inventory-management/pages/Inventory-management.module';\nimport { CatStatisticsComponent } from './pages/components/stats/cat-statistics/cat-statistics.component';\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    GenWidgetsComponent,\n\n    ResetPasswordComponent,\n    AnalyticsComponent,\n    CatStatisticsComponent,\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    ComponentsModule,\n    SharedModule,\n    \n    \n\n    NgxEchartsModule.forRoot({\n      echarts: () => import(\"echarts\"),\n    }),\n    chartjsModule,\n    NgxChartsModule,\n    NgApexchartsModule,\n    MatMenuModule,\n    MatIconModule,\n    GaugeModule.forRoot(),\n    NgxGaugeModule,\n    ComponentsModule,\n    NgApexchartsModule,\n\n    MatFormFieldModule,\n    MatSelectModule,\n    CommonModule,\n \n    \n  ],\n  exports: [GenWidgetsComponent]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexStroke,\n  ApexMarkers,\n  ApexYAxis,\n  ApexGrid,\n  ApexTitleSubtitle,\n  ApexTooltip,\n  ApexLegend,\n  ApexFill,\n  ApexResponsive,\n} from \"ng-apexcharts\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  stroke: ApexStroke;\n  dataLabels: ApexDataLabels;\n  markers: ApexMarkers;\n  colors: string[];\n  yaxis: ApexYAxis;\n  grid: ApexGrid;\n  legend: ApexLegend;\n  tooltip: ApexTooltip;\n  fill: ApexFill;\n  title: ApexTitleSubtitle;\n  responsive: ApexResponsive[];\n  labels: any;\n};\n\n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.sass']\n})\nexport class AnalyticsComponent implements OnInit {\n  public performanceRateChartOptions: Partial<ChartOptions>;\n\n  public lineChartOptions: Partial<ChartOptions>;\n  public pieChartOptions: any;\n  //  color: [\"#3FA7DC\", \"#F6A025\", \"#9BC311\"],\n\n  currentUser: any;\n\n  constructor(private tokenCookieService: TokenCookieService,) { }\n  ngOnInit() {\n    this.currentUser = this.tokenCookieService.getUser().username;\n    this.chart1();\n   // this.chart2();\n    this.chart4();\n  }\n\n  private chart1() {\n    this.lineChartOptions = {\n      series: [\n        {\n          name: \"Average Quantity - Supplier 1\",\n          data: [70, 200, 80, 180, 170, 105, 210],\n        },\n        {\n          name: \"Average Quantity - Supplier 2\",\n          data: [80, 250, 30, 120, 260, 100, 180],\n        },\n        {\n          name: \"Average Quantity - Supplier 3\",\n          data: [85, 130, 85, 225, 80, 190, 120],\n        },\n      ],\n      chart: {\n        height: 350,\n        type: \"line\",\n        foreColor: \"#9aa0ac\",\n        dropShadow: {\n          enabled: true,\n          color: \"#000\",\n          top: 18,\n          left: 7,\n          blur: 10,\n          opacity: 0.2,\n        },\n        toolbar: {\n          show: false,\n        },\n      },\n      colors: [\"#A5A5A5\", \"#875692\", \"#4CB5AC\"],\n      stroke: {\n        curve: \"smooth\",\n      },\n      grid: {\n        row: {\n          colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n          opacity: 0.5,\n        },\n      },\n      markers: {\n        size: 3,\n      },\n      xaxis: {\n        categories: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        title: {\n          text: \"Day of the Week\",\n        },\n      },\n      yaxis: {\n        title: {\n          text: \"Average Quantity Supplied\",\n        },\n      },\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        floating: true,\n        offsetY: -25,\n        offsetX: -5,\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true,\n        },\n        x: {\n          show: true,\n        },\n      },\n    };\n  }\n\n\n\n  private chart4() {\n    this.performanceRateChartOptions = {\n      series: [\n        {\n          name: \"Average Inventory Level\",\n          data: [50, 60, 40, 70, 30, 20, 60],\n        },\n      ],\n      chart: {\n        height: 380,\n        type: \"line\",\n        dropShadow: {\n          enabled: true,\n          color: \"#000\",\n          top: 18,\n          left: 7,\n          blur: 10,\n          opacity: 0.2,\n        },\n        foreColor: \"#9aa0ac\",\n        toolbar: {\n          show: false,\n        },\n      },\n      colors: [\"#545454\"],\n      dataLabels: {\n        enabled: true,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      markers: {\n        size: 1,\n      },\n      xaxis: {\n        categories: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        title: {\n          text: \"Day of the Week\",\n        },\n      },\n      yaxis: {\n        title: {\n          text: \"Average Inventory Level\",\n        },\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true,\n        },\n        x: {\n          show: true,\n        },\n      },\n    };\n  }\n\n\n\n\n  private chart2() {\n    this.pieChartOptions = {\n      series: [44, 55, 13, 43, 22],\n      chart: {\n        type: \"donut\",\n        width: 225,\n      },\n      legend: {\n        show: false,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      labels: [\"Science\", \"Mathes\", \"Economics\", \"History\", \"Music\"],\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {},\n        },\n      ],\n    };\n  }\n\n}\n","\n\n<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"card\">\n      <div class=\"body\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-md-2 p-2\">\n            <img src=\"assets/images/pngegg8.png\" alt=\"\" width=\"250px\" height=\"170px\" class=\"px-2 mx-2\">\n          </div>\n          \n          <div class=\"col-md-10\">\n            <h4 class=\"font-20 weight-500 mb-2\">\n              Welcome back <div class=\"weight-600 font-30 col-green pt-1\">{{currentUser}}!</div>\n            </h4>\n            <p class=\"font-18 max-width-600\">We strive to offer a seamless payment and invoicing experience to meet your needs. For any inquiries or concerns, please don't hesitate to reach out to us. Thank you for choosing our finance system..</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"card\">\n      <div class=\"body\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-md-4\">\n            <img src=\"assets/images/dashImg2.jpg\" alt=\"Welcome Image\" class=\"w-100\">\n          </div>\n          <div class=\"col-md-8\">\n            <h4 class=\"font-24 weight-500 mb-2\">\n              Welcome back <div class=\"weight-600 font-30 col-blue pt-1\">John Doe!</div>\n            </h4>\n            <p class=\"font-18 max-width-600\">Thank you for choosing our finance system for your payment and invoicing needs. We are committed to providing you with reliable and efficient service. Please feel free to contact us if you have any questions or concerns.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<!-- <div class=\"body\">\n  <div class=\"row align-items-center\">\n    <div class=\"col-md-4\">\n      <img src=\"assets/images/finance-system/welcome-image.png\" alt=\"Welcome Image\" class=\"w-100\">\n    </div>\n    <div class=\"col-md-8\">\n      <h4 class=\"font-24 weight-500 mb-2\">\n        Welcome back <div class=\"weight-600 font-30 col-blue pt-1\">John Doe!</div>\n      </h4>\n      <p class=\"font-18 max-width-600\">Thank you for choosing our finance system for your payment and invoicing needs. We are committed to providing you with reliable and efficient service. Please feel free to contact us if you have any questions or concerns.</p>\n    </div>\n  </div>\n</div> -->\n\n\n<div class=\"row clearfix\">\n  <!-- Bar chart with line -->\n  <div class=\"col-xl-8 col-lg-8 col-md-12 col-sm-12\" >\n    <div class=\"card\" style=\"position: relative; height: 490px;\">\n      <div class=\"header\">\n        <h2>Received Items</h2>\n      </div>\n      <div class=\"body\">\n        <div class=\"recent-report__chart\">\n          <apx-chart [series]=\"lineChartOptions.series\" [chart]=\"lineChartOptions.chart\"\n            [xaxis]=\"lineChartOptions.xaxis\" [stroke]=\"lineChartOptions.stroke\" [colors]=\"lineChartOptions.colors\"\n            [dataLabels]=\"lineChartOptions.dataLabels\" [legend]=\"lineChartOptions.legend\"\n            [tooltip]=\"lineChartOptions.tooltip\" [markers]=\"lineChartOptions.markers\" [grid]=\"lineChartOptions.grid\"\n            [yaxis]=\"lineChartOptions.yaxis\" [title]=\"lineChartOptions.title\" [fill]=\"lineChartOptions.fill\">\n          </apx-chart>\n        </div>\n      </div>\n    </div>\n  </div>\n \n  <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"float-start\">\n          <h6 class=\"text-muted\">Inventory Levels</h6>\n          <h5>Stocks <span class=\"text-muted font-12\">(Average)</span></h5>\n        </div>\n        <div class=\"mb-5\">\n          <apx-chart [series]=\"performanceRateChartOptions.series\" [chart]=\"performanceRateChartOptions.chart\"\n            [xaxis]=\"performanceRateChartOptions.xaxis\" [stroke]=\"performanceRateChartOptions.stroke\"\n            [colors]=\"performanceRateChartOptions.colors\" [dataLabels]=\"performanceRateChartOptions.dataLabels\"\n            [legend]=\"performanceRateChartOptions.legend\" [markers]=\"performanceRateChartOptions.markers\"\n            [grid]=\"performanceRateChartOptions.grid\" [yaxis]=\"performanceRateChartOptions.yaxis\"\n            [tooltip]=\"performanceRateChartOptions.tooltip\" [title]=\"performanceRateChartOptions.title\"></apx-chart>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\n\n\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\nimport { DashboardComponent } from \"../../dashboard/dashboard.component\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"./reset-password.component.html\",\n  styleUrls: [\"./reset-password.component.sass\"],\n})\nexport class ResetPasswordComponent implements OnInit {\n  isSuccessful = false;\n  isUploadFailed = false;\n  errorMessage = \"\";\n\n  action: string;\n  dialogTitle: string;\n  //employeesForm: FormGroup;\n  sender: any;\n\n  Data?: any;\n  message?: any;\n  Form!: FormGroup;\n\n  //categorys = [{ name: \"Company\" }, { name: \"Individual\" }];\n\n  selectFeedback: \" \";\n\n  currentUserName: any;\n  hide1 = true;\n  hide2 = true;\n\n  loading: boolean = false;\n\n  constructor(\n\n    private router: Router,\n    private tokenStorage: TokenCookieService,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    public dialogRef: MatDialogRef<DashboardComponent>,\n    @Inject(MAT_DIALOG_DATA) data\n  ) {\n    this.Data = data.test;\n  }\n\n  ngOnInit(): void {\n    this.currentUserName = this.tokenStorage.getUser().username;\n    this.Form = this.createForm();\n  }\n\n  createForm(): FormGroup {\n    return this.fb.group({\n      username: [this.currentUserName, [Validators.required]],\n      password: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n          ),\n          Validators.minLength(10),\n          Validators.maxLength(25),\n        ],\n      ],\n\n      confirmpassword: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n          ),\n          Validators.minLength(10),\n          Validators.maxLength(25),\n        ],\n      ],\n\n      // password: [\"\", [Validators.required]],\n      // confirmpassword: [\"\", [Validators.required]],\n    });\n  }\n\n  // {\n  //   \"headers\": {\n  //     \"normalizedNames\": {},\n  //     \"lazyUpdate\": null\n  //   },\n  //   \"status\": 200,\n  //   \"statusText\": \"OK\",\n  //   \"url\": \"https://uraintegration-auth.postbank.co.ug/soa/auth/logout\",\n  //   \"ok\": true,\n  //   \"type\": 4,\n  //   \"body\": {\n  //     \"name\": null,\n  //     \"account_no\": null,\n  //     \"scheme_code\": null,\n  //     \"scheme_type\": null,\n  //     \"message\": \"Logged Out Successfully!\",\n  //     \"entity\": null,\n  //     \"statusCode\": 200\n  //   }\n  // }\n\n  // resetPassword() {\n  //   if (this.Form.value.password !== this.Form.value.confirmpassword) {\n  //     this.snackbar.showNotification(\n  //       \"snackbar-danger\",\n  //       \"Passwords don't match, please check and retry!\"\n  //     );\n  //   } else {\n  //     this.loading = true;\n  //     this.staticsService.firstTimeResetPassword(this.Form.value).subscribe(\n  //       (res) => {\n  //         console.log(\"res: \", res);\n        \n  //         this.loading = false;\n  //         if (res.message) {\n  //           this.dialogRef.close({ event: \"close\", data: \"Password reset\" });\n  //           this.notificationAPI.alertSuccess(res.message);\n  //         } else {\n  //           this.notificationAPI.alertWarning(\"Password reset was not succesful\");\n  //         }\n  //       },\n  //       (err) => {\n  //         this.loading = false;\n  //         // this.notificationAPI.alertWarning(err);\n  //         this.notificationAPI.alertWarning(\n  //           \"Password policy not met. Use a different password!\"\n  //         );\n  //       }\n  //     );\n  //   }\n  // }\n\n  resetPassword() {\n    // if (this.Form.value.password !== this.Form.value.confirmpassword) {\n    //   this.snackbar.showNotification(\n    //     \"snackbar-danger\",\n    //     \"Passwords don't match, please check and retry!\"\n    //   );\n    // } else if (this.Form.value.password.includes(this.currentUserName)) {\n    //   this.notificationAPI.alertWarning(\n    //     \"Password policy not met. Use a different password!\"\n    //   );\n    // } else {\n    //   this.loading = true;\n\n    // }\n  }\n\n  \n  onClose(): void {\n    // this.tokenStorage.signOut().subscribe(\n    //   (res) => {\n    //     console.log(\"res: \", res);\n    //     if (res) {\n    //       this.dialogRef.close();\n    //       this.router.navigate([\"/authentication/signin\"]);\n    //       this.notificationAPI.alertWarning(\n    //         \"Password reset required before proceeding!\"\n    //       );\n    //     }\n    //   },\n    //   (err) => {\n    //     console.log(err);\n    //     this.dialogRef.close();\n    //     this.router.navigate([\"/authentication/signin\"]);\n    //     this.notificationAPI.alertWarning(err);\n    //   }\n    // );\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <!-- <img [src]='asset.img' alt=\"avatar\"> -->\n                <img src=\"assets/images/emtec.png\" alt=\"avatar\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <h3 class=\"mb-1 text-dark text-center\">Reset Password</h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"onClose()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"card-body my-3\">\n            <p class=\"text-dark\">\n                Please use this form to reset your password using the registered\n                username.\n            </p>\n            <br />\n            <form [formGroup]=\"Form\">\n                <div class=\"row\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Username</mat-label>\n                            <input class=\"text-dark\" matInput formControlName=\"username\" required />\n                            <mat-error *ngIf=\"\n                  Form.get('username').hasError('required') ||\n                  Form.get('username').touched\n                \">\n                                Please enter a valid username\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>New Password</mat-label>\n                            <input matInput formControlName=\"password\" [type]=\"hide1 ? 'password' : 'text'\" required />\n                            <button mat-icon-button matSuffix (click)=\"hide1 = !hide1\"\n                                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide1\">\n                                <mat-icon>{{ hide1 ? \"visibility_off\" : \"visibility\"\n                                    }}</mat-icon>\n                            </button>\n                            <mat-error *ngIf=\"\n                Form\n                  .get('password')\n                  .hasError('required')\n              \"> New password is required </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('password')\n                  .hasError('pattern')\n              \"> Password must contain at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special\n                                character. </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('password')\n                  .hasError('minLength')\n              \"> Please enter atleast 10 characters. </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('password')\n                  .hasError('maxLength')\n              \"> Characters must not exceed 25. </mat-error>\n                        </mat-form-field>\n\n\n                    </div>\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Confirm Password</mat-label>\n                            <input matInput formControlName=\"confirmpassword\" [type]=\"hide2 ? 'password' : 'text'\"\n                                required />\n                            <button mat-icon-button matSuffix (click)=\"hide2 = !hide2\"\n                                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide2\">\n                                <mat-icon>{{ hide2 ? \"visibility_off\" : \"visibility\"\n                                    }}</mat-icon>\n                            </button>\n                            <mat-error *ngIf=\"\n                Form\n                  .get('confirmpassword')\n                  .hasError('required')\n              \"> Confirm password is required </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('confirmpassword')\n                  .hasError('pattern')\n              \"> Password must contain at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special\n                                character. </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('confirmpassword')\n                  .hasError('minLength')\n              \"> Please enter atleast 10 characters. </mat-error>\n                            <mat-error *ngIf=\"\n            Form\n                  .get('confirmpassword')\n                  .hasError('maxLength')\n              \"> Characters must not exceed 25. </mat-error>\n                        </mat-form-field>\n\n\n                    </div>\n                    <div class=\"d-grid my-2\">\n                        <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\n                        class=\"auth-form-btn\" [disabled]=\"!Form.valid\" (click)=\"resetPassword()\">\n                            Reset Password\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!-- <br />\n  Form value = {{ Form.value | json }}\n  <br />\n  Form Status = {{ Form }} -->","import { Component, OnInit } from '@angular/core';\n\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexYAxis,\n  ApexStroke,\n  ApexTooltip,\n  ApexDataLabels,\n  ApexLegend,\n  ApexResponsive,\n  ApexPlotOptions,\n  ApexFill,\n  ApexMarkers,\n  ApexGrid,\n  ApexTitleSubtitle,\n} from 'ng-apexcharts';\n\nimport { element } from 'protractor';\nimport { Observable, Subject, map, takeUntil } from 'rxjs';\nimport { ItemCategoryService } from 'src/app/erp-inventory/data/services/item-category.service';\nimport { MainstoreService } from 'src/app/erp-inventory/data/services/mainstore.service';\nimport { StockManagementService } from 'src/app/erp-inventory/data/services/stock-management.service';\nimport { StockManagementRoutingModule } from 'src/app/erp-inventory/modules/inventory-management/pages/Inventory-management-routing.module';\n\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  stroke: ApexStroke;\n  tooltip: ApexTooltip;\n  dataLabels: ApexDataLabels;\n  legend: ApexLegend;\n  responsive: ApexResponsive[];\n  plotOptions: ApexPlotOptions;\n  fill: ApexFill;\n  colors: string[];\n  labels: string[];\n  markers: ApexMarkers;\n  grid: ApexGrid;\n  title: ApexTitleSubtitle;\n};\n\n@Component({\n  selector: 'app-cat-statistics',\n  templateUrl: './cat-statistics.component.html',\n  styleUrls: ['./cat-statistics.component.sass']\n})\nexport class CatStatisticsComponent implements OnInit {\n\n\n  //variables \n  isLoading: boolean;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  currentYear = new Date().getFullYear();\n  monthsArray: any = \n    [\n      { name: 'January', value: 1 },\n      { name: 'February', value: 2 },\n      { name: 'March', value: 3 },\n      { name: 'April', value: 4 },\n      { name: 'May', value: 5 },\n      { name: 'June', value: 6 },\n      { name: 'July', value: 7 },\n      { name: 'August', value: 8 },\n      { name: 'September', value: 9 },\n      { name: 'October', value: 10 },\n      { name: 'Novembar', value: 11 },\n      { name: 'December', value: 12 },\n    ]\n  currentMonth = this.monthsArray[new Date().getMonth()];\n  scales: any [] = [];\n  categories: any [] = [];\n  // barChartOptions1: any;\n\n\n  public barChartOptions: Partial<ChartOptions>;\n  public lineChartOptions: Partial<ChartOptions>;\n\n  chartDispType: any = ['Year-wise', 'Month-wise'];\n\n \n  constructor(\n    private itemCatMan: ItemCategoryService,\n    private stockManService: StockManagementService,\n    private mainStoreManService: MainstoreService,\n  ) \n    {\n      // super();\n      this.barChartOptions = \n      {\n       series: [{\n         name: 'category',\n         data: this.scales,\n         }\n       ],\n       chart:\n         {\n           type: 'bar',\n           height: 350,\n           foreColor: 'green',\n           stacked: false,\n           toolbar: {\n             show: false,\n           },\n         },\n         responsive: [\n           {\n             breakpoint: 480,\n             options: {\n               legend: {\n                 position: 'bottom',\n                 offsetX: -10,\n                 offsetY: 0,\n               },\n             },\n           },\n         ],\n         plotOptions: {\n           bar: {\n             horizontal: false,\n             columnWidth: '30%',\n           },\n         },\n         xaxis: {\n           type: 'category',\n           categories: this.categories,\n         },\n         legend: {\n           show: false,\n         },\n         fill: {\n           opacity: 1,\n           colors: [\n             '#177147', '#397157', '#2D7152', '#22714D'\n           ]\n         },\n         tooltip: {\n           marker: {\n           show: true,\n           },\n           x: {\n             show: true,\n           },\n         },\n      };\n     }\n\n  ngOnInit(): void {\n    \n    this.getItemCountPerCategory();\n    this.getCategories();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  \n    observable = new Observable((observer) => {\n      \n    const response = {\n      names: [],\n      values: [],\n    };\n    observer.next(response);\n  });\n\n  getItemCountPerCategory()\n  {\n    this.mainStoreManService\n    .getTotalStockPerCategory()\n    .pipe(map((response) => {\n      const names = response.names;\n      const values = response.values;\n      return { names, values };\n    }))\n    .subscribe(\n      (res) => {\n        this.scales = res.values,\n        this.categories = res.names\n        \n      console.log(res.names); \n      console.log(res.values); \n          \n          \n        \n      }\n    )\n  }\n\n  getCategories()\n    {\n      this.itemCatMan.getItemCategories()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (res)=> \n        {\n          if (res.statusCode == 200)\n           {\n            if (res.entity.length)\n              { \n                // categories = res.entity.categoryName\n                \n                  res.entity.forEach(element => {\n                  this.categories.push(element.categoryName)\n                });\n                \n                \n              }else\n              {\n                this.categories = [];\n                \n              }\n           }\n           this.isLoading = false;\n          \n        },\n        (err) => {\n          console.log(err)\n        }\n      )\n    }\n\n\n   \n\n}\n","<div class=\"card\">\n    <div class=\"header\">\n      <h2> Item Count Per Category</h2>\n    </div>\n    <div class=\"row p-3\">\n      <form >\n        <div class=\"row mx-3\">\n          <div class=\"col-4\">\n            <mat-form-field appearance=\"legacy\">\n              <mat-label>Select year</mat-label>\n              <mat-select formControlName=\"year\">\n                <mat-option *ngFor=\"let item of chartDispType\" [value]=\"item\">{{ item }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div class=\"col-4\">\n            <mat-form-field appearance=\"legacy\">\n              <mat-label>Select month</mat-label>\n              <mat-select> \n                <mat-option *ngFor=\"let item of monthsArray\" [value]=\"item.value\">{{ item.name }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </form>\n  </div>\n    <div class=\"body\" *ngIf=\"!isLoading\">\n      <apx-chart [series]=\"barChartOptions.series\" [chart]=\"barChartOptions.chart\"\n        [dataLabels]=\"barChartOptions.dataLabels\" [plotOptions]=\"barChartOptions.plotOptions\"\n        [responsive]=\"barChartOptions.responsive\" [xaxis]=\"barChartOptions.xaxis\"\n        [tooltip]=\"barChartOptions.tooltip\" [legend]=\"barChartOptions.legend\" [fill]=\"barChartOptions.fill\">\n      </apx-chart>\n    </div>\n    <div *ngIf=\"isLoading\">\n      <app-spinner></app-spinner>\n     </div>\n  </div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { NavigationStart, Router } from \"@angular/router\";\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexFill,\n  ApexGrid,\n  ApexLegend,\n  ApexNonAxisChartSeries,\n  ApexPlotOptions,\n  ApexResponsive,\n  ApexStroke,\n  ApexTooltip,\n  ApexXAxis,\n  ApexYAxis,\n  ChartComponent,\n} from \"ng-apexcharts\";\n\n\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { ResetPasswordComponent } from \"../components/reset-password/reset-password.component\";\nimport { element } from \"protractor\";\nimport { ItemCategoryService } from \"src/app/erp-inventory/data/services/item-category.service\";\n\nexport type chartOptions = {\n  series: ApexAxisChartSeries;\n  radialseries: ApexNonAxisChartSeries;\n  series2: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  tooltip: ApexTooltip;\n  grid: ApexGrid;\n  stroke: ApexStroke;\n  legend: ApexLegend;\n  colors: string[];\n  responsive: ApexResponsive[];\n  labels: string[];\n};\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.sass\"],\n})\nexport class DashboardComponent implements OnInit {\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public barChartOptions: Partial<chartOptions>;\n  public radialChartOptions: Partial<chartOptions>;\n  public gaugeChartOptions: Partial<chartOptions>;\n  public stackBarChart: Partial<chartOptions>;\n\n  passwordFlag: any;\n  isPageReloaded = false;\n  currentUser: any;\n\n\n  constructor(\n    private tokenCookieService: TokenCookieService,\n    private dialog: MatDialog,\n    private itemCatMan: ItemCategoryService,\n  )\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.passwordFlag = this.tokenCookieService.getUser().systemGenPassword;\n    this.currentUser = this.tokenCookieService.getUser().username;\n     \n\n    this.getPage();\n\n    // this.resetPassword();\n\n    this.chart1();\n    this.chart2();\n    this.gaugechart();\n    this.stackChart();\n\n  }\n  getPage() {\n    if (this.passwordFlag && this.currentUser!=='soaadmin') {\n      this.resetPassword();\n    } else if (!this.passwordFlag) {\n      //this.resetPassword();\n    }\n  }\n\n  reLoadPage() {\n    // Perform password reset logic here\n    location.reload();\n  }\n\n  resetPassword() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      test: \"username\",\n    };\n\n    const dialogRef = this.dialog.open(ResetPasswordComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {});\n  }\n\n  private chart1() {\n    this.barChartOptions = {\n      series: [\n        {\n          name: \"Work Hours\",\n          data: [6.3, 5.5, 4.1, 6.7, 2.2, 4.3],\n        },\n        {\n          name: \"Break Hours\",\n          data: [1.3, 2.3, 2.0, 0.8, 1.3, 2.7],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n        stackType: \"100%\",\n        foreColor: \"#9aa0ac\",\n      },\n      colors: [\"#674EC9\", \"#C1C1C1\"],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: \"35%\",\n        },\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: \"bottom\",\n              offsetX: -10,\n              offsetY: 0,\n            },\n          },\n        },\n      ],\n      xaxis: {\n        categories: [\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ],\n      },\n      fill: {\n        opacity: 1,\n      },\n      legend: {\n        position: \"bottom\",\n        offsetX: 0,\n        offsetY: 0,\n      },\n      tooltip: {\n        theme: \"dark\",\n        marker: {\n          show: true,\n        },\n        x: {\n          show: true,\n        },\n      },\n    };\n  }\n  private chart2() {\n    this.radialChartOptions = {\n      radialseries: [44, 55, 67],\n      chart: {\n        height: 290,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              fontSize: \"22px\",\n            },\n            value: {\n              fontSize: \"16px\",\n            },\n            total: {\n              show: true,\n              label: \"Total\",\n              formatter: function (w) {\n                return \"52%\";\n              },\n            },\n          },\n        },\n      },\n      labels: [\"Project 1\", \"Project 2\", \"Project 3\"],\n    };\n  }\n  private gaugechart() {\n    this.gaugeChartOptions = {\n      series2: [72],\n      chart: {\n        height: 310,\n        type: \"radialBar\",\n        offsetY: -10,\n      },\n      plotOptions: {\n        radialBar: {\n          startAngle: -135,\n          endAngle: 135,\n          dataLabels: {\n            name: {\n              fontSize: \"22px\",\n              fontWeight: 600,\n              color: \"#6777EF\",\n              offsetY: 120,\n            },\n            value: {\n              offsetY: 76,\n              fontSize: \"22px\",\n              color: \"#9aa0ac\",\n              formatter: function (val) {\n                return val + \"%\";\n              },\n            },\n          },\n        },\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"dark\",\n          shadeIntensity: 0.15,\n          inverseColors: false,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 50, 65, 91],\n        },\n      },\n      stroke: {\n        dashArray: 4,\n      },\n      labels: [\"Closed Ticket\"],\n    };\n  }\n  private stackChart() {\n    this.stackBarChart = {\n      series: [\n        {\n          name: \"Project 1\",\n          data: [44, 55, 41, 67, 22, 43],\n        },\n        {\n          name: \"Project 2\",\n          data: [13, 23, 20, 8, 13, 27],\n        },\n        {\n          name: \"Project 3\",\n          data: [11, 17, 15, 15, 21, 14],\n        },\n        {\n          name: \"Project 4\",\n          data: [21, 7, 25, 13, 22, 8],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 300,\n        foreColor: \"#9aa0ac\",\n        stacked: true,\n        toolbar: {\n          show: false,\n        },\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: \"bottom\",\n              offsetX: -10,\n              offsetY: 0,\n            },\n          },\n        },\n      ],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: \"30%\",\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      grid: {\n        borderColor: \"#9aa0ac\",\n      },\n      xaxis: {\n        type: \"category\",\n        categories: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      },\n      legend: {\n        show: false,\n      },\n      fill: {\n        opacity: 1,\n        colors: [\"#F0457D\", \"#704DAD\", \"#FFC107\", \"#a5a5a5\"],\n      },\n    };\n  }\n\n\n\n  \n\n\n     \n      \n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Dashboard'\" [items]=\"['Home']\" [active_item]=\"'Dashboard'\">\n      </app-breadcrumb>\n    </div>\n    <!-- Widgets -->\n   <app-gen-widgets></app-gen-widgets>\n    <!-- #END# Widgets -->\n\n    <div class=\"row\">\n      <app-analytics></app-analytics>\n    </div>\n    \n  </div>\n</section>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from 'rxjs';\nimport { BrancstoresManagementService } from \"src/app/erp-inventory/data/services/brancstores-management.service\";\nimport { ItemCategoryService } from \"src/app/erp-inventory/data/services/item-category.service\";\nimport { StockManagementService } from \"src/app/erp-inventory/data/services/stock-management.service\";\nimport { SupplierCategoriesService } from \"src/app/erp-suppliersmanagement/data/supplier-categories.service\";\n\n\n@Component({\n  selector: \"app-gen-widgets\",\n  templateUrl: \"./gen-widgets.component.html\",\n  styleUrls: [\"./gen-widgets.component.scss\"],\n})\nexport class GenWidgetsComponent implements OnInit {\n  grossStockValue: number = 0; \n  subscription!: Subscription;\n  itemCount: number = 0;\n  stockCatCount: number = 0;\n  branchstoreCount: number = 0;\n  expenseCount: any\n  branschStoresCount: any;\n\n\n  constructor\n  (\n    // private inventoryService: InventoryService\n    private stockManService: StockManagementService,\n    private itemManService: ItemCategoryService,\n    private branchStoreService: BrancstoresManagementService,\n    private router: Router,\n    // private decimalType: DecimalPipe,\n    \n   \n  )\n  \n   { }\n\n  ngOnInit(): void {\n    this.getValue();\n    this.getBranchStoreCount();\n    this.getItemCount();\n    this.getStockCatCount();\n    \n\n\n  }\n\n  value(dashboard: any) {\n    this.router.navigateByUrl('erp-inventory/dashboard');\n  }\n\n  branschStores(branches: any) {\n    this.router.navigateByUrl('erp-inventory/inventory-parameters/all-branchstores');\n  }\n\n  stockCat(categories: any) {\n    this.router.navigateByUrl('erp-inventory/inventory-parameters/all-itemcat');\n  }\n\n  items(stock: any) {\n    this.router.navigateByUrl('erp-inventory/inventory/all-stock');\n  }\n\n\n  data: any;\n  getValue(){\n\n    \n\n    this.subscription = this.stockManService\n    .calculateTotalCost()\n    .subscribe(res => \n      {\n      if (res.statusCode == 200) \n      {\n        this.data = res.entity;\n        \n        this.grossStockValue = this.data;  \n        // const formattedAmount = this.decimalType.transform(this.grossStockValue, 'KES');\n      }\n     },\n     (err) => \n     {\n      console.log(err)\n     },\n     )\n  \n\n  }\n\n  getItemCount()\n  {\n\n   this.stockManService\n       .getStock()\n       .subscribe(\n        (res) => \n        {\n          if (res.statusCode == 200)\n          {\n           this.itemCount = res.entity.length;\n          }\n         \n         },\n         (err) => \n         {\n           console.log(err);\n        }\n       );\n\n  }\n\n  expenses()\n  {\n\n  }\n\n  getStockCatCount()\n  {\n\n    this.subscription = this.itemManService\n    .getItemCategories()\n    .subscribe(res => \n      {\n        if (res.statusCode == 200)\n        {\n          this.data = res.entity;\n          this.stockCatCount = this.data.length;  \n        }\n       },\n       (err) => \n         {\n           console.log(err);\n        }\n        )\n    \n  }\n\n  getBranchStoreCount()\n  {\n    this.branchStoreService \n    .getbranchStore()\n    .subscribe(\n     (res) => {\n      if (res.statusCode == 200)\n      {\n          \n          this.branchstoreCount = res.entity.length;\n      }\n         \n         },\n         (err) => \n         {\n           console.log(err);\n         }\n       );\n\n  }\n}\n\n","<!-- Widgets -->\n<div class=\"row\">\n    <div class=\"col-lg-3 col-sm-6 \" (click)=\"items('stock')\">\n        <div class=\"info-box7 bg-kingdom order-info-box7 table-style\">\n            <div class=\"info-box7-block\">\n                <h4 class=\"m-b-20\"> Item Count </h4>\n                <h2 class=\"text-end\"><span class=\"float-start\">{{itemCount}}</span><i class=\"fas fa-user-plus\"></i>\n                </h2>\n                <p class=\"m-b-0\">Click for more details!</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-lg-3 col-sm-6\" (click)=\"value('dashboard')\">\n        <div class=\"info-box7 bg-kingdom order-info-box7 table-style\">\n            <div class=\"info-box7-block\">\n                <h4 class=\"m-b-20\">Stock Value</h4>\n                <h2 class=\"text-end\"><span class=\"float-start\">{{grossStockValue }}</span><i\n                        class=\"fab fa-buromobelexperte\"></i></h2>\n                <p class=\"m-b-0\">Click for more details!</p>\n            </div>\n        </div>\n    </div>\n\n\n    \n    <div class=\"col-lg-3 col-sm-6\" (click)=\"stockCat('stock')\">\n        <div class=\"info-box7 bg-kingdom order-info-box7 table-style\">\n            <div class=\"info-box7-block\">\n                <h4 class=\"m-b-20\">Categories</h4>\n                <h2 class=\"text-end\"><span class=\"float-start\">{{stockCatCount}}</span><i class=\"fas fa-coins\"></i>\n                </h2>\n                <p class=\"m-b-0\">Click for more details!</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3 col-sm-6\" (click)=\"branschStores('branches')\">\n        <div class=\"info-box7 bg-kingdom order-info-box7 table-style\">\n            <div class=\"info-box7-block\">\n                <h4 class=\"m-b-20\">Branch Stores</h4>\n                <h2 class=\"text-end\"><span class=\"float-start\">{{branchstoreCount}}</span><i class=\"\n            \nfas fa-users\n\"></i></h2>\n                <p class=\"m-b-0\">Click for more details!</p>\n            </div>\n        </div>\n    </div>\n\n</div>\n<!-- #END# Widgets -->"],"names":[],"sourceRoot":"webpack:///"}