{"version":3,"file":"src_app_erp-finance_data_services_expense-management_service_ts-src_app_erp-fixedassets_modul-86431a.js","mappings":"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","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-finance/data/services/expense-management.service.ts","./src/app/erp-fixedassets/modules/fixed-assets-parameters/fixed-assets-parameters-routing.module.ts","./src/app/erp-fixedassets/modules/fixed-assets-parameters/fixed-assets-parameters.module.ts","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/asset-categories/all-asset-categories/all-asset-categories.component.ts","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/asset-categories/all-asset-categories/all-asset-categories.component.html","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/asset-categories/manage-asset-categories/manage-asset-categories.component.ts","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/asset-categories/manage-asset-categories/manage-asset-categories.component.html","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/catalogue/all-asset-catalogue/all-asset-catalogue.component.ts","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/catalogue/all-asset-catalogue/all-asset-catalogue.component.html","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/catalogue/asset-catalogue-lookup/asset-catalogue-lookup.component.ts","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/catalogue/asset-catalogue-lookup/asset-catalogue-lookup.component.html","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/catalogue/asset-catalogue/asset-catalogue.component.ts","./src/app/erp-fixedassets/modules/fixed-assets-parameters/pages/catalogue/asset-catalogue/asset-catalogue.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ExpenseManagementService {\n  constructor(private http: HttpClient) {}\n\n  // ****************************************************************************************************************************\n\n  getExpenses(): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/all`;\n    return this.http.get<any[]>(expenseUrl);\n  }\n\n  addExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create`;\n    return this.http.post<any[]>(expenseUrl, data);\n  }\n\n  updateExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update`;\n    return this.http.put<any[]>(expenseUrl, data);\n  }\n\n  deleteExpenseTemporarily(params: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/delete`;\n    return this.http.delete<any[]>(expenseUrl, {params});\n  }\n\n  uploadBatchExpenses(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create/bulk`;\n    return this.http.post<any>(expenseUrl, data);\n  }\n\n  getCostCentersByExpenseCode(expenseGlCode: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/expenses/allCostCenters?expenseCode=${expenseGlCode}`;\n    return this.http.get<any>(expenseUrl, expenseGlCode);\n  }\n\n  getExpensesByStatus(params): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/fetchbyStatus`;\n    return this.http.get<any[]>(expenseUrl, { params });\n  }\n  getExpenseById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/expenses/find/by/id`,\n      { params }\n    );\n  }\n\n  validateBulkExpense(processedRows: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AllAssetCategoriesComponent } from \"./pages/asset-categories/all-asset-categories/all-asset-categories.component\";\nimport { RoutePrivilegeGuard } from \"src/app/erp-procurement/data/services/_AccessControlAuthGuard.service\";\nimport { ManageAssetCategoriesComponent } from \"./pages/asset-categories/manage-asset-categories/manage-asset-categories.component\";\nimport { AllAssetCatalogueComponent } from \"./pages/catalogue/all-asset-catalogue/all-asset-catalogue.component\";\nimport { AssetCatalogueComponent } from \"./pages/catalogue/asset-catalogue/asset-catalogue.component\";\n\nconst routes: Routes = [\n  {\n    path: \"assets-categories\",\n    component: AllAssetCategoriesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: \"FixedAssetsModule\", requiredPrivilege: [\"Dashboard\"] },\n  },\n  {\n    path: \"manage-assets-categories\",\n    component: ManageAssetCategoriesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: \"FixedAssetsModule\", requiredPrivilege: [\"Dashboard\"] },\n  },\n\n  {\n    path: \"all-asset-catalogues\",\n    component: AllAssetCatalogueComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: \"FixedAssetsModule\", requiredPrivilege: [\"Dashboard\"] },\n  },\n\n  {\n    path: \"manage-asset-catalogue\",\n    component: AssetCatalogueComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: \"FixedAssetsModule\", requiredPrivilege: [\"Dashboard\"] },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FixedAssetsParametersRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule,DatePipe } from '@angular/common';\n\nimport { FixedAssetsParametersRoutingModule } from './fixed-assets-parameters-routing.module';\nimport { ManageAssetCategoriesComponent } from './pages/asset-categories/manage-asset-categories/manage-asset-categories.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { AllAssetCategoriesComponent } from './pages/asset-categories/all-asset-categories/all-asset-categories.component';\nimport { AssetCatalogueLookupComponent } from './pages/catalogue/asset-catalogue-lookup/asset-catalogue-lookup.component';\nimport { AllAssetCatalogueComponent } from './pages/catalogue/all-asset-catalogue/all-asset-catalogue.component';\nimport { AssetCatalogueComponent } from './pages/catalogue/asset-catalogue/asset-catalogue.component';\n\n@NgModule({\n  declarations: [\n    AllAssetCategoriesComponent,\n    ManageAssetCategoriesComponent,\n    AssetCatalogueLookupComponent,\n    AllAssetCatalogueComponent,\n    AssetCatalogueComponent\n  ],\n  imports: [\n    CommonModule,\n    FixedAssetsParametersRoutingModule,\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n\n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n\n    MatFormFieldModule,\n\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n\n    MatSnackBarModule,\n    MatToolbarModule,\n\n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule,\n    MatChipsModule,\n\n\n    FormsModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatListModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatSliderModule,\n    NgbModule,\n  ],\n  providers: [DatePipe]\n})\nexport class FixedAssetsParametersModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { AssetService } from 'src/app/erp-fixedassets/data/services/asset.service';\nimport { AssetCategorieService } from 'src/app/erp-fixedassets/data/services/asset-categories.service';\n\n\n@Component({\n  selector: 'app-all-asset-categories',\n  templateUrl: './all-asset-categories.component.html',\n  styleUrls: ['./all-asset-categories.component.sass']\n})\nexport class AllAssetCategoriesComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"itemCategoryCode\",\n    \"categoryName\",\n    \"remarks\",\n    \"action\",\n  ];\n\n   //binding the columns to a table\n   dataSource!: MatTableDataSource<any>;\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort) sort!: MatSort;\n \n   contextMenu: MatMenuTrigger;\n   contextMenuPosition = { x: \"0px\", y: \"0px\" };\n \n   subscription!: Subscription;\n   selection = new SelectionModel<any>(true, []);\n \n   //necessary variables\n   data: any;\n   error: any;\n   formData: any;\n   isLoading = true;\n   pageFunction = \"ADD\"; //default value\n \n   //management of data destruction upon usage\n     destroy$: Subject<boolean> = new Subject<boolean>();\n \n   downloadLoading: boolean = false;\n \n   Form: FormGroup;\n   // ****************************************************************************************************************************\n \n   constructor(\n     private router: Router,\n     private snackbar: SnackbarService,\n     private accessControlService: AccessControlService,\n     private dialog: MatDialog,\n     private fb: FormBuilder,\n     private assetCategorieService: AssetCategorieService\n   ) {}\n \n   ngOnInit(): void {\n     this.Form = this.fb.group({\n       status: [\"PENDING\", Validators.required],\n     });\n \n     this.getData();\n   }\n \n   ngOnDestroy(): void {\n     this.destroy$.next(true);\n     this.destroy$.complete();\n   }\n \n   // ****************************************************************************************************************************\n   // data filtering\n   applyFilter(event: Event) {\n     const filterValue = (event.target as HTMLInputElement).value;\n     this.dataSource.filter = filterValue.trim().toLowerCase();\n \n     if (this.dataSource.paginator) {\n       this.dataSource.paginator.firstPage();\n     }\n   }\n \n   // ****************************************************************************************************************************\n \n   reqStatuses: any[] = [\n     { name: \"PENDING\" },\n     // { name: \"VERIFIED\" },\n     { name: \"APPROVED\" },\n     { name: \"RETURNED\" },\n     { name: \"REJECTED\" },\n   ];\n \n   selectedStatus: string = \"PENDING\";\n   getSelectSelectedStatus() {\n     this.getData();\n   }\n   getSelectedStatus(status: any) {\n     this.Form.patchValue({\n       status: status,\n     });\n \n     this.getData();\n   }\n \n   getData() {\n     this.dataSource = new MatTableDataSource([]);\n     this.dataSource.paginator = this.paginator;\n     this.dataSource.sort = this.sort;\n     this.isLoading = true;\n     this.selectedStatus = this.Form.value.status;\n \n     let params = {\n       status: this.Form.value.status,\n     };\n \n     this.assetCategorieService\n       .getCategoriesByStatus(params)\n       .pipe(takeUntil(this.destroy$))\n       .subscribe({\n         next: (res) => {\n           console.log(\"this.data :\", res);\n           if (res.statusCode === 200) {\n             this.data = res;\n             this.isLoading = false;\n             this.dataSource = new MatTableDataSource(this.data.entity);\n             this.dataSource.paginator = this.paginator;\n             this.dataSource.sort = this.sort;\n \n             console.log(\"this.data :\", this.data);\n           } else {\n             this.snackbar.showNotification(\"snackbar-danger\", res.message);\n           }\n         },\n         error: (err) => {\n           this.snackbar.showNotification(\"snackbar-danger\", err.message);\n         },\n         complete: () => {},\n       }),\n       Subscription;\n   }\n \n   refresh() {\n     this.getData();\n   }\n \n   // ****************************************************************************************************************************\n   //adding record\n   addCategory() {\n     this.router.navigate([\"/erp-fixed-assets/fixed-assets-parameters/manage-assets-categories\"]);\n   }\n \n   //Updating the Categorys\n \n   editCategory(data: any) {\n     let route = \"/erp-fixed-assets/fixed-assets-parameters/manage-assets-categories\";\n     this.router.navigate([route], {\n       queryParams: {\n         id: data.id,\n         action: \"Update\",\n       },\n     });\n   }\n \n   //Viewing the Categorys\n   viewCategory(data: any) {\n \n     let route = \"/erp-fixed-assets/fixed-assets-parameters/manage-assets-categories\";\n     this.router.navigate([route], {\n       queryParams: {\n         id: data.id,\n         action: \"View\",\n       },\n     });\n   }\n \n   //verify record\n   validateExpense(data: any) {\n     let route = \"/erp-fixed-assets/fixed-assets-parameters/manage-assets-categories\";\n     this.router.navigate([route], {\n       queryParams: {\n         id: data.id,\n         action: \"Verify\",\n       },\n     });\n   }\n \n   //deleting Categorys\n \n   deleteCategory(id: any) {\n     Swal.fire({\n       title: \"Are you Sure?\",\n       text: \"This record will be deleted!!\",\n       icon: \"question\",\n       showCancelButton: true,\n       confirmButtonColor: \"#3085d6\",\n       confirmButtonText: \"Yes, Delete this record\",\n     }).then((result) => {\n       if (result.isConfirmed) {\n         let params = {id: id}\n         this.assetCategorieService\n           .deleteCategoriesTemporarily(params)\n           .pipe(takeUntil(this.destroy$))\n           .subscribe({\n             next: (res) => {\n               console.log(\"res: \", res);\n               if (res.statusCode == 201 || 200 || 302) {\n                 this.snackbar.showNotification(\n                   \"snackbar-success\",\n                   res.message\n                 );\n               } else{\n                 this.snackbar.showNotification(\n                   \"snackbar-danger\",\n                   res.message\n                 );\n               }\n             },\n             error: (err) => {\n               this.snackbar.showNotification(\n                 \"snackbar-danger\",\n                 err.message\n               );\n             },\n             complete: () => {\n               this.getData();\n             },\n           }),\n           Subscription;\n       }\n     });\n   }\n \n   // ****************************************************************************************************************************\n \n   //Select GL Accounts\n   selectedRows: any[] = [];\n   atleastOneSelected: boolean = false;\n \n   /** Whether the number of selected elements matches the total number of rows. */\n   isAllSelected() {\n     const numSelected = this.selection.selected.length;\n     const numRows = this.dataSource.data.length;\n     return numSelected === numRows;\n   }\n \n   /** Selects all rows if they are not all selected; otherwise clear selection. */\n   masterToggle() {\n     if (this.isAllSelected()) {\n       this.selection.clear();\n       return;\n     }\n \n     this.selection.select(...this.dataSource.data);\n   }\n \n   /** The label for the checkbox on the passed row */\n   checkboxLabel(row?: any): string {\n     if (!row) {\n       return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n     }\n     return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n       row.position + 1\n     }`;\n   }\n \n   expSelected() {\n     this.atleastOneSelected = true;\n     this.selectedRows = this.selection.selected;\n \n     console.log(\"this.selectedRows: \", this.selectedRows);\n   }\n \n   hasAccess: boolean;\n   processMultipleRows(status: any) {\n    \n     let privilege = \"Dashboard\";\n     //Validate Categorys\n \n     this.hasAccess = this.accessControlService.hasPrivilege(\"FixedAssetsModule\", [\n       privilege,\n     ]);\n \n     if (this.hasAccess) {\n       Swal.fire({\n         title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n         input: \"textarea\",\n         inputPlaceholder: \"Type your remarks here...\",\n         confirmButtonText: \"Submit\",\n         showCancelButton: true,\n         cancelButtonText: \"Cancel\",\n \n         inputValidator: (value) => {\n           if (!value) {\n             return \"Please enter your remarks\";\n           }\n         },\n       }).then((result) => {\n         if (result.isConfirmed) {\n          this.isLoading = true\n           const verifierRemarks = result.value;\n \n           const processedRows = this.selectedRows.map((element) => {\n             return {\n               id: element.id,\n               status: status,\n               verifierRemarks: verifierRemarks,\n             };\n           });\n \n           console.log(\"LOG: \", processedRows);\n \n           this.assetCategorieService\n             .validateCategorie(processedRows)\n             .pipe(takeUntil(this.destroy$))\n             .subscribe({\n               next: (res) => {\n                 console.log(\"res: \", res);\n                 if (res.statusCode == 201 || 200 || 302) {\n                   this.snackbar.showNotification(\n                     \"snackbar-success\",\n                     res.message\n                   );\n \n                   this.selection = new SelectionModel<any>(true, []);\n                 } else {\n                   this.snackbar.showNotification(\n                     \"snackbar-danger\",\n                     res.message\n                   );\n                 }\n               },\n               error: (err) => {\n                 this.snackbar.showNotification(\"snackbar-danger\", err.message);\n               },\n               complete: () => {\n                 this.getData();\n                 this.isLoading = false\n \n               },\n             }),\n             Subscription;\n         } else {\n           this.selection = new SelectionModel<any>(true, []);\n         }\n       });\n     }\n   }\n }\n ","<p>all-asset-categories works!</p>\n<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Asset Categories'\" [items]=\"['Asset Categories']\"\n                [active_item]=\"'All Asset Categories'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                  <div class=\"col-8\">\n                                    <ul class=\"header-buttons-left ms-0\">\n                                      <li class=\"dropdown\">\n                                        <h2>Asset Categories</h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                                      </li>\n                                      <li>\n                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                          <button mat-mini-fab color=\"primary\" (click)=\"addCategory()\">\n                                            <mat-icon class=\"col-white\">add</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <!-- Container element with *ngIf condition -->\n                                      <li *ngIf=\"selection.selected.length > 0\">\n                                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                                            class=\"mat-button-custom\">\n                                            <mat-icon class=\"col-white\">check</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li *ngIf=\"selection.selected.length > 0\">\n                                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                                            class=\"mat-button-custom\">\n                                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li *ngIf=\"selection.selected.length > 0\">\n                                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                                            class=\"mat-button-custom\">\n                                            <mat-icon class=\"col-white\">undo</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n                                  <div class=\"col-4\">\n                                    <ul class=\"header-buttons\">\n                                      <li>\n                                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n                \n                              <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                  <div class=\"col-2\">\n                                    <form [formGroup]=\"Form\">\n                                      <!-- <div class=\"row\">\n                                            <div class=\"col-4\"> -->\n                                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                        <mat-label>Status</mat-label>\n                \n                                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                                            }}\n                                          </mat-option>\n                                        </mat-select>\n                \n                                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                          Please select Status\n                                        </mat-error>\n                                      </mat-form-field>\n                                      <!-- </div>\n                    \n                                          </div> -->\n                                    </form>\n                                  </div>\n                                  <div class=\"col-10\">\n                                    <div class=\"button-container mt-1\">\n                                      <!-- Button for PENDING status -->\n                                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                                        (click)=\"getSelectedStatus('PENDING')\">\n                                        <mat-icon>pending</mat-icon>\n                                        PENDING\n                                      </button>\n                \n                                      <!-- Button for VERIFIED status -->\n                                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                                            class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                                            <mat-icon>check_circle</mat-icon>\n                                            VERIFIED\n                                          </button> -->\n                \n                                      <!-- Button for APPROVED status -->\n                                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                        <mat-icon>thumb_up</mat-icon>\n                                        APPROVED\n                                      </button>\n                                      <!-- Button for RETURNED status -->\n                                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                        <mat-icon>reply</mat-icon>\n                                        RETURNED\n                                      </button>\n                \n                                      <!-- Button for REJECTED status -->\n                                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                        <mat-icon>cancel</mat-icon>\n                                        REJECTED\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n                            <!-- Table Definition -->\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <!-- Select Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Id -->\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"table-img tbl-col-width-per-9\">\n                                        Id\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">\n                                        {{row.id}}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"itemCategoryCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>\n                                       Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\">\n                                        {{row.itemCategoryCode}}\n                                    </mat-cell>\n                                </ng-container>\n                                <!-- Category Name -->\n                                <ng-container matColumnDef=\"categoryName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>\n                                        Category Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\">\n                                        {{row.categoryName}}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!--  Remarks  -->\n                                <ng-container matColumnDef=\"remarks\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header>\n                                        Remarks\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\">\n                                        {{row.remarks}}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Status -->\n                                <!-- <ng-container matColumnDef=\"status\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                      class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                      Status\n                    </mat-header-cell>\n                      <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                        (click)=\"$event.stopPropagation()\">\n                        <ng-container [ngSwitch]=\"row.status\">\n                          <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                            <i class=\"fas fa-times-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                            <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                        </ng-container>\n                      </mat-cell>\n                  </ng-container> -->\n\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                                        <!-- Edit Button -->\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"editCategory(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-eye'\"\n                                                matTooltip=\"Edit\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <!-- View Button -->\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"viewCategory(row)\" class=\"tbl-action-btn\" matTooltip=\"View\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <!-- Delete Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteCategory(row.id)\" class=\"tbl-action-btn\"\n                                            matTooltip=\"Delete\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                                    (click)=\"viewPaymentMethod(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"4\">\n                                    No data matching the filter \"{{input.value}}\"\n                                </mat-cell>\n                            </mat-table>\n\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpParams } from \"@angular/common/http\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, Observable, takeUntil } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { PaymentMethodService } from \"src/app/erp-finance/data/services/payment-method.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport * as XLSX from \"xlsx\";\nimport { AssetService } from 'src/app/erp-fixedassets/data/services/asset.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { AssetCategorieService } from 'src/app/erp-fixedassets/data/services/asset-categories.service';\n\n\n@Component({\n  selector: 'app-manage-asset-categories',\n  templateUrl: './manage-asset-categories.component.html',\n  styleUrls: ['./manage-asset-categories.component.sass']\n})\nexport class ManageAssetCategoriesComponent implements OnInit {\n  // ****************************************************************************************************************************\n  //table columns\n  displayedColumns: string[] = [\"categoryName\", \"remarks\"];\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  hideApprovals = false;\n\n  //excel columns\n  excelHeaderRef: any[] = [\"categoryName\", \"remarks\"];\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private tokenStorageService: TokenStorageService,\n    private accessControlService: AccessControlService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private paymentMethodManService: PaymentMethodService,\n    private assetCategorieService: AssetCategorieService\n\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n    console.log(\"this.currentUser :\", this.currentUser);\n  }\n\n  // ****************************************************************************************************************************\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        this.id = params[\"id\"];\n        this.getDataById();\n\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.assetCategorieService\n      .getCategoriesById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            this.showForm = true;\n            this.getPage();\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      // id: [\"\"],\n      categoryName: [\"\", [Validators.required]],\n      remarks: [\"\", [Validators.required]],\n    });\n  }\n  // \"itemCategoryCode\": \"string\",\n  // \"categoryName\": \"string\",\n  // \"remarks\": \"string\"\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      categoryName: [this.formData.categoryName, [Validators.required]],\n      remarks: [this.formData.remarks, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      categoryName: [{ value: this.formData.categoryName, disabled: true }, [Validators.required],\n      ],\n      remarks: [{ value: this.formData.remarks, disabled: true }, [Validators.required],\n      ],\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel(): void {\n    this.router.navigate([\n      \"/erp-fixed-assets/fixed-assets-parameters/assets-categories\",\n    ]);\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\"Excel data :\", this.items);\n\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        categoryName: [item.categoryName, [Validators.required]],\n        remarks: [item.remarks, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  hasErrors(): boolean {\n    return this.itemErrors && this.itemErrors.length > 0;\n  }\n\n  private readonly templateFilename = \"AssetCategoriesTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n  // submit button function\n  posting: boolean = false;\n  submit() {\n    console.log(\"data::::\", this.mngForm.value);\n    let uploadData = this.mngForm.value;\n    console.log(\"data to be submitted: \", uploadData);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.assetCategorieService\n        .addCategories(uploadData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode === 201) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-fixed-assets/fixed-assets-parameters/assets-categories\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      const params = new HttpParams().set(\"id\", this.id);\n      console.log(\"data to be updated: \", this.mngForm.value);\n      this.assetCategorieService\n        .updateCategories(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"RESPONSE::::\", res);\n\n            if (res.statusCode === 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-fixed-assets/fixed-assets-parameters/assets-categories\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  submitBatch() {\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.assetCategorieService\n        .addBulkCategories(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-fixed-assets/fixed-assets-parameters/assets-categories\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            console.log(\"err :\", err);\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Manage Asset Categories'\" [items]=\"['Asset Categories']\"\n                [active_item]=\"'Manage Asset Categories'\">\n            </app-breadcrumb>\n        </div>\n\n        <div class=\"row clearfix row m-t-25\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"body\" *ngIf=\"showForm\">\n\n                        <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                              <div class=\"card bg-color\">\n                                <div class=\"chat\">\n                                  <div class=\"chat-header clearfix\">\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                                        <div class=\"chat-about\">\n                                          <div class=\"chat-with\">Posted By</div>\n                                          <div class=\"chat-num-messages mt-2\">\n                                            <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                              {{ formData.postedBy }}\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                                        <div class=\"chat-about\">\n                                          <div class=\"chat-with\">Posted Date</div>\n                                          <div class=\"chat-num-messages mt-2\">\n                                            <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                              {{ formData.postedTime | date : \"medium\" }}\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n              \n                                      <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                                        <div class=\"chat-about\">\n                                          <div class=\"chat-with\">Verified By</div>\n                                          <div class=\"chat-num-messages mt-2\">\n                                            <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                              {{ formData.verifiedBy }}\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                                        <div class=\"chat-about\">\n                                          <div class=\"chat-with\">Verification Date</div>\n                                          <div class=\"chat-num-messages mt-2\">\n                                            <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                              {{ formData.verifiedTime | date : \"medium\" }}\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div class=\"row\">\n                                      <div class=\"col-12\">\n                                        <div class=\"chat-about mt-2 remarks-container\">\n                                          <div class=\"chat-with\">Verifier Remarks</div>\n                                          <div class=\"chat-num-messages mt-2\">\n                                            <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                              {{ formData.verifierRemarks }}\n                                            </div>\n                                          </div>\n                                        </div>\n                                        <!-- <div class=\"chat-about mt-2 remarks-container\">\n                                            <div class=\"chat-with remarks\">\n                                              <strong>Approvers Remarks:</strong>\n                                              <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                                            </div>\n                                          </div> -->\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                        <div class=\"mx-2\" col>\n                            <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                                <mat-tab label=\"{{pageFunction | uppercase}} ASSET CATEGORY\">\n                                    <div class=\"row clearfix mx-2\">\n                                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n\n                                            <div class=\"header\">\n                                                <div class=\"row\">\n                                                    <h2>\n                                                        {{ pageFunction }} Asset Category\n                                                    </h2>\n                                                </div>\n                                            </div>\n\n                                            <div>\n\n                                                <form class=\"mx-4\" [formGroup]=\"mngForm\">\n                                                    <div class=\"row\">\n\n\n                                                        <!-- Asset Category-->\n                                                        <div class=\"col-xl-6 col-lg-46col-md-12 col-sm-12 mb-3\">\n                                                            <mat-form-field class=\"example-full-width mb-3\"\n                                                                appearance=\"outline\">\n                                                                <mat-label>\n                                                                    Asset Category\n                                                                </mat-label>\n                                                                <input matInput formControlName=\"categoryName\" />\n                                                                <mat-error\n                                                                    *ngIf=\"mngForm.get('categoryName').hasError('required')\">\n                                                                    The Asset Category is required\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n                                                        <!-- Remarks  -->\n                                                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                                                            <mat-form-field class=\"example-full-width mb-3\"\n                                                                appearance=\"outline\">\n                                                                <mat-label>\n                                                                    Remarks\n                                                                </mat-label>\n                                                                <input matInput formControlName=\"remarks\" />\n                                                                <mat-error\n                                                                    *ngIf=\"mngForm.get('remarks').hasError('required')\">\n                                                                    Remarks is required\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n\n                                                    </div>\n\n                                                    <!-- Action Buttons -->\n                                                    <div class=\"row\">\n                                                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                                                            <div mat-dialog-action [align]=\"'end'\">\n                                                                <button class=\"btn-space\" type=\"button\"\n                                                                    mat-raised-button color=\"warn\" mat-button\n                                                                    (click)=\"cancel()\">\n                                                                    Cancel\n                                                                </button>\n                                                                <button mat-raised-button color=\"primary\"\n                                                                    [hidden]=\"hideSubmit\" [class.auth-spinner]=\"posting\"\n                                                                    [disabled]=\"!mngForm.valid || posting\"\n                                                                    (click)=\"submit()\">\n                                                                    {{ pageFunction }} Asset Category\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </form>\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </mat-tab>\n\n                                <!-- <mat-tab label=\"UPLOAD MULTIPLE ASSET CATEGORIES\" *ngIf=\"pageFunction === 'Add'\">\n                                    <div [hidden]=\"hideSubmit\">\n                                        <div class=\"row clearfix mx-2\">\n                                            <div class=\"mt-4\">\n                                                <div class=\"row clearfix\">\n                                                    <h5>Upload Excel File</h5>\n                                                </div>\n                                                <div class=\"row align-items-center\">\n                                                    <div class=\"col-xl-10 col-lg-11 col-md-8 col-sm-6\">\n                                                        <app-file-upload\n                                                            (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                                                    </div>\n                                                    <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                                                        <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                                                            (click)=\"downloadTemplate()\">\n                                                            <i class=\"fa fa-download\"></i> Excel Template\n                                                        </button>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"mt-4 mx-0\">\n                                                    <div style=\"display: flex; flex-wrap: wrap; margin-right: 10px; margin-bottom: 10px;\">\n                                                        <mat-chip-list aria-label=\"Fish selection\">\n                                                            <mat-chip color=\"accent\" selected *ngFor=\"let itemError of itemErrors; let i = index\">\n                                                                <span>{{ i + 1 }}. </span>\n                                                                {{ itemError.field }}: {{ itemError.message }}\n                                                                <mat-icon>error</mat-icon>\n                                                            </mat-chip>\n                                                        </mat-chip-list>\n                                                    </div>\n\n                                                    <div class=\"card\">\n                                                        <div class=\"header\">\n                                                            <h2>Asset Categories</h2>\n                                                        </div>\n                                                        <div class=\"tableBody\">\n                                                            <div class=\"table-responsive\">\n                                                                <table class=\"table table-hover\">\n                                                                    <thead>\n                                                                        <tr>\n                                                                            <th>Category Name</th>\n                                                                            <th>Remarks</th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        <tr *ngFor=\"let item of items\">\n                                                                            <td>{{ item.categoryName }}</td>\n                                                                            <td>{{ item.remarks }}</td>\n                                                                        </tr>\n                                                                    </tbody>\n                                                                </table>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <br>\n                                    <div class=\"row mx-4 mt-4\">\n                                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                                            <div mat-dialog-action [align]=\"'end'\">\n                                                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\"\n                                                    mat-button (click)=\"cancel()\">\n                                                    Cancel\n                                                </button>\n                                                <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                                                    [class.auth-spinner]=\"posting\" [disabled]=\"hasErrors() || !items.length\"\n                                                    (click)=\"submitBatch()\">\n                                                    Submit Batch\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </mat-tab> -->\n                            </mat-tab-group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { AssetCatalogueService } from 'src/app/erp-fixedassets/data/services/asset-catalogue.service';\nimport { CatalogueManagementService } from 'src/app/erp-inventory/data/services/catalogue-management.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-all-asset-catalogue',\n  templateUrl: './all-asset-catalogue.component.html',\n  styleUrls: ['./all-asset-catalogue.component.sass']\n})\nexport class AllAssetCatalogueComponent implements OnInit {\n\n  // displayedColumns: string[] =\n  // [\n  //   'id',\n  //   'itemCode',\n  //   'name',\n  //   'itemCategory',\n  //   'quantity',     \n  //   'accountName' ,\n  //   'accountNumber',\n\n  //   'action'\n  // ];\n\n  displayedColumns: string[] = ['select', 'id', 'assetCode', 'name', 'quantity', 'category', 'description', 'unit', 'expenseCode', 'action'];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  Form: FormGroup\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private assetCatalogueService: AssetCatalogueService,\n    private accessControlService: AccessControlService,\n    private fb: FormBuilder\n\n  ) { }\n\n  ngOnInit(): void {\n\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n    this.getData();\n\n\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  //************************************************************************* */\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n    this.assetCatalogueService.getCataloguesByStatus(params).pipe(takeUntil(this.destroy$)).subscribe(\n      {\n        next: (res) => {\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n\n  addCatalogueCall() {\n    this.router.navigate([\"/erp-fixed-assets/fixed-assets-parameters/manage-asset-catalogue\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n\n  editCatalogue(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"mm\", data)\n\n    let route = '/erp-fixed-assets/fixed-assets-parameters/manage-asset-catalogue';\n    this.router.navigate([route], { queryParams: { id: data.id, additionalData: serializedData, action: 'Update' } });\n  }\n  viewCatalogue(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = '/erp-fixed-assets/fixed-assets-parameters/manage-asset-catalogue';\n    this.router.navigate([route], { queryParams: { id: data.id, additionalData: serializedData, action: 'View' } });\n  }\n\n  delete(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This cost centre will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this cost centre \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = {id: id}\n        this.assetCatalogueService\n          .deleteCataloguesTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n              } else{\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    this.isLoading = true\n    let privilege = \"Dashboard\";\n    //Validate CostCenters\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FixedAssetsModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.assetCatalogueService\n            .validateCatalogue(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n                this.isLoading = false\n\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header body\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Item in Catalogue'\" [items]=\"['Catalogue Items']\"\n                [active_item]=\"'All Items in Catalogue'\" class=\"bg-table-header\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card bg-card mat-elevation-z0\">\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                  <div class=\"col-8\">\n                                    <ul class=\"header-buttons-left ms-0\">\n                                      <li class=\"dropdown\">\n                                        <h2>Catalogue Items</h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                                      </li>\n                                      <li>\n                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                          <button mat-mini-fab color=\"primary\" (click)=\"addCatalogueCall()\">\n                                            <mat-icon class=\"col-white\">add</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <!-- Container element with *ngIf condition -->\n                                      <li *ngIf=\"selection.selected.length > 0\">\n                                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                                            class=\"mat-button-custom\">\n                                            <mat-icon class=\"col-white\">check</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li *ngIf=\"selection.selected.length > 0\">\n                                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                                            class=\"mat-button-custom\">\n                                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li *ngIf=\"selection.selected.length > 0\">\n                                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                                            class=\"mat-button-custom\">\n                                            <mat-icon class=\"col-white\">undo</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n                                  <div class=\"col-4\">\n                                    <ul class=\"header-buttons\">\n                                      <li>\n                                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n                \n                              <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                  <div class=\"col-2\">\n                                    <form [formGroup]=\"Form\">\n                                      <!-- <div class=\"row\">\n                                            <div class=\"col-4\"> -->\n                                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                        <mat-label>Status</mat-label>\n                \n                                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                                            }}\n                                          </mat-option>\n                                        </mat-select>\n                \n                                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                          Please select Status\n                                        </mat-error>\n                                      </mat-form-field>\n                                      <!-- </div>\n                    \n                                          </div> -->\n                                    </form>\n                                  </div>\n                                  <div class=\"col-10\">\n                                    <div class=\"button-container mt-1\">\n                                      <!-- Button for PENDING status -->\n                                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                                        (click)=\"getSelectedStatus('PENDING')\">\n                                        <mat-icon>pending</mat-icon>\n                                        PENDING\n                                      </button>\n                \n                                      <!-- Button for VERIFIED status -->\n                                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                                            class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                                            <mat-icon>check_circle</mat-icon>\n                                            VERIFIED\n                                          </button> -->\n                \n                                      <!-- Button for APPROVED status -->\n                                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                        <mat-icon>thumb_up</mat-icon>\n                                        APPROVED\n                                      </button>\n                                      <!-- Button for RETURNED status -->\n                                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                        <mat-icon>reply</mat-icon>\n                                        RETURNED\n                                      </button>\n                \n                                      <!-- Button for REJECTED status -->\n                                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                        <mat-icon>cancel</mat-icon>\n                                        REJECTED\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                                #exporter=\"matTableExporter\">\n\n                                <!-- Select Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- id -->\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"> Id </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"> {{row.id}} </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"assetCode\">\n                                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"column-nowrap psl-3 tbl-col-width-per-10\"> AssetCode </mat-header-cell>\n                                  <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                      class=\"column-nowrap psl-3 tbl-col-width-per-10\"> {{row.assetCode}} </mat-cell>\n                              </ng-container>\n                                \n                                <!-- name -->\n                                <ng-container matColumnDef=\"name\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Name </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.name}} </mat-cell>\n                                </ng-container>\n\n                                <!-- quantity -->\n                                <ng-container matColumnDef=\"quantity\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Quantity </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.quantity}} </mat-cell>\n                                </ng-container>\n\n                                <!-- category -->\n                                <ng-container matColumnDef=\"category\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Category </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.category}} </mat-cell>\n                                </ng-container>\n                                <!-- description -->\n                                <ng-container matColumnDef=\"description\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Description </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.description}}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- unit -->\n                                <ng-container matColumnDef=\"unit\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Unit </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.unit}} </mat-cell>\n                                </ng-container>\n\n                                <!-- expenseCode -->\n                                <ng-container matColumnDef=\"expenseCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Expense Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.expenseCode}}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-40\" *matHeaderCellDef\n                                        class=\"end-col mat-elevation-z0\"> Action </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"editCatalogue(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\"\n                                                [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                        </button>\n\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"viewCatalogue(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button>\n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"delete(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewCatalogue(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"\n                                </mat-cell>\n                            </mat-table>\n\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\"></mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { AssetCatalogueService } from 'src/app/erp-fixedassets/data/services/asset-catalogue.service';\nimport { CatalogueManagementService } from 'src/app/erp-inventory/data/services/catalogue-management.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-asset-catalogue-lookup',\n  templateUrl: './asset-catalogue-lookup.component.html',\n  styleUrls: ['./asset-catalogue-lookup.component.sass']\n})\nexport class AssetCatalogueLookupComponent implements OnInit {\n  // displayedColumns: string[] = [\"select\", \"itemCode\", \"name\", \"itemCategory\"];\n  displayedColumns: string[] = ['select', , 'name', 'category', 'description'];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  catalogueDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private assetCatalogueService: AssetCatalogueService,\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.action === \"single item\") {\n      this.selection = new SelectionModel<any>(false, []);\n    }\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    this.assetCatalogueService\n      .getCatalogues()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode == 200) {\n            this.data = res.entity;\n\n            this.catalogueDetails = res.entity;\n\n            this.expenseArray = this.data.selected;\n\n            this.dataSource = new MatTableDataSource<any>(this.catalogueDetails);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n          }\n          else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n        <div class=\"mb-3\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n        <div class=\"modalHeader\">\n            <div class=\"contact-details-name mb-1\">Select Catalogue Item</div>\n            <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <mat-card-content>\n                <div *ngIf=\"isLoading\">\n                    <div class=\"d-flex justify-content-center\">\n                        <img src=\"assets/images/loading.gif\"\n                            style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                    </div>\n                </div>\n                <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-2 mx-3\" style=\"background-color: rgba(219, 218, 218, 0.836);\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n  \n\n\n                        <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                            #exporter=\"matTableExporter\">\n\n                            <!-- name -->\n                            <ng-container matColumnDef=\"name\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Name </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.name}} </mat-cell>\n                            </ng-container>\n\n                            <!-- quantity -->\n                            <ng-container matColumnDef=\"quantity\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Quantity </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.quantity}} </mat-cell>\n                            </ng-container>\n\n                            <!-- category -->\n                            <ng-container matColumnDef=\"category\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Category </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.category}} </mat-cell>\n                            </ng-container>\n\n                            <!-- description -->\n                            <ng-container matColumnDef=\"description\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Description </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.description}} </mat-cell>\n                            </ng-container>\n\n                            <!-- unit -->\n                            <ng-container matColumnDef=\"unit\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Unit </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.unit}} </mat-cell>\n                            </ng-container>\n\n                            <!-- expenseCode -->\n                            <ng-container matColumnDef=\"expenseCode\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> Expense Code </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\"> {{row.expenseCode}} </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"action\">\n                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-40\" *matHeaderCellDef\n                                    class=\"end-col mat-elevation-z0\"> Action </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"editCatalogue(row)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                    </button>\n\n                                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"viewCatalogue(row)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                    </button>\n\n                                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"deleteCatalogue(row.id)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'trash-2'\"\n                                            [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewCatalogue(row)\"\n                                [style.cursor]=\"'pointer'\" matRipple>\n                            </mat-row>\n                            <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"\n                            </mat-cell>\n                        </mat-table>\n\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                            <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                            </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                            aria-label=\"Select page of users\"></mat-paginator>\n                    </div>\n                </div>\n            </mat-card-content>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { ExpenseLookupComponent } from 'src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component';\nimport { GlsLookupComponent } from 'src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component';\nimport { AssetAccountsComponent } from 'src/app/erp-fixedassets/data/lookups/asset-accounts/asset-accounts.component';\nimport { AssetCategoriesLookupComponent } from 'src/app/erp-fixedassets/data/lookups/asset-categories-lookup/asset-categories-lookup.component';\nimport { AssetCatalogueService } from 'src/app/erp-fixedassets/data/services/asset-catalogue.service';\nimport { CategoryLookupComponent } from 'src/app/erp-inventory/data/lookups/category-lookup/category-lookup.component';\nimport { UnitsOfMeausureLookupComponent } from 'src/app/erp-inventory/data/lookups/units-of-meausure-lookup/units-of-meausure-lookup.component';\nimport { CatalogueManagementService } from 'src/app/erp-inventory/data/services/catalogue-management.service';\nimport { ItemCategoryService } from 'src/app/erp-inventory/data/services/item-category.service';\nimport { MainstoreService } from 'src/app/erp-inventory/data/services/mainstore.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-asset-catalogue',\n  templateUrl: './asset-catalogue.component.html',\n  styleUrls: ['./asset-catalogue.component.sass']\n})\nexport class AssetCatalogueComponent implements OnInit {\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  suppliercategoryId: any;\n  hideSubmit = false;\n\n  units: string[] = ['Kilograms', 'Boxes', 'Grams', 'Litres', 'Metres'];\n  categories: any;\n  ageClasses: string[] = ['New', 'Old', 'obsolete', 'refurbished'];\n  statuses: string[] = ['Available', 'Out of stock'];\n  data: any;\n  isLoading: boolean;\n  dataSource: any;\n  paginator: any;\n  sort: any;\n\n  totalCost: number = 0;\n\n\n  mainstores: any;\n\n  //this.formData.totalCost = (this.formData.unit* this.formData.unitCost)\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private assetCatalogueService: AssetCatalogueService,\n    private dialog: MatDialog,\n\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n    this.route.queryParams.subscribe((params) => {\n      console.log\n        (\"res\", params)\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n        this.suppliercategoryId = params[\"id\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n        this.formData = additionalData;\n        this.getPage();\n      }\n    });\n  }\n\n  //************************************************************************************************************************** */\n  //category Look upany \n  selectedItem: any[] = [];\n  categoryName: any;\n  categoryLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\"\n    dialogConfig.data =\n    {\n      action: \"view category\",\n      selected: this.selectedItem,\n    }\n    const dialogRef = this.dialog.open(AssetCategoriesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"categories: \", result)\n      result.data.forEach(element => {\n        this.mngForm.patchValue(\n          {\n            category: element.itemCategoryCode,\n\n          }\n        )\n      });\n    });\n\n  }\n  selectedAssetCategory: any[] = [];\n  assetCategoryLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"900px\";\n    dialogConfig.data = {\n      action: \"Single Asset Category\",\n      selected: this.selectedAssetCategory,\n    };\n    const dialogRef = this.dialog.open(AssetAccountsComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        this.mngForm.patchValue({\n          category: element.itemCategoryCode,\n        });\n      });\n    });\n  }\n\n\n\n  selectedGlItem: any[] = [];\n  _glsLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View GL Accounts\",\n      selected: this.selectedItem,\n      type: \"Expense\"\n    }\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach(element => {\n        this.mngForm.patchValue({\n          accountName: element.accountID,\n          accountNumber: element.description,\n        })\n      });\n    });\n  }\n\n\n  expenseIsSelected = false;\n  selectedExpense: [] = [];\n  expenseArray: [] = [];\n  expenseGlCode = \"\";\n\n  expenseLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpense,\n    };\n\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        expenseCode: result.data[0].expenseCode,\n\n      });\n    });\n  }\n\n  //************************************************************************************************************************** */\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  getPage(): void {\n    console.log(\"RES\", this.formData)\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n    }\n  }\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      name: [\"\", [Validators.required]],\n      quantity: [\"\", [Validators.required]],\n      category: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required]],\n      unit: [\"\", [Validators.required]],\n      expenseCode: [\"\", [Validators.required]],\n\n    });\n  }\n\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      assetCode: [this.formData.assetCode],\n      id: [this.formData.id],\n      name: [this.formData.name, [Validators.required]],\n      quantity: [this.formData.quantity, [Validators.required]],\n      category: [this.formData.category, [Validators.required]],\n      description: [this.formData.description, [Validators.required]],\n      unit: [this.formData.unit, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n\n    });\n  }\n\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      name: [{ value: this.formData.name, disabled: true }],\n      quantity: [{ value: this.formData.quantity, disabled: true }],\n      category: [{ value: this.formData.category, disabled: true }],\n      description: [{ value: this.formData.description, disabled: true }],\n      unit: [{ value: this.formData.unit, disabled: true }],\n      expenseCode: [{ value: this.formData.expenseCode, disabled: true }],\n\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/erp-fixed-assets/fixed-assets-parameters/all-asset-catalogues\"]);\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n    if (selectedDate <= today) {\n      return { pastDate: true };\n    }\n    return null;\n  }\n\n  //******************************************************************************************************************* */\n\n\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.isLoading = true\n    if (this.pageFunction === \"Add\") {\n      this.assetCatalogueService\n        .addCatalogues(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n\n            console.log(\"resres: \", res);\n\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Item Added Successfully\");\n              this.router.navigate([\"/erp-fixed-assets/fixed-assets-parameters/all-asset-catalogues\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.isLoading = false\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.assetCatalogueService\n        .updateCatalogues(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res.status, \", res)\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Item Updated Successfully\");\n              this.router.navigate([\"/erp-fixed-assets/fixed-assets-parameters/all-asset-catalogues\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => { this.isLoading = false },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n      <div class=\"block-header\">\n        <!-- breadcrumb -->\n        <app-breadcrumb [title]=\"'Manage Master Catalogue'\" [items]=\"[' Master Catalogue']\"\n          [active_item]=\"'Manage  Master Catalogue'\">\n        </app-breadcrumb>\n      </div>\n      <div class=\"row clearfix\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n          <div class=\"card\">\n            <div class=\"header\">\n              <div class=\"row\">\n                <h2>{{ pageFunction }} Item Catalogue </h2>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12\">\n              </div>\n            </div>\n            <div class=\"body\">\n              <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                  <div class=\"card bg-color\">\n                    <div class=\"chat\">\n                      <div class=\"chat-header clearfix\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                            <div class=\"chat-about\">\n                              <div class=\"chat-with\">Posted By</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                  {{ formData.postedBy }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                            <div class=\"chat-about\">\n                              <div class=\"chat-with\">Posted Date</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                  {{ formData.postedTime | date : \"medium\" }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n  \n                          <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                            <div class=\"chat-about\">\n                              <div class=\"chat-with\">Verified By</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                  {{ formData.verifiedBy }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                            <div class=\"chat-about\">\n                              <div class=\"chat-with\">Verification Date</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                  {{ formData.verifiedTime | date : \"medium\" }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-12\">\n                            <div class=\"chat-about mt-2 remarks-container\">\n                              <div class=\"chat-with\">Verifier Remarks</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                  {{ formData.verifierRemarks }}\n                                </div>\n                              </div>\n                            </div>\n                            <!-- <div class=\"chat-about mt-2 remarks-container\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Approvers Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                                </div>\n                              </div> -->\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n                <form class=\"m-4\" [formGroup]=\"mngForm\">\n                    <div class=\"row\">\n                  \n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\">Name</mat-label>\n                          <input matInput formControlName=\"name\" />\n                          <mat-error *ngIf=\"mngForm.get('name').hasError('required')\">Name is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                  \n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\">Quantity</mat-label>\n                          <input type=\"number\" matInput formControlName=\"quantity\" />\n                          <mat-error *ngIf=\"mngForm.get('quantity').hasError('required')\">Quantity is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                  \n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\">Category</mat-label>\n                          <input matInput formControlName=\"category\" />\n                          <mat-icon matSuffix (click)=\"categoryLookUp()\">search</mat-icon>\n                          <mat-error *ngIf=\"mngForm.get('category').hasError('required')\">Category is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                  \n                      \n                  \n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\">Unit</mat-label>\n                          <input matInput formControlName=\"unit\" />\n                          <mat-error *ngIf=\"mngForm.get('unit').hasError('required')\">Unit is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                  \n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label>ExpenseCode</mat-label>\n                          <input matInput formControlName=\"expenseCode\" />\n                          <mat-icon matSuffix (click)=\"expenseLookUp()\">search</mat-icon>\n                          <mat-error *ngIf=\"mngForm.get('expenseCode').hasError('required')\">ExpenseCode is\n                            required</mat-error>\n                        </mat-form-field>\n                      </div>\n\n                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\">Description</mat-label>\n                          <textarea matInput formControlName=\"description\"></textarea>\n                          <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">Description is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                  \n                    </div>\n                  \n                    <div class=\"row\">\n                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                        <div mat-dialog-action [align]=\"'end'\">\n                          <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                            Cancel\n                          </button>\n                          <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"isLoading\" [disabled]=\"!mngForm.valid || isLoading\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                            Submit\n                          </button>\n                  \n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                  \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>"],"names":[],"sourceRoot":"webpack:///"}