{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/data/services/account.service.ts","./src/app/account/pages/update-profile/update-profile.component.ts","./src/app/account/pages/update-profile/update-profile.component.html","./src/app/core/service/token-storage.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UpdateProfileComponent } from './pages/update-profile/update-profile.component';\n\nconst routes: Routes = [\n  {\n    path: \"update-profile\",\n    component: UpdateProfileComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { UpdateProfileComponent } from './pages/update-profile/update-profile.component';\nimport { ComponentsModule } from '../shared/components/components.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    UpdateProfileComponent\n  ],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    ComponentsModule,\n    SharedModule,\n    MatTabsModule,\n    MatCheckboxModule\n  ]\n})\nexport class AccountModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nimport { User } from \"../types/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AccountService {\n  constructor(private http: HttpClient) {}\n\n \n  // /soa/otherusers/find/{id}\n  getUserById(userId): Observable<User> {\n    const getUserByIdUrl = `${environment.baseUrlAdmin}/soa/otherusers/find/${userId}`;\n\n    return this.http.get<User>(getUserByIdUrl);\n  }\n\n\n\n\n  updateProfile(profileBody):Observable<{message:string}>{\n    const updatePasswordUrl = `${environment.baseUrlAdmin}/soa/otherusers/updateprofile`;\n\n    return this.http.put<{message: string}>(updatePasswordUrl, profileBody)\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { takeUntil } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { BaseComponent } from \"src/app/shared/components/base/base.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { AccountService } from \"../../data/services/account.service\";\nimport { User } from \"../../data/types/user\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"src/app/core/service/auth.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-update-profile\",\n  templateUrl: \"./update-profile.component.html\",\n  styleUrls: [\"./update-profile.component.scss\"],\n})\nexport class UpdateProfileComponent extends BaseComponent implements OnInit {\n  hide = true;\n  userId: number;\n  user: User;\n  updatePasswordForm: FormGroup;\n  profilePicForm: FormGroup;\n\n  currentUser: any;\n  constructor(\n    private fb: FormBuilder,\n    private accountService: AccountService,\n    private snackbar: SnackbarService,\n    private tokenStorage: TokenStorageService,\n    private router: Router,\n    private authService: AuthService //private userService: UserService\n  ) {\n    super();\n    this.currentUser = this.tokenStorage.getUser();\n    console.log(\"this.tokenStorage.getUser(): \", this.tokenStorage.getUser());\n  }\n\n  //   {\n  //   \"confirmPassword\": \"string\",\n  //   \"emailAddress\": \"string\",\n  //   \"password\": \"string\"\n  // }\n\n  ngOnInit(): void {\n    this.getProfileImage();\n    // Password must contain at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special character (As defined by the REGEX Below)\n    // The password defined must be have between 10 - 25 characters\n    this.updatePasswordForm = this.fb.group({\n      emailAddress: [this.currentUser.email, [Validators.required]],\n      // currentPassword: [\"\", [Validators.required]],\n      password: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n          ),\n          Validators.minLength(10),\n          Validators.maxLength(25),\n        ],\n      ],\n\n      confirmPassword: [\n        \"\",\n        [\n          Validators.required,\n          Validators.pattern(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n          ),\n          Validators.minLength(10),\n          Validators.maxLength(25),\n        ],\n      ],\n    });\n\n    this.profilePicForm = this.fb.group({\n      empPf: [this.currentUser.empPfNo, [Validators.required]],\n      imageFile: [\"\", [Validators.required]],\n    });\n  }\n\n  updatePassword() {\n    console.log(this.updatePasswordForm.value);\n    if (\n      this.updatePasswordForm.value.password !==\n      this.updatePasswordForm.value.confirmPassword\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Passwords don't match, Please check and retry!\"\n      );\n    } else {\n      this.authService\n        .updatePassword(this.updatePasswordForm.value)\n        .pipe(takeUntil(this.subject))\n        .subscribe(\n          (res) => {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n            console.log(res);\n\n            this.router.navigate([\"/erp-dashboard/main\"]);\n          },\n          (err) => {\n            console.log(err);\n\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          }\n        );\n    }\n  }\n\n\n  profileImage: string | ArrayBuffer | null = null;\n\n  getProfileImage() {\n    let params = {\n      empPf: this.currentUser.empPfNo,\n    };\n    this.authService\n      .getUserProfileImage(params)\n      .pipe(takeUntil(this.subject))\n      .subscribe(\n        (res) => {\n          this.snackbar.showNotification(\"snackbar-success\", res.message);\n\n          if (res.entity.imageFile) {\n            this.profileImage = res.entity.imageFile;\n          }\n        },\n        (err) => {\n          console.log(err);\n\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        }\n      );\n  }\n\n  // uploadProfileImage() {\n  //   this.authService\n  //     .postProfileImage(this.updatePasswordForm.value)\n  //     .pipe(takeUntil(this.subject))\n  //     .subscribe(\n  //       (res) => {\n  //         this.snackbar.showNotification(\"snackbar-success\", res.message);\n  //         console.log(res);\n\n  //         this.getProfileImage();\n  //       },\n  //       (err) => {\n  //         console.log(err);\n\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       }\n  //     );\n  // }\n\n  //************************************************************************************* */\n\n\n  // file_name = \"\";\n  // base64File: string;\n  // onFileSelected(event: any) {\n  //   const file: File = event.target.files[0];\n  //   const reader = new FileReader();\n\n  //   reader.onloadend = () => {\n  //     this.base64File = reader.result as string;\n  //     this.file_name = file.name;\n  //     this.profileImage = this.base64File;\n  //     this.profilePicForm.patchValue({\n  //       imageFile: this.base64File,\n  //     });\n  //   };\n\n  //   if (file) {\n  //     reader.readAsDataURL(file);\n  //   }\n\n  //   Swal.fire({\n  //     title: \"Change Profile Image?\",\n  //     text: \"Are you sure you want to change your profile image?\",\n  //     icon: \"question\",\n  //     showCancelButton: true,\n  //     confirmButtonText: \"Yes\",\n  //     cancelButtonText: \"No\",\n  //   }).then((result) => {\n  //     if (result.isConfirmed) {\n  //       this.uploadProfileImage();\n  //     }\n  //   });\n  // }\n\n  file_name = \"\";\n  base64File: string;\n  onFileSelected(event: any) {\n    const file: File = event.target.files[0];\n\n    // Check if a file was selected\n    if (!file) {\n      // Handle case when no file is selected\n      Swal.fire(\"Error\", \"Please select an image file.\", \"error\");\n      return;\n    }\n\n    // Check if the selected file is an image\n    if (!file.type.startsWith(\"image/\")) {\n      // Handle case when selected file is not an image\n      Swal.fire(\"Error\", \"Please select an image file.\", \"error\");\n      return;\n    }\n\n    // Create a new image object to check dimensions\n    const img = new Image();\n    img.src = window.URL.createObjectURL(file);\n\n    img.onload = () => {\n      // Check dimensions (e.g., width and height)\n      const minWidth = 100; // Example minimum width\n      const minHeight = 100; // Example minimum height\n      const requiredResolution = 300; // Example required resolution\n\n      if (img.width < minWidth || img.height < minHeight) {\n        // Handle case when image dimensions are not met\n        Swal.fire(\"Error\", \"Image dimensions are too small.\", \"error\");\n        return;\n      }\n\n      // Additional checks for resolution\n      const resolution = img.width * img.height;\n      if (resolution < requiredResolution) {\n        // Handle case when image resolution is not met\n        Swal.fire(\"Error\", \"Image resolution is too low.\", \"error\");\n        return;\n      }\n\n      // Proceed with reading the file\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.base64File = reader.result as string;\n        this.file_name = file.name;\n        this.profileImage = this.base64File;\n        this.profilePicForm.patchValue({\n          imageFile: this.base64File,\n        });\n\n        // Show confirmation dialog after validating the image\n        Swal.fire({\n          title: \"Change Profile Image?\",\n          text: \"Are you sure you want to change your profile image?\",\n          icon: \"question\",\n          showCancelButton: true,\n          confirmButtonText: \"Yes\",\n          cancelButtonText: \"No\",\n        }).then((result) => {\n          if (result.isConfirmed) {\n            this.uploadProfileImage();\n          }\n        });\n      };\n\n      // Read the file as a data URL\n      reader.readAsDataURL(file);\n    };\n\n    img.onerror = () => {\n      // Handle case when image loading fails\n      Swal.fire(\"Error\", \"Failed to load the image.\", \"error\");\n    };\n  }\n\n\n  uploadProfileImage() {\n    console.log(\"this.profilePicForm: \", this.profilePicForm.value);\n\n    this.authService\n      .postProfileImage(this.profilePicForm.value)\n      .pipe(takeUntil(this.subject))\n      .subscribe(\n        (res: any) => {\n          this.snackbar.showNotification(\"snackbar-success\", res.message);\n          console.log(res);\n          this.getProfileImage();\n        },\n        (err) => {\n          console.log(err);\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        }\n      );\n  }\n\n  // Helper function to convert base64 to Blob\n  // dataURItoBlob(dataURI: string) {\n  //   const byteString = atob(dataURI.split(',')[1]);\n  //   const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n  //   const ab = new ArrayBuffer(byteString.length);\n  //   const ia = new Uint8Array(ab);\n  //   for (let i = 0; i < byteString.length; i++) {\n  //     ia[i] = byteString.charCodeAt(i);\n  //   }\n  //   return new Blob([ab], { type: mimeString });\n  // }\n\n  home(){ this.router.navigate([\"/erp-dashboard/main\"]);}\n\n}\n","<section class=\"dashboard\">\n  <div class=\"container\">\n    <div class=\"breadcrumb-banner bg-kingdom\">\n      <h1>Enterprise Resource Planning Dashboard</h1>\n      <nav aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\"><a (click)=\"home()\">Home</a></li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            User Account Information\n          </li>\n        </ol>\n      </nav>\n    </div>\n\n    <div class=\"row clearfix my-4\">\n      <div class=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-b-20\">\n            <div class=\"contact-grid\">\n              <div class=\"profile-header bg-dark\">\n                <div class=\"user-name\">{{ currentUser.emailAddress }}</div>\n                <div class=\"name-center\">{{ currentUser.role.name }}</div>\n              </div>\n              <!-- Add this input element over the image -->\n              <input type=\"file\" (change)=\"onFileSelected($event)\" accept=\"image/*\" style=\"display: none;\" #fileInput>\n\n              <!-- Display the profile image -->\n              <img [src]=\"profileImage || 'assets/images/user/usrbig3.jpg'\" class=\"user-img\" alt=\"\"\n                (click)=\"fileInput.click()\">\n\n\n              <p>\n                Hurlingham Court, Argwings Kodhek Rd,\n                <br />Nairobi\n              </p>\n              <div>\n                <span class=\"phone\">\n                  <i class=\"material-icons\">phone</i>254...</span>\n              </div>\n              <div>\n                <span class=\"phone\">\n                  <i class=\"material-icons\">mail</i>{{ currentUser.email }}</span>\n              </div>\n              <!-- <div class=\"row\">\n                <div class=\"col-4\">\n                  <h5>564</h5>\n                  <small>Following</small>\n                </div>\n                <div class=\"col-4\">\n                  <h5>18k</h5>\n                  <small>Followers</small>\n                </div>\n                <div class=\"col-4\">\n                  <h5>565</h5>\n                  <small>Post</small>\n                </div>\n              </div> -->\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"card\">\n          <mat-tab-group mat-align-tabs=\"start\">\n            <mat-tab label=\"About\">\n              <div class=\"p-4\">\n                <small class=\"text-muted\">Email address: </small>\n                <p>{{ currentUser.email }}</p>\n                <hr />\n                <small class=\"text-muted\">Phone: </small>\n                <p>+254 ...</p>\n                <hr />\n              </div>\n            </mat-tab>\n\n          </mat-tab-group>\n        </div> -->\n      </div>\n      <div class=\"col-lg-8 col-md-12\">\n        <div class=\"card\">\n          <mat-tab-group>\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <mat-icon class=\"example-tab-icon msr-2\">face</mat-icon>\n                About Me\n              </ng-template>\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"project_widget\">\n                  <div class=\"header\">\n                    <h2><strong>About</strong></h2>\n                  </div>\n                  <div class=\"body\">\n                    <div class=\"row\">\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>First Name</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.firstName }}</p>\n                      </div>\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>Second Name</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.lastName }}</p>\n                      </div>\n\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>Role</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.role.name }}</p>\n                      </div>\n\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>Address</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.address }}</p>\n                      </div>\n\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>EmpPfNo</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.empPfNo }}</p>\n                      </div>\n\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>BranchCode</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.branchCode }}</p>\n                      </div>\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>DepartmentCode</strong>\n                        <br />\n                        <p class=\"text-muted\">\n                          {{ currentUser.departmentCode }}\n                        </p>\n                      </div>\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>CostCenterCode</strong>\n                        <br />\n                        <p class=\"text-muted\">\n                          {{ currentUser.costCenterCode }}\n                        </p>\n                      </div>\n\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>Status</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.status }}</p>\n                      </div>\n\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>Last Login Time</strong>\n                        <br />\n                        <p class=\"text-muted\">\n                          {{ currentUser.loginAt | date : \"medium\" }}\n                        </p>\n                      </div>\n\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>Browser</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.browser }}</p>\n                      </div>\n                      <div class=\"col-md-3 col-6 b-r mt-2 mb-4\">\n                        <strong>OS</strong>\n                        <br />\n                        <p class=\"text-muted\">{{ currentUser.os }}</p>\n                      </div>\n                    </div>\n                    <!-- <p class=\"m-t-30\">Completed my graduation in Arts from the well known and\n                      renowned institution\n                      of India – SARDAR PATEL ARTS COLLEGE, BARODA in 2000-01, which was\n                      affiliated\n                      to M.S. University. I ranker in University exams from the same\n                      university\n                      from 1996-01.</p>\n                    <p>Worked as Professor and Head of the department at Sarda Collage, Rajkot,\n                      Gujarat\n                      from 2003-2015 </p>\n                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting\n                      industry. Lorem\n                      Ipsum has been the industry's standard dummy text ever since the 1500s,\n                      when\n                      an unknown printer took a galley of type and scrambled it to make a\n                      type\n                      specimen book. It has survived not only five centuries, but also the\n                      leap\n                      into electronic typesetting, remaining essentially unchanged.</p>\n                     -->\n                    <br />\n                  </div>\n                </div>\n              </div>\n            </mat-tab>\n\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <mat-icon class=\"example-tab-icon msr-2\">settings</mat-icon>\n                Settings\n              </ng-template>\n              <div class=\"header\">\n                <h2><strong>Password</strong> Settings</h2>\n              </div>\n              <div class=\"body\">\n                <form [formGroup]=\"updatePasswordForm\">\n                  <div class=\"example-container\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                        <div class=\"form-group\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>EmailAddress</mat-label>\n                            <input matInput formControlName=\"emailAddress\" required readonly />\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('emailAddress')\n                                  .hasError('required')\n                              \">\n                              EmailAddress is required\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n\n                      <!-- <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                        <div class=\"form-group\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>Current Password</mat-label>\n                            <input matInput formControlName=\"currentPassword\" [type]=\"hide ? 'password' : 'text'\"\n                              required />\n                            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                              [attr.aria-pressed]=\"hide\">\n                              <mat-icon>{{\n                                hide ? \"visibility_off\" : \"visibility\"\n                                }}</mat-icon>\n                            </button>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('currentPassword')\n                                  .hasError('required')\n                              \">\n                              Current password is required\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div> -->\n                      <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                        <div class=\"form-group\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>New Password</mat-label>\n                            <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required />\n                            <button mat-icon-button matSuffix (click)=\"hide = !hide\" type=\"button\"\n                              [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                              <mat-icon>{{\n                                hide ? \"visibility_off\" : \"visibility\"\n                                }}</mat-icon>\n                            </button>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('password')\n                                  .hasError('required')\n                              \">\n                              New password is required\n                            </mat-error>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('password')\n                                  .hasError('pattern')\n                              \">\n                              Password must contain at least 1 uppercase letter,\n                              1 lowercase letter, 1 number and 1 special\n                              character.\n                            </mat-error>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('password')\n                                  .hasError('minLength')\n                              \">\n                              Please enter atleast 10 characters.\n                            </mat-error>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('password')\n                                  .hasError('maxLength')\n                              \">\n                              Characters must not exceed 25.\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                        <div class=\"form-group\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>Confirm Password</mat-label>\n                            <input matInput formControlName=\"confirmPassword\" [type]=\"hide ? 'password' : 'text'\"\n                              required />\n                            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                              [attr.aria-pressed]=\"hide\">\n                              <mat-icon>{{\n                                hide ? \"visibility_off\" : \"visibility\"\n                                }}</mat-icon>\n                            </button>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('confirmPassword')\n                                  .hasError('required')\n                              \">\n                              Confirm Password is required\n                            </mat-error>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('confirmPassword')\n                                  .hasError('pattern')\n                              \">\n                              Password must contain at least 1 uppercase letter,\n                              1 lowercase letter, 1 number and 1 special\n                              character.\n                            </mat-error>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('confirmPassword')\n                                  .hasError('minLength')\n                              \">\n                              Please enter atleast 10 characters.\n                            </mat-error>\n                            <mat-error *ngIf=\"\n                                updatePasswordForm\n                                  .get('confirmPassword')\n                                  .hasError('maxLength')\n                              \">\n                              Characters must not exceed 25.\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <button mat-raised-button type=\"submit\" [disabled]=\"!updatePasswordForm.valid\" color=\"primary\"\n                    (click)=\"updatePassword()\">\n                    Update Password\n                  </button>\n                </form>\n              </div>\n            </mat-tab>\n          </mat-tab-group>\n        </div>\n      </div>\n    </div>\n\n    <footer class=\"footer\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-2 text-right client-logo\">\n            <img src=\"/assets/images/PBlogo.png\" alt=\"Kingdom Bank logo\" height=\"80px\" width=\"80px\"/>\n          </div>\n          <div class=\"col-md-6\">\n            <h4 class=\"animated fadeInLeft\">About Kingdom Bank</h4>\n            <p class=\"animated fadeInRight\">\n              Kingdom Bank is a leading financial institution that provides a\n              wide range of banking products and services to individuals and\n              businesses. We are committed to providing our customers with the\n              highest level of service and support. We are proud to be a trusted\n              partner of E&M Technology House.\n            </p>\n          </div>\n\n          <div class=\"col-md-4\">\n            <h4 class=\"animated fadeInLeft\">Connect with Us</h4>\n            <ul class=\"list-unstyled social-icons animated fadeInRight\">\n              <li>\n                <a target=\"_blank\" href=\"https://facebook.com/kingdombank\"><mat-icon>facebook</mat-icon>Kingdom Bank</a>\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://twitter.com/kingdombank\"><i class=\"fab fa-twitter\"></i>Kingdom Bank</a>\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://linkedin.com/company/kingdombank\"><mat-icon>linkedin</mat-icon>Kingdom\n                  Bank</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-2 text-left vendor-logo\">\n            <img src=\"/assets/images/em2.png\" class=\"p-3\" alt=\"E&M Technology House logo\" height=\"80px\" width=\"80px\"/>\n          </div>\n          <div class=\"col-md-6\">\n            <h4 class=\"animated fadeInLeft\">About E&M Technology House</h4>\n            <p class=\"animated fadeInRight\">\n              E&M Technology House is a leading provider of innovative IT\n              solutions for businesses of all sizes. We offer a wide range of\n              services, including software development, web design, and IT\n              consulting. We are committed to providing our clients with\n              high-quality, cost-effective solutions that help them achieve\n              their business goals.\n            </p>\n          </div>\n\n          <!-- <div class=\"icon-preview\"><i class=\"fab fa-twitter\"></i></div> -->\n\n          <div class=\"col-md-4\">\n            <h4 class=\"animated fadeInLeft\">Connect with Us</h4>\n            <ul class=\"list-unstyled social-icons animated fadeInRight\">\n              <li>\n                <a target=\"_blank\" href=\"https://facebook.com/emtechhouse\"><mat-icon>facebook</mat-icon>E&M Technology\n                  House</a>\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://twitter.com/emtechhouse\"><i class=\"fab fa-twitter\"></i>E&M Technology\n                  House</a>\n              </li>\n              <li>\n                <a target=\"_blank\" href=\"https://linkedin.com/company/emtechhouse\"><mat-icon>linkedin</mat-icon>E&M\n                  Technology House</a>\n              </li>\n            </ul>\n\n          </div>\n\n         \n        </div>\n\n        <hr class=\"animated bounceIn\" />\n\n        <div class=\"row\">\n          <div class=\"col-md-12 text-center\">\n            <p class=\"copyright animated pulse\">\n              &copy; 2024 E&M ERP. All Rights Reserved.\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  </div>\n</section>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n"],"names":[],"sourceRoot":"webpack:///"}