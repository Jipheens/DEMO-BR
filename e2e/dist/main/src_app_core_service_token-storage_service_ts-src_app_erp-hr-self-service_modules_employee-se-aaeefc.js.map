{"version":3,"file":"src_app_core_service_token-storage_service_ts-src_app_erp-hr-self-service_modules_employee-se-aaeefc.js","mappings":"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","sources":["./src/@core/Models/Notification/notification-service.service.ts","./src/app/core/service/token-storage.service.ts","./src/app/erp-hr-self-service/modules/employee-search/employee-search-routing.module.ts","./src/app/erp-hr-self-service/modules/employee-search/employee-search.module.ts","./src/app/erp-hr-self-service/modules/employee-search/search-details-page/search-details-page.component.ts","./src/app/erp-hr-self-service/modules/employee-search/search-details-page/search-details-page.component.html","./src/app/erp-hr-self-service/modules/employee-search/search-employees/search-employees.component.ts","./src/app/erp-hr-self-service/modules/employee-search/search-employees/search-employees.component.html","./src/app/erp-hr/data/employee-services/employee-management.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class NotificationServiceService {\n//   showSuccessNotification(arg0: string) {\n//     throw new Error('Method not implemented.');\n//   }\n//   showSuccess(arg0: string) {\n//     throw new Error('Method not implemented.');\n//   }\n//   showError(message: any) {\n//     throw new Error('Method not implemented.');\n//   }\n\n//   horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n//   verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n//   constructor(\n//     private snackBar: MatSnackBar\n//   ) {\n//    }\n//   alertSuccess(message:any){\n//     this.snackBar.open(message, \"OK\", {\n//       horizontalPosition: this.horizontalPosition,\n//       verticalPosition: this.verticalPosition,\n//       duration: 5000,\n//       panelClass: ['mat-toolbar', 'green-snackbar']\n//     });\n//   }\n//   alertWarning(message:any){\n//     this.snackBar.open(message, \"X\", {\n//       horizontalPosition: this.horizontalPosition,\n//       verticalPosition: this.verticalPosition,\n//       duration: 5000,\n//       panelClass: ['mat-toolbar', 'red-snackbar']\n//     });\n//   }\n// }\n\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationServiceService {\n  showSuccessNotification(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  showSuccess(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  showError(message: any) {\n    throw new Error('Method not implemented.');\n  }\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) {\n   }\n  alertSuccess(message:any){\n    this.snackBar.open(message, \"OK\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'snackbar-success']\n    });\n  }\n  alertWarning(message:any){\n    this.snackBar.open(message, \"X\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'snackbar-danger']\n    });\n  }\n  alertWarningByDuration(message:any, duration:number){\n    this.snackBar.open(message, \"X\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: duration,\n      panelClass: ['mat-toolbar', 'snackbar-danger']\n    });\n  }\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchDetailsPageComponent } from './search-details-page/search-details-page.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { SearchEmployeesComponent } from './search-employees/search-employees.component';\n\nconst routes: Routes = [\n\n\n  {\n    path: \"employees\",\n    component: SearchEmployeesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"EmployeePortalModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"employee-details\",\n    component: SearchDetailsPageComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"EmployeePortalModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeSearchRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeSearchRoutingModule } from './employee-search-routing.module';\nimport { SearchDetailsPageComponent } from './search-details-page/search-details-page.component';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { SearchEmployeesComponent } from './search-employees/search-employees.component';\n\nimport { NgxOrgChartModule } from 'ngx-org-chart';\n\n@NgModule({\n  declarations: [\n    SearchDetailsPageComponent,\n    SearchEmployeesComponent\n  ],\n  imports: [\n    CommonModule,\n    EmployeeSearchRoutingModule,\n\n    DashboardModule,\n    ComponentsModule,\n    SharedModule,\n    NgxOrgChartModule\n  ],\n  \n})\nexport class EmployeeSearchModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { AuthService } from \"src/app/core/service/auth.service\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { AnalysisService } from \"src/app/erp-hr/data/configuration-services/analysis.service\";\nimport { EmployeeService } from \"src/app/erp-hr/data/employee-services/employee-management.service\";\n\n@Component({\n  selector: \"app-search-details-page\",\n  templateUrl: \"./search-details-page.component.html\",\n  styleUrls: [\"./search-details-page.component.scss\"],\n})\nexport class SearchDetailsPageComponent implements OnInit {\n  showForm: boolean;\n  requestCode: any;\n  constructor(\n    private employeeAnalysisService: AnalysisService,\n    private notificationAPI: NotificationServiceService,\n    private tokenStorage: TokenCookieService,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private employeeService: EmployeeService\n  ) {}\n\n  ngOnInit(): void {\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.requestCode) {\n          this.requestCode = params.requestCode;\n          this.getData();\n          this.getStructureData();\n          this.getProfileImage();\n        }\n      });\n    } else {\n      this.showForm = true;\n    }\n  }\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  getData() {\n    this.loading = true;\n\n    let params = {\n      emp_no: this.requestCode,\n    };\n\n    console.log(\"Data params\", params);\n\n    this.employeeAnalysisService\n      .readEmployeeDetailInfo(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"Data res\", res);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.showForm = true;\n            console.log(\"Data displayed on table\", this.data);\n\n            this.loading = false;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error: \" + err.message);\n        },\n        complete: () => {\n          this.loading = false;\n        },\n      });\n  }\n\n  profileImage: string | ArrayBuffer | null = null;\n\n  getProfileImage() {\n    let params = {\n      empPf: this.requestCode,\n    };\n    this.authService.getUserProfileImage(params).subscribe(\n      (res) => {\n        if (res.entity && res.entity.imageFile) {\n          this.profileImage = res.entity.imageFile;\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  nodes: any[] = [];\n  orgChartData: EmployeeData[] = [];\n  getStructureData() {\n    this.loading = true;\n\n    let params = {\n      empNo: this.requestCode,\n    };\n\n    console.log(\"getStructureData\", params);\n\n    this.employeeService\n      .readStructureByEmpf(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.getStructureData\", res.entity);\n\n          this.nodes = res.entity;\n          this.orgChartData = this.transformData(this.nodes);\n          this.loading = false;\n        },\n        error: (err) => {\n          this.loading = false;\n        },\n        complete: () => {\n          this.loading = false;\n        },\n      });\n  }\n\n  test(event: any) {}\n\n  transformData(data: any[]): EmployeeData[] {\n    return data.map(employee => ({\n      name: employee.name,\n      cssClass: 'ngx-org-ceo',\n      image: employee.image || 'assets/images/user/usrs.svg',\n      title: `${employee.title || ''}, ${employee.department || 'N.A'}`,\n      childs: this.transformChildData(employee.childs)\n    }));\n  }\n\n  transformChildData(children: any[]): EmployeeData[] {\n    return children.map(child => ({\n      name: child.name,\n      cssClass: 'ngx-org-ceo',\n      image: child.image || 'assets/images/user/usrs.svg',\n      title: `${child.title || ''}, ${child.department || 'N.A'}`,\n      childs: this.transformChildData(child.childs)\n    }));\n  }\n\n\n  orgChartDatas: any = [\n    {\n      name: 'Sundar Pichai',\n      cssClass: 'ngx-org-ceo',\n      image: '',\n      title: 'Chief Executive Officer',\n      childs: [\n        {\n          name: 'Thomas Kurian',\n          cssClass: 'ngx-org-ceo',\n          image: 'assets/node.svg',\n          title: 'CEO, Google Cloud',\n        },\n        {\n          name: 'Susan Wojcicki',\n          cssClass: 'ngx-org-ceo',\n          image: 'assets/node.svg',\n          title: 'CEO, YouTube',\n          childs: []\n        },\n        {\n          name: 'Jeff Dean',\n          cssClass: 'ngx-org-head',\n          image: 'assets/node.svg',\n          title: 'Head of Artificial Intelligence',\n          childs: [\n            {\n              name: 'David Feinberg',\n              cssClass: 'ngx-org-ceo',\n              image: 'assets/node.svg',\n              title: 'CEO, Google Health',\n              childs: []\n            }\n          ]\n        }\n      ]\n    },       \n];\n}\ninterface EmployeeData {\n  name: string;\n  cssClass: string;\n  image: string;\n  title: string;\n  childs: EmployeeData[];\n}","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n\n            <app-breadcrumb [title]=\"'Employee Search Details'\" [items]=\"['Employee Search']\"\n                [active_item]=\"'Employee Search Details'\">\n            </app-breadcrumb>\n        </div>\n\n        <div class=\"row clearfix\" *ngIf=\"showForm\">\n            <div class=\"col-lg-4 col-md-12\">\n                <div class=\"card\">\n                    <div class=\"m-b-20\">\n                        <div class=\"contact-grid\">\n                            <div class=\"profile-header bg-dark\">\n                                <div class=\"user-name\">{{ data.firstname || 'N.A' }} {{ data.middlename\n                                    || 'N.A' }} {{ data.lastname || 'N.A' }}</div>\n                                <div class=\"name-center\">{{ data.role || 'N.A' }}</div>\n                            </div>\n                            <!-- <img src=\"assets/images/user/usrbig3.jpg\" class=\"user-img\" alt=\"\"> -->\n\n\n                            <img [src]=\"profileImage || 'assets/images/user/profile_img.png'\" class=\"user-img\" alt=\"\">\n\n\n                        </div>\n                    </div>\n\n                    <mat-tab-group mat-align-tabs=\"start\">\n                        <mat-tab label=\"Contact Details\">\n                            <div class=\"p-4\">\n\n                                <small class=\"text-muted\">Email address: </small>\n                                <p>{{ data.workmail || 'N.A' }}</p>\n                                <hr>\n                                <small class=\"text-muted\">Phone: </small>\n                                <p>{{ data.phone || 'N.A' }}</p>\n                                <hr>\n                            </div>\n                        </mat-tab>\n\n                    </mat-tab-group>\n                </div>\n            </div>\n            <div class=\"col-lg-8 col-md-12\">\n                <div class=\"card\">\n                    <mat-tab-group>\n                        <mat-tab>\n                            <ng-template mat-tab-label>\n                                <mat-icon class=\"example-tab-icon msr-2\">face</mat-icon>\n                                Employee Details\n                            </ng-template>\n\n\n                            <div class=\"body\">\n                                <div class=\"\">\n                                    <div class=\"card-header\">\n                                        <h5>\n                                            <strong>About</strong> Employee\n                                        </h5>\n                                    </div>\n                                    <div class=\"card-body\">\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">Name:</div>\n                                            <div class=\"detail-value\">{{ data.firstname || 'N.A' }} {{ data.middlename\n                                                || 'N.A' }} {{ data.lastname || 'N.A' }}</div>\n                                        </div>\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">Role:</div>\n                                            <div class=\"detail-value\">{{ data.role || 'N.A' }}</div>\n                                        </div>\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">Employee Number:</div>\n                                            <div class=\"detail-value\">{{ data.empno || 'N.A' }}</div>\n                                        </div>\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">Department:</div>\n                                            <div class=\"detail-value\">{{ data.departmentname || 'N.A' }}</div>\n                                        </div>\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">Cisco NO:</div>\n                                            <div class=\"detail-value\">{{ data.ciscono || 'N.A' }}</div>\n                                        </div>\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">Branch:</div>\n                                            <div class=\"detail-value\">{{ data.branchname || 'N.A' }}</div>\n                                        </div>\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">Branch Manager:</div>\n                                            <div class=\"detail-value\">{{ data.branchmanager || 'N.A' }}</div>\n                                        </div>\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">HOD:</div>\n                                            <div class=\"detail-value\">{{ data.hod || 'N.A' }}</div>\n                                        </div>\n                                        <div class=\"detail-row\">\n                                            <div class=\"detail-label\">Assistant HOD:</div>\n                                            <div class=\"detail-value\">{{ data.assitanthod || 'N.A' }}</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n\n\n\n                        </mat-tab>\n\n                        <!-- <mat-tab>\n                            <ng-template mat-tab-label>\n                                <mat-icon class=\"example-tab-icon msr-2\">settings</mat-icon>\n                                Organization Structure\n                            </ng-template>\n                            <div class=\"header\">\n                                <h2>\n                                    <strong>Organization</strong> Structure\n                                </h2>\n                            </div>\n                            <div class=\"body\">\n                            </div>\n                        </mat-tab> -->\n                    </mat-tab-group>\n                </div>\n            </div>\n\n            <div class=\"col-12\">\n                <div class=\"card\">\n                    <mat-tab-group>\n                       \n                        <mat-tab>\n                            <ng-template mat-tab-label>\n                                <mat-icon class=\"example-tab-icon msr-2\">settings</mat-icon>\n                                Position Structure\n                            </ng-template>\n                            <div class=\"header\">\n                                <h2>\n                                    <strong>Position</strong> Structure\n                                </h2>\n                            </div>\n                            <div class=\"body\">\n\n                                <ngx-org-chart [nodes]=\"orgChartData\" direction=\"horizontal\" (itemClick)=\"test($event)\"></ngx-org-chart>\n\n\n                            </div>\n                        </mat-tab>\n                    </mat-tab-group>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { AnalysisService } from 'src/app/erp-hr/data/configuration-services/analysis.service';\nimport { EmployeeService } from 'src/app/erp-hr/data/employee-services/employee-management.service';\nimport { PrivilegeService } from 'src/app/erp-hr/data/PrivilegeService';\nimport { CreateEmployeePortalAccountComponent } from 'src/app/erp-hr/modules/employees/create-employee-portal-account/create-employee-portal-account.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\nimport { Graph, Node, Edge } from '@swimlane/ngx-graph';\nimport * as shape from 'd3-shape';\n\n@Component({\n  selector: 'app-search-employees',\n  templateUrl: './search-employees.component.html',\n  styleUrls: ['./search-employees.component.sass']\n})\nexport class SearchEmployeesComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'id',\n    'empNo',\n    'name',\n    'branchName',\n    'departmentname',\n    'personal_phone',\n    'personal_email',\n    'work_mail',\n    \"status\",\n    \"action\",\n  ];\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n  Form: FormGroup;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private employeeService: EmployeeService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private privilegeService: PrivilegeService,\n    private fb: FormBuilder,\n    private employeeAnalysisService: AnalysisService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"ALL\"],\n      searchId: [\"ja\"],\n      departmentId: [\"All\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n    this.getData();\n  }\n  hasPrivilege(componentName: string): boolean {\n    return this.privilegeService.checkPrivilege(componentName);\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //****************************************************************************************** */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"ALL\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n  }\n\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource<any>([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    const departmentId = this.Form.value.departmentId === 'All' ? '%' : this.Form.value.departmentId;\n    const status = this.Form.value.status;\n    const searchId = this.Form.value.searchId;\n\n    this.selectedStatus = this.Form.value.status;\n    let params = {\n      status: status,\n      searchId: searchId,\n      departmentId: departmentId\n    };\n\n    console.log(\"Data params\", params);\n\n    this.employeeAnalysisService\n      .readEmployeeInfoFilter(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n\n          console.log(\"Data res\", res);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Data displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error: \" + err.message);\n        },\n        complete: () => { },\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    let route = \"/erp-hr-self-service/employee-search/employee-details\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: record.empNo,\n        action: action,\n      },\n    });\n\n  }\n\n\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  test(event: any) { }\n\n  nodes: any = [\n    {\n      name: 'Sundar Pichai',\n      cssClass: 'ngx-org-ceo',\n      image: 'assets/images/user/images.png',\n      title: 'Chief Executive Officer',\n      childs: [\n        {\n          name: 'Thomas Kurian',\n          cssClass: 'ngx-org-ceo',\n          image: 'assets/images/user/images.png',\n          title: 'CEO, Google Cloud',\n        },\n        {\n          name: 'Susan Wojcicki',\n          cssClass: 'ngx-org-ceo',\n          image: 'assets/images/user/images.png',\n          title: 'CEO, YouTube',\n          childs: [\n            {\n              name: 'Beau Avril',\n              cssClass: 'ngx-org-head',\n              image: 'assets/images/user/images.png',\n              title: 'Global Head of Business Operations',\n              childs: []\n            },\n            {\n              name: 'Tara Walpert Levy',\n              cssClass: 'ngx-org-vp',\n              image: 'assets/images/user/images.png',\n              title: 'VP, Agency and Brand Solutions',\n              childs: []\n            },\n            {\n              name: 'Ariel Bardin',\n              cssClass: 'ngx-org-vp',\n              image: 'assets/images/user/images.png',\n              title: 'VP, Product Management',\n              childs: []\n            }\n          ]\n        },\n        {\n          name: 'Jeff Dean',\n          cssClass: 'ngx-org-head',\n          image: 'assets/images/user/images.png',\n          title: 'Head of Artificial Intelligence',\n          childs: [\n            {\n              name: 'David Feinberg',\n              cssClass: 'ngx-org-ceo',\n              image: 'assets/images/user/images.png',\n              title: 'CEO, Google Health',\n              childs: []\n            }\n          ]\n        }\n      ]\n    },\n    {\n      name: 'Sundar Pichai',\n      cssClass: 'ngx-org-ceo',\n      image: 'assets/images/user/images.png',\n      title: 'Chief Executive Officer',\n      childs: [\n        {\n          name: 'Thomas Kurian',\n          cssClass: 'ngx-org-ceo',\n          image: 'assets/images/user/images.png',\n          title: 'CEO, Google Cloud',\n        },\n        {\n          name: 'Susan Wojcicki',\n          cssClass: 'ngx-org-ceo',\n          image: 'assets/images/user/images.png',\n          title: 'CEO, YouTube',\n          childs: [\n            {\n              name: 'Beau Avril',\n              cssClass: 'ngx-org-head',\n              image: 'assets/images/user/images.png',\n              title: 'Global Head of Business Operations',\n              childs: []\n            },\n            {\n              name: 'Tara Walpert Levy',\n              cssClass: 'ngx-org-vp',\n              image: 'assets/images/user/images.png',\n              title: 'VP, Agency and Brand Solutions',\n              childs: []\n            },\n            {\n              name: 'Ariel Bardin',\n              cssClass: 'ngx-org-vp',\n              image: 'assets/images/user/images.png',\n              title: 'VP, Product Management',\n              childs: []\n            }\n          ]\n        },\n        {\n          name: 'Jeff Dean',\n          cssClass: 'ngx-org-head',\n          image: 'assets/images/user/images.png',\n          title: 'Head of Artificial Intelligence',\n          childs: [\n            {\n              name: 'David Feinberg',\n              cssClass: 'ngx-org-ceo',\n              image: 'assets/images/user/images.png',\n              title: 'CEO, Google Health',\n              childs: []\n            }\n          ]\n        }\n      ]\n    },\n    {\n      name: 'Sundar Pichai',\n      cssClass: 'ngx-org-ceo',\n      image: 'assets/images/user/images.png',\n      title: 'Chief Executive Officer',\n      childs: [\n        {\n          name: 'Thomas Kurian',\n          cssClass: 'ngx-org-ceo',\n          image: 'assets/images/user/images.png',\n          title: 'CEO, Google Cloud',\n        },\n        {\n          name: 'Susan Wojcicki',\n          cssClass: 'ngx-org-ceo',\n          image: 'assets/images/user/images.png',\n          title: 'CEO, YouTube',\n          childs: [\n            {\n              name: 'Beau Avril',\n              cssClass: 'ngx-org-head',\n              image: 'assets/images/user/images.png',\n              title: 'Global Head of Business Operations',\n              childs: []\n            },\n            {\n              name: 'Tara Walpert Levy',\n              cssClass: 'ngx-org-vp',\n              image: 'assets/images/user/images.png',\n              title: 'VP, Agency and Brand Solutions',\n              childs: []\n            },\n            {\n              name: 'Ariel Bardin',\n              cssClass: 'ngx-org-vp',\n              image: 'assets/images/user/images.png',\n              title: 'VP, Product Management',\n              childs: []\n            }\n          ]\n        },\n        {\n          name: 'Jeff Dean',\n          cssClass: 'ngx-org-head',\n          image: 'assets/images/user/images.png',\n          title: 'Head of Artificial Intelligence',\n          childs: [\n            {\n              name: 'David Feinberg',\n              cssClass: 'ngx-org-ceo',\n              image: 'assets/images/user/images.png',\n              title: 'CEO, Google Health',\n              childs: []\n            }\n          ]\n        }\n      ]\n    }\n  ];\n\n\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Employees'\" [items]=\"['Employees']\" [active_item]=\"'All Employees'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader mt-0\">\n                                <div class=\"row\">\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Department Id</mat-label>\n\n                                                <input matInput formControlName=\"departmentId\" />\n\n                                                <mat-error *ngIf=\"Form.get('departmentId').hasError('required')\">\n                                                    Please select Department\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </form>\n                                    </div>\n\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Search Term</mat-label>\n\n                                                <input matInput formControlName=\"searchId\" />\n\n                                                <mat-error *ngIf=\"Form.get('searchId').hasError('required')\">\n                                                    Please Enter Search Term\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </form>\n                                    </div>\n                                    <!-- <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Status</mat-label>\n\n                                                <mat-select formControlName=\"status\">\n                                                    <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                        [value]=\"reqStatus.name\">{{ reqStatus.name\n                                                        }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                    Please select Status\n                                                </mat-error>\n                                            </mat-form-field>\n\n                                        </form>\n                                    </div>\n                                    <div class=\"col-10\">\n                                        <div class=\"button-container mt-1\">\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                ALL\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div> -->\n                                </div>\n                            </div>\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Employees</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\" *ngIf=\"\n                          dataSource &&\n                          dataSource.data &&\n                          dataSource.data.length > 0\n                        \">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n                                            <!-- <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add', '')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li> -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">ID</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.id }}</mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"empNo\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">Employee Number</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.empNo }}</mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"branchName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Branch Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.branchName }}</mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"name\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.firstName }} {{ row.middleName }} {{ row.lastName }}</mat-cell>\n                                </ng-container>\n                               \n                                \n                                <ng-container matColumnDef=\"departmentname\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Department Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.departmentname }}</mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"personal_phone\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Personal Phone</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.personal_phone }}</mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"personal_email\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Personal Email</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.personal_email }}</mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"work_mail\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Work Mail</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.work_mail }}</mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">Status</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">{{ row.status }}</mat-cell>\n                                </ng-container>\n                                \n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"verifiedFlag\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Verified Flag\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container [ngSwitch]=\"row.verifiedFlag\">\n                                            <button *ngSwitchCase=\"'Y'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp; Yes\n                                            </button>\n                                            <button *ngSwitchCase=\"'N'\"\n                                                class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp; No\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-gray btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-info-circle\"></i>&nbsp;\n                                                {{ row.verifiedFlag }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell *matHeaderCellDef\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('View', row)\">\n                                            <mat-icon>remove_red_eye</mat-icon>\n                                        </button>\n\n                                        <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Update', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"mngRecord('CreatePortal', row)\" class=\"tbl-action-btn\">\n                                        <mat-icon>add_circle</mat-icon>\n                                    </button>\n                                    \n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\">\n                                            <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\"\n                                                color=\"warn\">delete</mat-icon>\n                                        </button> -->\n                                        <!-- <button mat-icon-button color=\"warn\" (click)=\"deleteJobById(row.id)\">\n                                            <mat-icon>delete</mat-icon>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- <td mat-cell *matCellDef=\"let row\">\n                                    <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\" color=\"primary\" (click)=\"onView(row.id)\">\n                                      visibility</mat-icon>\n                                    &nbsp; &nbsp;\n                                    <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\" class=\"text-primary\" (click)=\"onAccountCreation(row)\">vpn_key</mat-icon>\n                                    &nbsp; &nbsp;\n                                    <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\" class=\"text-primary\" (click)=\"onUpdate(row.id)\">update</mat-icon>\n                                    &nbsp; &nbsp;\n                                    <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\" color=\"warn\" (click)=\"onDelete(row.id)\">delete</mat-icon>\n                                  </td> -->\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                    (click)=\"mngRecord('View', row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\">\n                                        No data matching the filter \"{{ input }}\"\n                                    </td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n        <!-- <div class=\"row mt-4\">\n            <div class=\"card\">\n                <div class=\"body\">\n                    <ngx-org-chart [nodes]=\"nodess\" direction=\"vertical\" (itemClick)=\"test($event)\"></ngx-org-chart>\n                </div>\n            </div>\n        </div> -->\n    </div>\n</section>","import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EmployeeService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n  baseURL = `${environment.baseUrlHR}/api/v1/employee`;\n\n  constructor(private http: HttpClient) {}\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/add`;\n    ///api/v1/employee/add\n\n    return this.http.post(API_URL, data, { headers: this.headers }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  createMultiple(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/migrate`;\n    return this.http.post(API_URL, data, { headers: this.headers }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  headOfDepartments(): Observable<any> {\n    let API_URL = `${this.baseURL}/heads/of/departments`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http\n      .get(API_URL, { params:params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  readActive(): Observable<any> {\n    let API_URL = `${this.baseURL}/all/approved`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  readByEmployeePf(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/emp_no`;\n    return this.http\n      .get(API_URL, {\n        params: params,\n        headers: this.headers,\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  readActiveEmployeesWithMoreDetails(): Observable<any> {\n    let API_URL = `${this.baseURL}/all/active/employees`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  readPending(): Observable<any> {\n    let API_URL = `${this.baseURL}/all/pending`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  readDormant(): Observable<any> {\n    let API_URL = `${this.baseURL}/all/dormant`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  readHold(): Observable<any> {\n    let API_URL = `${this.baseURL}/all/onHold`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  restoreDormant(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/restoreDormant/${id}`;\n    return this.http.put(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  restoreRemoved(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/restoreOnHold/${id}`;\n    return this.http.put(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  approve(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/approve/${id}`;\n    return this.http.put(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  hrmApproval(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/hrm/approval/${id}`;\n    return this.http.put(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  supervisorApproval(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/supervisor/approval/${id}`;\n    return this.http.put(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  directorApproval(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/director/approval/${id}`;\n    return this.http.put(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  tempDelete(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/temp/delete/${id}`;\n    return this.http.put(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  tempHold(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/temp/hold/${id}`;\n    return this.http.put(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  //Permanently Delete Employee Completely\n\n  permanentDelete(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/permanent/delete/${id}`;\n    return this.http.delete(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  countEmployees() {\n    let API_URL = `${this.baseURL}/count`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  countClosedEmployees() {\n    let API_URL = `${this.baseURL}/count/closed/salary`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  countSalary() {\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/count/salary`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  findById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id/${id}`;\n    return this.http.get(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n  findByEmpNo(empNo: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/emp_no/?empNo=${empNo}`;\n    return this.http.get(API_URL, { withCredentials: false }).pipe(\n      map((res) => {\n        console.log(res);\n        console.log(\"empno\", empNo);\n        return res || {};\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http\n      .put(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          console.log(\"On Update Employee JSON\", res);\n\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  createPortal(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/create/portal`;\n    return this.http\n      .put(\n        API_URL,\n        {},\n        { params: params, headers: this.headers, withCredentials: false }\n      )\n      .pipe(catchError(this.errorMgmt));\n  }\n\n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params: params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  validateBulkEmployees(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n // /api/v1/employee/get_org_structure\n readStructureByEmpf(params: any): Observable<any> {\n  let API_URL = `${this.baseURL}/get_org_structure`;\n  return this.http.get(API_URL, {params:params, withCredentials: false }).pipe(\n    map((res) => {\n      return res || {};\n    }),\n    catchError(this.errorMgmt)\n  );\n}\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = \"\";\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}