{"version":3,"file":"src_app_erp-inventory_modules_inventory-parameters_inventory-parameters_module_ts.js","mappings":"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","sources":["./src/app/erp-inventory/data/services/branchstore-rols.service.ts","./src/app/erp-inventory/modules/inventory-parameters/branchstoreROLS/all-branchstore-rols/all-branchstore-rols.component.ts","./src/app/erp-inventory/modules/inventory-parameters/branchstoreROLS/all-branchstore-rols/all-branchstore-rols.component.html","./src/app/erp-inventory/modules/inventory-parameters/branchstoreROLS/manage-branchstore-rols/manage-branchstore-rols.component.ts","./src/app/erp-inventory/modules/inventory-parameters/branchstoreROLS/manage-branchstore-rols/manage-branchstore-rols.component.html","./src/app/erp-inventory/modules/inventory-parameters/branchstores/all-branchstores/all-branchstores.component.ts","./src/app/erp-inventory/modules/inventory-parameters/branchstores/all-branchstores/all-branchstores.component.html","./src/app/erp-inventory/modules/inventory-parameters/branchstores/manage-branchstores/manage-branchstores.component.ts","./src/app/erp-inventory/modules/inventory-parameters/branchstores/manage-branchstores/manage-branchstores.component.html","./src/app/erp-inventory/modules/inventory-parameters/catalogue/all-catalogue/all-catalogue.component.ts","./src/app/erp-inventory/modules/inventory-parameters/catalogue/all-catalogue/all-catalogue.component.html","./src/app/erp-inventory/modules/inventory-parameters/catalogue/manage-catalogue/manage-catalogue.component.ts","./src/app/erp-inventory/modules/inventory-parameters/catalogue/manage-catalogue/manage-catalogue.component.html","./src/app/erp-inventory/modules/inventory-parameters/categories/all-categories/all-categories.component.ts","./src/app/erp-inventory/modules/inventory-parameters/categories/all-categories/all-categories.component.html","./src/app/erp-inventory/modules/inventory-parameters/categories/manage-categories/manage-categories.component.ts","./src/app/erp-inventory/modules/inventory-parameters/categories/manage-categories/manage-categories.component.html","./src/app/erp-inventory/modules/inventory-parameters/inventory-parameters-routing.module.ts","./src/app/erp-inventory/modules/inventory-parameters/inventory-parameters.module.ts","./src/app/erp-inventory/modules/inventory-parameters/mainStore/all-store-management/all-store-management.component.ts","./src/app/erp-inventory/modules/inventory-parameters/mainStore/all-store-management/all-store-management.component.html","./src/app/erp-inventory/modules/inventory-parameters/mainStore/manage-main-store/manage-main-store.component.ts","./src/app/erp-inventory/modules/inventory-parameters/mainStore/manage-main-store/manage-main-store.component.html","./src/app/erp-inventory/modules/inventory-parameters/unitsOfMeasure/all-units/all-units.component.ts","./src/app/erp-inventory/modules/inventory-parameters/unitsOfMeasure/all-units/all-units.component.html","./src/app/erp-inventory/modules/inventory-parameters/unitsOfMeasure/manage-units/manage-units.component.ts","./src/app/erp-inventory/modules/inventory-parameters/unitsOfMeasure/manage-units/manage-units.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BranchstoreROLSService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n\n  addBranchStoreROL(body: any): Observable<any> {\n    // http://localhost:9090/api/branchStoreROL/add\n    const branchStoreROLurl = `${environment.baseUrlProcurement}/api/branchStoreROL/add`;\n    return this.http.post<any>(branchStoreROLurl, body);\n  }\n\n    getBranchStoreROL(): Observable<any> {\n      const branchStoreROLurl = `${environment.baseUrlProcurement}/api/branchStoreROL/all`;\n      return this.http.get<any[]>(branchStoreROLurl);\n    }\n\n    getBranchStoreROLbyBranchCode(params: any):Observable<any> {\n      const branchStoreROLurl = `${environment.baseUrlProcurement}/api/branchStoreROL/fetchByBranchCode`;\n      return this.http.get<any[]>(branchStoreROLurl, \n        {\n          params\n        })\n    };\n\n    getBranchStoreROLbyItemCode(params: any):Observable<any> {\n      const branchStoreROLurl = `${environment.baseUrlProcurement}/api/branchStoreROL/getBranchStoreROLbyItemCode`;\n      return this.http.get<any[]>(branchStoreROLurl, \n        {\n          params\n        })\n    };\n\n    getBranchStoreROLbyItemCodeNBranchcode(params: any):Observable<any> {\n      const branchStoreROLurl = `${environment.baseUrlProcurement}/api/branchStoreROL/getBranchStoreROLbyItemCodeNBranchcode`;\n      return this.http.get<any[]>(branchStoreROLurl, \n        {\n          params\n        })\n    };\n\n    updateBranchStoreRol(updateBody: any):Observable<any>{\n      const branchStoreROLurl = `${environment.baseUrlProcurement}/api/branchStoreROL/update`\n      return this.http.put<any>(branchStoreROLurl, updateBody);\n    }\n\n    deleteBranchStoreROL(params: any): Observable<any> {\n      const branchStoreROLurl = `${environment.baseUrlProcurement}/api/branchStoreROL/delete`;\n      return this.http.delete<any>(branchStoreROLurl, {params});\n    }\n\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subject, Subscription, takeUntil } from 'rxjs';\nimport { BranchstoreROLSService } from 'src/app/erp-inventory/data/services/branchstore-rols.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-all-branchstore-rols',\n  templateUrl: './all-branchstore-rols.component.html',\n  styleUrls: ['./all-branchstore-rols.component.sass']\n})\nexport class AllBranchstoreROLSComponent implements OnInit {\n  displayedColumns: string[] = [\n    \n    \"index\",\n    \"branchCode\",\n    \"itemCode\",\n    \"automatedReorderPoint\",\n    \"minimumStockLevel\",\n    \"action\"\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  Subscription!: Subscription;\n  data: any;\n  isLoading: boolean = true;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n\n  constructor(\n    private branchROLManService: BranchstoreROLSService,\n    private snackbar: SnackbarService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //FIltering through the table \n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  //get the data\n  getData() {\n    this.branchROLManService.getBranchStoreROL()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode == 200) {\n            this.data = res.entity,\n              this.isLoading = true;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\",\n            err.message)\n        },\n        complete: () => {\n\n        }\n      }), Subscription\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  //navigating to the adding window\n  addBranchStoreROL() {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/manage-rols\"])\n  }\n\n  // View\n  viewBranchROL(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = '/erp-inventory/inventory-parameters/manage-rols';\n    this.router.navigate([route], { queryParams: { id: data.id, additionalData: serializedData, action: \"View\" } });\n  }\n\n  //updating \n  updateBranchROL(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = '/erp-inventory/inventory-parameters/manage-rols';\n    this.router.navigate([route], { queryParams: { id: data.id, additionalData: serializedData, action: \"Update\" } });\n  }\n\n  //delete\n  deleteBranchStoreROL(id: number) {\n    Swal.fire(\n      {\n        title: \"Are you Sure?\",\n        text: \"This item will be deleted!!\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        confirmButtonText: \"Yes, Delete this Item\",\n      }\n    ).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams()\n          .set(\"id\", id)\n        this.branchROLManService.deleteBranchStoreROL(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe\n          (\n            {\n              next: (res) => {\n                this.snackbar.showNotification\n                  (\n                    \"snackbar-success\",\n                    \"Item Deleted Successfully\"\n                  );\n              },\n              error: (err) => {\n                this.snackbar.showNotification\n                  (\n                    \"snackbar-danger\",\n                    err.message\n                  );\n              },\n              complete: () => {\n                this.getData();\n              }\n            }\n          ), Subscription;\n      }\n    })\n\n  }\n}\n\n\n\n","<section class=\"content\">\n    <div class=\"content-block\">\n      <div class=\"block-header body\">\n        <!-- breadcrumb -->\n        <app-breadcrumb [title]=\"'All Reorder Levels'\" [items]=\"['Reorder Levels']\"\n          [active_item]=\"'All Reorder Levels'\" class=\"bg-table-header\">\n        </app-breadcrumb>\n      </div>\n  \n  \n      <app-gen-widgets></app-gen-widgets>\n  \n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div class=\"card bg-card mat-elevation-z0\">\n            <div class=\"body\">\n              <div class=\"table-responsive\">\n                <div class=\"materialTableHeader bg-table-header font\">\n                  <div class=\"row\">\n                    <div class=\"col-8\">\n                      <ul class=\"header-buttons-left ms-0\">\n                        <li class=\"dropdown\">\n                          <h2> Branch Store Reorder Levels </h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                            class=\"browser-default search-field\" aria-label=\"Search box\">\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"ADD\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"addBranchStoreROL()\">\n                              <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                              <mat-icon class=\"col-white\">refresh</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n  \n                      </ul>\n                    </div>\n                    <div class=\"col-4\">\n                      <ul class=\"header-buttons\">\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                              (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                            <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                            <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                            <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <!-- <hr> -->\n                <div class=\"table-style mat-elevation-z0\">\n                  <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                    class=\"mat-cell my-class-with-custom-shadow\" #exporter=\"matTableExporter\" class=\"font-table mat-cell\">\n  \n                    <!-- <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col\" class=\"table-img tbl-col-width-per-9\">Id</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">{{row.id}}</mat-cell>\n                  </ng-container> -->\n  \n                    <!-- index-->\n                    <ng-container matColumnDef=\"index\">\n                      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0\"> #\n                      </mat-header-cell>\n                      <mat-cell *matCellDef=\"let row; let indexbranchCode = index\" (click)=\"onSelect(row)\" class=\"mat-column\"> {{index+1}}</mat-cell>\n                    </ng-container>\n  \n  \n                    <!-- branchCode -->\n                    <ng-container matColumnDef=\"branchCode\">\n                      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Name\n                      </mat-header-cell>\n                      <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.branchCode}}\n                      </mat-cell>\n                    </ng-container>\n  \n                    <!-- itemCode -->\n                    <ng-container matColumnDef=\"itemCode\">\n                      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Item Code\n                      </mat-header-cell>\n                      <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.itemCode}}\n                      </mat-cell>\n                    </ng-container>\n  \n  \n                    <!-- automatedReorderPoint -->\n                    <ng-container matColumnDef=\"automatedReorderPoint\">\n                      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Automated Re-order Point\n                      </mat-header-cell>\n                      <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.automatedReorderPoint}}\n                      </mat-cell>\n                    </ng-container>\n  \n                    <!-- minimumStockLevel -->\n                    <ng-container matColumnDef=\"minimumStockLevel\">\n                      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Minimum Stock Level\n                      </mat-header-cell>\n                      <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.minimumStockLevel}}\n                      </mat-cell>\n                    </ng-container>\n  \n  \n  \n                    <ng-container matColumnDef=\"action\">\n                      <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef\n                        class=\"end-col mat-elevation-z0\">Action</mat-header-cell>\n                      <mat-cell *matCellDef=\"let row; let i = index\"\n                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"updateBranchROL(row)\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                        </button>\n  \n                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"viewBranchROL(row)\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                        </button>\n  \n                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"deleteBranchStoreROL(row.id)\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                        </button>\n                      </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewBranchROL(row)\"\n                      [style.cursor]=\"'pointer'\" matRipple>\n                    </mat-row>\n                    <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</mat-cell>\n                  </mat-table>\n  \n                </div>\n  \n                <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                  </mat-progress-spinner>\n                </div>\n                <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                  aria-label=\"Select page of users\"></mat-paginator>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { CatalogueLookupComponent } from 'src/app/erp-inventory/data/lookups/catalogue-lookup/catalogue-lookup.component';\nimport { BranchstoreROLSService } from 'src/app/erp-inventory/data/services/branchstore-rols.service';\nimport { BrancstoresManagementService } from 'src/app/erp-inventory/data/services/brancstores-management.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-branchstore-rols',\n  templateUrl: './manage-branchstore-rols.component.html',\n  styleUrls: ['./manage-branchstore-rols.component.sass']\n})\nexport class ManageBranchstoreROLSComponent implements OnInit {\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  branchCode: any;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private rolsManService: BranchstoreROLSService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private accessControl: AccessControlService,\n    private tokenCookieService: TokenCookieService,\n    private dialog: MatDialog, \n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n\n\n    this.getPage();\n    this.showForm = true;\n\n    console.log(\"this.formData: \", this.formData);\n    console.log(\"pagefunc: \", this.pageFunction )\n\n    this.route.queryParams.subscribe((params) => {\n      console.log\n      (\"res\", params)\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n\n        this.id = params[\"id\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n\n        this.formData = additionalData;\n\n        console.log(\"ID:\", this.id);\n        console.log(\"Additional Data:\", additionalData);\n\n        this.getPage();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getPage(): void {\n    console.log(\"RES\", this.formData)\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n    }\n  }\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      branchCode: [\"\",  [Validators.required]],\n      itemCode: [\"\", [Validators.required]],\n      automatedReorderPoint: [\"\", [Validators.required]],\n      minimumStockLevel: [\"\", [Validators.required]]\n\n\n    });\n    this.branchCode = this.tokenCookieService.getUser().branchCode\n    this.mngForm.patchValue({\n        branchCode: this.branchCode,\n    })\n\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      itemCode: [this.formData.itemCode,],\n      automatedReorderPoint: [this.formData.automatedReorderPoint, [Validators.required]],\n      minimumStockLevel: [this.formData.minimumStockLevel, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      itemCode: [{ value: this.formData.itemCode, disabled: true }, [Validators.required]],\n      automatedReorderPoint: [{ value: this.formData.automatedReorderPoint, disabled: true }, [Validators.required]],\n      minimumStockLevel: [{ value: this.formData.minimumStockLevel, disabled: true }, [Validators.required]],\n    });\n  }\n\n\n\n  catalogueArray: [] = [];\n  itemCode = '';\n\n  selectedItem: any[] = [];\n  catalogueLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"880px\"\n    dialogConfig.data =\n    {\n      action: \"view catalogue\",\n      selected: this.selectedItem,\n    }\n\n    const dialogRef = this.dialog.open(CatalogueLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      result.data.forEach(element => {\n        this.itemCode = element.itemCode;\n        this.mngForm.patchValue(\n          {\n            itemCode: element.itemCode,\n          }\n        )\n      });\n    });\n  }\n\n\n  cancel(): void {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/all-rols\"]);\n\n  }\n\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.rolsManService\n        .addBranchStoreROL(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"ROLs Added Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-rols\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.rolsManService\n        .updateBranchStoreRol(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"ROLs Updated Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-rols\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n}\n\n\n\n\n\n\n\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Branch Stores ROLs'\" [items]=\"['Re-Order Levels']\"\n        [active_item]=\"'Manage Branch ROLs'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <div class=\"row\">\n              <h2>{{ pageFunction }} Branch Stores ROL </h2>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n            </div>\n          </div>\n          <div class=\"body\">\n\n            <form class=\"m-4 \" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n\n\n\n\n\n                <!--  itemCode -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\"> Item Code </mat-label>\n                    <input matInput formControlName=\"itemCode\" />\n                    <mat-icon matSuffix (click)=\"catalogueLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('itemCode').hasError('required')\">The Item Code is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- <mat-select formControlName=\"expenseType\">\n                  <mat-option *ngFor=\"let expenseType of expensetypes\" [value]=\"expenseType\">\n                    {{ expenseType}}\n                </mat-option>\n                </mat-select> -->\n\n\n\n                <!--  automatedReorderPoint -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\"> Automated Re-Order Point </mat-label>\n                    <input type=\"number\" matInput formControlName=\"automatedReorderPoint\" />\n                    <mat-error *ngIf=\"mngForm.get('automatedReorderPoint').hasError('required')\">The Automated Re-Order\n                      Point is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!--  minimumStockLevel -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\"> The Minimum Stock Level  </mat-label>\n                    <input type=\"number\" matInput formControlName=\"minimumStockLevel\" />\n                    <mat-error *ngIf=\"mngForm.get('minimumStockLevel').hasError('required')\">The Minimum Stock Level is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n\n\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <div mat-dialog-action [align]=\"'end'\">\n                    <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                      (click)=\"cancel()\">\n                      Cancel\n                    </button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"\n                      (click)=\"submit()\">\n                      Submit\n                    </button>\n\n                  </div>\n                </div>\n              </div>\n            </form>\n\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { BrancstoresManagementService } from 'src/app/erp-inventory/data/services/brancstores-management.service';\n\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-all-branchstores',\n  templateUrl: './all-branchstores.component.html',\n  styleUrls: ['./all-branchstores.component.scss']\n})\nexport class AllBranchstoresComponent implements OnInit {\n\n  displayedColumns: string[] = \n  [\n    'id',\n    'branchStoreCode',\n    'branchCode',\n    'branchName', \n    'branchStoreLocation',\n    'phone',\n    'email',\n    'branchAddress',\n    'action'\n  ];\n  \n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n \n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n\n \n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private branchStoreManService: BrancstoresManagementService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  getData() {\n    this.branchStoreManService\n    .getbranchStore()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(\n      {\n        next: (res) => {\n          if (res.statusCode == 200) \n          {\n            \n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n    \n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n\n  addBranchStoreCall() {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/manage-branchstores\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n\n  editbranchStore(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"mm\", data)\n  \n    let route = '/erp-inventory/inventory-parameters/manage-branchstores';\n    this.router.navigate([route], { queryParams: { id: data.id, additionalData: serializedData, action: 'Update' } });\n  }\n  viewbranchStore(data: any)\n  \n  {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = '/erp-inventory/inventory-parameters/manage-branchstores';\n    this.router.navigate([route],\n       { queryParams: \n      {\n         id: data.id, additionalData: serializedData, action: 'View' \n      } });\n    console.log(\"nn\", data)\n    \n  }\n\n  deleteBranchStore(branchStoreCode: number)\n  {\n    Swal.fire\n    (\n      {\n        title: \"Are you Sure?\",\n        text: \"This Branch Store will be deleted!!\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor:\"#3085d6\",\n        confirmButtonText: \"Yes, Delete this Branch Store \",\n      }\n    ).then((result)=>\n  {\n    if (result.isConfirmed)\n    \n    {\n      const params = new HttpParams()\n      .set(\"branchStoreCode\", branchStoreCode);\n      this.branchStoreManService.deletebranchStorePemanently(params).pipe(takeUntil(this.destroy$)).subscribe\n      (\n        {\n          next: (res) => \n          {\n            this.snackbar.showNotification\n            (\n              \"snackbar-success\",\n              \"Branch Store Deleted Successfully\"\n            );\n          },\n          error: (err) =>\n          {\n            this.snackbar.showNotification\n            (\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: ()=>\n          {\n            this.getData();\n          }\n        }\n      ), Subscription;\n    }\n  }\n  );\n}\n}","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header body\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Branch Stores'\" [items]=\"['Branch Stores']\" [active_item]=\"'All Branch Stores'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2> Main Stores </h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addBranchStoreCall()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- <hr> -->\n              <div class=\"table-style mat-elevation-z0\">\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                  #exporter=\"matTableExporter\">\n\n\n\n                  <!-- branchStoreId-->\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0\"> ID\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore\" (click)=\"onSelect(branchStoreId)\">\n                      {{branchStore.id}}</mat-cell>\n                  </ng-container>\n\n                  <!-- branchCode-->\n                  <ng-container matColumnDef=\"branchCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0\"> Branch Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore\" (click)=\"onSelect(branchCode)\">\n                      {{branchStore.branchCode}}</mat-cell>\n                  </ng-container>\n\n\n                  <!-- branchStoreCode -->\n                  <ng-container matColumnDef=\"branchStoreCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore\" (click)=\"onSelect(branchStore)\">\n                      {{branchStore.branchStoreCode}}\n                    </mat-cell>\n                  </ng-container>\n\n\n                  <!-- branchName -->\n                  <ng-container matColumnDef=\"branchName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore\" (click)=\"onSelect(branchStore)\"> {{branchStore.branchName}}\n                    </mat-cell>\n                  </ng-container>\n\n\n\n                  <!-- branchStoreLocation -->\n                  <ng-container matColumnDef=\"branchStoreLocation\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Location\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore\" (click)=\"onSelect(branchStore)\">\n                      {{branchStore.branchStoreLocation}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- branchAddress -->\n                  <ng-container matColumnDef=\"branchAddress\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Address\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore\" (click)=\"onSelect(branchStore)\">\n                      {{branchStore.branchAddress}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- email -->\n                  <ng-container matColumnDef=\"email\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Email\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore\" (click)=\"onSelect(branchStore)\"> {{branchStore.email}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- phone -->\n                  <ng-container matColumnDef=\"phone\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Phone\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore\" (click)=\"onSelect(branchStore)\"> {{branchStore.phone}}\n                    </mat-cell>\n                  </ng-container>\n\n\n\n                  <ng-container matColumnDef=\"action\">\n                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef\n                      class=\"end-col mat-elevation-z0\">Action</mat-header-cell>\n                    <mat-cell *matCellDef=\"let branchStore; let i = index\"\n                      class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"editbranchStore(branchStore)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"viewbranchStore(branchStore)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteBranchStore(branchStore.branchStoreCode)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button>\n                    </mat-cell>\n                  </ng-container>\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                  <mat-row *matRowDef=\"let branchStore; columns: displayedColumns;\" (click)=\"viewbranchStore(branchStore)\"\n                    [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                  <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</mat-cell>\n                </mat-table>\n              </div>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\n\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { BrancstoresManagementService } from 'src/app/erp-inventory/data/services/brancstores-management.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-branchstores',\n  templateUrl: './manage-branchstores.component.html',\n  styleUrls: ['./manage-branchstores.component.scss']\n})\nexport class ManageBranchstoresComponent implements OnInit {\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  branchCode: any;\n  branchcodes: string [] = [\n    '1111',\n    '2222',\n    '3333',\n    '4444',\n    '5555'\n  ]\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private BranchStoreService: BrancstoresManagementService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private accessControl: AccessControlService,\n    private tokenCookieService: TokenCookieService,\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n\n\n    this.getPage();\n    this.showForm = true;\n\n    console.log(\"this.formData: \", this.formData);\n    console.log(\"pagefunc: \", this.pageFunction )\n\n    this.route.queryParams.subscribe((params) => {\n      console.log\n      (\"res\", params)\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n\n        this.id = params[\"id\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n\n        this.formData = additionalData;\n\n        console.log(\"ID:\", this.id);\n        console.log(\"Additional Data:\", additionalData);\n\n        this.getPage();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getPage(): void {\n    console.log(\"RES\", this.formData)\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n    }\n  }\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      branchStoreCode: [\"\"],\n      branchCode: [\"\", [Validators.required]],\n      branchName: [\"\", [Validators.required]],\n      branchStoreLocation: [\"\", [Validators.required]],\n      phone: [\"\", [Validators.required]],\n      email: [\"\", [Validators.required]],\n      branchAddress: [\"\", [Validators.required]]\n\n\n    });\n    this.branchCode = this.tokenCookieService.getUser().branchCode\n    this.mngForm.patchValue({\n        branchCode: this.branchCode,\n    })\n\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      branchStoreCode: [this.formData.branchStoreCode,],\n      branchCode: [this.formData.branchCode, [Validators.required]],\n      branchName: [this.formData.branchName, [Validators.required]],\n      branchStoreLocation: [this.formData.branchStoreLocation, [Validators.required]],\n      phone: [this.formData.phone, [Validators.required]],\n      email: [this.formData.email, [Validators.required]],\n      branchAddress: [this.formData.branchAddress, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      branchStoreCode: [{ value: this.formData.branchStoreCode, disabled: true }, [Validators.required]],\n      branchCode: [{ value: this.formData.branchCode, disabled: true }, [Validators.required]],\n      branchName: [{ value: this.formData.branchName, disabled: true }, [Validators.required]],\n      branchStoreLocation: [{ value: this.formData.branchStoreLocation, disabled: true }, [Validators.required]],\n      phone: [{ value: this.formData.phone, disabled: true }, [Validators.required]],\n      email: [{ value: this.formData.email, disabled: true }, [Validators.required]],\n      branchAddress: [{ value: this.formData.branchAddress, disabled: true }, [Validators.required]],\n    });\n  }\n\n\n  cancel(): void {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/all-branchstores\"]);\n\n  }\n\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.BranchStoreService\n        .addbranchStore(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Branch Store Added Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-branchstores\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.BranchStoreService\n        .updatebranchStore(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Branch Store Updated Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-branchstores\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Branch Stores'\" [items]=\"['Branch Stores']\"\n        [active_item]=\"'Manage Branch Stores'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <div class=\"row\">\n              <h2>{{ pageFunction }} Branch Stores </h2>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n            </div>\n          </div>\n          <div class=\"body\">\n\n            <form class=\"m-4 \" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n\n\n\n                <!-- branchStoreCode -->\n                <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                      <mat-label>branchStoreCode</mat-label>\n                      <input matInput formControlName=\"branchStoreCode\" />\n                      <mat-error *ngIf=\"mngForm.get('branchStoreCode').hasError('required')\">branchStoreCode is required</mat-error>\n                    </mat-form-field>\n                  </div> -->\n\n                <!-- branchName  -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\">Name</mat-label>\n                    <input matInput formControlName=\"branchName\" />\n                    <mat-error *ngIf=\"mngForm.get('branchName').hasError('required')\">The branch name is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!--  branchStoreLocation -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\"> Location </mat-label>\n                    <input matInput formControlName=\"branchStoreLocation\" />\n                    <mat-error *ngIf=\"mngForm.get('branchStoreLocation').hasError('required')\">The location is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- <mat-select formControlName=\"expenseType\">\n                  <mat-option *ngFor=\"let expenseType of expensetypes\" [value]=\"expenseType\">\n                    {{ expenseType}}\n                </mat-option>\n                </mat-select> -->\n\n                <!--  branchCode -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\"> Branch Code  </mat-label>\n                    <input matInput formControlName=\"branchCode\" readonly/>\n                    <mat-error *ngIf=\"mngForm.get('branchCode').hasError('required')\">The branch Code is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n                <!--  phone -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\"> phone </mat-label>\n                    <input type=\"number\" matInput formControlName=\"phone\" />\n                    <mat-error *ngIf=\"mngForm.get('phone').hasError('required')\">The phone number is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!--  email -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\"> Email </mat-label>\n                    <input matInput formControlName=\"email\" />\n                    <mat-error *ngIf=\"mngForm.get('email').hasError('required')\">The email is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n                <!--  branchAddress -->\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"\"> Address </mat-label>\n                    <input matInput formControlName=\"branchAddress\" />\n                    <mat-error *ngIf=\"mngForm.get('branchAddress').hasError('required')\">The branch address is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <div mat-dialog-action [align]=\"'end'\">\n                    <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                      (click)=\"cancel()\">\n                      Cancel\n                    </button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"\n                      (click)=\"submit()\">\n                      Submit\n                    </button>\n\n                  </div>\n                </div>\n              </div>\n            </form>\n\n          </div>\n       \n        </div>\n\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { CatalogueManagementService } from 'src/app/erp-inventory/data/services/catalogue-management.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-all-catalogue',\n  templateUrl: './all-catalogue.component.html',\n  styleUrls: ['./all-catalogue.component.scss']\n})\nexport class AllCatalogueComponent implements OnInit {\n\n  displayedColumns: string[] =\n  [\n    'id',\n    'itemCode',\n    'name',\n    'itemCategory',\n    'quantity',     \n    'accountName' ,\n    'accountNumber',\n    // 'description',\n    // 'location', \n    //  'statusType', \n    //  'unit', \n    // // 'unitCost',\n    // 'totalCost',\n    //  'ageCategory', \n    // //  'transactionDate', \n    // //  'transactionId', \n    //  'automatedReorderPoint', \n    //  'barcodeValue', \n    //  'rfidTagValue', \n    //  'sku', \n    // //  'transactionType',\n    // 'minimumStockLevel',\n    'action'\n  ];\n\n  \n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private catalogueManSerivice: CatalogueManagementService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n    \n\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  getData() {\n    this.catalogueManSerivice.getCatalogue().pipe(takeUntil(this.destroy$)).subscribe(\n      {\n        next: (res) => {\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n\n  addCatalogueCall() {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/manage-catalogue\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n\n  editCatalogue(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"mm\", data)\n\n    let route = '/erp-inventory/inventory-parameters/manage-catalogue';\n    this.router.navigate([route], { queryParams: { id: data.id, additionalData: serializedData, action: 'Update' } });\n  }\n  viewCatalogue(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = '/erp-inventory/inventory-parameters/manage-catalogue';\n    this.router.navigate([route], { queryParams: { id: data.id, additionalData: serializedData, action: 'View' } });\n  }\n\n  deleteCatalogue(id: number) {\n    Swal.fire\n      (\n        {\n          title: \"Are you Sure?\",\n          text: \"This item will be deleted!!\",\n          icon: \"question\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          confirmButtonText: \"Yes, Delete this Item\",\n        }\n      ).then((result) => {\n        if (result.isConfirmed) {\n          const params  = new HttpParams()\n          .set(\"id\", id)\n          this.catalogueManSerivice.deleteCataloguePermanently(params).pipe(takeUntil(this.destroy$)).subscribe\n            (\n              {\n                next: (res) => {\n                  this.snackbar.showNotification\n                    (\n                      \"snackbar-success\",\n                      \"Item Deleted Successfully\"\n                    );\n                },\n                error: (err) => {\n                  this.snackbar.showNotification\n                    ( \n                      \"snackbar-danger\",\n                      err.message\n                    );\n                },\n                complete: () => {\n                  this.getData();\n                }\n              }\n            ), Subscription;\n        }\n      }\n      );\n  }\n\n\n}","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header body\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Item in Catalogue'\" [items]=\"['Catalogue Items']\"\n        [active_item]=\"'All Items in Catalogue'\" class=\"bg-table-header\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card bg-card mat-elevation-z0\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader bg-table-header font\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2> Catalogue Items </h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addCatalogueCall()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- <hr> -->\n              <div class=\"table-style mat-elevation-z0\">\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                  class=\"mat-cell my-class-with-custom-shadow\" #exporter=\"matTableExporter\" class=\"font-table mat-cell\">\n\n                  <!-- <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col\" class=\"table-img tbl-col-width-per-9\">Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">{{row.id}}</mat-cell>\n                </ng-container> -->\n\n                  <!-- id-->\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0\"> ID\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\" class=\"mat-column\"> {{row.id}}</mat-cell>\n                  </ng-container>\n\n\n                  <!-- name -->\n                  <ng-container matColumnDef=\"name\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.name}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- itemCode -->\n                  <ng-container matColumnDef=\"itemCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Item Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.itemCode}}\n                    </mat-cell>\n                  </ng-container>\n\n\n                  <!-- quantity -->\n                  <ng-container matColumnDef=\"quantity\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Quantity\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.quantity}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- unit -->\n                  <ng-container matColumnDef=\"unit\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Units\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.unit}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- itemCategory -->\n                  <ng-container matColumnDef=\"itemCategory\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Category Cost\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.itemCategory}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- accountName -->\n                  <ng-container matColumnDef=\"accountName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Stock Ac. Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.accountName}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- accountNumber -->\n                  <ng-container matColumnDef=\"accountNumber\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Stock Ac. Number\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.accountNumber}}\n                    </mat-cell>\n                  </ng-container>\n\n\n\n                  <ng-container matColumnDef=\"action\">\n                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef\n                      class=\"end-col mat-elevation-z0\">Action</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i = index\"\n                      class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"editCatalogue(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"viewCatalogue(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteCatalogue(row.id)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button>\n                    </mat-cell>\n                  </ng-container>\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewCatalogue(row)\"\n                    [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                  <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</mat-cell>\n                </mat-table>\n\n              </div>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { ExpenseLookupComponent } from 'src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component';\nimport { GlsLookupComponent } from 'src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component';\nimport { CategoryLookupComponent } from 'src/app/erp-inventory/data/lookups/category-lookup/category-lookup.component';\nimport { UnitsOfMeausureLookupComponent } from 'src/app/erp-inventory/data/lookups/units-of-meausure-lookup/units-of-meausure-lookup.component';\nimport { CatalogueManagementService } from 'src/app/erp-inventory/data/services/catalogue-management.service';\nimport { ItemCategoryService } from 'src/app/erp-inventory/data/services/item-category.service';\nimport { MainstoreService } from 'src/app/erp-inventory/data/services/mainstore.service';\nimport { StockManagementService } from 'src/app/erp-inventory/data/services/stock-management.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-catalogue',\n  templateUrl: './manage-catalogue.component.html',\n  styleUrls: ['./manage-catalogue.component.scss']\n})\nexport class ManageCatalogueComponent implements OnInit {\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  suppliercategoryId: any;\n  hideSubmit = false;\n\n  units: string[] = ['Kilograms','Boxes','Grams','Litres','Metres'];\n  categories: any;\n  ageClasses: string [] = ['New', 'Old', 'obsolete', 'refurbished'];\n  statuses: string [] = ['Available', 'Out of stock'];\n  data: any;\n  isLoading: boolean;\n  dataSource: any;\n  paginator: any;\n  sort: any;\n\n  totalCost: number =0;\n\n\n  mainstores: any;\n\n  //this.formData.totalCost = (this.formData.unit* this.formData.unitCost)\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private MainStoreService: MainstoreService,\n    private ItemCatManService: ItemCategoryService,\n    private catalogueManService: CatalogueManagementService,\n    private dialog: MatDialog,\n    \n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n    this.route.queryParams.subscribe((params) => {\n      console.log\n      (\"res\", params)\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n        this.suppliercategoryId = params[\"id\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n        this.formData = additionalData;\n        this.getPage();\n      }\n    });\n  }\n\n  //************************************************************************************************************************** */\n  //category Look upany \n  selectedItem: any[] = [];\n  categoryName: any;\n  categoryLookUp(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\"\n    dialogConfig.data =\n      {\n        action: \"view category\",\n        selected: this.selectedItem,\n      }\n      const dialogRef = this.dialog.open(CategoryLookupComponent, dialogConfig);\n      dialogRef.afterClosed().subscribe((result)=>{\n        console.log(\"categories: \", result)\n        result.data.forEach(element => {\n          this.mngForm.patchValue(\n            {\n              itemCategory: element.categoryName,\n              accountName: element.accountName,\n              accountNumber: element.accountNumber,\n            }\n          )\n        });\n      });\n\n  }\n\n\n//units of measure lookup\n  // selectedItem: any[] = [];\n  unit: any;\n  unitLookUp(){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\"\n    dialogConfig.data =\n      {\n        action: \"view units\",\n        selected: this.selectedItem,\n      }\n      const dialogRef = this.dialog.open(UnitsOfMeausureLookupComponent, dialogConfig);\n      dialogRef.afterClosed().subscribe((result)=>{\n        console.log(\"categories: \", result)\n        result.data.forEach(element => {\n          this.mngForm.patchValue(\n            {\n              unit: element.unitOfMeasureName,\n            }\n          )\n        });\n      });\n\n      \n  }\n\n  selectedGlItem: any[] = [];\n  _glsLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View GL Accounts\",\n      selected: this.selectedItem,\n      type: \"Expense\"\n    }\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach(element => {\n        this.mngForm.patchValue({\n          accountName: element.accountID,\n          accountNumber: element.description,\n        })\n      });\n    });\n  }\n\n\n  expenseIsSelected = false;\n  selectedExpense: [] = [];\n  expenseArray: [] = [];\n  expenseGlCode = \"\";\n\n  expenseLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpense,\n    };\n\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        expenseCode: result.data[0].expenseCode,\n        \n      });\n    });\n  }\n\n  //************************************************************************************************************************** */\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  getPage(): void {\n    console.log(\"RES\", this.formData)\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n    }\n  }\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      // id: [\"\"],\n      name: [\"\", [Validators.required]],\n      quantity: [\"\", [Validators.required]],\n      itemCategory: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required]],\n      unit: [\"\", [Validators.required]], \n      // ageCategory: [\"\", [Validators.required]],\n      minimumStockLevel: [\"\", [Validators.required]],\n      automatedReorderPoint: [\"\", [Validators.required]],\n      sku: [\"\", [Validators.required]],\n      expenseCode: [\"\", [Validators.required]],\n      //accountName: [\"\", [Validators.required]],\n      //accountNumber: [\"\", [Validators.required]],\n      // location: [\"\", [Validators.required]],\n    });\n  }\n\n  // useless\n  // unitCost = this.mngForm.value.unitCost;\n  // quantity = this.mngForm.value.quantity;\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      itemCode: [this.formData.itemCode],\n      id: [this.formData.id],\n      name: [this.formData.name, [Validators.required]],\n      quantity: [this.formData.quantity, [Validators.required]],\n      itemCategory: [this.formData.itemCategory, [Validators.required]],\n      description: [this.formData.description, [Validators.required]],\n      // statusType: [this.formData.statusType, [Validators.required]],\n      unit: [this.formData.unit, [Validators.required]],\n      // ageCategory: [this.formData.ageCategory, [Validators.required]],\n      automatedReorderPoint: [this.formData.automatedReorderPoint, [Validators.required]],\n      minimumStockLevel: [this.formData.minimumStockLevel, [Validators.required]],\n      sku: [this.formData.sku, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n      //accountName: [this.formData.accountName, [Validators.required]],\n      //accountNumber: [this.formData.accountNumber, [Validators.required]],\n    });\n  }\n\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      // id: [{ value: this.formData.id, disabled: true }],\n      name: [{value: this.formData.name, disabled: true}],\n      quantity: [{ value: this.formData.quantity, disabled: true }], \n      itemCategory: [{ value: this.formData.itemCategory, disabled: true}], \n      description: [{ value: this.formData.description, disabled: true }],\n      unit: [{ value: this.formData.unit, disabled: true }],\n      automatedReorderPoint: [{ value: this.formData.automatedReorderPoint, disabled: true }],  \n      minimumStockLevel: [{ value: this.formData.minimumStockLevel, disabled: true }],\n      sku: [{ value: this.formData.sku, disabled: true }],  \n      //accountName:  [{ value: this.formData.accountName, disabled: true }],  \n      //accountNumber:  [{ value: this.formData.accountNumber, disabled: true }],  \n    });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/all-catalogue\"]);\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n    if (selectedDate <= today) {\n      return { pastDate: true };\n    }\n    return null;\n  }\n\n  //******************************************************************************************************************* */\n\n\n  \n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.catalogueManService\n        .addCatalogue(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Item Added Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-catalogue\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.catalogueManService\n        .updateCatalogue(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res.status, \", res.statusCode)\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Item Updated Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-catalogue\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Master Catalogue'\" [items]=\"[' Master Catalogue']\"\n        [active_item]=\"'Manage  Master Catalogue'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <div class=\"row\">\n              <h2>{{ pageFunction }} Item Catalogue </h2>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n            </div>\n          </div>\n          <div class=\"body\">\n\n            <form class=\"m-4 \" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\"> Name </mat-label>\n                    <input matInput formControlName=\"name\" />\n                    <mat-error *ngIf=\"mngForm.get('name').hasError('required')\">Name of the item is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- itemCategory -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\">Item Category</mat-label>\n                    <input matInput formControlName=\"itemCategory\" readonly/>\n                    <mat-icon matSuffix (click)=\"categoryLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('itemCategory').hasError('required')\">Item Category is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>ExpenseCode</mat-label>\n                    <input matInput formControlName=\"expenseCode\" />\n                    <mat-icon matSuffix (click)=\"expenseLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('expenseCode').hasError('required')\">ExpenseCode is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!--  accountName -->\n                <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\"> GL Name </mat-label>\n                    <input matInput formControlName=\"accountName\" readonly />\n                    <mat-icon matSuffix (click)=\"_glsLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('accountName').hasError('required')\">The Stock GL\n                      Name is\n                      required</mat-error>\n                  </mat-form-field>\n                </div> -->\n\n                <!--  accountNumber -->\n                <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\"> GL Number </mat-label>\n                    <input matInput formControlName=\"accountNumber\" readonly />\n                    <mat-icon matSuffix (click)=\"_glsLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('accountNumber').hasError('required')\">The Stock GL Number is\n                      required</mat-error>\n                  </mat-form-field>\n                </div> -->\n\n                <!--  unit -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\"> Units of Measure</mat-label>\n                    <input matInput formControlName=\"unit\" readonly/>\n                    <mat-icon matSuffix (click)=\"unitLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('unit').hasError('required')\">The units of measure are\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!--  quantity -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\"> Quantity</mat-label>\n                    <input type=\"number\" matInput formControlName=\"quantity\" />\n                    <mat-error *ngIf=\"mngForm.get('quantity').hasError('required')\">The quantity of the item is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!--  minimumStockLevel -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\"> Minimum Stock Level </mat-label>\n                    <input type=\"number\" matInput formControlName=\"minimumStockLevel\" />\n                    <mat-error *ngIf=\"mngForm.get('minimumStockLevel').hasError('required')\">The minimum stock level\n                      is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- automatedReorderPoint -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\">Automated Re-Order Point</mat-label>\n                    <input type=\"number\" matInput formControlName=\"automatedReorderPoint\" />\n                    <mat-error *ngIf=\"mngForm.get('automatedReorderPoint').hasError('required')\">The AutomateD\n                      Re-Order point IS required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- sku -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\">Stock Keeping Unit</mat-label>\n                    <input matInput formControlName=\"sku\" />\n                    <mat-error *ngIf=\"mngForm.get('sku').hasError('required')\">The stock keeping unit is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!--  description -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label class=\"\"> Description </mat-label>\n                    <textarea matInput formControlName=\"description\"></textarea>\n                    <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">The description is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <div mat-dialog-action [align]=\"'end'\">\n                    <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                      (click)=\"cancel()\">\n                      Cancel\n                    </button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"\n                      (click)=\"submit()\">\n                      Submit\n                    </button>\n\n                  </div>\n                </div>\n              </div>\n            </form>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { ItemCategoryService } from 'src/app/erp-inventory/data/services/item-category.service';\n\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-all-categories',\n  templateUrl: './all-categories.component.html',\n  styleUrls: ['./all-categories.component.scss']\n})\nexport class AllCategoriesComponent implements OnInit {\n\n  displayedColumns: string[] = \n  [\n    'index',\n    'categoryCode',\n    'categoryName', \n    'categoryDescription',\n    'expenseType', \n    // 'itemCategory',\n    'productType', \n    // 'accountName',\n    // 'accountNumber',\n    'action'\n  ];\n  \n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n \n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n \n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private ItemCatManService: ItemCategoryService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  getData() {\n    this.ItemCatManService.getItemCategories().pipe(takeUntil(this.destroy$)).subscribe(\n      {\n        next: (res) => {\n          console.log(\"categories: \", res)\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n    \n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n\n  addItemCat() {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/manage-itemcat\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n\n  editItemCat(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"mm\", data)\n  \n    let route = '/erp-inventory/inventory-parameters/manage-itemcat';\n    this.router.navigate([route], { queryParams: { categoryCode: data.categoryCode, additionalData: serializedData, action: 'Update' } });\n  }\n  viewItemCat(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = '/erp-inventory/inventory-parameters/manage-itemcat';\n    this.router.navigate([route], { queryParams: { categoryCode: data.categoryCode, additionalData: serializedData, action: 'View' } });\n  }\n\ndeleteItemCat(categoryCode: number)\n{\n  Swal.fire\n  (\n    {\n      title: \"Are you Sure?\",\n      text: \"This item category will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor:\"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Item category\",\n    }\n  ).then((result)=>\n  {\n    if (result.isConfirmed)\n    {\n      const params = new HttpParams()\n      .set(\"categoryCode\", categoryCode);\n      this.ItemCatManService.deleteItemCategoriesPemanently(params).pipe(takeUntil(this.destroy$)).subscribe\n      (\n        {\n          next: (res) => \n          {\n            this.snackbar.showNotification\n            (\n              \"snackbar-success\",\n              \"Item Category Deleted Successfully\"\n            );\n          },\n          error: (err) =>\n          {\n            this.snackbar.showNotification\n            (\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: ()=>\n          {\n            this.getData();\n          }\n        }\n      ), Subscription;\n    }\n  }\n  );\n}\n}   ","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header body\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Item Categories'\" [items]=\"['Item Categories']\"\n        [active_item]=\"'All Item Categories'\" class=\"bg-table-header\">\n      </app-breadcrumb>\n    </div>\n\n\n    <app-gen-widgets></app-gen-widgets>\n    \n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card bg-card mat-elevation-x0\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader bg-table-header font\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2 class=\"h2-col\"> Item Categories </h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addItemCat()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- <hr> -->\n              <div class=\"table-style mat-elevation-z0\">\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                  class=\"mat-cell my-class-with-custom-shadow\" #exporter=\"matTableExporter\" class=\"font-table mat-cell\">\n\n                  <!-- #-->\n                  <ng-container matColumnDef=\"index\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0 \"> #\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let index = index\" (click)=\"onSelect(row)\">\n                      <span> {{index + 1}}</span></mat-cell>\n                  </ng-container>\n\n                  <!-- categoryCode-->\n                  <ng-container matColumnDef=\"categoryCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0 \"> Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.categoryCode}}</mat-cell>\n                  </ng-container>\n\n\n                  <!-- categoryName -->\n                  <ng-container matColumnDef=\"categoryName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Category Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.categoryName}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- categoryDescription -->\n                  <ng-container matColumnDef=\"categoryDescription\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Category\n                      Description </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.categoryDescription}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- itemCategory -->\n                  <!-- <ng-container matColumnDef=\"itemCategory\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col\"> itemCategory </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.itemCategory}}\n                    </mat-cell>\n                  </ng-container> -->\n                  <!-- itemCategory -->\n                  <!-- <ng-container matColumnDef=\"itemCategory\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col\"> itemCategory </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.itemCategory}}\n                    </mat-cell>\n                  </ng-container> -->\n\n                  <!-- productType -->\n                  <ng-container matColumnDef=\"productType\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\">Product Type\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.productType}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- expenseType -->\n                  <ng-container matColumnDef=\"expenseType\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Expense Type\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.expenseType}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- accountName -->\n                  <ng-container matColumnDef=\"accountName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Account Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.accountName}}\n                    </mat-cell>\n                  </ng-container>\n\n                  <!-- accountNumber -->\n                  <ng-container matColumnDef=\"accountNumber\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Account Number\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.accountNumber}}\n                    </mat-cell>\n                  </ng-container>\n\n\n\n                  <ng-container matColumnDef=\"action\">\n                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef\n                      class=\"end-col mat-elevation-z0\">Action</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i = index\"\n                      class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"editItemCat(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"viewItemCat(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteItemCat(row.categoryCode)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button>\n                    </mat-cell>\n                  </ng-container>\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewItemCat(row)\"\n                    [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                  <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</mat-cell>\n                </mat-table>\n\n              </div>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ThumbsDown } from 'angular-feather/icons';\nimport { Subject, Subscription, takeUntil } from 'rxjs';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { GlsLookupComponent } from 'src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component';\nimport { ItemCategoryService } from 'src/app/erp-inventory/data/services/item-category.service';\nimport { NotificationService } from 'src/app/erp-procurement/data/services/notification.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport * as XLSX from 'xlsx';\n\n@Component({\n  selector: 'app-manage-categories',\n  templateUrl: './manage-categories.component.html',\n  styleUrls: ['./manage-categories.component.scss']\n})\nexport class ManageCategoriesComponent implements OnInit {\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  categoryCode: any;\n  hideSubmit = false;\n  expensetypes: string[] = ['OPEX', 'CAPEX'];\n  productTypes: string[] = ['Goods', 'Services', 'Goods & Services'];\n  headerRows: any;\n  excelFileAccepted = false;\n  uploadedData: any;\n  exceldata: [][] | undefined;\n  excelDataPresent = false;\n  displayedColumns: string[] = [\n    \"categoryName\",\n    \"expenseType\",\n    \"productType\",\n    \"categoryDescription\",\n    // \"accountNumber\",\n    // \"accountName\",\n  ];\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n  //excel columns\n  excelHeaderRef: any[] =\n    [\n      \"categoryName\",\n      \"expenseType\",\n      \"productType\",\n      \"categoryDescription\",\n      // \"accountNumber\",\n      // \"accountName\",\n    ];\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private ItemCatService: ItemCategoryService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  //******************************************************************************************************************************************************** */\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n    this.route.queryParams.subscribe((params) => {\n      console.log\n        (\"res\", params)\n      if (params.hasOwnProperty(\"categoryCode\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n        this.categoryCode = params[\"categoryCode\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n        this.formData = additionalData;\n        this.getPage();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n    }\n  }\n\n  //******************************************************************************************************************************************************** */\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n\n      categoryName: [\"\", [Validators.required]],\n      expenseType: [\"\", [Validators.required]],\n      productType: [\"\", [Validators.required]],\n      categoryDescription: [\"\", [Validators.required]],\n      // accountName: [\"\", [Validators.required]],\n      // accountNumber: [\"\", [Validators.required]],\n      // budgetAmount: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      // categoryId: [this.formData.categoryId],\n      categoryCode: [this.formData.categoryCode],\n      categoryName: [this.formData.categoryName, [Validators.required]],\n      expenseType: [this.formData.expenseType, [Validators.required]],\n      productType: [this.formData.productType, [Validators.required]],\n      categoryDescription: [this.formData.categoryDescription, [Validators.required]],\n      // accountName: [this.formData.accountName, [Validators.required]],\n      // accountNumber: [this.formData.accountNumber, [Validators.required]],\n      // budgetAmount: [this.formData.budgetAmount, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      // categoryId: [{ value: this.formData.categoryId, disabled: true }],\n      categoryCode: [{ value: this.formData.categoryCode, disabled: true }],\n      categoryName: [{ value: this.formData.categoryName, disabled: true }],\n      expenseType: [{ value: this.formData.expenseType, disabled: true }],\n      productType: [{ value: this.formData.productType, disabled: true }],\n      categoryDescription: [{ value: this.formData.categoryDescription, disabled: true }],\n      // accountName: [{ value: this.formData.accountName, disabled: true }],\n      // accountNumber: [{ value: this.formData.accountNumber, disabled: true }],\n      // budgetAmount: [{ value: this.formData.budgetAmount, disabled: true }],\n    });\n  }\n  //******************************************************************************************************************************************************** */\n  // Look up for the GLs for stock accounts mapping\n  selectedItem: any[] = [];\n  _glsLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View GL Accounts\",\n      selected: this.selectedItem,\n      type: \"Expense\"\n    }\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach(element => {\n        this.mngForm.patchValue({\n          accountName: element.accountID,\n          accountNumber: element.description,\n        })\n      });\n    });\n  }\n\n  // <!-- accountName\n  // accountNumber -->\n\n  //******************************************************************************************************************************************************** */\n  cancel(): void {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/all-itemcat\"]);\n\n  }\n\n  //******************************************************************************************************************************************************** */\n\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.ItemCatService\n        .addItemCategories(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Item Category Added Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-itemcat\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.ItemCatService\n        .updateItemCategories(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Item Category Updated Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-itemcat\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n\n  //******************************************************************************************************************* */\n  //Mass upload through excel\n  @ViewChild(\"fileInput\") fileInput: any;\n  importExcel() {\n    this.fileInput.nativeElement.click();\n  }\n\n  items: any[] = []; //Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n        this.items = jsonData;\n        console.log(\"this.items:::\", this.items);\n        //Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), //array of items\n        })\n      }\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  //compare the excel headers\n  compareExcelHeaders() {\n    if (this.headerRows.length != this.excelHeaderRef.length) {\n      this.notificationAPI.alertWarning(\"PLEASE CONFIRM ALL FIELDS ARE PRESENT INCHECK THE UPLOADED EXCEL FILE!\")\n    }\n    else if (this.headerRows.length == this.excelHeaderRef.length) {\n      if (JSON.stringify(this.headerRows) === JSON.stringify(this.excelHeaderRef)) {\n        this.excelFileAccepted = true;\n        this.notificationAPI.alertSuccess(\"THE EXCEL FILE IS VALID!\");\n      } else if (\n        JSON.stringify(this.headerRows) !== JSON.stringify(this.excelHeaderRef)\n      ) {\n        this.excelFileAccepted = false;\n        this.notificationAPI.alertWarning(\"PLEASE CHECK THE UPLOADED EXCEL FILE, AND TRY AGAIN!\");\n      }\n    }\n  }\n  //filter through the table\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceItems.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourceItems.paginator) {\n      this.dataSourceItems.paginator.firstPage();\n    }\n  }\n  //populate table from excel\n  createPopulatedForm() {\n    this.mngForm = this.fb.group(\n      {\n        categoryName: [this.exceldata, [Validators.required]],\n        expenseType: [this.exceldata, [Validators.required]],\n        productType: [this.exceldata, [Validators.required]],\n        categoryDescription: [this.exceldata, [Validators.required]],\n        // accountNumber: [this.exceldata, [Validators.required]],\n        // accountName: [this.exceldata, [Validators.required]],\n      }\n    )\n  }\n  //Submitting the batch upload\n  submitBatch() {\n    let excelUpload = this.items\n    if (this.pageFunction === \"Add\") {\n      this.ItemCatService\n        .uploadBatchItemCats(excelUpload)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Item Categories Added Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-itemcat\"]);\n            }\n            else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => { },\n        })\n    }\n\n  }\n\n  //******************************************************************************************************************* */\n\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Item Category'\" [items]=\"['All Item Categories']\"\n        [active_item]=\"'Manage Item Category'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"card\">\n      <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n        <mat-tab label=\"ADD ITEM CATEGORIES\">\n          <div class=\"row  clearfix mx-2\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n             \n   \n                <div class=\"body\">\n      \n                  <form class=\"m-4 \" [formGroup]=\"mngForm\">\n                    <div class=\"row mx-2\">\n      \n                      <!--  categoryName -->\n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\"> Name </mat-label>\n                          <input matInput formControlName=\"categoryName\" />\n                          <mat-error *ngIf=\"mngForm.get('categoryName').hasError('required')\">The category name is\n                            required</mat-error>\n                        </mat-form-field>\n                      </div>\n      \n                      <!-- expenseType -->\n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\">Expense Type</mat-label>\n                          <mat-select formControlName=\"expenseType\">\n                            <mat-option *ngFor=\"let expenseType of expensetypes\" [value]=\"expenseType\">\n                              {{ expenseType}}\n                            </mat-option>\n                          </mat-select>\n                          <mat-error *ngIf=\"mngForm.get('expenseType').hasError('required')\">The expense type is\n                            required</mat-error>\n                        </mat-form-field>\n                      </div>\n      \n                      <!-- productType -->\n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\">Product Type</mat-label>\n                          <mat-select formControlName=\"productType\">\n                            <mat-option *ngFor=\"let productType of productTypes\" [value]=\"productType\">\n                              {{ productType}}\n                            </mat-option>\n                          </mat-select>\n                          <mat-error *ngIf=\"mngForm.get('productType').hasError('required')\">The product is\n                            required</mat-error>\n                        </mat-form-field>\n                      </div>\n      \n                      <!--  accountName -->\n                      <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\"> Account Name </mat-label>\n                          <input matInput formControlName=\"accountName\" readonly/>\n                          <mat-icon matSuffix (click)=\"_glsLookUp()\">search</mat-icon>\n                          <mat-error *ngIf=\"mngForm.get('accountName').hasError('required')\">The account name is\n                            required</mat-error>\n                        </mat-form-field>\n                      </div> -->\n  \n                     \n      \n                      <!--  accountNumber -->\n                      <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\"> Account Number </mat-label>\n                          <input matInput formControlName=\"accountNumber\" readonly/>\n                          <mat-icon matSuffix (click)=\"_glsLookUp()\">search</mat-icon>\n                          <mat-error *ngIf=\"mngForm.get('accountNumber').hasError('required')\">The account number is\n                            required</mat-error>\n                        </mat-form-field>\n                      </div> -->\n      \n                      <!--  categoryDescription -->\n                      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label class=\"\"> Description </mat-label>\n                          <textarea matInput formControlName=\"categoryDescription\"></textarea>\n                          <mat-error *ngIf=\"mngForm.get('categoryDescription').hasError('required')\">The category descrition\n                            is required</mat-error>\n                        </mat-form-field>\n                      </div>\n      \n                    </div>\n      \n                    <div class=\"row\">\n                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                        <div mat-dialog-action [align]=\"'end'\">\n                          <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                            (click)=\"cancel()\">\n                            Cancel\n                          </button>\n                          <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"\n                            (click)=\"submit()\">\n                            Submit\n                          </button>\n      \n                        </div>\n                      </div>\n                    </div>\n                  </form>\n      \n                </div>\n              </div>\n          \n          </div>\n        </mat-tab>\n        <mat-tab label=\"UPLOAD MULTIPLE ITEM CATEGORIES\">\n          <div [hidden]=\"hideSubmit\" >\n            <div class=\"row clearfix mx-2\" >\n              <div class=\"mt-4 m-3\">\n                <div class=\"row clearfix mx-2\">\n                  <h5>Upload Excel File</h5>\n                </div>\n  \n                <div class=\"mx-3\">\n                  <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                  \n    \n                  \n                </div>\n                <div class=\"mt-4 mx-3\">\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        \n                        <th>Category Name</th>\n                        <th>Expense Type</th>\n                        <th>Product Type</th>\n                        <th>Category Description</th>\n                        <th>Account Name</th>\n                        <th>Account Number</th>\n                        \n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let item of items\">\n                        <td>{{ item.categoryName }}</td>\n                        <td>{{ item.expenseType }}</td>\n                        <td>{{ item.productType }}</td>\n                        <td>{{ item.categoryDescription}}</td>\n                        <td>{{ item.accountName }}</td>\n                        <td>{{ item.accountNumber }}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"this.excelDataPresent\">\n            <br />\n            <div class=\"row mx-2\">\n              <div class=\"col-md-4 col-sm-12\">\n                <mat-form-field>\n                  <span matPrefix> </span>\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search...\" #input />\n                  <button matSuffix mat-button> &nbsp;\n                    <mat-icon color=\"primary\">search</mat-icon>\n                  </button>\n                </mat-form-field>\n              </div>\n            </div>\n            <br />\n            <div class=\"table-row\">\n              <table class=\"y-scrollable-table\" mat-table matSort matTableExporter [dataSource]=\"dataSource\">\n                <ng-container matColumnDef=\"index\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\n                  <td mat-cell *matCellDef=\"let element; let i = index\">\n                    {{ i + 1 }}\n                  </td>\n                </ng-container>\n  \n                <!-- Account Name -->\n                <ng-container matColumnDef=\"accountName\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                    GL Account Name\n                  </th>\n                  <td mat-cell *matCellDef=\"let row\">\n                    {{ row.accountName | uppercase }}\n                  </td>\n                </ng-container>\n                <!-- Account Number -->\n  \n                <ng-container matColumnDef=\"accountNumber\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                      GL Account Number.\n                    </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                      {{ row.accountNumber | uppercase }}\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr (click)=\"onSelect()\" mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n                <tr class=\"mat-row\" *matNoDataRow>\n                  <td class=\"mat-cell\" colspan=\"4\">\n                    No data matching the filter \"{{ input.value }}\"\n                  </td>\n                </tr>\n              </table>\n            </div>\n            <mat-paginator [pageSizeOptions]=\"[7, 20, 30, 40, 50, 100]\" aria-label=\"Select page\"></mat-paginator>\n          </div>\n          <br>\n      <div class=\"row  mx-3\">\n        \n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n            <div mat-dialog-action [align]=\"'end'\">\n              <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                Cancel\n              </button>\n              <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" (click)=\"submitBatch()\">\n                Submit Batch\n              </button>\n            </div>\n          </div>\n        </div>\n      \n        </mat-tab>\n      </mat-tab-group>\n\n    </div>\n    \n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllCatalogueComponent } from './catalogue/all-catalogue/all-catalogue.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { ManageCatalogueComponent } from './catalogue/manage-catalogue/manage-catalogue.component';\nimport { AllCategoriesComponent } from './categories/all-categories/all-categories.component';\nimport { ManageCategoriesComponent } from './categories/manage-categories/manage-categories.component';\nimport { AllStoreManagementComponent } from './mainStore/all-store-management/all-store-management.component';\nimport { ManageMainStoreComponent } from './mainStore/manage-main-store/manage-main-store.component';\nimport { AllBranchstoresComponent } from './branchstores/all-branchstores/all-branchstores.component';\nimport { ManageBranchstoresComponent } from './branchstores/manage-branchstores/manage-branchstores.component';\nimport { AllUnitsComponent } from './unitsOfMeasure/all-units/all-units.component';\nimport { ManageUnitsComponent } from './unitsOfMeasure/manage-units/manage-units.component';\nimport { AllBranchstoreROLSComponent } from './branchstoreROLS/all-branchstore-rols/all-branchstore-rols.component';\nimport { ManageBranchstoreROLSComponent } from './branchstoreROLS/manage-branchstore-rols/manage-branchstore-rols.component';\n\nconst routes: Routes = [\n  {\n    path: \"all-catalogue\",\n    component: AllCatalogueComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"All Catalogue\"] },\n  },\n  {\n    path: \"manage-catalogue\",\n    component: ManageCatalogueComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"Manage Catalogue\"] },\n  },\n  {\n    path: \"all-itemcat\",\n    component: AllCategoriesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"All Item Categories\"] },\n  },\n  {\n    path: \"manage-itemcat\",\n    component: ManageCategoriesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"Manage Item Categories\"] },\n  },\n  {\n    path: \"all-mainstores\",\n    component: AllStoreManagementComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"All Main Stores\"] },\n  },\n  {\n    path: \"manage-mainstores\",\n    component: ManageMainStoreComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"Manage Main Stores\"] },\n  },\n  {\n    path: \"all-branchstores\",\n    component: AllBranchstoresComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"All Branch Stores\"] },\n  },\n  {\n    path: \"manage-branchstores\",\n    component: ManageBranchstoresComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"Manage Branch Stores\"] },\n  },\n\n  //units of measure\n  {\n    path: \"all-UnitOfMeasure\",\n    component: AllUnitsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"All Units\"] },\n  },\n  {\n    path: \"manage-UnitOfMeasure\",\n    component: ManageUnitsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'InventoryModule', requiredPrivilege: [\"Manage Units\"] },\n  },\n\n  //branchReorder Levels (ROLS)\n  {\n    path: \"all-rols\",\n    component: AllBranchstoreROLSComponent\n    , canActivate: [RoutePrivilegeGuard]\n    , data: { clientName: 'InventoryModule', requiredPrivilege: [\"All Branch ROLS\"] }\n  },\n  {\n    path: \"manage-rols\",\n    component: ManageBranchstoreROLSComponent\n    , canActivate: [RoutePrivilegeGuard]\n    , data: { clientName: 'InventoryModule', requiredPrivilege: [\"Manage Branch ROLS\"] }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventoryParametersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InventoryParametersRoutingModule } from './inventory-parameters-routing.module';\nimport { AllCatalogueComponent } from './catalogue/all-catalogue/all-catalogue.component';\nimport { ManageCatalogueComponent } from './catalogue/manage-catalogue/manage-catalogue.component';\nimport { AllCategoriesComponent } from './categories/all-categories/all-categories.component';\nimport { ManageCategoriesComponent } from './categories/manage-categories/manage-categories.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { ErpInventoryModule } from '../../erp-inventory.module';\nimport { InventoryManagementModule } from '../inventory-management/pages/Inventory-management.module';\nimport { AllStoreManagementComponent } from './mainStore/all-store-management/all-store-management.component';\nimport { ManageMainStoreComponent } from './mainStore/manage-main-store/manage-main-store.component';\nimport { AllBranchstoresComponent } from './branchstores/all-branchstores/all-branchstores.component';\nimport { ManageBranchstoresComponent } from './branchstores/manage-branchstores/manage-branchstores.component';\nimport { AllUnitsComponent } from './unitsOfMeasure/all-units/all-units.component';\nimport { ManageUnitsComponent } from './unitsOfMeasure/manage-units/manage-units.component';\nimport { AllBranchstoreROLSComponent } from './branchstoreROLS/all-branchstore-rols/all-branchstore-rols.component';\nimport { ManageBranchstoreROLSComponent } from './branchstoreROLS/manage-branchstore-rols/manage-branchstore-rols.component';\n\n\n\n@NgModule({\n  declarations: [\n    AllStoreManagementComponent,\n    ManageMainStoreComponent,\n    AllBranchstoresComponent,\n    ManageBranchstoresComponent,\n    AllCatalogueComponent,\n    ManageCatalogueComponent,\n    AllCategoriesComponent,\n    ManageCategoriesComponent,\n    AllUnitsComponent,\n    ManageUnitsComponent,\n    AllBranchstoreROLSComponent,\n    ManageBranchstoreROLSComponent,\n    \n\n  ],\n  imports: [\n    CommonModule,\n    InventoryParametersRoutingModule,\n    ErpInventoryModule,\n    InventoryManagementModule,\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    \n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n    \n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n    \n    MatFormFieldModule,\n    \n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    \n    MatSnackBarModule,\n    MatToolbarModule,\n    \n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule    \n  ]\n  \n})\nexport class InventoryParametersModule { }\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { id } from 'date-fns/locale';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { MainstoreService } from 'src/app/erp-inventory/data/services/mainstore.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-all-store-management',\n  templateUrl: './all-store-management.component.html',\n  styleUrls: ['./all-store-management.component.scss']\n})\nexport class AllStoreManagementComponent implements OnInit {\n\n  displayedColumns: string[] = \n  [\n    'storeId',\n    'storeLocation', \n    'storeName',\n    'phone',\n    'email',\n    'action'\n  ];\n\n  \n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n \n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n \n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private MainStoreService: MainstoreService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  getData() {\n    this.MainStoreService.getMainStore().pipe(takeUntil(this.destroy$)).subscribe(\n      {\n        next: (res) => {\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n    \n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n\n  addStockCall() {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/manage-mainstores\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n\n  editMainStore(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"mm\", data)\n  \n    let route = '/erp-inventory/inventory-parameters/manage-mainstores';\n    this.router.navigate([route], { queryParams: { storeId: data.storeId, additionalData: serializedData, action: 'Update' } });\n  }\n  viewMainStore(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = '/erp-inventory/inventory-parameters/manage-mainstores';\n    this.router.navigate([route], { queryParams: { storeId: data.storeId, additionalData: serializedData, action: 'View' } });\n    \n  }\n\ndeleteMainStore(storeId: number)\n{\n  Swal.fire\n  (\n    {\n      title: \"Are you Sure?\",\n      text: \"This main store will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor:\"#3085d6\",\n      confirmButtonText: \"Yes, Delete this main store \",\n    }\n  ).then((result)=>\n  {\n    if (result.isConfirmed)\n    {\n      const params = new HttpParams()\n      .set(\"storeId\", storeId);\n      this.MainStoreService.deleteMainStorePemanently(params).pipe(takeUntil(this.destroy$)).subscribe\n      (\n        {\n          next: (res) => \n          {\n            this.snackbar.showNotification\n            (\n              \"snackbar-success\",\n              \"Main Store Deleted Successfully\"\n            );\n          },\n          error: (err) =>\n          {\n            this.snackbar.showNotification\n            (\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: ()=>\n          {\n            this.getData();\n          }\n        }\n      ), Subscription;\n    }\n  }\n  );\n}\n}","0<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header body\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Main Stores'\" [items]=\"['Main Stores']\" [active_item]=\"'All Main Stores'\">\n      </app-breadcrumb>\n    </div>\n\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card bg-card mat-elevation-z0\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader bg-table-header font\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2> Main Stores </h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addStockCall()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- <hr> -->\n              <div class=\"table-style mat-elevation-z0\">\n                <table mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                  #exporter=\"matTableExporter\">\n\n\n                  <!-- <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-9\">Id</th>\n                    <td mat-cell *matCellDef=\"let mainstore\" class=\"table-img tbl-col-width-per-9\">{{mainstore.id}}</td>\n                  </ng-container> -->\n\n                  <!-- storeId-->\n                  <ng-container matColumnDef=\"storeId\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0 \"> ID\n                    </th>\n                    <td mat-cell *matCellDef=\"let mainstore\" (click)=\"onSelect(mainstore)\">\n                      {{mainstore.storeId}}</td>\n                  </ng-container>\n\n\n                  <!-- storeLocation -->\n                  <ng-container matColumnDef=\"storeLocation\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Location\n                    </th>\n                    <td mat-cell *matCellDef=\"let mainstore\" (click)=\"onSelect(mainstore)\"> {{mainstore.storeLocation}}\n                    </td>\n                  </ng-container>\n\n                  <!-- storeName -->\n                  <ng-container matColumnDef=\"storeName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Name\n                    </th>\n                    <td mat-cell *matCellDef=\"let mainstore\" (click)=\"onSelect(mainstore)\"> {{mainstore.storeName}}\n                    </td>\n                  </ng-container>\n\n                  <!-- Phone -->\n                  <ng-container matColumnDef=\"phone\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Phone\n                    </th>\n                    <td mat-cell *matCellDef=\"let mainstore\" (click)=\"onSelect(mainstore)\"> {{mainstore.phone}}\n                    </td>\n                  </ng-container>\n\n                  <!-- email -->\n                  <ng-container matColumnDef=\"email\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> E-Mail\n                    </th>\n                    <td mat-cell *matCellDef=\"let mainstore\" (click)=\"onSelect(mainstore)\"> {{mainstore.email}}\n                    </td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef\n                      class=\"end-col mat-elevation-z0\">Action</th>\n                    <td mat-cell *matCellDef=\"let mainstore; let i = index\"\n                      class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"editMainStore(mainstore)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"viewMainStore(mainstore)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteMainStore(mainstore.storeId)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button>\n                    </td>\n                  </ng-container>\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let mainstore; columns: displayedColumns;\" (click)=\"viewMainStore(mainstore)\"\n                    [style.cursor]=\"'pointer'\" matRipple>\n                  </tr>\n                  <td mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</td>\n                </table>\n              </div>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\n\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { MainstoreService } from 'src/app/erp-inventory/data/services/mainstore.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-main-store',\n  templateUrl: './manage-main-store.component.html',\n  styleUrls: ['./manage-main-store.component.scss']\n})\nexport class ManageMainStoreComponent implements OnInit {\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  storeId: any;\n  hideSubmit = false;\n  hideGenReport = false;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private mainStoreService: MainstoreService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n\n\n    this.getPage();\n    this.showForm = true;\n\n    console.log(\"this.formData: \", this.formData);\n\n    this.route.queryParams.subscribe((params) => {\n      console.log\n      (\"res\", params)\n      if (params.hasOwnProperty(\"storeId\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n\n        this.storeId = params[\"storeId\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n\n        this.formData = additionalData;\n\n        console.log(\"ID:\", this.storeId);\n        console.log(\"Additional Data:\", additionalData);\n\n        this.getPage();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getPage(): void {\n    console.log(\"RES\", this.formData)\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideGenReport = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideGenReport = true;\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideGenReport = false;\n    \n    }\n  }\n\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      // storeId: [\"\",],\n      storeName: [\"\", [Validators.required]],\n      storeLocation: [\"\", [Validators.required]],\n      phone: [\"\", [Validators.required]],\n      email: [\"\", [Validators.required]],\n\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      storeId: [this.formData.storeId],\n      storeName: [this.formData.storeName, [Validators.required]],\n      storeLocation: [this.formData.storeLocation, [Validators.required]],\n      phone: [this.formData.phone, [Validators.required]],\n      email: [this.formData.email, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      storeId: [{ value: this.formData.storeId, disabled: true }],\n      storeName: [{value: this.formData.storeName, disabled: true}],\n      storeLocation: [{ value: this.formData.storeLocation, disabled: true }],\n      phone: [{ value: this.formData.phone, disabled: true }],\n      email: [{ value: this.formData.email, disabled: true }],\n    });\n  }\n\n\n  cancel(): void {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/all-mainstores\"]);\n\n  }\n\n  GenReport(){\n\n      this.mainStoreService.genReport(this.mngForm.value.storeId).subscribe(result => {\n        const blob = new Blob([result], { type: 'application/pdf' });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'report.pdf';\n        link.click();\n        window.URL.revokeObjectURL(url);\n      });\n      \n  }\n\n\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.mainStoreService\n        .addMainStore(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Main Store Added Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-mainstores\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.mainStoreService\n        .updateMainStore(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Main Store Updated Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-mainstores\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Main Stores'\" [items]=\"['Main Stores']\" [active_item]=\"'Manage Main Stores'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <div class=\"row\">\n              <h2>{{ pageFunction }} Main Store </h2>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\">\n            </div>\n          </div>\n          <div class=\"body\">\n\n            <form class=\"m-4 font\" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n\n                <!-- storeId -->\n                <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>storeId</mat-label>\n                    <input matInput formControlName=\"storeId\" />\n                    <mat-error *ngIf=\"mngForm.get('storeId').hasError('required')\">storeId is required</mat-error>\n                  </mat-form-field>\n              </div> -->\n                <!--  storeName -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"font\"> Name </mat-label>\n                    <input matInput formControlName=\"storeName\" />\n                    <mat-error *ngIf=\"mngForm.get('storeName').hasError('required')\">The store name is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!--  storeLocation -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"font\"> Location </mat-label>\n                    <input  matInput formControlName=\"storeLocation\" />\n                    <mat-error *ngIf=\"mngForm.get('storeLocation').hasError('required')\">The store location is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- Phone -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"font\"> Phone </mat-label>\n                    <input type=\"number\" matInput formControlName=\"phone\" />\n                    <mat-error *ngIf=\"mngForm.get('phone').hasError('required')\">The phone number is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- Email -->\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label class=\"font\"> E-mail </mat-label>\n                    <input matInput formControlName=\"email\">\n                    <mat-error *ngIf=\"mngForm.get('email').hasError('required')\">The email is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                  <div mat-dialog-action [align]=\"'end'\">\n                    <button class=\"btn-space\" *ngIf=\"!hideGenReport\" mat-raised-button color=\"primary\"\n                      (click)=\"GenReport()\">Generate Report\n                    </button>\n                    <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                      (click)=\"cancel()\">\n                      Cancel\n                    </button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"\n                      (click)=\"submit()\">\n                      Submit\n                    </button>\n\n                  </div>\n                </div>\n              </div>\n            </form>\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { ItemCategoryService } from \"src/app/erp-inventory/data/services/item-category.service\";\nimport { UnitsOfMeasureService } from \"src/app/erp-inventory/data/services/units-of-measure.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-units\",\n  templateUrl: \"./all-units.component.html\",\n  styleUrls: [\"./all-units.component.scss\"],\n})\nexport class AllUnitsComponent implements OnInit {\n  displayedColumns: string[] = [\"id\", \"unitOfMeasureName\", \"action\"];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private unitManService: UnitsOfMeasureService\n  ) {}\n\n  ngOnInit(): void {\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  getData() {\n    this.unitManService\n      .getUnit()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"categories: \", res);\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  addUnitOfMeasure() {\n    this.router.navigate([\n      \"/erp-inventory/inventory-parameters/manage-UnitOfMeasure\",\n    ]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  editUnitOfMeasure(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"mm\", data);\n\n    let route = \"/erp-inventory/inventory-parameters/manage-UnitOfMeasure\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n  viewUnitOfMeasure(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = \"/erp-inventory/inventory-parameters/manage-UnitOfMeasure\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n\n  deleteUnitOfMeasure(id: number) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This unit of measure will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this unit of measure\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.unitManService\n          .deleteUnitPermanently(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"unit of measure Deleted Successfully\"\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header body\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Units of Measure'\" [items]=\"['Units of Measure']\"\n        [active_item]=\"'All Units of Measure'\" class=\"bg-table-header\">\n      </app-breadcrumb>\n    </div>\n\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card bg-card mat-elevation-x0\">\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader bg-table-header font\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2 class=\"h2-col\"> Units of Measure </h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addUnitOfMeasure()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- <hr> -->\n              <div class=\"table-style mat-elevation-z5\">\n                <table mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                  class=\"my-class-with-custom-shadow\" #exporter=\"matTableExporter\" class=\"font-table\">\n\n\n                  <!-- <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col\" class=\"table-img tbl-col-width-per-9\">Id</th>\n                    <td mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">{{row.id}}</td>\n                  </ng-container> -->\n\n                  <!-- id-->\n                  <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0 \"> ID </th>\n                    <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\" class=\"mat-column\"> {{row.id}}</td>\n                  </ng-container>\n\n\n                  <!-- unitOfMeasure -->\n                  <ng-container matColumnDef=\"unitOfMeasureName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col mat-elevation-z0\"> Unit </th>\n                    <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.unitOfMeasureName}}\n                    </td>\n                  </ng-container>\n\n\n\n                  <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef\n                      class=\"end-col mat-elevation-z0\">Actions</th>\n                    <td mat-cell *matCellDef=\"let row; let i = index\"\n                      class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"editUnitOfMeasure(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"viewUnitOfMeasure(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                      </button>\n\n                      <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"deleteUnitOfMeasure(row.id)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button>\n                    </td>\n                  </ng-container>\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewUnitOfMeasure(row)\"\n                    [style.cursor]=\"'pointer'\" matRipple>\n                  </tr>\n                  <td mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</td>\n                </table>\n\n              </div>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { UnitsOfMeasureService } from 'src/app/erp-inventory/data/services/units-of-measure.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-units',\n  templateUrl: './manage-units.component.html',\n  styleUrls: ['./manage-units.component.scss']\n})\nexport class ManageUnitsComponent implements OnInit {\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private unitManService: UnitsOfMeasureService,\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n\n\n    this.getPage();\n    this.showForm = true;\n\n    console.log(\"this.formData: \", this.formData);\n\n    this.route.queryParams.subscribe((params) => {\n      console.log\n      (\"res\", params)\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n\n        this.id = params[\"id\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n\n        this.formData = additionalData;\n\n        console.log(\"ID:\", this.id);\n        console.log(\"Additional Data:\", additionalData);\n\n        this.getPage();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n    }\n  }\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      \n      unitOfMeasureName: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      unitOfMeasureName: [this.formData.unitOfMeasureName, [Validators.required]],\n      expenseType: [this.formData.expenseType, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      unitOfMeasureName: [{value: this.formData.unitOfMeasureName, disabled: true}],\n    });\n  }\n\n\n  cancel(): void {\n    this.router.navigate([\"/erp-inventory/inventory-parameters/all-UnitOfMeasure\"]);\n\n  }\n\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.unitManService\n        .addUnit(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"unit of measure Added Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-UnitOfMeasure\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.unitManService\n        .updateUnit(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", \"Unit of measure Updated Successfully\");\n              this.router.navigate([\"/erp-inventory/inventory-parameters/all-UnitOfMeasure\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content \">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Manage Units of Measure'\" [items]=\"['All Units of Measure']\"\n                [active_item]=\"'Manage Units of Measure'\">\n            </app-breadcrumb>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"header\">\n                        <div class=\"row\">\n                            <h2>{{ pageFunction }} Unit of Measure </h2>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                        </div>\n                    </div>\n                    <div class=\"body\">\n\n                        <form class=\"m-4 \" [formGroup]=\"mngForm\">\n                            <div class=\"row\">\n\n                                <!--  unitOfMeasureName -->\n                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                        <mat-label class=\"\"> Unit of Measure </mat-label>\n                                        <input matInput formControlName=\"unitOfMeasureName\" />\n                                        <mat-error *ngIf=\"mngForm.get('unitOfMeasureName').hasError('required')\">The\n                                            unit of measure name is required</mat-error>\n                                    </mat-form-field>\n                                </div>\n\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                                    <div mat-dialog-action [align]=\"'end'\">\n                                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\"\n                                            mat-button (click)=\"cancel()\">\n                                            Cancel\n                                        </button>\n                                        <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\"\n                                            [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                            Submit\n                                        </button>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>"],"names":[],"sourceRoot":"webpack:///"}