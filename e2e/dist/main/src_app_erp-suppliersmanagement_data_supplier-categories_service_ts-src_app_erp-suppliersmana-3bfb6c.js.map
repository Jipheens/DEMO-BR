{"version":3,"file":"src_app_erp-suppliersmanagement_data_supplier-categories_service_ts-src_app_erp-suppliersmana-3bfb6c.js","mappings":"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","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-suppliersmanagement/data/supplier-categories.service.ts","./src/app/erp-suppliersmanagement/modules/suppliers-maintenance/all-suppliers/all-suppliers.component.ts","./src/app/erp-suppliersmanagement/modules/suppliers-maintenance/all-suppliers/all-suppliers.component.html","./src/app/erp-suppliersmanagement/modules/suppliers-maintenance/manage-supplier/manage-supplier.component.ts","./src/app/erp-suppliersmanagement/modules/suppliers-maintenance/manage-supplier/manage-supplier.component.html","./src/app/erp-suppliersmanagement/modules/suppliers-maintenance/suppliers-maintenance-routing.module.ts","./src/app/erp-suppliersmanagement/modules/suppliers-maintenance/suppliers-maintenance.module.ts","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierCategoriesService {\n\n  constructor(private http: HttpClient) { }\n  \n  getCategories(): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/view`;\n    return this.http.get<any[]>(SupplierCatUrl);\n  }\n  getCategoriesById(id: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/supplierCategory/view_byId/${id}`);\n  }\n\n\n  addCategories(data: any): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/add`;\n    return this.http.post<any>(SupplierCatUrl, data);\n  }\n\n  updateCategories(CategoryDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/update/`;\n    return this.http.put<any>(updateBillUrl, CategoryDetails)\n  }\n\n\n  deleteCurrencyPemanently(id: any): Observable<any> {\n    const SupplierCatUrl = `${environment.baseUrlProcurement}/api/v1/supplierCategory/delete/${id}`;\n    return this.http.delete<any>(SupplierCatUrl, id);\n  }\n\n\n    // ********************************************************************************************************************\n\n\n\n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { AuthService } from \"src/app/core/service/auth.service\";\nimport { SuppliersService } from \"src/app/erp-suppliersmanagement/data/supplier-maintenance.service\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-suppliers\",\n  templateUrl: \"./all-suppliers.component.html\",\n  styleUrls: [\"./all-suppliers.component.scss\"],\n})\nexport class AllSuppliersComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"supplierCode\",\n    \"companyName\",\n    \"contactPerson\",\n    \"email\",\n    \"phone\",\n    \"address\",\n    \"prequalified\",\n    \"postedBy\",\n    \"postedTime\",\n    \"resendCredentials\",\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackbar: SnackbarService,\n    private suppliersService: SuppliersService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    \n      this.getData(this.currentPage, this.pageSize);\n    \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // getData() {\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   const params = new HttpParams().set(\"status\", this.Form.value.status);\n  //   this.suppliersService\n  //     .getSuppliersByStatus(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.data :\", res);\n  //         if (res.statusCode === 302) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {\n  //         this.selection = new SelectionModel<any>(true, []);\n  //       },\n  //     }),\n  //     Subscription;\n  // }\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n      status: this.Form.value.status,\n    };\n\n    this.suppliersService\n      .getSuppliersByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  addSupplier() {\n    this.router.navigate([\n      \"/erp-suppliers-management/suppliers-maintenance/manage-supplier\",\n    ]);\n  }\n\n  editSupplier(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route =\n      \"/erp-suppliers-management/suppliers-maintenance/manage-supplier\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Update\" },\n    });\n  }\n  viewSupplier(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route =\n      \"/erp-suppliers-management/suppliers-maintenance/manage-supplier\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"View\" },\n    });\n  }\n\n  deleteSupplier(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Supplier?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Supplier!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n\n        this.suppliersService\n          .deleteSuppliersTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //******************************************************************************************************\n  //Select Suppliers\n  supplierDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  processMultipleRows(status: any) {\n    this.isLoading = true;\n\n    const processedRows = this.selectedRows.map((element) => {\n      return {\n        id: element.id,\n        status: status,\n      };\n    });\n\n    console.log(\"LOG: \", processedRows);\n\n    this.suppliersService\n      .validateSuppliers(processedRows)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n          if (res.entity) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n\n            this.selection = new SelectionModel<any>(true, []);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.isLoading = false;\n\n          this.getData(this.currentPage, this.pageSize);\n        },\n      }),\n      Subscription;\n  }\n  //*************************************************************************************************************** */\n\n  resendEmail(row) {\n    this.downloadLoading = true;\n    if (row.email) {\n\n      this.authService\n        .forgotPasswordForSupplierSelfService(row.email)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n\n            this.downloadLoading = false;\n          },\n          error: (err) => {\n            console.log(\"err::: \", err);\n            if (err.status === 401) {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                \"Failed: Please check the user's email and try again.\"\n              );\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            }\n\n            this.downloadLoading = false;\n          },\n          complete: () => { },\n        }),\n        Subscription;\n\n      console.log(\"row.email: \", row.email);\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Suppliers'\" [items]=\"['Suppliers']\" [active_item]=\"'All Suppliers'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Suppliers</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addSupplier()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"VERIFY\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('VERIFIED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                 \n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'Suppliers-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                        <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n\n                      </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                        class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                        <mat-icon>check_circle</mat-icon>\n                        VERIFIED\n                      </button>\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"table-img tbl-col-width-per-6\">Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\">{{ row.id }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"supplierCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">SupplierCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                    {{ row.supplierCode }}</mat-cell>\n                </ng-container>\n <ng-container matColumnDef=\"companyName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">CompanyName</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\"> {{ row.companyName }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"contactPerson\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">ContactPerson</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\"> {{ row.contactPerson }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"email\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">Email</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\"> {{ row.email }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"phone\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">Phone</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\"> {{ row.phone }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"address\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">Address</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\"> {{ row.address }} </mat-cell>\n                </ng-container>\n               \n                <ng-container matColumnDef=\"prequalified\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">Prequalified</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                    <ng-container [ngSwitch]=\"row.prequalified\">\n                      <button *ngSwitchCase=\"true\" class=\"badge badge-solid-purple btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.prequalified }}\n                      </button>\n                      <button *ngSwitchCase=\"false\" class=\"badge badge-solid-red btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.prequalified }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"postedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-12\">PostedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                    {{ row.postedBy }}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"postedTime\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-12\">PostedTime</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                    {{ row.postedTime | date : \"short\" }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"resendCredentials\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">Resend Credentials</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                    <button class=\"badge badge-solid-purple btn btn btn-sm m-1\"(click)=\"$event.stopPropagation()\" (click)=\"resendEmail(row)\">\n                      <i class=\"fas fa-envelope\"></i>&nbsp;\n                      Resend Email\n                    </button>\n                    \n                   \n                  </mat-cell>\n                </ng-container>\n                \n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n                <!-- <ng-container matColumnDef=\"postedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">postedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"  > {{row.postedBy}}\n                  </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"postedTime\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">CreatedDate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"  >\n                    {{row.postedTime | date: 'MM/dd/yyyy'}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"verifiedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">verifiedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"  > {{row.verifiedBy}}\n                  </mat-cell>\n                </ng-container>\n    \n                <ng-container matColumnDef=\"verifiedTime\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">verifiedTime</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"  >\n                    {{row.verifiedTime | date: 'MM/dd/yyyy'}}</mat-cell>\n                </ng-container> -->\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editSupplier(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewSupplier(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteSupplier(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewSupplier(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n               \n                \n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                      }}\"</td>\n              </tr>\n\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              \n              \n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n\n          \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { BehaviorSubject, Subject, takeUntil, Subscription } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { SuppliersService } from \"src/app/erp-suppliersmanagement/data/supplier-maintenance.service\";\n\nimport * as XLSX from \"xlsx\";\n\nimport {\n  SelectedFiles,\n  FilesService,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { SupplierCategoriesLookupComponent } from \"src/app/erp-procurement/modules/parameters/pages/lookups/supplier-categories-lookup/supplier-categories-lookup.component\";\n\n@Component({\n  selector: \"app-manage-supplier\",\n  templateUrl: \"./manage-supplier.component.html\",\n  styleUrls: [\"./manage-supplier.component.scss\"],\n})\nexport class ManageSupplierComponent implements OnInit {\n  panelOpenState = false;\n  step = 0;\n  setStep(index: number) {\n    this.step = index;\n  }\n  nextStep() {\n    this.step++;\n  }\n  prevStep() {\n    this.step--;\n  }\n\n  showForm = false;\n  showVerificationDet = false;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n\n  bgtForm: FormGroup;\n\n  displayedColumns: string[] = [\n    \"id\",\n    \"supplierCategoryName\",\n    \"supplierCategoryCode\",\n    \"actions\",\n  ];\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  formData: any;\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n  currFile: string;\n  currFilename: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  hideSubmit = false;\n  disableActions = false;\n  supplierId: any;\n\n  prequalificationStatuses: any[] = [{ name: true }, { name: false }];\n\n  constructor(\n    private fb: FormBuilder,\n    private filesService: FilesService,\n    private tokenStorageService: TokenStorageService,\n    private suppliersService: SuppliersService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private dialog: MatDialog\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        if (params.hasOwnProperty(\"id\")) {\n          const action = params[\"action\"];\n          if (action == \"Update\") {\n            this.pageFunction = \"Update\";\n          } else if (action == \"View\") {\n            this.pageFunction = \"View\";\n            this.disableActions = true;\n          }\n\n          this.supplierId = params[\"id\"];\n          //const serializedData = params[\"additionalData\"];\n\n          this.getDataById();\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.supplierId);\n    this.suppliersService\n      .getSuppliersById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            this.showVerificationDet = true;\n            this.getPage();\n\n            // this.isLoading = false;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.dataSource.data = this.formData.categories;\n      this.refreshTable();\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.dataSource.data = this.formData.categories;\n      this.refreshTable();\n      this.hideSubmit = true;\n    }\n  }\n\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      companyName: [\"\", [Validators.required]],\n      contactPerson: [\"\", [Validators.required]],\n      email: [\"\", [Validators.required, Validators.email]],\n      phone: [\"\", [Validators.required]],\n      address: [\"\", [Validators.required]],\n      categories: [[], [Validators.required]],\n      prequalified: [true, [Validators.required]],\n      description: [\"\", [Validators.required]],\n      mainLocation: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData() {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      companyName: [this.formData.companyName, [Validators.required]],\n      contactPerson: [this.formData.contactPerson, [Validators.required]],\n      email: [this.formData.email, [Validators.required, Validators.email]],\n      phone: [this.formData.phone, [Validators.required]],\n      address: [this.formData.address, [Validators.required]],\n      categories: [this.formData.categories, [Validators.required]],\n      prequalified: [this.formData.prequalified],\n      description: [this.formData.description, [Validators.required]],\n      mainLocation: [this.formData.mainLocation, [Validators.required]],\n    });\n  }\n\n  generateDisabledFormWithData() {\n    this.mngForm = this.fb.group({\n      companyName: [{ value: this.formData.companyName, disabled: true }],\n\n      contactPerson: [{ value: this.formData.contactPerson, disabled: true }],\n      email: [\n        { value: this.formData.email, disabled: true },\n        [Validators.required],\n      ],\n      phone: [\n        { value: this.formData.phone, disabled: true },\n        [Validators.required],\n      ],\n      address: [\n        { value: this.formData.address, disabled: true },\n        [Validators.required],\n      ],\n      categories: [\n        { value: this.formData.categories, disabled: true },\n        [Validators.required],\n      ],\n      prequalified: [{ value: this.formData.prequalified, disabled: true }],\n      description: [{ value: this.formData.description, disabled: true }],\n      mainLocation: [{ value: this.formData.mainLocation, disabled: true }],\n    });\n  }\n\n  // **************************************************************************************************\n  isLoading: boolean = false;\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.isLoading = true;\n    if (this.pageFunction == \"Add\") {\n      const arrayOfObjects: any[] = [];\n      arrayOfObjects.push(this.mngForm.value);\n      console.log(\"Array of objects\", arrayOfObjects);\n      this.suppliersService\n        // .addSuppliers([this.mngForm.value])\n        .addSuppliers(arrayOfObjects)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Supplier added successfully\"\n              );\n              this.router.navigate([\n                \"/erp-suppliers-management/suppliers-maintenance/all-suppliers\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n                // \"Error creating supplier\"\n              );\n\n              console.log(\"Error\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Update\") {\n      this.suppliersService\n        .updateSuppliers(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res :\", res);\n            if (res) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-suppliers-management/suppliers-maintenance/all-suppliers\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.isLoading = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\n      \"/erp-suppliers-management/suppliers-maintenance/all-suppliers\",\n    ]);\n  }\n\n\n  onSubmitBulk() {\n    console.log(\"this.bulk: \", this.items);\n    this.isLoading = true;\n    if (this.pageFunction == \"Add\") {\n      \n      this.suppliersService\n        // .addSuppliers([this.mngForm.value])\n        .addBulkSuppliers(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Suppliers added successfully\"\n              );\n              this.router.navigate([\n                \"/erp-suppliers-management/suppliers-maintenance/all-suppliers\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n                // \"Error creating supplier\"\n              );\n\n              console.log(\"Error\", res);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            console.log(\"Error\", err);\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    } \n  }\n  \n  //****************************************************************************************************************** */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  supplierCategoryIsSelected = false;\n  manageSupplierCategories(row, action) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      action: \"multiple supplier category\",\n    };\n\n    const dialogRef = this.dialog.open(\n      SupplierCategoriesLookupComponent,\n      dialogConfig\n    );\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.supplierCategoryIsSelected = true;\n\n        // Loop through result.data items\n        result.data.forEach((selectedCategory) => {\n          const { supplierCategoryCode, supplierCategoryName } =\n            selectedCategory;\n\n          // Find matching item in dataSource.data\n          const existingItemIndex = this.dataSource.data.findIndex(\n            (item) =>\n              item.supplierCategoryCode === supplierCategoryCode ||\n              item.supplierCategoryName === supplierCategoryName\n          );\n\n          // Update existing item or create a new one\n          if (existingItemIndex !== -1) {\n            // Update existing item with specific properties\n            this.dataSource.data[existingItemIndex] = {\n              ...this.dataSource.data[existingItemIndex], // Preserve other properties\n              supplierCategoryCode,\n              supplierCategoryName,\n            };\n          } else {\n            // Create a new item with only the necessary properties\n            this.dataSource.data.push({\n              supplierCategoryCode,\n              supplierCategoryName,\n            });\n          }\n        });\n\n        this.refreshTable();\n      }\n    });\n  }\n\n  refreshTable() {\n    this.dataSource.data = [...this.dataSource.data];\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.mngForm.patchValue({\n      categories: this.dataSource.data,\n    });\n\n    console.log(\"this.dataSource.data:: \", this.dataSource.data);\n  }\n\n  deleteRecord(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.refreshTable();\n  }\n\n  private readonly templateFilename = \"ImportSuppliersTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n  // *************************************************************************************************************************************\n  @ViewChild(\"fileInput\") fileInput: any;\n  importExcel() {\n    // this.enterManually = false;\n    this.fileInput.nativeElement.click();\n  }\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      // Check if the selected file is an Excel file\n      if (\n        file.type ===\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" || // .xlsx\n        file.type === \"application/vnd.ms-excel\"\n      ) {\n        // .xls\n        // Proceed with your logic for handling the Excel file\n        console.log(\"Excel file selected:\", file);\n\n        const fileReader = new FileReader();\n        fileReader.onload = (e: any) => {\n          const arrayBuffer = e.target.result;\n          const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n          const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n          const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n          this.items = jsonData;\n\n          console.log(\" this.items :\", this.items);\n\n          // Initialize the form\n          this.itemsForm = this.fb.group({\n            items: this.fb.array([]), // Array of items\n          });\n\n          // Call the function to validate the items\n          this.validateItems();\n        };\n\n        fileReader.readAsArrayBuffer(file);\n      } else {\n        // Display an error message or take appropriate action for non-Excel files\n\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Invalid file format. Please select an Excel file.\"\n        );\n        console.error(\"Invalid file format. Please select an Excel file.\");\n      }\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = []; // Clear previous errors\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray; // Create a separate FormArray variable\n\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        companyName: [item.companyName, [Validators.required]],\n        contactPerson: [item.contactPerson, [Validators.required]],\n        email: [item.email, [Validators.required, Validators.email]],\n        phone: [item.phone, [Validators.required]],\n        address: [item.address, [Validators.required]],\n        prequalified: [\n          item.prequalified,\n          [Validators.required, Validators.pattern(/^(true|false)$/i)],\n        ],\n        description: [item.description, [Validators.required]],\n        mainLocation: [item.mainLocation, [Validators.required]],\n        category: [item.category, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup); // Use push method on the FormArray variable\n      this.collectErrors(formGroup);\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  addImportsToArray() {}\n  clearImports() {}\n\n  //***********************************************************************************************************************************8 */\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Suppliers'\" [items]=\"['Suppliers']\" [active_item]=\"'Manage Suppliers'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"header\">\n            <div class=\"row\">\n              <h2>{{ pageFunction }} Supplier</h2>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-12\"></div>\n          </div>\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"header\" *ngIf=\"pageFunction === 'Add' && !panelOpenState\">\n              <div class=\"row\">\n                <h2>Add Single Supplier</h2>\n              </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && showVerificationDet\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                              <div class=\"chat-with remarks\">\n                                <strong>Approvers Remarks:</strong>\n                                <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                              </div>\n                            </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <form *ngIf=\"!panelOpenState\" class=\"mx-4 mt-4\" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Company Name</mat-label>\n                    <input matInput formControlName=\"companyName\" required />\n                    <mat-error *ngIf=\"mngForm.get('companyName').hasError('required')\">Company Name is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Contact Person</mat-label>\n                    <input matInput formControlName=\"contactPerson\" required />\n                    <mat-error *ngIf=\"mngForm.get('contactPerson').hasError('required')\">Contact person is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required />\n                    <mat-error *ngIf=\"mngForm.get('email').hasError('required')\">Email is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Phone</mat-label>\n                    <input matInput formControlName=\"phone\" required />\n                    <mat-error *ngIf=\"mngForm.get('phone').hasError('required')\">Phone is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Address</mat-label>\n                    <input matInput formControlName=\"address\" required />\n                    <mat-error *ngIf=\"mngForm.get('address').hasError('required')\">Address is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Prequalified</mat-label>\n                    <mat-select formControlName=\"prequalified\" required>\n                      <mat-option *ngFor=\"\n                          let prequalificationStatus of prequalificationStatuses\n                        \" [value]=\"prequalificationStatus.name\">{{ prequalificationStatus.name }}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"mngForm.get('prequalified').hasError('required')\">Prequalified is\n                      required</mat-error>\n                  </mat-form-field>\n                </div> -->\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Main location</mat-label>\n                    <textarea matInput formControlName=\"mainLocation\" required>\n                    </textarea>\n                    <mat-error *ngIf=\"mngForm.get('mainLocation').hasError('required')\">Main Location is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Description</mat-label>\n                    <textarea matInput formControlName=\"description\" required>\n                    </textarea>\n                    <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">Description is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n\n              <div class=\"table-responsive my-4\">\n                <div class=\"materialTableHeader\">\n                  <div class=\"row\">\n                    <div class=\"col-8\">\n                      <ul class=\"header-buttons-left ms-0\">\n                        <li class=\"dropdown\">\n                          <h2>Supplier Categories</h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                            class=\"browser-default search-field\" aria-label=\"Search box\" />\n                        </li>\n\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"ADD\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"manageSupplierCategories('row', 'Add')\">\n                              <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4\">\n                      <ul class=\"header-buttons\">\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                exporter.exportTable('xlsx', {\n                                  fileName: 'Members-list',\n                                  sheet: 'sheet1'\n                                })\n                              \" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                            <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                            <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                            <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                  #exporter=\"matTableExporter\">\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">ID\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <span *ngIf=\"row.id\"> {{ row.id }}</span>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"supplierCategoryCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">Supplier\n                      Category Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <span *ngIf=\"row.supplierCategoryCode\">\n                        {{ row.supplierCategoryCode }}</span>\n                    </mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"supplierCategoryName\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">Supplier\n                      Category Name\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <span *ngIf=\"row.supplierCategoryName\">\n                        {{ row.supplierCategoryName }}</span>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"pr-0\">\n                      <button mat-icon-button color=\"accent\" (click)=\"deleteRecord(i)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button>\n                    </mat-cell>\n                  </ng-container>\n\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                  <mat-row *matRowDef=\"\n                      let row;\n                      let i = index;\n                      columns: displayedColumns\n                    \" [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                </mat-table>\n                <!-- <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                          <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                          </mat-progress-spinner>\n                        </div> -->\n                <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[1, 2, 5, 10, 20, 30, 40, 50, 100]\"\n                  aria-label=\"Select page of users\"></mat-paginator>\n              </div>\n            </form>\n\n            <div class=\"row m-t-10\" *ngIf=\"!panelOpenState\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <div class=\"example-button-row\" align=\"end\">\n                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                    Cancel\n                  </button>\n                  <button class=\"btn-space\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\" (click)=\"onSubmit()\"\n                    mat-raised-button color=\"primary\">\n                    {{ pageFunction }} Supplier\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"header\" *ngIf=\"pageFunction === 'Add'\">\n              <div class=\"row\">\n                <h2>Import Multiple Suppliers</h2>\n              </div>\n            </div>\n            <div class=\"mx-4 mb-4\" *ngIf=\"pageFunction === 'Add'\">\n              <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n                <mat-expansion-panel-header>\n                  <mat-panel-title> Import </mat-panel-title>\n                  <mat-panel-description>\n                    Import Supplier Data From Excel\n                    {{ panelOpenState ? \"open\" : \"closed\" }}\n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n                <!-- <p>I'm visible because I am open</p> -->\n\n                <div class=\"mx-3\"></div>\n\n                <div class=\"row\">\n                  <div class=\"col-10\">\n                    <app-file-upload (change)=\"handleFileInput($event.target.files)\"\n                      accept=\".xlsx, .xls\"></app-file-upload>\n                  </div>\n                  <div class=\"col-1\">\n            \n\n                    <button class=\"btn-space mt-2\" (click)=\"downloadTemplate()\" mat-raised-button color=\"primary\">\n                      <i class=\"fa fa-download\"></i> Excel Template\n                    </button>\n                  </div>\n                  <div class=\"col-1\">\n                    <button class=\"btn-space mt-2\" (click)=\"onSubmitBulk()\" mat-raised-button color=\"primary\">\n                      Upload Suppliers\n                    </button>\n                    <button class=\"btn-space mt-2\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                      (click)=\"cancel()\">\n                      Cancel Upload\n                    </button>\n                  </div>\n                </div>\n\n                <div class=\"col-12 my-4\">\n                  <div style=\"\n                      display: flex;\n                      flex-wrap: wrap;\n                      margin-right: 10px;\n                      margin-bottom: 10px;\n                    \">\n                    <mat-chip-list aria-label=\"Fish selection\">\n                      <mat-chip color=\"accent\" selected *ngFor=\"let itemError of itemErrors; let i = index\">\n                        <span>{{ i + 1 }}. </span>\n                        {{ itemError.field }}: {{ itemError.message }}\n                        <mat-icon>error</mat-icon>\n                      </mat-chip>\n                    </mat-chip-list>\n                  </div>\n\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Company Name</th>\n                        <th>Contact Person</th>\n                        <th>Email</th>\n                        <th>Phone</th>\n                        <th>Address</th>\n                        <th>Prequalified</th>\n                        <th>Description</th>\n                        <th>Main Location</th>\n                        <th>Category</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let item of items\">\n                        <td>{{ item.companyName }}</td>\n                        <td>{{ item.contactPerson }}</td>\n                        <td>{{ item.email }}</td>\n                        <td>{{ item.phone }}</td>\n                        <td>{{ item.address }}</td>\n                        <td>{{ item.prequalified }}</td>\n                        <td>{{ item.description }}</td>\n                        <td>{{ item.mainLocation }}</td>\n                        <td>{{ item.category }}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  \n                </div>\n              </mat-expansion-panel>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllSuppliersComponent } from './all-suppliers/all-suppliers.component';\nimport { ManageSupplierComponent } from './manage-supplier/manage-supplier.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\n\n\nconst routes: Routes = [\n   //Budgets\n   {\n    path: \"all-suppliers\",\n    component: AllSuppliersComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'SuppliersManagementModule', requiredPrivilege:[\"All Suppliers\"] },\n  },\n \n  {\n    path: \"manage-supplier\",\n    component: ManageSupplierComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'SuppliersManagementModule', requiredPrivilege:[\"Manage Supplier\"] },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SuppliersMaintenanceRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SuppliersMaintenanceRoutingModule } from './suppliers-maintenance-routing.module';\nimport { AllSuppliersComponent } from './all-suppliers/all-suppliers.component';\nimport { ManageSupplierComponent } from './manage-supplier/manage-supplier.component';\nimport { ComponentsModule } from \"../../../shared/components/components.module\";\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\n\n\n@NgModule({\n    declarations: [\n        AllSuppliersComponent,\n        ManageSupplierComponent\n    ],\n    imports: [\n        CommonModule,\n        SuppliersMaintenanceRoutingModule,\n        ComponentsModule,\n\n         //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n\n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n\n    MatFormFieldModule,\n\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n\n    MatSnackBarModule,\n    MatToolbarModule,\n\n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule,\n    MatChipsModule,\n    CommonModule,\n\n    FormsModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatListModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatSliderModule,\n    NgbModule,\n    ]\n})\nexport class SuppliersMaintenanceModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}