{"version":3,"file":"default-src_core_Models_Notification_notification-service_service_ts-src_app_erp-hr_data_payr-5c3fb4.js","mappings":"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","sources":["./src/@core/Models/Notification/notification-service.service.ts","./src/app/erp-hr/data/payroll-services/payroll.service.ts","./src/app/erp-hr/data/payroll-services/report.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class NotificationServiceService {\n//   showSuccessNotification(arg0: string) {\n//     throw new Error('Method not implemented.');\n//   }\n//   showSuccess(arg0: string) {\n//     throw new Error('Method not implemented.');\n//   }\n//   showError(message: any) {\n//     throw new Error('Method not implemented.');\n//   }\n\n//   horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n//   verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n//   constructor(\n//     private snackBar: MatSnackBar\n//   ) {\n//    }\n//   alertSuccess(message:any){\n//     this.snackBar.open(message, \"OK\", {\n//       horizontalPosition: this.horizontalPosition,\n//       verticalPosition: this.verticalPosition,\n//       duration: 5000,\n//       panelClass: ['mat-toolbar', 'green-snackbar']\n//     });\n//   }\n//   alertWarning(message:any){\n//     this.snackBar.open(message, \"X\", {\n//       horizontalPosition: this.horizontalPosition,\n//       verticalPosition: this.verticalPosition,\n//       duration: 5000,\n//       panelClass: ['mat-toolbar', 'red-snackbar']\n//     });\n//   }\n// }\n\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationServiceService {\n  showSuccessNotification(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  showSuccess(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  showError(message: any) {\n    throw new Error('Method not implemented.');\n  }\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) {\n   }\n  alertSuccess(message:any){\n    this.snackBar.open(message, \"OK\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'snackbar-success']\n    });\n  }\n  alertWarning(message:any){\n    this.snackBar.open(message, \"X\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'snackbar-danger']\n    });\n  }\n  alertWarningByDuration(message:any, duration:number){\n    this.snackBar.open(message, \"X\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: duration,\n      panelClass: ['mat-toolbar', 'snackbar-danger']\n    });\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayrollService {\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v2/payroll`;\n\n  constructor(private http: HttpClient) { }\n\n///api/v2/payroll/generate\n  genSelectedPayrolls(params: any, data: any) {\n    let API_URL = `${this.baseURL}/generate`;\n    return this.http.post(API_URL, data, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n  revisePayroll(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/revise`;\n    return this.http.put(API_URL, {}, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  closePayroll(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/close`;\n    return this.http.post(API_URL, {}, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  releasePayslips(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/open/payslips`;\n    return this.http.put(API_URL, {}, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  getActiveSalariedEmployees(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/active/employee/for/salary/`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n\n\n  getPayrollsData(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/year/month/status/state`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  getStatusAnalysis(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/count-status`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  sentToFinance(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/submit/to/finance`;\n    return this.http.put(API_URL, {}, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  getFinanceSalaryStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/all/from/finance`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  getPayslips(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/payslip/by/year/month/status/state`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  getPayrollsPerEmpPF(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/empf/year`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  getPayslipPerEmpPF(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/payslip/by/empf/year`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  ///api/v2/payroll/analysis/all\n  getAllPayrollsAnalysis(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/analysis/all`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  getPayrollsAnalysis(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/payroll/analysis`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n  approvedSelectedPayrolls(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/verify`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n  find(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/${id}`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  updateState(param: any,data: any): Observable<any> {\n    console.log(param);\n    let API_URL = `${this.baseURL}/update/state`;\n    return this.http.put(API_URL, data, { params: param, headers: this.headers, withCredentials: false })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n  rerunPayroll(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/revise`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n  updatePayroll(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update/`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n  delete(param: any): Observable<any> {\n    var API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, { params: param, withCredentials: false })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n\n\n  processPayslipEmails(params: any, processRecords: any) : Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v1/reports/email/payslip`;\n    return this.http.post(API_URL, processRecords, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/reports`;\n  baseExcelURL = `${environment.baseUrlHR}/api/v1/reports/export`;\n  constructor(private http: HttpClient) { }\n\n  generate(params: any): Observable<any> {\n    let API_URL = `${this.baseExcelURL}/generate`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'arraybuffer', withCredentials: false })\n  }\n  generateRegister(params: any): Observable<any> {\n    let API_URL = `${this.baseExcelURL}/generate/company-register`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'arraybuffer', withCredentials: false })\n  }\n  generateMasterRegister(params: any): Observable<any> {\n    let API_URL = `${this.baseExcelURL}/generate/master-register`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'arraybuffer', withCredentials: false })\n  }\n  generateAnalysis(params: any): Observable<any> {\n    let API_URL = `${this.baseExcelURL}/generate/analysis`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'arraybuffer', withCredentials: false })\n  }\n  payslip(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/payslip/${id}`;\n    return this.http.get(API_URL, { headers: this.headers, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'payslip.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n  employeeKPIQuarterly(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/kpi/employee`;\n    return this.http.get(API_URL, {params:params, headers: this.headers, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'Quarterly KPI Report.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n  employeeKPIAnnualy(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/kpi/employee/annual`; \n    return this.http.get(API_URL, {params:params, headers: this.headers, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'Annualy KPI Report.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n\n  generateP9form(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/p9form/${id}`;\n    return this.http.get(API_URL, { headers: this.headers, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'Employee_P9_Form.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n \n  generateEmployeeP9form(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/employee/p9form`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'Employee_P9_Form.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}