{"version":3,"file":"src_app_erp-procurement_modules_requisition_requisition_module_ts.js","mappings":"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","sources":["./src/app/erp-budget/data/services/budget.service.ts","./src/app/erp-procurement/data/services/delivery-note.service.ts","./src/app/erp-procurement/data/services/requisition.service.ts","./src/app/erp-procurement/modules/requisition/dialogs/validate-requisition/validate-requisition.component.ts","./src/app/erp-procurement/modules/requisition/dialogs/validate-requisition/validate-requisition.component.html","./src/app/erp-procurement/modules/requisition/pages/all-requisitions/all-requisitions.component.ts","./src/app/erp-procurement/modules/requisition/pages/all-requisitions/all-requisitions.component.html","./src/app/erp-procurement/modules/requisition/pages/manage-requisition/manage-requisition.component.ts","./src/app/erp-procurement/modules/requisition/pages/manage-requisition/manage-requisition.component.html","./src/app/erp-procurement/modules/requisition/pages/purchase-order-acknowledgement/purchase-order-acknowledgement.component.ts","./src/app/erp-procurement/modules/requisition/pages/purchase-order-acknowledgement/purchase-order-acknowledgement.component.html","./src/app/erp-procurement/modules/requisition/requisition-routing.module.ts","./src/app/erp-procurement/modules/requisition/requisition.module.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BudgetsService {\n\n\n\n  constructor(private http: HttpClient) { }\n\n  getBudgets(): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/all`;\n    return this.http.get<any[]>(BudgetManagementUrl);\n  }\n  getBudgetsByHodAndFinanceStatus(params): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/fetchbyhodandfinancestatus`;\n    return this.http.get<any[]>(BudgetManagementUrl, { params });\n  }\n  getBudgetsByStatus(params): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/fetchbyStatus`;\n    return this.http.get<any[]>(BudgetManagementUrl, { params });\n  }\n  getBudgetsByCostCenterCodeAndStatus(params): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/fetchbycostcentercodeandstatus`;\n    return this.http.get<any[]>(BudgetManagementUrl, { params });\n  }\n\n  getBudgetsByYear(params): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/all-by-year`;\n    return this.http.get<any[]>(BudgetManagementUrl, { params });\n  }\n  getBudgetsById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/budgets/lines/find/by/id`, {params}\n    );\n  }\n\n  getBudget(): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/all`;\n    return this.http.get<any[]>(BudgetManagementUrl);\n  }\n  addBudget(data: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/create`;\n    return this.http.post<any>(BudgetManagementUrl, data);\n  }\n  extractBulkBudgets(params: any, data: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/excel`;\n    return this.http.post<any>(BudgetManagementUrl, data,{params});\n  }\n\n  addBudgets(data: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/create/bulk`;\n    return this.http.post<any>(BudgetManagementUrl, data);\n  }\n\n  updateBudgets(BudgetDetails: any): Observable<any> {\n    const updateBudgetUrl = `${environment.baseUrlFinance}/api/v1/budgets/expenses/update-expense`;\n    return this.http.put<any>(updateBudgetUrl, BudgetDetails);\n  }\n\n  updateBudgetExps(BudgetDetails: any): Observable<any> {\n    const updateBudgetUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/update-expense`;\n    return this.http.put<any>(updateBudgetUrl, BudgetDetails);\n  }\n\n  deleteBudgetTemporarily(params: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/delete`;\n    return this.http.delete<any>(BudgetManagementUrl, {params});\n  }\n\n  validateBudgets(params: any, dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate, {params});\n  }\n\n  \n\n\n  budgetCheck(data: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/check`;\n    return this.http.post<any>(BudgetManagementUrl, data);\n  }\n\n\n \n  uploadExcelPath(excelFilePath: string) {\n    return this.http.post<any>('http://localhost:9191/generateBudget', { excelFilePath });\n  }\n\n\n  generateBudget(file: File): Observable<any> {\n    const formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n    return this.http.post(`http://localhost:9191/generateBudget`, formData);\n  }\n}\n","// \n\n\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeliveryNoteService {\n\n  constructor(private http: HttpClient) { }\n\n  // getDeliveryNote(): Observable<any> {\n  //   const DeliveryNoteUrl = `${environment.baseUrlProcurement}/api/v1/rankingmatrix/all`;\n  //   return this.http.get<any[]>(DeliveryNoteUrl);\n  // }\n  getDeliveryNoteById(params: any): Observable<any> {\n    const DeliveryNotessUrl = `${environment.baseUrlProcurement}/api/v1/receiptnote/find/by/id`;\n\n    return this.http.get<any>(DeliveryNotessUrl, { params: params, });\n\n  }\n\n  addDeliveryNote(data: any): Observable<any> {\n    const DeliveryNoteUrl = `${environment.baseUrlProcurement}/api/v1/receiptnote/add`;\n    return this.http.post<any>(DeliveryNoteUrl, data);\n  }\n\n  updateDeliveryNote(DeliveryNoteDetails: any): Observable<any> {\n    const DeliveryNote = `${environment.baseUrlProcurement}/api/v1/receiptnote/modify`;\n    return this.http.put<any>(DeliveryNote, DeliveryNoteDetails)\n  }\n\n\n  deleteDeliveryNoteTemporarily(params: any): Observable<any> {\n    const DeliveryNoteUrl = `${environment.baseUrlProcurement}/api/v1/receiptnote/delete`;\n    return this.http.delete<any>(DeliveryNoteUrl, { params });\n  }\n\n\n  getDeliveryNoteByCode(params: any): Observable<any> {\n    const DeliveryNotessUrl = `${environment.baseUrlProcurement}/api/v1/receiptnote/find/by/refcode`;\n    return this.http.get<any>(DeliveryNotessUrl, { params: params, });\n  }\n\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RequisitionService {\n  constructor(private http: HttpClient) {}\n\n  // http://localhost:9090/api/v1/purchaseRequisition/view\n\n  getRequisitions(): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/view`;\n    return this.http.get<any[]>(RequisitionssUrl);\n  }\n\n  getRequisitionsByStatus(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/all/by/approval/status`;\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  getRequisitionsById(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/by/id`;\n\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  getRequisitionsByCode(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/by/code`;\n\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  addRequisitions(data: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/add`;\n    return this.http.post<any>(RequisitionssUrl, data);\n  }\n\n  updateRequisitions(RequisitionsDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update`;\n    return this.http.put<any>(updateBillUrl, RequisitionsDetails);\n  }\n\n  deleteRequisitionsTemporarily(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/delete`;\n    return this.http.delete<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  validateRequisition(params: any): Observable<any> {\n    const API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/approveOrRejectOrReturn`;\n    return this.http.put(\n      API_URL,\n      {},\n      {\n        params: params,\n      }\n    );\n  }\n\n  // ********************************************************************************************************************\n\n  sendPurchaseOrder(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/send/po`;\n    return this.http.post<any>(RequisitionssUrl, {}, { params });\n  }\n\n  donwloadPurchaseOrder(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/download/po`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download PO\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  //*********************************************************************************************************************** */\n\n  receivePurchaseOrderItems(data: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive`;\n    return this.http.post<any>(ReceiveUrl, data);\n  }\n  getReceivedPurchaseOrderItems(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/delivery/by/prCode`;\n\n    return this.http.get<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  getReceivedItemsByStatus(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/delivery/by/pr_category`;\n    return this.http.get<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  deleteReceivedItemsTemporarily(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/delete`;\n    return this.http.delete<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  validateReceivedItemsAllocation(data: any, params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/post/delivery/to/allocations`;\n\n    return this.http.put<any>(ReceiveUrl, data, { params });\n  }\n\n  // donwloadGoodsReceivedNote(params: any): Observable<any> {\n  //   let headers = new HttpHeaders();\n  //   headers.append(\"Accept\", \"application/pdf\");\n  //   let requestOptions: any = {\n  //     params: params,\n  //     headers: headers,\n  //     responseType: \"blob\",\n  //     withCredentials: false,\n  //   };\n  //   let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive/download/receiptnote`;\n  //   return this.http.get(API_URL, requestOptions).pipe(\n  //     map((response: BlobPart) => {\n  //       console.log(\"Hey this is download GRN\", response);\n  //       return {\n  //         filename: \"Report\",\n  //         data: new Blob([response], { type: \"application/pdf\" }),\n  //       };\n  //     })\n  //   );\n  // }\n\n\n  donwloadSingleGoodsReceivedNote(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive/download/receiptnote/single`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download GRN\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  updateReceivedItemsTransactionStatus(params): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update/record/on/transaction`;\n    return this.http.put<any>(updateBillUrl, {}, {params});\n  }\n  \n}\n","import { SelectionModel } from '@angular/cdk/collections';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ManageRequisitionComponent } from '../../pages/manage-requisition/manage-requisition.component';\nimport { Subject, Subscription, takeUntil } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { RequisitionService } from 'src/app/erp-procurement/data/services/requisition.service';\n\n@Component({\n  selector: 'app-validate-requisition',\n  templateUrl: './validate-requisition.component.html',\n  styleUrls: ['./validate-requisition.component.scss']\n})\nexport class ValidateRequisitionComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  status!: string;\n\n  resData: any;\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRequisitionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private requisitionService: RequisitionService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n  }\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    this.canVerify = true;\n\n    // if (this.postedBy === this.currentUser) {\n\n    //   this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n    //   this.canVerify = false;\n\n    // } else {\n    //   this.canVerify = true;\n    // }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.status = \"APPROVED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n    // const params = {\n    //   requisitionId: this.Data.id,\n    //   role: this.data.userType,\n    //   status: this.status,\n    //   reason: this.statusForm.value.reason,\n    //   validatedBy: this.currentUser,\n    //   validatedDate: todayDate\n    // };\n\n//     Name\tDescription\n// userType *\n// string\n// (query)\t\n// userType\n\n// userType - userType\n// userName *\n// string\n// (query)\t\n// userName\n\n// userName - userName\n// action *\n// string\n// (query)\t\n// action\n\n// action - action\n// reason\n\n    const params = new HttpParams()\n\n      .set(\"id\", this.Data.id)\n      .set(\"userType\", this.data.userType)\n      .set(\"action\", this.status)\n      .set(\"reason\", this.statusForm.value.reason);\n  \n    console.log(\"Form = \", params);\n  \n    this.requisitionService\n      .validateRequisition(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              \"Requisition validated successfully\"\n            );\n            \n          }\n          // else {\n          //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          // }\n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: \" + err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-procurement/requisitions/all-requisitions\"]);\n        }\n      });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n  <div class=\"contact-details\">\n    <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\"><strong>Validate Requisition</strong></div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n\n        <div class=\"row\">\n          <!--Gift Icon-->\n          <div class=\"col text-center my-2\">\n            <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n          </div>\n          <!--Modal Text-->\n          \n          <div class=\"col-8 my-2\">\n            <dl class=\"dl-horizontal\">\n              <dt class=\"pull-left me-2\">RequisitionCode:</dt>\n              <dd>{{Data.requisitionCode}}</dd>\n              <dt class=\"pull-left me-2\">OperatingUnit:</dt>\n              <dd> {{ Data.operatingUnit }}</dd>\n              <dt class=\"pull-left me-2\">Description:</dt>\n              <dd> {{ Data.description }}</dd>\n            </dl>\n          </div>\n\n         \n        </div>\n\n        <div class=\"\">\n          <hr />\n\n          <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Approve</button>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Return</button>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Reject</button>\n              </div>\n            </div>\n          </div>\n          <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n            <div class=\"row\" *ngIf=\"rejected\">\n              <div class=\"col-10 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Reason for rejection</mat-label>\n                  <textarea formControlName=\"reason\" matInput></textarea>\n                  <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                </mat-form-field>\n              </div>\n              <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                  (click)=\"changeStatus()\">Submit</button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-requisitions\",\n  templateUrl: \"./all-requisitions.component.html\",\n  styleUrls: [\"./all-requisitions.component.sass\"],\n})\nexport class AllRequisitionsComponent implements OnInit {\n  displayedColumns: string[] = [\n    // \"id\",\n    \"purchaseRequisitionCode\",\n    \"supplierCode\",\n    // \"supplierName\",\n    // \"operatingUnit\",\n    \"postedBy\",\n    \"postedTime\",\n    \"hodApproval\",\n    \"financeApproval\",\n    \"procurementApproval\",\n    \"downloadPO\",\n    \"sendPO\",\n    \"action\",\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  currentDate: Date = new Date();\n  dateTomorrow: Date = new Date(\n    this.currentDate.getTime() + 1 * 24 * 60 * 60 * 1000\n  );\n  oneWeekAgo: Date = new Date(\n    this.currentDate.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private requisitionService: RequisitionService,\n    private fb: FormBuilder,\n    private datepipe: DatePipe,\n    private accessControlService: AccessControlService\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      hodStatus: [\"PENDING\", Validators.required],\n      financeStatus: [\"PENDING\", Validators.required],\n      procurementStatus: [\"PENDING\", Validators.required],\n      fromDate: [this.oneWeekAgo, Validators.required],\n      toDate: [this.dateTomorrow, Validators.required],\n    });\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n  // getData() {\n  //   const params = new HttpParams()\n  //     .set(\"financeApprovalStatus\", this.Form.value.financeStatus)\n  //     .set(\"procurementApprovalStatus\", this.Form.value.procurementStatus)\n  //     .set(\"hodApprovalStatus\", this.Form.value.hodStatus)\n  //     .set(\"fromDate\", this.Form.value.fromDate)\n  //     .set(\"toDate\", this.Form.value.toDate);\n\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n\n  //   this.requisitionService\n  //     .getRequisitionsByStatus(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         if (res.statusCode === 200) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\n  //           \"snackbar-danger\",\n  //           err.message\n  //         );\n  //         this.isLoading = false;\n  //       },\n  //       complete: () => { this.isLoading = false; },\n  //     }),\n  //     Subscription;\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n  //data: any;\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n\n    const params = new HttpParams()\n      .set(\"financeApprovalStatus\", this.Form.value.financeStatus)\n      .set(\"procurementApprovalStatus\", this.Form.value.procurementStatus)\n      .set(\"hodApprovalStatus\", this.Form.value.hodStatus)\n      .set(\"fromDate\", this.Form.value.fromDate)\n      .set(\"toDate\", this.Form.value.toDate)\n      .set(\"pageNo\", page)\n      .set(\"pageSize\", size)\n      .set(\"searchTerm\", this.input)\n      .set(\"status\", this.Form.value.status);\n\n    this.requisitionService\n      .getRequisitionsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content.reverse());\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n\n  getSelectedStatus(event: any) {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  addRequisition() {\n    this.router.navigate([\"/erp-procurement/requisitions/manage-requisitions\"]);\n  }\n\n  editRequisition(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-procurement/requisitions/manage-requisitions\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n  viewRequisition(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = \"/erp-procurement/requisitions/manage-requisitions\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n  validateRequisition(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = \"/erp-procurement/requisitions/manage-requisitions\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Validate\",\n      },\n    });\n  }\n\n  hasAccess: boolean;\n  poAcknowledgement(data: any) {\n    let privilege = \"Receive Purchase Order Items\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\n      \"ProcurementModule\",\n      [privilege]\n    );\n\n    if (this.hasAccess) {\n      let route =\n        \"/erp-procurement/requisitions/purchase-order-acknowledgement\";\n      this.router.navigate([route], {\n        queryParams: {\n          code: data.purchaseRequisitionCode,\n          action: \"Acknowledge\",\n        },\n      });\n    }\n  }\n\n  deleteRequisition(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Requisition?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Requisition!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.requisitionService\n          .deleteRequisitionsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  downloadPO(row: any) {\n    this.downloadLoading = true;\n\n    const params = new HttpParams().set(\"prNo\", row.purchaseRequisitionCode);\n\n    this.requisitionService\n      .donwloadPurchaseOrder(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          let url = window.URL.createObjectURL(res.data);\n\n          // if you want to open PDF in new tab\n          window.open(url);\n\n          let a = document.createElement(\"a\");\n          document.body.appendChild(a);\n          a.setAttribute(\"style\", \"display: none\");\n          a.setAttribute(\"target\", \"blank\");\n          a.href = url;\n          // Append row.code to the download URL\n          a.download = `PurchaseOrder_${row.purchaseRequisitionCode}.pdf`;\n          a.click();\n          window.URL.revokeObjectURL(url);\n          a.remove();\n\n          this.downloadLoading = false;\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            res.message\n          );\n          // if (res.statusCode === 200) {\n          // } else {\n          //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          // }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n          this.downloadLoading = false;\n        },\n        complete: () => {\n          this.downloadLoading = false;\n        },\n      }),\n      Subscription;\n  }\n  sendLoading: boolean = false;\n  sendPO(row: any) {\n    this.sendLoading = true;\n\n    const params = new HttpParams().set(\"prNo\", row.purchaseRequisitionCode);\n\n    this.requisitionService\n      .sendPurchaseOrder(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n\n          if (res.statusCode === 200) {\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              res.message\n            );\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n          this.sendLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n          this.sendLoading = false;\n        },\n        complete: () => {\n          this.sendLoading = false;\n        },\n      }),\n      Subscription;\n  }\n\n  isButtonDisabled(row: any): boolean {\n    return (\n      row.financeApprovalStatus === \"APPROVED\" ||\n      row.hodApprovalStatus === \"APPROVED\" ||\n      row.procurementApprovalStatus === \"APPROVED\"\n    );\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Purchase Orders'\" [items]=\"['Purchase Orders']\"\n        [active_item]=\"'All Purchase Orders'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Purchase Orders</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addRequisition()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'Requisitions-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <!-- <div class=\"col-1\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Filter</h2>\n                      </li>\n                    </ul>\n                  </div> -->\n\n                  <div class=\"col-10\">\n                    <form [formGroup]=\"Form\">\n                      <div class=\"row\">\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>Procurement Status</mat-label>\n\n                            <mat-select formControlName=\"procurementStatus\"\n                              (selectionChange)=\"getSelectedStatus($event)\">\n                              <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{\n                                reqStatus.name }}\n                              </mat-option>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"\n                                Form.get('procurementStatus').hasError(\n                                  'required'\n                                )\n                              \">\n                              Please select Procurement Status\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                        <div class=\"col-2\">\n                         \n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>HOD Status</mat-label>\n\n                            <mat-select formControlName=\"hodStatus\" (selectionChange)=\"getSelectedStatus($event)\">\n                              <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{\n                                reqStatus.name }}\n                              </mat-option>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"Form.get('hodStatus').hasError('required')\">\n                              Please select HOD Status\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>Finance Status</mat-label>\n\n                            <mat-select formControlName=\"financeStatus\" (selectionChange)=\"getSelectedStatus($event)\">\n                              <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{\n                                reqStatus.name }}\n                              </mat-option>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"\n                                Form.get('financeStatus').hasError('required')\n                              \">\n                              Please select Finance Status\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                       \n\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>From Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker\" formControlName=\"fromDate\" required\n                              (dateChange)=\"getSelectedStatus($event)\" />\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error *ngIf=\"Form.get('fromDate').hasError('required')\">\n                              Please select From Date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>To Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker2\" formControlName=\"toDate\" required\n                              (dateChange)=\"getSelectedStatus($event)\" />\n                            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker2></mat-datepicker>\n                            <mat-error *ngIf=\"Form.get('toDate').hasError('required')\">\n                              Please select To Date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n               \n\n                <ng-container matColumnDef=\"purchaseRequisitionCode\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                    POCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                    {{ row.purchaseRequisitionCode }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"supplierCode\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                    SupplierCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                    {{ row.supplierCode }}</mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"operatingUnit\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">OperatingUnit</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.operatingUnit }}\n                  </mat-cell>\n                </ng-container> -->\n                <ng-container matColumnDef=\"postedBy\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-8\">\n                    PostedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-8\">\n                    {{ row.postedBy }}\n                  </mat-cell>\n                </ng-container>\n                <!-- <ng-container matColumnDef=\"supplierName\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">SupplierName</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                    {{ row.supplierName }}\n                  </mat-cell>\n                </ng-container> -->\n\n                <ng-container matColumnDef=\"postedTime\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-8\">\n                    PostedTime</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-8\">\n                    {{ row.postedTime | date : \"MM/dd/yyyy\" }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"hodApproval\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">HOD Approval</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.hodApprovalStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.hodApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.hodApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.hodApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.hodApprovalStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.hodApprovalStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"financeApproval\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Finance Approval</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.financeApprovalStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.financeApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.financeApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.financeApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.financeApprovalStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.financeApprovalStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"procurementApproval\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Procurement Approval</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.procurementApprovalStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.procurementApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.procurementApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.procurementApprovalStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.procurementApprovalStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.procurementApprovalStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"downloadPO\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">DownloadPO</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"\n                        row.financeApprovalStatus !== 'APPROVED' ||\n                        row.hodApprovalStatus !== 'APPROVED' ||\n                        row.procurementApprovalStatus !== 'APPROVED' ||\n                        downloadLoading\n                      \" class=\"badge badge-solid-purple btn btn btn-sm m-1\" (click)=\"downloadPO(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"sendPO\">\n                   <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">SendPO</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"\n                        row.financeApprovalStatus !== 'APPROVED' ||\n                        row.hodApprovalStatus !== 'APPROVED' ||\n                        row.procurementApprovalStatus !== 'APPROVED' ||\n                        sendLoading\n                      \" class=\"badge badge-solid-purple btn btn btn-sm m-1\" (click)=\"sendPO(row)\">\n                      <i class=\"fas fa-paper-plane\"></i>&nbsp; Send\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                   <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\" *matHeaderCellDef>Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                    <button matTooltip=\"Edit\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editRequisition(row)\" class=\"tbl-action-btn\" [disabled]=\"\n                        row.financeApprovalStatus === 'APPROVED' ||\n                        row.hodApprovalStatus === 'APPROVED' ||\n                        row.procurementApprovalStatus === 'APPROVED'\n                      \">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button matTooltip=\"Validate\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"validateRequisition(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button matTooltip=\"Receive\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"poAcknowledgement(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'package'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button matTooltip=\"View\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewRequisition(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button matTooltip=\"Delete\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteRequisition(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewRequisition(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n               \n                \n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                </tr>\n                \n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              \n              \n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n\n\n          \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { BehaviorSubject, Subject, takeUntil, Subscription } from \"rxjs\";\n\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport {\n  SelectedFiles,\n  FilesService,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { ValidateRequisitionComponent } from \"../../dialogs/validate-requisition/validate-requisition.component\";\nimport Swal from \"sweetalert2\";\nimport * as XLSX from \"xlsx\";\nimport { SuppliersLookupComponent } from \"../../../parameters/pages/lookups/suppliers-lookup/suppliers-lookup.component\";\n\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\nimport { RfqsLookupComponent } from \"../../../parameters/pages/lookups/rfqs-lookup/rfqs-lookup.component\";\nimport { RfpsLookupComponent } from \"../../../parameters/pages/lookups/rfps-lookup/rfps-lookup.component\";\nimport { CatalogueLookupComponent } from \"src/app/erp-inventory/data/lookups/catalogue-lookup/catalogue-lookup.component\";\nimport { CurrencyLookupComponent } from \"src/app/erp-finance/data/lookups/currency-lookup/currency-lookup.component\";\nimport { ExpCCentreLookupComponent } from \"src/app/erp-finance/data/lookups/exp-c-centre-lookup/exp-c-centre-lookup.component\";\nimport { ExpenseLookupComponent } from \"src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component\";\nimport { TaxLookupComponent } from \"src/app/erp-finance/data/lookups/tax-lookup/tax-lookup.component\";\nimport { CalculationService } from \"src/app/erp-procurement/data/services/_procurement-calculations.service\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { BudgetsService } from \"src/app/erp-budget/data/services/budget.service\";\nimport { GlAccountsService } from \"src/app/erp-finance/data/services/gl-accounts.service\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { MaintainedCurrenciesLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component\";\nimport { AssetCatalogLookupComponent } from \"src/app/erp-fixedassets/data/lookups/asset-catalog-lookup/asset-catalog-lookup.component\";\n\n@Component({\n  selector: \"app-manage-requisition\",\n  templateUrl: \"./manage-requisition.component.html\",\n  styleUrls: [\"./manage-requisition.component.scss\"],\n})\nexport class ManageRequisitionComponent implements OnInit {\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n\n  bgtForm: FormGroup;\n\n  displayedColumns: string[] = [\n    \"id\",\n    //\"type\",\n    // \"category\",\n    // \"costCenterCode\",\n    // \"expenseCode\",\n\n    //\"accountNumber\",\n    \"itemRequested\",\n    \"unitOfMeasure\",\n    \"quantity\",\n    \"unitPrice\",\n    \"needByDate\",\n    \"taxName\",\n    \"taxRate\",\n\n    \"subTotal\",\n    \"taxAmount\",\n    \"totalAmount\",\n    // \"budgetFlag\",\n    // \"allowOverride\",\n\n    \"actions\",\n  ];\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  formData: any;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  RequisitionId: any;\n\n  requisitionStatuses: any[] = [\n    { name: \"Incomplete\" },\n    { name: \"Approved\" },\n    { name: \"Rejected\" },\n    { name: \"Returned\" },\n  ];\n\n  itemTypes: any[] = [{ name: \"Goods\" }, { name: \"Services\" }];\n\n  subTotalAmount: number = 0;\n  totalTax: number = 0;\n  grandtotalAmount: number = 0;\n\n  purchaseOrderTypes: any[] = [\n    { name: \"RFQ\" },\n    { name: \"RFP\" },\n    { name: \"CUSTOM\" },\n  ];\n\n  purchaseOrderCategories: any[] = [\n    { name: \"Stock\" },\n    { name: \"FixedAsset\" },\n    { name: \"Expense\" },\n    //{ name: \"Prepayment\" },\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private filesService: FilesService,\n    private tokenStorageService: TokenStorageService,\n    private requisitionService: RequisitionService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n\n    private calculationService: CalculationService,\n\n    private budgetService: BudgetsService,\n    private accountService: GlAccountsService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      if (params.id) {\n        const action = params.action;\n\n        if (action === \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action === \"View\") {\n          this.pageFunction = \"View\";\n          this.disableActions = true;\n        } else if (action === \"Validate\") {\n          this.pageFunction = \"Validate\";\n          this.disableActions = true;\n          this.approvalVisible = true;\n        }\n\n        this.RequisitionId = params.id;\n        this.formData = JSON.parse(params.additionalData);\n\n        if (this.formData.purchaseRequisitionItems.length > 0) {\n          this.dataSource = new MatTableDataSource(\n            this.formData.purchaseRequisitionItems\n          );\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }\n\n        if (this.formData.purchaseRequisitionAttachments.length > 0) {\n          this.isFileDataLoading = false;\n          this.formData.purchaseRequisitionAttachments.forEach((element) => {\n            const newRow = this.fb.group({\n              file: [element.file],\n              fileName: [element.fileName],\n              fileType: [element.fileType],\n            });\n            this.rows.push(newRow);\n          });\n\n          this.updateView();\n        }\n\n        console.log(\"ID:\", this.RequisitionId);\n        console.log(\"Additional Data:\", this.formData);\n\n        this.getPage();\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    console.log(\n      \"this.mngForm.value.purchaseOrderCategory:: \",\n      this.mngForm.value.purchaseOrderCategory\n    );\n    if (this.mngForm.value.purchaseOrderCategory === \"Stock\") {\n      this.getAccountNumberByAccountName();\n    }\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n      this.generateRequisitionForm();\n      this.setDefaultValues();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.generateRequisitionForm();\n      this.calculateTotals();\n      this.handleFormRelatedLogic();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.generateDisabledRequisitionForm();\n      this.calculateTotals();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n      this.handleFormRelatedLogic();\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateFormWithData();\n      this.generateDisabledRequisitionForm();\n      this.calculateTotals();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n      this.handleFormRelatedLogic();\n    }\n  }\n\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      operatingUnit: [\"Main\", [Validators.required]],\n      description: [\"Purchase Requisition\", [Validators.required, Validators.maxLength(300)]],\n      costcentercode: [this.currentUser.costCenterCode, [Validators.required]],\n      expenseCode: [\"\", [Validators.required]],\n      accountNumber: [\"\", [Validators.required]],\n      number: [\"\"],\n      totalTax: [\"\"],\n      subTotalAmount: [\"\"],\n      totalAmount: [\"\"],\n\n      currency: [\"KES\", [Validators.required]],\n      requestedBy: [this.currentUser.username, [Validators.required]],\n      purchaseOrderType: [\"RFQ\", [Validators.required]],\n      purchaseOrderCategory: [\"Stock\", [Validators.required]],\n      type: [\n        \"Goods\",\n        [Validators.required, Validators.pattern(/^(Goods|Services)$/i)],\n      ],\n      organization: [\"Kingdom Bank LTD\", [Validators.required]],\n      location: [\"Kilimani\", [Validators.required]],\n      supplierName: [\"\", [Validators.required]],\n      supplierCode: [\"\", [Validators.required]],\n\n      purchaseRequisitionItems: [[]],\n      purchaseRequisitionAttachments: [[]],\n    });\n  }\n\n  generateFormWithData() {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      purchaseRequisitionCode: [\n        this.formData.purchaseRequisitionCode,\n        [Validators.required],\n      ],\n      operatingUnit: [this.formData.operatingUnit, [Validators.required]],\n      description: [\n        this.formData.description,\n        [Validators.required, Validators.maxLength(300)],\n      ],\n\n      costcentercode: [this.formData.costcentercode, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n      accountNumber: [this.formData.accountNumber, [Validators.required]],\n\n      number: [this.formData.number],\n      totalTax: [this.formData.total],\n      subTotalAmount: [this.formData.total],\n      totalAmount: [this.formData.total],\n      currency: [this.formData.currency, [Validators.required]],\n      requestedBy: [this.formData.requestedBy, [Validators.required]],\n      purchaseOrderType: [\n        this.formData.purchaseOrderType,\n        [Validators.required],\n      ],\n      purchaseOrderCategory: [\n        this.formData.purchaseOrderCategory,\n        [Validators.required],\n      ],\n      type: [this.formData.type, [Validators.required]],\n      organization: [this.formData.organization, [Validators.required]],\n      location: [this.formData.location, [Validators.required]],\n      supplierName: [this.formData.supplierName, [Validators.required]],\n      supplierCode: [this.formData.supplierCode, [Validators.required]],\n\n      purchaseRequisitionItems: [this.formData.purchaseRequisitionItems],\n      purchaseRequisitionAttachments: [\n        this.formData.purchaseRequisitionAttachments,\n      ],\n    });\n  }\n\n  generateDisabledFormWithData() {\n    this.mngForm = this.fb.group({\n      purchaseRequisitionCode: [\n        { value: this.formData.purchaseRequisitionCode, disabled: true },\n        [Validators.required],\n      ],\n      operatingUnit: [\n        { value: this.formData.operatingUnit, disabled: true },\n        [Validators.required],\n      ],\n      description: [\n        { value: this.formData.description, disabled: true },\n        [Validators.required],\n      ],\n\n      costcentercode: [\n        { value: this.formData.costcentercode, disabled: true },\n        [Validators.required],\n      ],\n      expenseCode: [\n        { value: this.formData.expenseCode, disabled: true },\n        [Validators.required],\n      ],\n      accountNumber: [\n        { value: this.formData.accountNumber, disabled: true },\n        [Validators.required],\n      ],\n      // status: [\n      //   { value: this.formData.status, disabled: true },\n      //   [Validators.required],\n      // ],\n\n      number: [{ value: this.formData.number, disabled: true }],\n      total: [\n        { value: this.formData.total, disabled: true },\n        [Validators.required],\n      ],\n      currency: [\n        { value: this.formData.currency, disabled: true },\n        [Validators.required],\n      ],\n      requestedBy: [\n        { value: this.formData.requestedBy, disabled: true },\n        [Validators.required],\n      ],\n      purchaseOrderType: [\n        { value: this.formData.purchaseOrderType, disabled: true },\n        [Validators.required],\n      ],\n      purchaseOrderCategory: [\n        { value: this.formData.purchaseOrderCategory, disabled: true },\n        [Validators.required],\n      ],\n\n      type: [\n        this.formData.type,\n        [Validators.required, Validators.pattern(/^(Goods|Services)$/i)],\n      ],\n\n      organization: [\n        { value: this.formData.organization, disabled: true },\n        [Validators.required],\n      ],\n      location: [\n        { value: this.formData.location, disabled: true },\n        [Validators.required],\n      ],\n      supplierName: [\n        { value: this.formData.supplierName, disabled: true },\n        [Validators.required],\n      ],\n      supplierCode: [\n        { value: this.formData.supplierCode, disabled: true },\n        [Validators.required],\n      ],\n\n      purchaseRequisitionItems: [\n        { value: this.formData.purchaseRequisitionItems, disabled: true },\n      ],\n      purchaseRequisitionAttachments: [\n        { value: this.formData.purchaseRequisitionItems, disabled: true },\n      ],\n    });\n  }\n\n  getSelectedPurchaseOrderType(event: any) {\n    console.log(\"event.value: \", event.value);\n    this.handleFormRelatedLogic();\n  }\n\n\n  isCatalogueItemsReadOnly: boolean = true;\n  getSelectedPurchaseOrderCategory(event: any) {\n    console.log(\"event.value: \", event.value);\n\n    if (event.value == \"Stock\" || event.value == \"FixedAsset\") {\n      this.isCatalogueItemsReadOnly = true;\n      console.log(\"Stock: \", this.isCatalogueItemsReadOnly);\n    } else {\n      this.isCatalogueItemsReadOnly = false;\n      console.log(\"!Stock: \", this.isCatalogueItemsReadOnly);\n    }\n\n    if (this.bgtForm) {\n      this.bgtForm.reset();\n    }\n  }\n\n  showImportButton: boolean = false;\n  isSupplierReadOnly: boolean = true;\n  handleFormRelatedLogic() {\n    if (this.mngForm.value.purchaseOrderType === \"CUSTOM\") {\n      this.showImportButton = true;\n      this.isSupplierReadOnly = false;\n      // Enable fields and clear values\n      this.mngForm.get(\"supplierName\")?.enable();\n      this.mngForm.get(\"supplierCode\")?.enable();\n    } else {\n      this.showImportButton = false;\n      this.isSupplierReadOnly = true;\n\n      // Clear and disable fields\n      this.mngForm.get(\"supplierName\")?.patchValue(\"\");\n      this.mngForm.get(\"supplierCode\")?.patchValue(\"\");\n      // this.mngForm.get(\"supplierName\")?.disable();\n      // this.mngForm.get(\"supplierCode\")?.disable();\n    }\n  }\n\n  getRequisitionPeriod(event: any) {\n    console.log(\"event: \", event.value);\n  }\n\n  enterManually: boolean = true;\n  manualItemsEntry() {\n    this.enterManually = true;\n  }\n\n  // *************************************************************************************************************************************\n  //Import requsitions from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n  importExcel() {\n    this.enterManually = false;\n    this.fileInput.nativeElement.click();\n  }\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        // this.items = jsonData;\n        this.items = [\n          {\n            itemDescription: \"Sample Item 2\",\n            itemRequested: \"Item 2\",\n            // costCenterCode: \"3232\",\n            // expenseCode: \"4242\",\n            // accountNumber: \"XYZ456\",\n            needByDate: \"2023-06-23\",\n            quantity: 5,\n            taxName: \"VAT\",\n            taxRate: 20,\n            unitOfMeasure: \"hours\",\n            unitPrice: 13,\n          },\n          {\n            itemDescription: \"Sample Item 1\",\n            itemRequested: \"Item 1\",\n            // costCenterCode: \"3232\",\n            // expenseCode: \"4242\",\n            // accountNumber: \"ABC123\",\n            needByDate: \"2023-06-23\",\n            quantity: 10,\n            taxName: \"Sales Tax\",\n            taxRate: 8.5,\n            unitOfMeasure: \"pcs\",\n            unitPrice: 9.99,\n          },\n          {\n            itemDescription: \"Sample Item 2\",\n            itemRequested: \"Item 2\",\n            // costCenterCode: \"3232\",\n            // expenseCode: \"4242\",\n            // accountNumber: \"XYZ456\",\n            needByDate: \"2023-06-23\",\n            quantity: 5,\n            taxName: \"VAT\",\n            taxRate: 20,\n            unitOfMeasure: \"hours\",\n            unitPrice: 15,\n          },\n        ];\n\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = []; // Clear previous errors\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray; // Create a separate FormArray variable\n\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        itemDescription: [\n          item.itemDescription,\n          [Validators.required, Validators.maxLength(300)],\n        ],\n        itemRequested: [item.itemRequested, [Validators.required]],\n        // costCenterCode: [item.costCenterCode, [Validators.required]],\n        // expenseCode: [item.expenseCode, [Validators.required]],\n        // accountNumber: [item.accountNumber, [Validators.required]],\n\n        needByDate: [\n          item.needByDate,\n          [Validators.required, Validators.pattern(/^\\d{4}-\\d{2}-\\d{2}$/)],\n        ],\n        quantity: [\n          item.quantity,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        taxName: [item.taxName, [Validators.required]],\n        taxRate: [\n          item.taxRate,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n\n        unitOfMeasure: [item.unitOfMeasure, [Validators.required]],\n        unitPrice: [\n          item.unitPrice,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n      });\n\n      itemsFormArray.push(formGroup); // Use push method on the FormArray variable\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n        this.bgtForm.patchValue({\n          itemRequested: item.itemRequested,\n          // costCenterCode: item.costCenterCode,\n          // expenseCode: item.expenseCode,\n          // accountNumber: item.accountNumber,\n          itemCode: item.itemCode,\n          itemDescription: item.itemDescription,\n          unitOfMeasure: item.unitOfMeasure,\n          quantity: item.quantity,\n          unitPrice: item.unitPrice,\n          needByDate: item.needByDate,\n\n          taxRate: item.taxRate,\n          taxName: item.taxName,\n        });\n\n        this.calculateTax();\n\n        const newRecord = {\n          itemRequested: this.bgtForm.value.itemRequested,\n          // costCenterCode: item.costCenterCode,\n          // expenseCode: item.expenseCode,\n          // accountNumber: this.bgtForm.value.accountNumber,\n          itemCode: this.bgtForm.value.itemCode,\n          itemDescription: this.bgtForm.value.itemDescription,\n          unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n          quantity: this.bgtForm.value.quantity,\n          unitPrice: this.bgtForm.value.unitPrice,\n          needByDate: this.bgtForm.value.needByDate,\n\n          taxRate: this.bgtForm.value.taxRate,\n          taxName: this.bgtForm.value.taxName,\n          subTotal: this.bgtForm.value.subTotal,\n          taxAmount: this.bgtForm.value.taxAmount,\n          totalAmount: this.bgtForm.value.totalAmount,\n        };\n\n        this.dataSource.data.push(newRecord);\n        this.dataSource.data = this.dataSource.data.slice();\n        this.resetBgtForm();\n\n        this.calculateTotals();\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  addImportsToArray() { }\n  clearImports() { }\n\n  //***********************************************************************************************************************************8 */\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1; // Track the index of the selected row\n\n  generateDisabledRequisitionForm() {\n    this.bgtForm = this.fb.group({\n      // category: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemRequested: [{ value: \"\", disabled: true }, [Validators.required]],\n      // costCenterCode: [{ value: \"\", disabled: true }, [Validators.required]],\n      // expenseCode: [{ value: \"\", disabled: true }, [Validators.required]],\n      // accountNumber: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemCode: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemDescription: [{ value: \"\", disabled: true }, [Validators.required]],\n      unitOfMeasure: [{ value: \"\", disabled: true }, [Validators.required]],\n      quantity: [{ value: \"\", disabled: true }, [Validators.required]],\n      unitPrice: [\n        { value: \"\", disabled: true },\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n\n      needByDate: [{ value: \"\", disabled: true }, [Validators.required]],\n\n      taxRate: [{ value: \"\", disabled: true }, [Validators.required]],\n      taxName: [{ value: \"\", disabled: true }, [Validators.required]],\n\n      subTotal: [{ value: \"\", disabled: true }, [Validators.required]],\n      taxAmount: [{ value: \"\", disabled: true }, [Validators.required]],\n      totalAmount: [{ value: \"\", disabled: true }, [Validators.required]],\n    });\n  }\n\n  generateRequisitionForm() {\n    this.bgtForm = this.fb.group({\n      itemRequested: [\"\", [Validators.required]],\n      // costCenterCode: [this.currentUser.costCenterCode, [Validators.required]],\n      // expenseCode: [\"\", [Validators.required]],\n      // accountNumber: [\"\", [Validators.required]],\n      itemCode: [\"\"],\n      itemDescription: [\"\", [Validators.required, Validators.maxLength(300)]],\n      unitOfMeasure: [\"\", [Validators.required]],\n      quantity: [\n        \"\",\n        [\n          Validators.required,\n          Validators.min(0.01),\n          Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$\"),\n        ],\n      ],\n      unitPrice: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n      negotiatedPrice: [\n        0,\n        [Validators.max(1000000000), Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      finalPrice: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n\n      needByDate: [\"\", [Validators.required, this.dateValidator]],\n\n      taxRate: [\"\", [Validators.required]],\n      taxName: [\"\", [Validators.required]],\n\n      subTotal: [\"\"],\n      taxAmount: [\"\"],\n      totalAmount: [\"\"],\n\n      // allowOverride: [\"\"],\n      // budgetFlag: [\"\"],\n    });\n\n    this.bgtForm.get(\"unitPrice\")?.valueChanges.subscribe((newValue) => {\n      this.bgtForm.get(\"negotiatedPrice\")?.setValue(newValue);\n      this.bgtForm.get(\"finalPrice\")?.setValue(newValue);\n    });\n  }\n  // {\n  //   \"allowOverride\": \"string\",\n  //   \"amount\": 0,\n  //   \"budgetFlag\": \"string\",\n  //   \"costCenterCode\": \"string\",\n  //   \"expenseCode\": \"string\"\n  // }\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n  addToArray() {\n    if (this.bgtForm.valid) {\n      this.calculateTax();\n\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n      const newRecord = {\n        itemRequested: this.bgtForm.value.itemRequested,\n        itemCode: this.bgtForm.value.itemCode,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        quantity: this.bgtForm.value.quantity,\n        unitPrice: this.bgtForm.value.unitPrice,\n        negotiatedPrice: this.bgtForm.value.negotiatedPrice,\n        finalPrice: this.bgtForm.value.finalPrice,\n\n        needByDate: this.bgtForm.value.needByDate,\n\n        taxRate: this.bgtForm.value.taxRate,\n        taxName: this.bgtForm.value.taxName,\n\n        // expenseCode: this.bgtForm.value.expenseCode,\n        // costCenterCode: this.bgtForm.value.costCenterCode,\n        // accountNumber: this.bgtForm.value.accountNumber,\n\n        subTotal: this.bgtForm.value.subTotal,\n        taxAmount: this.bgtForm.value.taxAmount,\n        totalAmount: this.bgtForm.value.totalAmount,\n      };\n\n      this.dataSource.data.push(newRecord);\n      this.dataSource.data = this.dataSource.data.slice();\n      this.resetBgtForm();\n      this.setDefaultValues();\n      // this.mngForm.patchValue({\n      //   purchaseRequisitionItems: this.dataSource.data,\n      // });\n\n      this.calculateTotals();\n    }\n  }\n\n  setDefaultValues() {\n    if (this.currentUser) {\n      this.mngForm.patchValue({\n        costCenterCode: this.currentUser.costCenterCode,\n      });\n    }\n  }\n\n  updateRequisitionDetails() {\n    if (this.bgtForm.valid) {\n      this.calculateTax();\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n\n      const updatedRecord = {\n        // category: this.bgtForm.value.category,\n        itemRequested: this.bgtForm.value.itemRequested,\n        itemCode: this.bgtForm.value.itemCode,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        quantity: this.bgtForm.value.quantity,\n        unitPrice: this.bgtForm.value.unitPrice,\n        needByDate: this.bgtForm.value.needByDate,\n\n        taxRate: this.bgtForm.value.taxRate,\n        taxName: this.bgtForm.value.taxName,\n\n        // expenseCode: this.bgtForm.value.expenseCode,\n        // costCenterCode: this.bgtForm.value.costCenterCode,\n        // accountNumber: this.bgtForm.value.accountNumber,\n\n        subTotal: this.bgtForm.value.subTotal,\n        taxAmount: this.bgtForm.value.taxAmount,\n        totalAmount: this.bgtForm.value.totalAmount,\n      };\n\n      this.dataSource.data[this.selectedRowIndex] = updatedRecord;\n      this.dataSource.data = this.dataSource.data.slice();\n      this.resetBgtForm();\n\n      this.editButton = false;\n      this.addButton = true;\n      this.selectedRowIndex = -1; // Reset the selected row index\n\n      this.calculateTotals();\n    }\n  }\n\n  onEditRequisitionDetails(row: any) {\n    this.editButton = true;\n    this.addButton = false;\n    this.selectedRowIndex = this.dataSource.data.indexOf(row);\n    this.showItemForm = true;\n\n    this.bgtForm.patchValue({\n      id: row.id,\n      itemRequested: row.itemRequested,\n      itemCode: row.itemCode,\n      itemDescription: row.itemDescription,\n      unitOfMeasure: row.unitOfMeasure,\n      quantity: row.quantity,\n      unitPrice: row.unitPrice,\n      negotiatedPrice: row.negotiatedPrice,\n      finalPrice: row.finalPrice,\n\n      needByDate: row.needByDate,\n\n      taxRate: row.taxRate,\n      taxName: row.taxName,\n\n      // expenseCode: row.expenseCode,\n      // costCenterCode: row.costCenterCode,\n      // accountNumber: row.accountNumber,\n\n      subTotal: row.subTotal,\n      taxAmount: row.taxAmount,\n      totalAmount: row.totalAmount,\n    });\n\n    this.enterManually = true;\n  }\n\n  onDeleteRequisitionDetails(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.dataSource.data = this.dataSource.data.slice();\n    this.calculateTotals();\n  }\n\n  clearForm() {\n    this.resetBgtForm();\n    this.editButton = false;\n    this.addButton = true;\n    this.selectedRowIndex = -1; // Reset the selected row index\n  }\n\n  resetBgtForm() {\n    this.bgtForm.reset();\n\n    this.showItemForm = false;\n  }\n\n  calculateTax() {\n    console.log(\"quantity: \", Number(this.bgtForm.value.quantity));\n    console.log(\"finalPrice: \", Number(this.bgtForm.value.finalPrice));\n    console.log(\"taxRate: \", Number(this.bgtForm.value.taxRate));\n\n    const taxDetails = this.calculationService.calculateTax(\n      Number(this.bgtForm.value.quantity),\n      Number(this.bgtForm.value.finalPrice),\n      Number(this.bgtForm.value.taxRate)\n    );\n\n    this.bgtForm.patchValue({\n      subTotal: taxDetails.subTotal.toFixed(2),\n      taxAmount: taxDetails.taxAmount.toFixed(2),\n      totalAmount: taxDetails.totalAmount.toFixed(2),\n    });\n  }\n\n  totals = {\n    number: 0,\n    totalTax: 0,\n    subTotalAmount: 0,\n    totalAmount: 0,\n    purchaseRequisitionItems: [],\n  };\n\n  calculateTotals() {\n    const dataArray = this.dataSource.data;\n    console.log(\"dataArray: \", dataArray);\n    this.totals = this.calculationService.calculateTotals(dataArray);\n    console.log(\"totals: \", this.totals);\n\n    this.mngForm.patchValue({\n      number: this.totals.number,\n      totalTax: this.totals.totalTax,\n      subTotalAmount: this.totals.subTotalAmount,\n      totalAmount: this.totals.totalAmount,\n      purchaseRequisitionItems: this.totals.purchaseRequisitionItems.slice(),\n    });\n  }\n\n  // **************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"fileName\",\n    \"fileType\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n    this.mngForm.patchValue({\n      purchaseRequisitionAttachments: this.documentsForm.value.filedetails,\n    });\n  }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currfileName: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currfileName = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          fileName: this.currfileName,\n          fileType: this.currType,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  //*************************************************************************************************** */\n  //LOOKUPS\n  //*************************************************************************************************** */\n\n  currencyIsSelected = false;\n  selectedCurrencies: any[] = [];\n  currenciesLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedCurrenciesLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode,\n        });\n      });\n    });\n    // const dialogConfig = new MatDialogConfig();\n    // dialogConfig.disableClose = false;\n    // dialogConfig.autoFocus = true;\n    // dialogConfig.width = \"700px\";\n    // dialogConfig.data = {\n    //   action: \"view currencies\",\n    //   selected: this.selectedCurrencies,\n    // };\n\n    // const dialogRef = this.dialog.open(CurrencyLookupComponent, dialogConfig);\n\n    // dialogRef.afterClosed().subscribe((result) => {\n    //   if (result && result.data.length != 0) {\n    //     console.log(\"result: \", result.data);\n\n    //     this.mngForm.patchValue({\n    //       currency: result.data[0].currencySymbol,\n    //     });\n    //   }\n    // });\n  }\n\n  supplierIsSelected = false;\n  selectedSuppliers: any[] = [];\n  suppliersLookup() {\n    if (this.mngForm.value.purchaseOrderType === \"CUSTOM\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"single supplier\",\n        selected: this.selectedSuppliers,\n      };\n\n      const dialogRef = this.dialog.open(\n        SuppliersLookupComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        if (result && result.data.length != 0) {\n          console.log(\"result: \", result.data);\n\n          this.supplierIsSelected = true;\n\n          this.mngForm.patchValue({\n            supplierCode: result.data[0].supplierCode,\n            supplierName: result.data[0].companyName,\n          });\n        }\n      });\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Change Purchase order type to select supplier!\"\n      );\n    }\n  }\n\n  taxIsSelected = false;\n  selectedTaxes: any[] = [];\n  taxesLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"single tax\",\n      selected: this.selectedTaxes,\n    };\n\n    const dialogRef = this.dialog.open(TaxLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.supplierIsSelected = true;\n\n        this.bgtForm.patchValue({\n          taxRate: result.data[0].taxRate,\n          taxName: result.data[0].taxName,\n        });\n      }\n    });\n  }\n\n  showItemForm: boolean = false;\n  lookUpToPurchaseOrderTypes() {\n    if (this.mngForm.value.purchaseOrderType === \"RFQ\") {\n      this.lookUpToApprovedRfqs();\n    } else if (this.mngForm.value.purchaseOrderType === \"RFP\") {\n      this.lookUpToApprovedRfps();\n    } else if (this.mngForm.value.purchaseOrderType === \"CUSTOM\") {\n      this.showItemForm = true;\n      this.enterManually = true;\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Kindly select a valid purchase order type!\"\n      );\n    }\n  }\n\n  rfqIsSelected = false;\n  selectedRfq: any[] = [];\n  lookUpToApprovedRfqs() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"900px\";\n    dialogConfig.data = {\n      action: \"completed rfq\",\n      selected: this.selectedRfq,\n      type: \"COMPLETED\",\n    };\n\n    const dialogRef = this.dialog.open(RfqsLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        const newArray = result.data[0].selectedrfqitems.map((element) => {\n          return {\n            itemRequested: element.itemName,\n            itemCode: element.itemCode,\n\n            // costCenterCode: element.costcentercode,\n            // expenseCode: element.expenseCode,\n            quantity: element.quantity,\n            needByDate: element.needByDate,\n            unitOfMeasure: element.unitOfMeasure,\n            unitPrice: element.finalPrice,\n            taxRate: element.taxRate,\n            taxName: element.taxName,\n\n            subTotal: element.subTotal,\n            taxAmount: element.taxAmount,\n            totalAmount: element.totalAmount,\n          };\n        });\n\n        console.log(\"newArray: \", newArray);\n\n        this.dataSource = new MatTableDataSource(newArray);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        this.supplierIsSelected = true;\n\n        this.mngForm.patchValue({\n          supplierCode: result.data[0].supplierCode,\n          supplierName: result.data[0].supplierName,\n\n          purchaseRequisitionItems: newArray\n        });\n        if (newArray) { this.isLoading = false; }\n        this.calculateTotals();\n      }\n    });\n  }\n\n  rfpIsSelected = false;\n  selectedRfp: any[] = [];\n  lookUpToApprovedRfps() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"900px\";\n    dialogConfig.data = {\n      action: \"completed rfp\",\n      selected: this.selectedRfp,\n      type: \"COMPLETED\",\n    };\n\n    const dialogRef = this.dialog.open(RfpsLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        const newArray = result.data[0].selectedrfpitems.map((element) => {\n          return {\n            itemRequested: element.itemName,\n            itemCode: element.itemCode,\n\n            // costCenterCode: element.costcentercode,\n            // expenseCode: element.expenseCode,\n            quantity: element.quantity,\n            needByDate: element.needByDate,\n            unitOfMeasure: element.unitOfMeasure,\n            unitPrice: element.finalPrice,\n            taxRate: element.taxRate,\n            taxName: element.taxName,\n\n            subTotal: element.subTotal,\n            taxAmount: element.taxAmount,\n            totalAmount: element.totalAmount,\n          };\n        });\n\n        console.log(\"newArray: \", newArray);\n\n        this.dataSource = new MatTableDataSource(newArray);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        this.supplierIsSelected = true;\n\n        this.mngForm.patchValue({\n          supplierCode: result.data[0].supplierCode,\n          supplierName: result.data[0].supplierName,\n\n          purchaseRequisitionItems: newArray\n        });\n        if (newArray) { this.isLoading = false; }\n        this.calculateTotals();\n      }\n    });\n  }\n\n  catalogueArray: [] = [];\n\n  selectedItem: any[] = [];\n  catalogueLookup() {\n    if (this.mngForm.value.purchaseOrderCategory === \"Stock\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"880px\";\n      dialogConfig.data = {\n        action: \"single item\",\n        selected: this.selectedItem,\n      };\n\n      const dialogRef = this.dialog.open(\n        CatalogueLookupComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"Result:\", result);\n        if (result && result.data && result.data.length > 0) {\n          const firstItem = result.data[0];\n          console.log(\"Name:\", firstItem.name);\n          console.log(\"Unit:\", firstItem.unit);\n          console.log(\"Quantity:\", firstItem.quantity);\n\n          this.bgtForm.patchValue({\n            itemCode: firstItem.itemCode,\n            itemRequested: firstItem.name,\n            unitOfMeasure: firstItem.unit,\n            quantity: firstItem.quantity,\n            expenseCode: firstItem.expenseCode,\n            itemDescription: firstItem.description,\n          });\n        }\n      });\n    } else if (this.mngForm.value.purchaseOrderCategory === \"FixedAsset\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"880px\";\n      dialogConfig.data = {\n        action: \"single item\",\n        selected: this.selectedItem,\n      };\n\n      const dialogRef = this.dialog.open(\n        AssetCatalogLookupComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"Result:\", result);\n        if (result && result.data && result.data.length > 0) {\n          const firstItem = result.data[0];\n          console.log(\"Name:\", firstItem);\n\n          this.bgtForm.patchValue({\n            itemCode: firstItem.itemCode,\n            itemRequested: firstItem.name,\n            unitOfMeasure: firstItem.unit,\n            quantity: firstItem.quantity,\n            itemDescription: firstItem.description,\n\n            // expenseCode: firstItem.expenseCode\n          });\n        }\n      });\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Catalogue can only be used for Stock and Fixed Asset Items!\"\n      );\n    }\n  }\n\n  expenseIsSelected = false;\n  selectedExpense: [] = [];\n  expenseArray: [] = [];\n  expenseGlCode = \"\";\n\n  expenseLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpense,\n    };\n\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        expenseCode: result.data[0].expenseCode,\n      });\n\n      if (\n        this.mngForm.value.costcentercode &&\n        this.mngForm.value.purchaseOrderCategory !== \"Stock\"\n      ) {\n        this.getAccountNumberByExpAndCostCenter();\n      }\n    });\n  }\n\n  selectedCostCenter: any[] = [];\n  costCenterLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single CostCenter\",\n      selected: this.selectedCostCenter,\n    };\n\n    const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        costcentercode: result.data[0].costCenterCode,\n      });\n\n      if (\n        this.mngForm.value.expenseCode &&\n        this.mngForm.value.purchaseOrderCategory !== \"Stock\"\n      ) {\n        this.getAccountNumberByExpAndCostCenter();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //cost center look up based on expense selected\n  selectedCostCentres: any[] = [];\n  expenseCostCentreLookUp() {\n    console.log(\"expenseGlCode \", this.expenseGlCode);\n    if (\n      this.expenseGlCode !== null &&\n      this.expenseGlCode !== \"\" &&\n      this.expenseGlCode !== undefined\n    ) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"View Cost Centres\",\n        selected: this.selectedCostCentres,\n        expenseGlCode: this.expenseGlCode,\n      };\n\n      const dialogRef = this.dialog.open(\n        ExpCCentreLookupComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((result) => {\n        this.mngForm.patchValue({\n          costcentercode: result.data[0].costCenterCode,\n        });\n      });\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Please select expense!\"\n      );\n    }\n  }\n\n  //******************************************************************************************************************************************************** */\n  // More Look ups\n  glSelectedItem: any[] = [];\n  glsLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"Single GL Account\",\n      selected: this.glSelectedItem,\n      type: \"Expense\",\n    };\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        this.mngForm.patchValue({\n          accountNumber: element.accountID,\n        });\n      });\n    });\n  }\n\n  //********************************************** */\n\n  getAccountNumberByAccountName() {\n    let glName = \"Inventory Account\";\n    const params = new HttpParams().set(\"description\", glName);\n    this.accountService\n      .getGLAccountByGlName(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"resres:: \", res);\n\n          if (res.entity) {\n            this.mngForm.patchValue({\n              accountNumber: res.entity.accountid,\n            });\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  //        accountNumber: result.data[0].expenseGlAccount,\n\n  getAccountNumberByExpAndCostCenter() {\n    const params = new HttpParams()\n      .set(\"costCenterCode\", this.mngForm.value.costcentercode)\n      .set(\"expenseCode\", this.mngForm.value.expenseCode);\n\n    console.log(\"params:: \", params);\n\n    this.accountService\n      .getGLAccountByExpAndCostCenter(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"resres:: \", res);\n\n          if (res.entity) {\n            this.mngForm.patchValue({\n              accountNumber: res.entity.glaccount,\n            });\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  // **********************************************************************************************************************************************************\n  //Budget Check:\n\n  //**************************************************************************************************** */\n\n  // performBudgetCheck() {\n  //   console.log(\"this.dataSource.data: \", this.dataSource.data);\n\n  //   if (this.dataSource.data.length > 0) {\n  //     // Transform the data to match the API format\n  //     const transformedData = this.dataSource.data.map((item) => ({\n  //       allowOverride: item.allowOverride,\n  //       amount: item.totalAmount,\n  //       budgetFlag: item.budgetFlag,\n  //       costCenterCode: this.mngForm.value.costcentercode,\n  //       expenseCode: this.mngForm.value.item.expenseCode,\n  //     }));\n\n  //     this.budgetService\n  //       .budgetCheck(transformedData)\n  //       .pipe(takeUntil(this.destroy$))\n  //       .subscribe({\n  //         next: (res) => {\n  //           if (res.entity) {\n  //             this.dataSource.data.forEach((item, index) => {\n  //               // Assuming res.entity has the same structure as the sample response\n  //               if (res.entity[index]) {\n  //                 item.allowOverride = res.entity[index].allowOverride;\n  //                 item.budgetFlag = res.entity[index].budgetFlag;\n  //               }\n  //             });\n  //             this.dataSource.data = this.dataSource.data.slice();\n\n  //             this.snackbar.showNotification(\"snackbar-success\", res.message);\n  //           } else {\n  //             this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //           }\n  //         },\n  //         error: (err) => {\n  //           this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //         },\n  //         complete: () => {\n  //           this.updateOverallBudgetStatus();\n  //         },\n  //       });\n  //   } else {\n  //     this.snackbar.showNotification(\n  //       \"snackbar-danger\",\n  //       \"Please enter the required data to perform the budget check.\"\n  //     );\n  //   }\n  // }\n\n  // budgetPassed: boolean = false;\n  // updateOverallBudgetStatus() {\n  //   let budgetPassed = false;\n\n  //   for (const item of this.dataSource.data) {\n  //     if (item.budgetFlag === \"N\" && item.allowOverride === \"N\") {\n  //       budgetPassed = false;\n  //       this.snackbar.showNotification(\n  //         \"snackbar-danger\",\n  //         \"Some records do not meet budget allocation!\"\n  //       );\n  //       break;\n  //     }\n\n  //     if (item.budgetFlag === \"Y\" && item.allowOverride === \"Y\") {\n  //       budgetPassed = true;\n  //     }\n  //     if (item.budgetFlag === \"Y\" && item.allowOverride === \"N\") {\n  //       budgetPassed = true;\n  //     }\n  //     if (item.budgetFlag === \"N\" && item.allowOverride === \"Y\") {\n  //       budgetPassed = true;\n  //     }\n  //   }\n\n  //   this.budgetPassed = budgetPassed;\n\n  //   if (budgetPassed) {\n  //     this.snackbar.showNotification(\n  //       \"snackbar-success\",\n  //       \"Budget allocations met!\"\n  //     );\n  //   }\n  // }\n  // **************************************************************************************************\n  isLoading: boolean = false;\n  onSubmit() {\n    this.mngForm.patchValue({\n      purchaseRequisitionAttachments: this.documentsForm.value.filedetails,\n    });\n\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.isLoading = true;\n    if (\n      this.mngForm.value.purchaseRequisitionItems &&\n      this.mngForm.value.purchaseRequisitionItems.length > 0\n    ) {\n      if (this.pageFunction == \"Add\") {\n        this.requisitionService\n          .addRequisitions(this.mngForm.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 201) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.router.navigate([\n                  \"/erp-procurement/requisitions/all-requisitions\",\n                ]);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.isLoading = false;\n            },\n          }),\n          Subscription;\n      } else if (this.pageFunction == \"Update\") {\n        this.requisitionService\n          .updateRequisitions(this.mngForm.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.router.navigate([\n                  \"/erp-procurement/requisitions/all-requisitions\",\n                ]);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.isLoading = false;\n            },\n          }),\n          Subscription;\n      }\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Requisition Items cannot be null!!\"\n      );\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-procurement/requisitions/all-requisitions\"]);\n  }\n\n  // **********************************************************************************************\n  // onValidate(){\n\n  //   // \"HOD Requisition Validation\",\n  //   // \"Finance Requisition Validation\",\n  //   // \"Procurement Requisition Validation\"\n\n  // }\n\n  hasAccess: boolean;\n\n  onValidate(userType) {\n    let privilege = \"\";\n\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"HOD Requisition Validation\";\n        break;\n      case \"Finance\":\n        privilege = \"Finance Requisition Validation\";\n        break;\n      case \"Procurement\":\n        privilege = \"Procurement Requisition Validation\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\n      \"ProcurementModule\",\n      [privilege]\n    );\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"650px\";\n      dialogConfig.data = {\n        data: this.formData,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(\n        ValidateRequisitionComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\n          \"/erp-procurement/requisitions/all-requisitions\",\n        ]);\n      });\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Purchase Orders'\" [items]=\"['Purchase Orders']\" [active_item]=\"'Manage Orders'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !=='Add'\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <!-- HOD Approval -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod\">{{ formData.hodApprovalStatus }}</div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod-approved\">{{ formData.hodApprovedBy }}</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>HOD Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.hodApprovalReason }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Finance Approval -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance\">{{ formData.financeApprovalStatus }}</div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance-approved\">{{ formData.financeApprovedBy }}</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Finance Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.financeApprovalReason }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <!-- Procurement Approval -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Procurement Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement\">{{ formData.procurementApprovalStatus }}</div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Procurement Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement-approved\">{{ formData.procurementApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Procurement Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.procurementApprovalReason }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"header\">\n              <div class=\"row\">\n                <h2>{{ pageFunction }} Purchase Requisition</h2>\n              </div>\n            </div>\n            <form class=\"mx-4\" [formGroup]=\"mngForm\">\n\n              <div class=\"row\">\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>PurchaseOrderType</mat-label>\n\n                    <mat-select formControlName=\"purchaseOrderType\"\n                      (selectionChange)=\"getSelectedPurchaseOrderType($event)\">\n                      <mat-option *ngFor=\"let purchaseOrderType of purchaseOrderTypes\"\n                        [value]=\"purchaseOrderType.name\">{{ purchaseOrderType.name\n                        }}</mat-option>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"mngForm.get('purchaseOrderType').hasError('required')\">Purchase Order Type is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>PurchaseOrderCategory</mat-label>\n\n                    <mat-select formControlName=\"purchaseOrderCategory\"\n                      (selectionChange)=\"getSelectedPurchaseOrderCategory($event)\">\n                      <mat-option *ngFor=\"let purchaseOrderCategory of purchaseOrderCategories\"\n                        [value]=\"purchaseOrderCategory.name\">{{ purchaseOrderCategory.name\n                        }}</mat-option>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"mngForm.get('purchaseOrderType').hasError('required')\">Purchase Order Type is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Type</mat-label>\n                    <mat-select formControlName=\"type\">\n                      <mat-option *ngFor=\"let itemType of itemTypes\" [value]=\"itemType.name\">{{ itemType.name\n                        }}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"mngForm.get('type').hasError('required')\">Type is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Organization</mat-label>\n                    <input matInput formControlName=\"organization\" required />\n                    <mat-error *ngIf=\"mngForm.get('organization').hasError('required')\">Organization is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Operating Unit</mat-label>\n                    <input matInput formControlName=\"operatingUnit\" required />\n                    <mat-error *ngIf=\"mngForm.get('operatingUnit').hasError('required')\">Operating Unit is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Supplier Name</mat-label>\n                    <input matInput formControlName=\"supplierName\" required [readonly]=\"isSupplierReadOnly\" />\n                    <mat-icon matSuffix (click)=\"suppliersLookup()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('supplierName').hasError('required')\">Supplier Name is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>SupplierCode</mat-label>\n                    <input matInput formControlName=\"supplierCode\" required [readonly]=\"isSupplierReadOnly\" />\n                    <mat-icon matSuffix (click)=\"suppliersLookup()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('supplierCode').hasError('required')\">Supplier Code is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Currency</mat-label>\n                    <input matInput formControlName=\"currency\" required />\n                    <mat-icon matSuffix (click)=\"currenciesLookup()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('currency').hasError('required')\">Currency is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>CostCenterCode</mat-label>\n                    <input matInput formControlName=\"costcentercode\" />\n                    <mat-icon matSuffix (click)=\"costCenterLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('costcentercode').hasError('required')\">CostCenterCode is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>ExpenseCode</mat-label>\n                    <input matInput formControlName=\"expenseCode\" />\n                    <mat-icon matSuffix (click)=\"expenseLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('expenseCode').hasError('required')\">ExpenseCode is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Account Number</mat-label>\n                    <input matInput formControlName=\"accountNumber\" />\n                    <mat-icon matSuffix (click)=\"glsLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('accountNumber').hasError('required')\">Account Number is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Location</mat-label>\n                    <input matInput formControlName=\"location\" required />\n                    <mat-error *ngIf=\"mngForm.get('location').hasError('required')\">Location is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>RequestedBy</mat-label>\n                    <input matInput formControlName=\"requestedBy\" required />\n                    <mat-error *ngIf=\"mngForm.get('requestedBy').hasError('required')\">RequestedBy is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n\n\n\n\n\n\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Description</mat-label>\n\n                    <textarea matInput formControlName=\"description\" required></textarea>\n                    <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">Description is\n                      required</mat-error>\n                    <mat-error *ngIf=\"\n                      mngForm.get('description').hasError('maxlength')\n                    \">Description must not exceed 300 characters.</mat-error>\n                  </mat-form-field>\n                </div>\n\n              </div>\n            </form>\n\n\n\n\n\n            <mat-tab-group>\n              <mat-tab>\n                <ng-template mat-tab-label>\n                  <mat-icon>person</mat-icon> Requisition Items\n                </ng-template>\n                <div class=\"mt-3\">\n                  <!-- Content for the first tab -->\n\n                  <ng-container *ngIf=\"showItemForm\">\n\n                    <div class=\"header\">\n                      <div class=\"row\">\n                        <h2>Requisition Items</h2>\n                      </div>\n                    </div>\n\n                    <form class=\"mx-4\" [formGroup]=\"bgtForm\" *ngIf=\"enterManually\">\n                      <div class=\"row\">\n\n\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>ItemRequested</mat-label>\n                            <input matInput formControlName=\"itemRequested\" [readOnly]=\"isCatalogueItemsReadOnly\" />\n                            <mat-icon matSuffix (click)=\"catalogueLookup()\">search</mat-icon>\n                            <mat-error *ngIf=\"bgtForm.get('itemRequested').hasError('required')\">ItemRequested is\n                              required</mat-error>\n                          </mat-form-field>\n                        </div>\n\n\n\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>Unit of Measure</mat-label>\n                            <input matInput formControlName=\"unitOfMeasure\" [readOnly]=\"isCatalogueItemsReadOnly\" />\n                            <mat-error *ngIf=\"bgtForm.get('unitOfMeasure').hasError('required')\">Unit of Measure is\n                              required</mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>Quantity</mat-label>\n                            <input matInput formControlName=\"quantity\" />\n                            <mat-error *ngIf=\"bgtForm.get('quantity').hasError('required')\">Quantity is\n                              required</mat-error>\n\n                            <mat-error *ngIf=\"\n                                bgtForm.get('quantity').hasError('min')\n                              \">Quantity cannot be 0</mat-error>\n\n                            <mat-error *ngIf=\"\n                              bgtForm.get('quantity').hasError('pattern')\n                            \">Quantity allows numbers only</mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                            <mat-label>Unit Price</mat-label>\n                            <input matInput formControlName=\"unitPrice\" mask=\"separator\" thousandSeparator=\",\" />\n\n                            <mat-error *ngIf=\"\n                                bgtForm.get('unitPrice').hasError('required') &&\n                                bgtForm.get('unitPrice').touched\n                              \">\n                              Please enter unit amount!\n                            </mat-error>\n                            <mat-error *ngIf=\"\n                                bgtForm.get('unitPrice').hasError('pattern') &&\n                                bgtForm.get('unitPrice').touched\n                              \">\n                              Please ensure amount does not exceed 2 decimal values!\n                            </mat-error>\n                            <mat-error *ngIf=\"\n                                bgtForm.get('unitPrice').hasError('max') &&\n                                bgtForm.get('unitPrice').touched\n                              \">\n                              Please ensure amount does not exceed 1 billion!\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>Need By Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker\" formControlName=\"needByDate\" required />\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error *ngIf=\"bgtForm.get('needByDate').hasError('required')\">\n                              Need by Date is required\n                            </mat-error>\n                            <mat-error *ngIf=\"bgtForm.get('needByDate').hasError('pastDate')\">\n                              Enter a Valid Need by Date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n\n\n\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>Tax Name</mat-label>\n                            <input matInput formControlName=\"taxName\" />\n                            <mat-icon matSuffix (click)=\"taxesLookup()\">search</mat-icon>\n                            <mat-error *ngIf=\"bgtForm.get('taxName').hasError('required')\">Tax Name is\n                              required</mat-error>\n                          </mat-form-field>\n                        </div>\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>Tax Rate</mat-label>\n                            <input matInput formControlName=\"taxRate\" />\n                            <mat-icon matSuffix (click)=\"taxesLookup()\">search</mat-icon>\n                            <mat-error *ngIf=\"bgtForm.get('taxRate').hasError('required')\">Tax Rate is\n                              required</mat-error>\n                          </mat-form-field>\n                        </div>\n\n\n\n\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>Item Description</mat-label>\n                            <input matInput formControlName=\"itemDescription\" />\n                            <mat-error *ngIf=\"\n                                bgtForm.get('itemDescription').hasError('required')\n                              \">Item Description is required</mat-error>\n                            <mat-error *ngIf=\"\n                              mngForm.get('description').hasError('maxlength')\n                            \">Item Description must not exceed 300 characters.</mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                          <div class=\"float-right\">\n                            <button *ngIf=\"addButton\" [disabled]=\"!bgtForm.valid\" (click)=\"addToArray()\"\n                              class=\"btn-space\" mat-raised-button color=\"primary\">\n                              + Add Requisition details\n                            </button>\n                            <button *ngIf=\"editButton\" [disabled]=\"!bgtForm.valid\" class=\"btn-space\"\n                              (click)=\"updateRequisitionDetails()\" mat-raised-button color=\"primary\">\n                              + Update Requisition details\n                            </button>\n                            <button type=\"button\" (click)=\"clearForm()\" mat-raised-button color=\"warn\">\n                              Clear\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n\n                    </form>\n\n                  </ng-container>\n\n\n\n                  <div class=\"row mx-2\" *ngIf=\"!enterManually\">\n                    <div class=\"col-12\">\n\n\n\n                      <div style=\"display: flex; flex-wrap: wrap; margin-right: 10px; margin-bottom: 10px;\">\n                        <mat-chip-list aria-label=\"Fish selection\">\n                          <mat-chip color=\"accent\" selected *ngFor=\"let itemError of itemErrors; let i = index;\">\n                            <span>{{ i + 1 }}. </span>\n                            {{ itemError.field }}: {{ itemError.message }}\n                            <mat-icon>error</mat-icon>\n                          </mat-chip>\n                        </mat-chip-list>\n                      </div>\n\n\n\n                      <table class=\"table\">\n                        <thead>\n                          <tr>\n                            <th>Account Number</th>\n                            <th>Item Description</th>\n                            <th>Item Requested</th>\n                            <th>Need By Date</th>\n                            <th>Quantity</th>\n                            <th>Tax Name</th>\n                            <th>Tax Rate</th>\n                            <th>Type</th>\n                            <th>Unit of Measure</th>\n                            <th>Unit Price</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr *ngFor=\"let item of items\">\n                            <td>{{ item.accountNumber }}</td>\n                            <td>{{ item.itemDescription }}</td>\n                            <td>{{ item.itemRequested }}</td>\n                            <td>{{ item.needByDate }}</td>\n                            <td>{{ item.quantity }}</td>\n                            <td>{{ item.taxName }}</td>\n                            <td>{{ item.taxRate }}</td>\n                            <td>{{ item.type }}</td>\n                            <td>{{ item.unitOfMeasure }}</td>\n                            <td>{{ item.unitPrice }}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                      <div class=\"float-right\">\n                        <!-- <button (click)=\"addImportsToArray()\" class=\"btn-space\" mat-raised-button color=\"primary\"\n                          [disabled]=\"itemErrors.length>0\">\n                          + Add Requisition details\n                        </button> -->\n\n                        <button type=\"button\" (click)=\"clearImports()\" mat-raised-button color=\"warn\">\n                          Clear\n                        </button>\n                      </div>\n                    </div>\n\n\n                  </div>\n\n\n\n\n                  <div class=\"mx-4 my-4\">\n                    <div class=\"materialTableHeader\">\n                      <div class=\"row\">\n                        <div class=\"col-8\">\n                          <ul class=\"header-buttons-left ms-0\">\n                            <li class=\"dropdown\">\n                              <h2>Requisition Records</h2>\n                            </li>\n                            <li class=\"dropdown m-l-20\">\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                              <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                class=\"browser-default search-field\" aria-label=\"Search box\" />\n                            </li>\n\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"lookUpToPurchaseOrderTypes()\">\n                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n\n                            <!-- <li *ngIf=\"showImportButton\">\n                              <div class=\"m-l-10\" matTooltip=\"IMPORT\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"importExcel()\">\n                                  <mat-icon class=\"col-white\">cloud_upload</mat-icon>\n                                </button>\n                                <input type=\"file\" accept=\".xlsx, .xls\" style=\"display: none\" #fileInput\n                                  (change)=\"handleFileInput($event.target.files)\">\n                              </div>\n                            </li> -->\n\n\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                <button mat-mini-fab color=\"primary\">\n                                  <mat-icon class=\"col-white\">refresh</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                        <div class=\"col-4\">\n                          <ul class=\"header-buttons\">\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                    exporter.exportTable('xlsx', {\n                                      fileName: 'Requisition-Items-list',\n                                      sheet: 'sheet1'\n                                    })\n                                  \" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n\n\n                    </div>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                      #exporter=\"matTableExporter\">\n                      <ng-container matColumnDef=\"id\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-2\">#\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row;\" class=\"psl-3 tbl-col-width-per-2\">{{ row.id ? row.id : '#' }}\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"type\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">Type\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.type\"> {{ row.type }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <!-- <ng-container matColumnDef=\"category\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">Category\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.category\"> {{ row.category }}</span>\n                        </mat-cell>\n                      </ng-container> -->\n\n                      <ng-container matColumnDef=\"costCenterCode\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">CC-Code\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.costcentercode\">\n                            {{ row.costcentercode }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"expenseCode\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">ExpCode\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.expenseCode\">\n                            {{ row.expenseCode }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n\n                      <ng-container matColumnDef=\"accountNumber\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">ActNo\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.accountNumber\">\n                            {{ row.accountNumber }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"itemRequested\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">ReqItem\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.itemRequested\"> {{ row.itemRequested }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"unitOfMeasure\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-24\">UnitOfMeasure\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.unitOfMeasure\">\n                            {{ row.unitOfMeasure }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"quantity\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">Quantity\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.quantity\"> {{ row.quantity }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"unitPrice\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">UnitPrice\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.unitPrice\">\n                            {{\n                            row.unitPrice | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}\n                          </span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"needByDate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">NeedByDate\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.needByDate\">\n                            {{ row.needByDate | date : \"short\" }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"taxName\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">TaxName\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.taxName\"> {{ row.taxName }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"taxRate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">TaxRate\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.taxRate\"> {{ row.taxRate }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"subTotal\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">subTotal\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.subTotal\"> {{\n                            row.subTotal | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"taxAmount\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">TaxAmount\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.taxAmount\"> {{\n                            row.taxAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"totalAmount\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-24\">TotalAmount\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                          <span *ngIf=\"row.totalAmount\">{{\n                            row.totalAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }} </span>\n                        </mat-cell>\n                      </ng-container>\n\n\n                      <ng-container matColumnDef=\"budgetFlag\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"column-nowrap psl-3 tbl-col-width-per-10\">BudgetCheck</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                          (click)=\"$event.stopPropagation()\">\n                          <ng-container [ngSwitch]=\"row.budgetFlag\">\n\n                            <button *ngSwitchCase=\"'N'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                              <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                              Fail\n                            </button>\n                            <button *ngSwitchCase=\"'Y'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                              <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                              Pass\n                            </button>\n                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                              <i class=\"fas fa-question-circle\"></i>&nbsp;\n                              {{ \"-\" }}\n                            </button>\n                          </ng-container>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"allowOverride\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"column-nowrap psl-3 tbl-col-width-per-10\">OverrideBgt</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                          (click)=\"$event.stopPropagation()\">\n                          <ng-container [ngSwitch]=\"row.allowOverride\">\n                            <button *ngSwitchCase=\"'Y'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                              <i class=\"fas fa-check-circle\"></i>&nbsp;\n                              Yes\n                            </button>\n                            <button *ngSwitchCase=\"'N'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                              <i class=\"fas fa-times-circle\"></i>&nbsp;\n                              No\n                            </button>\n\n                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                              <i class=\"fas fa-question-circle\"></i>&nbsp;\n                              {{ \"-\" }}\n                            </button>\n                          </ng-container>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row; let i = index\" class=\"pr-0\">\n                          <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                            (click)=\"onEditRequisitionDetails(row)\" class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                          </button>\n                          <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                            (click)=\"onDeleteRequisitionDetails(i)\" class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                          </button>\n                        </mat-cell>\n                      </ng-container>\n\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                      <mat-row *matRowDef=\"let row; let i = index; columns: displayedColumns\"\n                        (click)=\"onEditRequisitionDetails(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                      </mat-row>\n                    </mat-table>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                      </mat-progress-spinner>\n                    </div>\n                    <!-- <mat-paginator [pageSize]=\"100\" [pageSizeOptions]=\"[2, 6, 10, 20, 30, 40, 50, 100]\"\n                      aria-label=\"Select page of users\"></mat-paginator> -->\n\n                    <div class=\"col-md-12\">\n                      <div class=\"float-end m-t-30 text-end\">\n                        <p>Sub - Total amount: <span>{{ totals.subTotalAmount | currency: \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}</span>\n                        </p>\n                        <p>vat: <span>{{ totals.totalTax | currency: \"KSH \" : \"symbol\" : \"1.2-2\" }}</span></p>\n                        <hr>\n                        <h3><b>Total:</b> <span>{{ totals.totalAmount | currency: \"KSH \" : \"symbol\" : \"1.2-2\" }}</span>\n                        </h3>\n                      </div>\n                    </div>\n\n\n\n\n                  </div>\n                </div>\n              </mat-tab>\n\n              <mat-tab>\n                <ng-template mat-tab-label>\n                  <mat-icon>attach_file</mat-icon> Upload Requisition Attachments\n                </ng-template>\n                <div class=\"mt-3\">\n                  <!-- Content for the second tab -->\n                  <form [formGroup]=\"documentsForm\">\n                    <!-- <form [formGroup]=\"form\"> -->\n\n                    <div style=\"margin: 20px\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                          <div class=\"row\">\n                            <div class=\"col-8\">\n                              <ul class=\"header-buttons-left ms-0\">\n                                <li class=\"dropdown\">\n                                  <h2>Upload Documents</h2>\n                                </li>\n                                <li class=\"dropdown m-l-20\">\n                                  <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                  <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                    class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                </li>\n\n                                <li>\n                                  <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                    <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                      <mat-icon class=\"col-white\">add</mat-icon>\n                                    </button>\n                                  </div>\n                                </li>\n                              </ul>\n                            </div>\n                            <div class=\"col-4\"></div>\n                          </div>\n                        </div>\n\n                        <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                        <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                          formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n                          <!-- ID Column -->\n                          <ng-container matColumnDef=\"id\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                              {{ index + 1 }}\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"fileName\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileName</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>fileName</mat-label>\n                                <input matInput type=\"text\" formControlName=\"fileName\" placeholder=\"fileName\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"fileType\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileType</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>fileType</mat-label>\n                                <input matInput type=\"text\" formControlName=\"fileType\" placeholder=\"fileType\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"selectFile\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                              File</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                              <input #file type=\"file\" [disabled]=\"isLoading | async\"\n                                (change)=\"onSelectFile(file.files, row, index)\" [multiple]=\"'multiple'\" />\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"download\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Download</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n\n                          <ng-container matColumnDef=\"action\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Action</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n\n\n                          <!-- Row definitions -->\n                          <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                          <mat-row *matRowDef=\"\n                              let row;\n                              let i = index;\n                              columns: displayColumns\n                            \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                          <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                            input.value\n                            }}\"</mat-cell>\n                        </mat-table>\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                          <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                          </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                          aria-label=\"Select page of users\"></mat-paginator>\n                      </div>\n                    </div>\n\n\n                  </form>\n                </div>\n              </mat-tab>\n            </mat-tab-group>\n\n\n            <hr>\n\n\n            <div class=\"row m-t-25\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n\n                <div class=\"example-button-row\" align=\"end\">\n                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                    <mat-icon>cancel</mat-icon>\n                    Cancel\n                  </button>\n\n                  <!-- <ng-container *ngIf=\"!hideApprovals\">\n                    <button *ngIf=\"!formData.hodApprovedFlag\" class=\"btn-space\" (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                      <mat-icon>done_outline</mat-icon>\n                      HOD Approval\n                    </button>\n                    <button *ngIf=\"!formData.financeApprovedFlag\" [disabled]=\"!formData.hodApprovedFlag\" class=\"btn-space\" (click)=\"onValidate('Finance')\" mat-raised-button color=\"primary\">\n                      <mat-icon>attach_money</mat-icon>\n                      Finance Approval\n                    </button>\n                    <button *ngIf=\"!formData.procurementApprovedFlag\" [disabled]=\"!formData.hodApprovedFlag || !formData.financeApprovedFlag\" class=\"btn-space\" (click)=\"onValidate('Procurement')\" mat-raised-button color=\"primary\">\n                      <mat-icon>shopping_cart</mat-icon>\n                      Procurement Approval\n                    </button>\n                  </ng-container> -->\n\n                  <ng-container *ngIf=\"!hideApprovals\">\n                    <button *ngIf=\"!formData.procurementApprovedFlag\" class=\"btn-space\"\n                      (click)=\"onValidate('Procurement')\" mat-raised-button color=\"primary\">\n                      <mat-icon>shopping_cart</mat-icon>\n                      Procurement Approval\n                    </button>\n                    <button *ngIf=\"!formData.hodApprovedFlag\" [disabled]=\"!formData.procurementApprovedFlag\"\n                      class=\"btn-space\" (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                      <mat-icon>done_outline</mat-icon>\n                      HOD Approval\n                    </button>\n                    <button *ngIf=\"!formData.financeApprovedFlag\"\n                      [disabled]=\"!formData.hodApprovedFlag || !formData.procurementApprovedFlag\" class=\"btn-space\"\n                      (click)=\"onValidate('Finance')\" mat-raised-button color=\"primary\">\n                      <mat-icon>attach_money</mat-icon>\n                      Finance Approval\n                    </button>\n\n                  </ng-container>\n\n\n                  <!--|| !budgetPassed\"  -->\n                  <button class=\"btn-space\" [disabled]=\"!mngForm.valid || dataSource.data.length === 0\"\n                    [hidden]=\"hideSubmit\" (click)=\"onSubmit()\" mat-raised-button color=\"primary\">\n                    <mat-icon>file_download</mat-icon>\n                    {{ pageFunction }} Purchase Order\n                  </button>\n                </div>\n\n                <!-- <div class=\"example-button-row\" align=\"end\">\n                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                    <mat-icon>cancel</mat-icon>\n                    Cancel\n                  </button>\n\n                  <div *ngIf=\"!hideApprovals\">\n                    <button class=\"btn-space\" [hidden]=\"hideApprovals\" [disabled]=\"formData.hodApprovedFlag\"\n                      (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                      <mat-icon>done_outline</mat-icon>\n                      HOD Approval\n                    </button>\n\n                    <button class=\"btn-space\" [hidden]=\"hideApprovals\"\n                      [disabled]=\"!formData.hodApprovedFlag || formData.financeApprovedFlag\"\n                      (click)=\"onValidate('Finance')\" mat-raised-button color=\"primary\">\n                      <mat-icon>attach_money</mat-icon>\n                      Finance Approval\n                    </button>\n\n                    <button class=\"btn-space\" [hidden]=\"hideApprovals\" [disabled]=\"!formData.financeApprovedFlag\"\n                      (click)=\"onValidate('Procurement')\" mat-raised-button color=\"primary\">\n                      <mat-icon>shopping_cart</mat-icon>\n                      Procurement Approval\n                    </button>\n                  </div>\n\n                  <button class=\"btn-space\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\" mat-raised-button\n                    color=\"primary\">\n                    <mat-icon>compare_arrows</mat-icon>\n                    Compare With Budget\n                  </button>\n                  <button class=\"btn-space\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\" (click)=\"onSubmit()\"\n                    mat-raised-button color=\"primary\">\n                    <mat-icon>file_download</mat-icon>\n                    {{ pageFunction }} Requisition\n                  </button>\n                </div> -->\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BehaviorSubject, Subject, Subscription, takeUntil } from \"rxjs\";\nimport { AccountingJournalTransactionsComponent } from \"src/app/erp-finance/modules/finance-management/transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\nimport { DeliveryNoteService } from \"src/app/erp-procurement/data/services/delivery-note.service\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\nimport Swal from \"sweetalert2\";\n\ninterface DeliveryNoteModel {\n  file: string;\n  filename: string;\n  filetype: string;\n  referenceCode: string;\n}\n\n@Component({\n  selector: \"app-purchase-order-acknowledgement\",\n  templateUrl: \"./purchase-order-acknowledgement.component.html\",\n  styleUrls: [\"./purchase-order-acknowledgement.component.scss\"],\n})\nexport class PurchaseOrderAcknowledgementComponent implements OnInit {\n  //***************************************************************************************************************************************** */\n  // PurchaseOrderItems\n  displayedPurchaseOrderItems: string[] = [\n    \"select\",\n    \"itemCode\",\n    \"itemRequested\",\n    \"quantity\",\n    \"unitPrice\",\n    \"totalAmount\",\n    // \"action\",\n  ];\n  dataSourcePurchaseOrderItems!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginatorPurchaseOrderItems!: MatPaginator;\n  @ViewChild(MatSort) sortPurchaseOrderItems!: MatSort;\n  //***************************************************************************************************************************************** */\n  // DeliveryRequest\n\n  // \"deliveredBy\": \"string\",\n  // \"deliveredOn\": \"2023-08-11T09:34:53.191Z\",\n  // \"prCode\": \"string\",\n  // \"prItemCode\": \"string\",\n  // \"quantityCanceled\": 0,\n  // \"quantityDelivered\": 0,\n  // \"quantityOpen\": 0,\n  // \"receiptCode\": \"string\",\n  // \"receivingComments\": \"string\",\n  // \"status\": \"string\"\n\n  displayedColumnsDeliveryRequest: string[] = [\n    \"secondTableSelect\",\n    \"prItemCode\",\n    \"quantityOpen\",\n    \"quantityDelivered\",\n    \"quantityCanceled\",\n    \"totalAmount\",\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    \"action\",\n  ];\n  dataSourceDeliveryRequest!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginatorDeliveryRequest!: MatPaginator;\n  @ViewChild(MatSort) sortDeliveryRequest!: MatSort;\n\n  //   {\n  //     \"id\": 1,\n  //     \"prItemCode\": \"PR#1699254458356\",\n  //     \"grnCode\": \"#1\",\n  //     \"prCode\": \"PR#10\",\n  //     \"quantityDelivered\": 4,\n  //     \"quantityCanceled\": 0,\n  //     \"quantityOpen\": 0,\n  //     \"accountNumber\": \"423432\",\n  //     \"taxName\": \"VAT\",\n  //     \"taxRate\": 18,\n  //     \"subTotal\": 2000,\n  //     \"taxAmount\": 1200,\n  //     \"totalAmount\": 3200,\n  //     \"status\": \"RECEIVED\",\n  //     \"pushStatus\": \"PENDING\",\n  //     \"costCenterCode\": \"1121\",\n  //     \"expenseCode\": \"43245\",\n  //     \"itemRequested\": \"Furniture\",\n  //     \"itemDescription\": \"Furniture\",\n  //     \"quantity\": 2,\n  //     \"category\": null,\n  //     \"type\": \"Goods\",\n  //     \"unitOfMeasure\": \"Number\",\n  //     \"unitPrice\": 4000,\n  //     \"needByDate\": \"2023-11-29T21:00:00\",\n  //     \"fundCheck\": false,\n  //     \"quantityRemaining\": -4,\n  //     \"deliveredBy\": \"Test\",\n  //     \"deliveredOn\": \"2023-11-21T10:49:21\",\n  //     \"receivedBy\": \"Superuser\",\n  //     \"receivedOn\": \"2023-11-21T10:50:10\",\n  //     \"receivedComments\": \"Test\",\n  //     \"transactionStatus\": \"PENDING\",\n  //     \"tranCode\": null,\n  //     \"tranPostedOn\": null\n  // }\n\n  //***************************************************************************************************************************************** */\n\n  pageFunction = \"Add\";\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  purchaseOrderCode: any;\n\n  purchaseOrderForm!: FormGroup;\n\n  activateDeliveryRequest: boolean = false;\n\n  statuses: any[] = [{ name: \"RECEIVED\" }, { name: \"RETURNED\" }];\n  constructor(\n    private requisitionService: RequisitionService,\n    private route: ActivatedRoute,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder,\n    public deliveryNoteService: DeliveryNoteService,\n    private filesService: FilesService,\n    public router: Router,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if (params.code) {\n        const action = params.action;\n\n        if (action === \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action === \"View\") {\n          this.pageFunction = \"View\";\n          this.disableActions = true;\n        } else if (action === \"Validate\") {\n          this.pageFunction = \"Validate\";\n          this.disableActions = true;\n          this.approvalVisible = true;\n        }\n\n        this.purchaseOrderCode = params.code;\n\n        this.initForm();\n\n        console.log(\"ID:\", this.purchaseOrderCode);\n        console.log(\"Additional Data:\", this.formData);\n\n        this.getPurchaseOrderByCode();\n      }\n    });\n  }\n\n  unitPrice: number;\n  initForm(): void {\n    this.purchaseOrderForm = this.fb.group({\n      id: [\"\"],\n      prItemId: [\"\"],\n      deliveredBy: [\"\", Validators.required],\n      deliveredOn: [null, Validators.required],\n      prCode: [\"\", Validators.required],\n      prItemCode: [\"\", Validators.required],\n      quantityCanceled: [0, Validators.required],\n      quantityDelivered: [0, Validators.required],\n      quantityOpen: [0, Validators.required],\n      receivingComments: [\"\"],\n      status: [\"RECEIVED\", Validators.required],\n\n      taxName: [\"\", Validators.required],\n      taxRate: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n          Validators.min(0),\n        ],\n      ],\n      taxAmount: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n          Validators.min(0),\n        ],\n      ],\n      subTotal: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n          Validators.min(0),\n        ],\n      ],\n      totalAmount: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n          Validators.min(0),\n        ],\n      ],\n      accountNumber: [\"\"],\n      grnCode: [\"\"],\n\n      tranCode: [\"\"],\n      transactionStatus: [\"\"],\n      tranDate: [\"\"],\n    });\n\n    this.purchaseOrderForm.get('quantityDelivered').valueChanges.subscribe(value => {\n      this.calculateReceiveValues(value);\n    });\n  }\n  calculateReceiveValues(value: number): void {\n    if (this.unitPrice) {\n      const subTotal = this.calculateSubTotal();\n      const taxAmount = this.calculateTaxAmount(subTotal);\n      const totalAmount = subTotal + taxAmount;\n\n      this.purchaseOrderForm.patchValue({\n        subTotal: subTotal,\n        taxAmount: taxAmount,\n        totalAmount: totalAmount\n      });\n    }\n  }\n\n  calculateSubTotal(): number {\n\n    const quantityDelivered = this.purchaseOrderForm.get('quantityDelivered').value;\n    return this.unitPrice * quantityDelivered;\n  }\n\n  calculateTaxAmount(subTotal: number): number {\n    const taxRate = this.purchaseOrderForm.get('taxRate').value;\n    return subTotal * (taxRate / 100);\n  }\n\n  //************************************************************************************************** */\n\n\n  getSelectedStatus(selectedStatus: any) { }\n\n  showPage: boolean = false;\n  purchaseOrder: any;\n\n  getPurchaseOrderByCode() {\n    const params = new HttpParams().set(\"prCode\", this.purchaseOrderCode);\n    this.requisitionService\n      .getRequisitionsByCode(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            this.purchaseOrder = this.formData;\n            // this.isLoading = false;\n            if (this.pageFunction === \"Update\") {\n              this.pageFunction = \"Update\";\n            } else if (this.pageFunction === \"View\") {\n              this.pageFunction = \"View\";\n              this.disableActions = true;\n            } else if (this.pageFunction === \"Validate\") {\n              this.pageFunction = \"Validate\";\n              this.disableActions = true;\n              this.approvalVisible = true;\n            }\n\n            // this.formData = JSON.parse(params.additionalData);\n\n            if (this.formData.purchaseRequisitionItems.length > 0) {\n              this.dataSourcePurchaseOrderItems = new MatTableDataSource(\n                this.formData.purchaseRequisitionItems\n              );\n              this.dataSourcePurchaseOrderItems.paginator =\n                this.paginatorPurchaseOrderItems;\n              this.dataSourcePurchaseOrderItems.sort =\n                this.sortPurchaseOrderItems;\n            }\n\n            this.selection = new SelectionModel<any>(false, []);\n            this.secondTableSelection = new SelectionModel<any>(false, []);\n\n            this.showPage = true;\n\n            console.log(\"ID:\", this.purchaseOrderCode);\n            console.log(\"Additional Data:\", this.formData);\n\n            this.getPage();\n            this.getDeliveryNoteDocs();\n            this.getDeliveryDetailsByPOCode();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  deliveryData: any[] = [];\n  getDeliveryDetailsByPOCode() {\n    const params = new HttpParams().set(\n      \"prCode\",\n      this.purchaseOrder.purchaseRequisitionCode\n    );\n    this.requisitionService\n      .getReceivedPurchaseOrderItems(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res getDeliveryDetailsByPOCode :\", res);\n          if (res.entity) {\n            this.deliveryData = [];\n\n            if (res.entity && res.entity.length > 0) {\n              res.entity.forEach((element) => {\n                const updatedRecord = element;\n\n\n                this.pushFormDataInToDeliveryData(updatedRecord);\n              });\n\n              this.calculateBalances();\n              console.log(\"deliveryData:\", this.deliveryData);\n            }\n          } else {\n            // this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          // this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  getPage() { }\n\n  //****************************************************************************************************************** */\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1;\n  updateItemDeliveryDetails() {\n    if (this.purchaseOrderForm.valid) {\n      console.log(\"this.purchaseOrderForm: \", this.purchaseOrderForm.value);\n\n      const updatedRecord = {\n        id: this.purchaseOrderForm.value.id,\n        deliveredBy: this.purchaseOrderForm.value.deliveredBy,\n        deliveredOn: this.purchaseOrderForm.value.deliveredOn,\n        prCode: this.purchaseOrderForm.value.prCode,\n        prItemId: this.purchaseOrderForm.value.prItemId,\n        prItemCode: this.purchaseOrderForm.value.prItemCode,\n        quantityCanceled: this.purchaseOrderForm.value.quantityCanceled,\n        quantityDelivered: this.purchaseOrderForm.value.quantityDelivered,\n        quantityOpen: this.purchaseOrderForm.value.quantityOpen,\n        //receiptCode: this.purchaseOrderForm.value.receiptCode,\n        receivingComments: this.purchaseOrderForm.value.receivingComments,\n        status: this.purchaseOrderForm.value.status,\n\n        taxName: this.purchaseOrderForm.value.taxName,\n        taxRate: this.purchaseOrderForm.value.taxRate,\n        taxAmount: this.purchaseOrderForm.value.taxAmount,\n        subTotal: this.purchaseOrderForm.value.subTotal,\n        totalAmount: this.purchaseOrderForm.value.totalAmount,\n\n        accountNumber: this.purchaseOrderForm.value.accountNumber,\n\n        tranCode: this.purchaseOrderForm.value.tranCode,\n        transactionStatus: this.purchaseOrderForm.value.transactionStatus,\n        tranDate: this.purchaseOrderForm.value.tranDate,\n      };\n\n      if (this.updateType === \"poItem\") {\n        this.pushFormDataInToDeliveryData(updatedRecord);\n      }\n\n      if (this.updateType === \"deliveryItem\") {\n        console.log(\"this.selectedRowIndex: \", this.selectedRowIndex);\n\n        this.dataSourceDeliveryRequest.data[this.selectedRowIndex] =\n          updatedRecord;\n      }\n\n      this.dataSourceDeliveryRequest.data =\n        this.dataSourceDeliveryRequest.data.slice();\n      this.purchaseOrderForm.reset();\n\n      this.editButton = false;\n      this.addButton = true;\n      this.selectedRowIndex = -1; // Reset the selected row index\n\n      this.clearForm();\n    }\n  }\n  clearForm() {\n    this.calculateBalances();\n    this.activateDeliveryRequest = false;\n    this.selectedRows = [];\n    this.selection = new SelectionModel<any>(false, []);\n    this.allItemsSelected = false;\n  }\n\n  updateType: any;\n  editItemDeliveryDetails(row: any, updateType: any) {\n    this.purchaseOrderItem = row;\n    this.updateType = updateType;\n    this.editButton = true;\n    this.addButton = false;\n\n    console.log(\"this.selectedRowIndex: \", this.selectedRowIndex);\n\n    if (updateType === \"poItem\") {\n      this.selectedRowIndex =\n        this.dataSourcePurchaseOrderItems.data.indexOf(row);\n      this.purchaseOrderForm.patchValue({\n        prItemCode: row.itemCode,\n        prItemId: row.id,\n        quantityCanceled: row.quantityCanceled,\n        quantityDelivered: row.quantityDelivered,\n        quantityOpen: row.quantityOpen,\n      });\n    } else if (updateType === \"deliveryItem\") {\n      this.selectedRows = [];\n      this.selection = new SelectionModel<any>(false, []);\n      this.allItemsSelected = false;\n\n      this.selectedRowIndex = this.dataSourceDeliveryRequest.data.indexOf(row);\n      this.purchaseOrderForm.patchValue({\n        id: row.id,\n        prItemId: row.prItemId,\n        quantityCanceled: row.quantityCanceled,\n        quantityDelivered: row.quantityDelivered,\n        quantityOpen: row.quantityOpen,\n        prItemCode: row.prItemCode,\n        status: row.status,\n      });\n    }\n\n    this.purchaseOrderForm.patchValue({\n      deliveredBy: row.deliveredBy,\n      deliveredOn: new Date(),\n      prCode: this.formData.purchaseRequisitionCode,\n\n      //receiptCode: row.receiptCode,\n      receivingComments: row.receivingComments,\n\n      taxName: row.taxName,\n      taxRate: row.taxRate,\n      taxAmount: row.taxAmount,\n      subTotal: row.subTotal,\n      totalAmount: row.totalAmount,\n      accountNumber: row.accountNumber,\n\n      tranCode: row.tranCode,\n      transactionStatus: row.transactionStatus,\n      tranDate: row.tranDate,\n    });\n\n    this.activateDeliveryRequest = true;\n  }\n\n  pushFormDataInToDeliveryData(record: any) {\n    this.deliveryData.push(record);\n    this.dataSourceDeliveryRequest = new MatTableDataSource(this.deliveryData);\n  }\n\n  totalDues: number = 0;\n  billBalanceAmt: number = 0;\n  calculateBalances() {\n    this.totalDues = 0;\n    this.billBalanceAmt = 0;\n    this.deliveryData.forEach((element) => {\n      if (element.status === \"RECEIVED\") {\n        this.totalDues = +element.totalAmount;\n        this.billBalanceAmt = this.purchaseOrder.totalAmount - this.totalDues;\n      }\n    });\n  }\n\n  //*********************************************************************************************************************\n  //Item selection Logic\n  //*********************************************************************************************************************\n  selection = new SelectionModel<any>(false, []);\n\n  selectedRows: any;\n  allItemsSelected: boolean = false;\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourcePurchaseOrderItems.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourcePurchaseOrderItems.paginator) {\n      this.dataSourcePurchaseOrderItems.paginator.firstPage();\n    }\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSourcePurchaseOrderItems.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSourcePurchaseOrderItems.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n  checkSelection() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSourcePurchaseOrderItems.data.length;\n    if (numSelected === numRows) {\n      this.allItemsSelected = true;\n    } else if (numSelected !== numRows) {\n      this.allItemsSelected = false;\n    }\n  }\n\n  purchaseOrderItem: any;\n  checkboxActive() {\n    this.selectedRows = this.selection.selected;\n\n    this.editItemDeliveryDetails(this.selection.selected[0], \"poItem\");\n    this.unitPrice = this.selection.selected[0].unitPrice\n    //this.purchaseOrderItem = this.selection.selected[0];\n    //this.customSweetAlert();\n  }\n  customSweetAlert() {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Please ensure all selected items are fully delivered. This action is irreversible!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Proceed!\",\n    }).then((result) => {\n      if (result.value) {\n        // this.multiCalculate();\n        // this.onSubmit();\n        // Swal.fire(\"Updated!\", \"Purchase order updated sucessfully\", \"success\");\n      }\n    });\n  }\n\n  //********************************************************************************************************************** */\n  //Second Select\n  //********************************************************************************************************************** */\n\n  // New selection for a different MatTable\n  secondTableSelection = new SelectionModel<any>(false, []);\n  secondSelectItemsSelected: boolean = false;\n  secondCheckboxSelectedRows: any;\n\n  isAllSecondTableSelected() {\n    const numSelected = this.secondTableSelection.selected.length;\n    const numRows = this.dataSourceDeliveryRequest.data.length;\n    return numSelected === numRows;\n  }\n\n  masterSecondTableToggle() {\n    if (this.isAllSecondTableSelected()) {\n      this.secondTableSelection.clear();\n      return;\n    }\n\n    this.secondTableSelection.select(...this.dataSourceDeliveryRequest.data);\n  }\n\n  checkboxSecondTableLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSecondTableSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.secondTableSelection.isSelected(row) ? \"deselect\" : \"select\"\n      } row ${row.position + 1}`;\n  }\n\n  checkSecondTableSelection() {\n    const numSelected = this.secondTableSelection.selected.length;\n    const numRows = this.dataSourceDeliveryRequest.data.length;\n    if (numSelected === numRows) {\n      this.secondSelectItemsSelected = true;\n    } else if (numSelected !== numRows) {\n      this.secondSelectItemsSelected = false;\n    }\n\n    console.log(\"secondSelectItemsSelected: \", this.secondSelectItemsSelected);\n  }\n\n  transactionAction: string = \"\";\n  secondCheckboxActive(action: any) {\n    //this.secondCheckboxSelectedRows = this.secondTableSelection.selected;\n\n    console.log(\n      \"this.secondTableSelection.selected[0].tranCode:: \",\n      this.secondTableSelection.selected[0].tranCode\n    );\n\n    this.transactionAction = action;\n    console.log(\n      \"this.secondSelectItemsSelected:: \",\n      this.secondSelectItemsSelected\n    );\n\n    if (this.secondTableSelection.selected[0]?.id === null ||\n      this.secondTableSelection.selected[0]?.id === undefined ||\n      this.secondTableSelection.selected[0]?.id === \"\" ||\n      !this.secondTableSelection.selected[0].id) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"This record must be saved first\"\n      );\n      return;\n    }\n\n\n    if (\n      this.transactionAction === \"Add\" &&\n      this.secondTableSelection.selected[0]?.tranCode\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Transaction already exists for this record\"\n      );\n    } else if (\n      this.transactionAction !== \"Add\" &&\n      (this.secondTableSelection.selected[0]?.tranCode === null ||\n        this.secondTableSelection.selected[0]?.tranCode === undefined ||\n        this.secondTableSelection.selected[0]?.tranCode === \"\" ||\n        !this.secondTableSelection.selected[0].tranCode)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    } else {\n      this.transactionLookUp();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  transactionType: string = \"Receiving\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\n      \"this.secondTableSelection:: \",\n      this.secondTableSelection.selected[0]\n    );\n\n    let addBody = {};\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n        prCode: this.secondTableSelection.selected[0].prCode,\n        referenceCode: this.secondTableSelection.selected[0].grnCode,\n        itemCode: this.secondTableSelection.selected[0].prItemCode,\n        parttrans: [\n          {\n            accountNo: this.secondTableSelection.selected[0].accountNumber,\n            amount: this.secondTableSelection.selected[0].totalAmount,\n            partTranstype: \"Debit\",\n          },\n        ],\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.secondTableSelection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.secondTableSelection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n        this.updateReceivedTransactionStatus();\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  updateReceivedTransactionStatus() {\n    let params = {\n      transactionType: this.transactionResponse.transactionType,\n      tranCode: this.transactionResponse.tranCode,\n      referenceCode: this.transactionResponse.referenceCode,\n    };\n    this.requisitionService\n      .updateReceivedItemsTransactionStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n            this.getPurchaseOrderByCode();\n            // this.router.navigate([\n            //   \"/erp-procurement/requisitions/all-requisitions\",\n            // ]);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  //********************************************************************************************************************** */\n  // Upload RFQ Ranking deliveryNote\n  //********************************************************************************************************************** */\n\n  documents: any[] = [];\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  deliveryNoteModel: DeliveryNoteModel = {\n    file: \"\",\n    filename: \"\",\n    filetype: \"\",\n    referenceCode: \"\",\n  };\n\n  deliveryNoteModelPopulated = false;\n  isUploadingFile = false;\n\n  onSelectFile(files): void {\n    console.log(\"file: \", files);\n    this.isFileLoading.next(true);\n    const file = files[0];\n\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res && res.length > 0) {\n        this.isFileLoading.next(false);\n\n        const fileName = file.name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\");\n        const extension = fileParts[fileParts.length - 1];\n\n        this.deliveryNoteModel = {\n          file: res[0].base64,\n          filename: name,\n          filetype: extension,\n          referenceCode: this.formData.purchaseRequisitionCode,\n        };\n        this.deliveryNoteModelPopulated = true;\n\n        console.log(\"deliveryNoteModel :\", this.deliveryNoteModel);\n      }\n    });\n  }\n\n  onSubmitDeliveryNote(action: any) {\n    console.log(\"event: \", action);\n\n    if (action === \"Add\") {\n      this.deliveryNoteModelPopulated = false;\n      this.isUploadingFile = true;\n      this.deliveryNoteService\n        .addDeliveryNote(this.deliveryNoteModel)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"this.deliveryNoteAppres: \", res);\n\n            // res = this.sampleData\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.isUploadingFile = false;\n          },\n          complete: () => {\n            this.getDeliveryNoteDocs();\n            this.isUploadingFile = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  downloadDeliveryNoteDoc(id: any) {\n    console.log(\"id : \", id);\n    const params = new HttpParams().set(\"id\", id);\n    this.deliveryNoteService\n      .getDeliveryNoteById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.downloadBody: \", res);\n          // res = this.sampleData\n          if (res.statusCode === 302) {\n            let file = res.entity.file;\n            let filename = res.entity.filename;\n            let filetype = res.entity.filetype;\n\n            console.log(\"filename: \", filename);\n            console.log(\"filetype: \", filetype);\n\n            // Download PDF in Chrome etc.\n            const source = `${file}`;\n            const link = document.createElement(\"a\");\n            link.href = source;\n            link.download = `${filename}.${filetype}`;\n            link.click();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  isFetchingDocuments = false;\n  getDeliveryNoteDocs() {\n    this.isFetchingDocuments = true;\n    this.documents = [];\n    const params = new HttpParams().set(\n      \"referenceCode\",\n      this.formData.purchaseRequisitionCode\n    );\n\n    console.log(\"getdeliveryNoteDocs: \", this.formData.purchaseRequisitionCode);\n\n    this.deliveryNoteService\n      .getDeliveryNoteByCode(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.getdeliveryNoteDocsRes: \", res);\n          // res = this.sampleData\n          if (res.statusCode === 302) {\n            this.documents = res.entity;\n            console.log(\" this.documents :\", this.documents);\n          } else {\n            // this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n          this.isFetchingDocuments = false;\n        },\n        error: (err) => {\n          // this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isFetchingDocuments = false;\n        },\n        complete: () => {\n          this.isFetchingDocuments = false;\n        },\n      }),\n      Subscription;\n  }\n\n  deleteDeliveryNoteDocument(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Document?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Document!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.deliveryNoteService\n          .deleteDeliveryNoteTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getDeliveryNoteDocs();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //********************************************************************************************************************** */\n\n  cancel() {\n    this.router.navigate([\"/erp-procurement/requisitions/all-requisitions\"]);\n  }\n\n  //************************************************************************************************************************** */\n\n  finalBody: any[] = [];\n  posting: boolean = false\n  onSubmit() {\n\n    this.finalBody = this.dataSourceDeliveryRequest.data;\n\n    console.log(\"this.finalBody :=>: \", this.finalBody);\n    this.posting = true\n    this.requisitionService\n      .receivePurchaseOrderItems(this.finalBody)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode == 200) {\n            this.getPurchaseOrderByCode();\n\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n\n            this.finalBody = [];\n            // this.router.navigate([\n            //   \"/erp-procurement/requisitions/all-requisitions\",\n            // ]);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { this.posting = false },\n      }),\n      Subscription;\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <!-- <app-breadcrumb [title]=\"'Active Purchase Order'\" [items]=\"['Home', 'Purchase Order']\"\n        [active_item]=\"'Purchase Order'\"></app-breadcrumb> -->\n      <app-breadcrumb [title]=\"'Purchase Order Acknowledgement'\" [items]=\"['Purchase Order']\"\n        [active_item]=\"'Acknowledgement'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n        <div class=\"card text-center\" *ngIf=\"!showPage\" style=\"min-height: 400px\">\n          <div class=\"my-2 mx-2\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n          </div>\n          <div class=\"d-flex justify-content-center align-items-center flex-grow-1\">\n            <img src=\"assets/images/gif.gif\" alt=\"Loading Animation\" style=\"width: 55px; height: 55px\" />\n          </div>\n        </div>\n\n        <div class=\"card\" *ngIf=\"showPage\">\n          <div class=\"body\">\n            <div class=\"row\" *ngIf=\"purchaseOrder\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <!-- HOD Approval -->\n                        <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod\">\n                                    {{ purchaseOrder.hodApprovalStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod-approved\">\n                                    {{ purchaseOrder.hodApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>HOD Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    purchaseOrder.hodApprovalReason\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Finance Approval -->\n                        <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance\">\n                                    {{ purchaseOrder.financeApprovalStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance-approved\">\n                                    {{ purchaseOrder.financeApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Finance Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    purchaseOrder.financeApprovalReason\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <!-- Procurement Approval -->\n                        <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">\n                                  Procurement Approval\n                                </div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement\">\n                                    {{\n                                    purchaseOrder.procurementApprovalStatus\n                                    }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">\n                                  Procurement Approved By\n                                </div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement-approved\">\n                                    {{ purchaseOrder.procurementApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Procurement Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    purchaseOrder.procurementApprovalReason\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"white-box px-5 mt-0\">\n                  <!-- <h5>\n                    <b>Acknowledgement</b>\n                  </h5>\n                  <hr /> -->\n                  <div class=\"row\">\n                    <div class=\"col-lg-2 col-md-2 col-sm-12 col-xs-12\">\n                      <div class=\"float-start mt-3\">\n                        <address>\n                          <p class=\"m-t-0\">\n                            <b>PO Category :</b>\n                            <!-- <i class=\"fa fa-rocket\"></i> -->\n                            {{ purchaseOrder.purchaseOrderCategory }}\n                          </p>\n\n                          <p class=\"m-t-0\">\n                            <b>PO Number :</b>\n                            <i class=\"fa fa-rocket\"></i>\n                            {{ purchaseOrder.purchaseRequisitionCode }}\n                          </p>\n                          <p>\n                            <b>Status : </b>\n                            <span class=\"label label-primary\">{{\n                              purchaseOrder.status\n                              }}</span>\n                          </p>\n                        </address>\n                        <hr />\n                        <address>\n                          <p class=\"font-bold\">Organization Details:</p>\n                          <p class=\"text-muted\">\n                            Department Code: {{ purchaseOrder.departmentcode }},\n                            <br />\n                            Branch Code: {{ purchaseOrder.branchcode }}, <br />\n                            Cost Center Code:\n                            {{ purchaseOrder.costcentercode }}, <br />\n                            Member Code: {{ purchaseOrder.membercode }}, <br />\n                            Requested By: {{ purchaseOrder.requestedBy }},\n                            <br />\n                            Requested On:\n                            {{ purchaseOrder.requestedOn | date : \"medium\" }}\n                          </p>\n                        </address>\n                        <hr />\n                        <address>\n                          <p class=\"font-bold\">Vendor :</p>\n                          <p class=\"text-muted\">\n                            Name: {{ purchaseOrder.supplierName }}, <br />\n                            Email: {{ purchaseOrder.supplierEmail }}, <br />\n                            Phone: {{ purchaseOrder.supplierPhone }}, <br />\n                            Code: {{ purchaseOrder.supplierCode }}\n                          </p>\n                        </address>\n                        <hr />\n                        <address>\n                          <!-- <p class=\"addr-font-h3 font-bold\">Accounting Info :</p> -->\n                          <!-- <p class=\"text-muted\">\n                            PostedBy: {{ purchaseOrder.postedBy }},<br />\n                            PostedTime:\n                            {{ purchaseOrder.postedTime | date : \"medium\" }},\n                            <br />\n                            HOD ApprovedBy:\n                            {{ purchaseOrder.hodApprovedBy }},<br />\n                            HOD ApprovedOn:\n                            {{ purchaseOrder.hodApprovedOn | date : \"medium\" }},\n                            <br />\n                            Procurement ApprovedBy:\n                            {{ purchaseOrder.procurementApprovedBy }},<br />\n                            Procurement ApprovedOn:\n                            {{\n                            purchaseOrder.procurementApprovedOn\n                            | date : \"medium\"\n                            }}, <br />\n                            Finance ApprovedBy:\n                            {{ purchaseOrder.financeApprovedBy }},<br />\n                            Finance ApprovedOn:\n                            {{\n                            purchaseOrder.financeApprovedOn | date : \"medium\"\n                            }},\n                          </p> -->\n                        </address>\n                      </div>\n                    </div>\n\n                    <div class=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\n                      <div class=\"body\">\n                        <mat-tab-group>\n                          <mat-tab label=\"Confirm items\">\n                            <!-- <br /> -->\n\n                            <div class=\"row params mx-3\" *ngIf=\"activateDeliveryRequest\">\n                              <div class=\"parameter-card quantity\">\n                                <div class=\"parameter-label\">Quantity</div>\n                                <div class=\"parameter-content\">\n                                  <div class=\"parameter-value\">\n                                    {{ purchaseOrderItem.quantity }}\n                                  </div>\n                                  <i class=\"fas fa-cube parameter-icon\"></i>\n                                </div>\n                              </div>\n\n                              <div class=\"parameter-card delivered\">\n                                <div class=\"parameter-label\">\n                                  Quantity Delivered\n                                </div>\n                                <div class=\"parameter-content\">\n                                  <div class=\"parameter-value\">\n                                    {{ purchaseOrderItem.quantityDelivered }}\n                                  </div>\n                                  <i class=\"fas fa-truck parameter-icon\"></i>\n                                </div>\n                              </div>\n\n                              <div class=\"parameter-card open\">\n                                <div class=\"parameter-label\">Quantity Open</div>\n                                <div class=\"parameter-content\">\n                                  <div class=\"parameter-value\">\n                                    {{ purchaseOrderItem.quantityOpen }}\n                                  </div>\n                                  <i class=\"fas fa-exclamation-circle parameter-icon\"></i>\n                                </div>\n                              </div>\n\n                              <div class=\"parameter-card remaining\">\n                                <div class=\"parameter-label\">\n                                  Quantity Remaining\n                                </div>\n                                <div class=\"parameter-content\">\n                                  <div class=\"parameter-value\">\n                                    {{ purchaseOrderItem.quantityRemaining }}\n                                  </div>\n                                  <i class=\"fas fa-chart-pie parameter-icon\"></i>\n                                </div>\n                              </div>\n\n                              <div class=\"parameter-card canceled\">\n                                <div class=\"parameter-label\">\n                                  Quantity Canceled\n                                </div>\n                                <div class=\"parameter-content\">\n                                  <div class=\"parameter-value\">\n                                    {{ purchaseOrderItem.quantityCanceled }}\n                                  </div>\n                                  <i class=\"fas fa-times-circle parameter-icon\"></i>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"row mx-1 mt-2\">\n                              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <div class=\"table-responsiv\">\n                                  <div class=\"materialTableHead\">\n                                    <div class=\"row mx-1\">\n                                      <div class=\"col-12\">\n                                        <ul class=\"head-buttons-left ms-0\">\n                                          <li class=\"dropdown\">\n                                            <h2>P.O Items</h2>\n                                          </li>\n                                          <li class=\"dropd m-l-20\">\n                                            <label for=\"search-input\">\n                                              <i class=\"material-icons search-icon\">search</i>\n                                            </label>\n                                            <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                              #filter class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                          </li>\n\n                                          <li>\n                                            <div class=\"m-l-10\" matTooltip=\"Confirm the Delivery is in order\"\n                                              [hidden]=\"!allItemsSelected\">\n                                              <button mat-mini-fab color=\"accent\" (click)=\"checkboxActive()\"\n                                                [class.auth-spinner]=\"\n                                                  multimodifyloading\n                                                \" [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done\n                                                </mat-icon>\n                                              </button>\n                                            </div>\n                                          </li>\n                                        </ul>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <mat-table #table matTableExporter [dataSource]=\"dataSourcePurchaseOrderItems\" matSort\n                                    class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                    <!-- Checkbox Column -->\n                                    <ng-container matColumnDef=\"select\">\n                                      <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-7'\">\n                                        <mat-checkbox (change)=\"\n                                            $event ? masterToggle() : null\n                                          \" [checked]=\"\n                                            selection.hasValue() &&\n                                            isAllSelected()\n                                          \" [indeterminate]=\"\n                                            selection.hasValue() &&\n                                            !isAllSelected()\n                                          \" [ngClass]=\"'tbl-checkbox'\" (change)=\"checkSelection()\">\n                                        </mat-checkbox>\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-7'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"\n                                            $event\n                                              ? selection.toggle(row)\n                                              : null\n                                          \" [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                          [aria-label]=\"checkboxLabel(row)\" (change)=\"checkSelection()\">\n                                        </mat-checkbox>\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"itemCode\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                                        Code\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                                        {{ row.itemCode }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"itemRequested\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                                        Item\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                                        {{ row.itemRequested }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"quantity\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-14\">\n                                        Quantity\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-14\">\n                                        {{ row.quantity | number : \".2-2\" }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"unitPrice\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                        U.Price\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                        {{ row.unitPrice | number : \".2-2\" }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"totalAmount\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                        Total Amt\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                        {{ row.totalAmount | number : \".2-2\" }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <!-- <ng-container matColumnDef=\"action\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                        Action</mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                        <button matTooltip=\"Edit\" mat-icon-button color=\"accent\"\n                                          (click)=\"$event.stopPropagation()\" (click)=\"editItemDeliveryDetails(row)\"\n                                          class=\"tbl-action-btn\" [disabled]=\"\">\n                                          <app-feather-icons [icon]=\"'edit'\"\n                                            [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                        </button>\n                                      </mat-cell>\n                                    </ng-container> -->\n\n                                    <mat-header-row *matHeaderRowDef=\"\n                                        displayedPurchaseOrderItems\n                                      \"></mat-header-row>\n                                    <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                                    <mat-row *matRowDef=\"\n                                        let row;\n                                        columns: displayedPurchaseOrderItems\n                                      \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                                    <mat-cell *matNoDataRow colspan=\"4\">\n                                      No data matching the filter \"{{\n                                      input.value\n                                      }}\"\n                                    </mat-cell>\n                                  </mat-table>\n                                  <!-- Loading spinner -->\n                                  <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                    </mat-progress-spinner>\n                                  </div>\n                                  <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[\n                                      2, 5, 10, 20, 30, 40, 50, 100\n                                    ]\" aria-label=\"Select page of users\"></mat-paginator>\n                                </div>\n                              </div>\n\n                              <div class=\"header\" *ngIf=\"activateDeliveryRequest\">\n                                <div class=\"row\">\n                                  <h2>Receive Items</h2>\n                                </div>\n                              </div>\n                              <form class=\"mx-0\" [formGroup]=\"purchaseOrderForm\" *ngIf=\"activateDeliveryRequest\">\n                                <div class=\"row\">\n                                  <!-- <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>PR Code</mat-label>\n                                      <input matInput formControlName=\"prCode\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('prCode')\n                                            .hasError('required')\n                                        \">PR Code is required</mat-error>\n                                    </mat-form-field>\n                                  </div> -->\n                                  <!-- \n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>PR Item Code</mat-label>\n                                      <input matInput formControlName=\"prItemCode\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('prItemCode')\n                                            .hasError('required')\n                                        \">PR Item Code is required</mat-error>\n                                    </mat-form-field>\n                                  </div> -->\n\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Delivered By</mat-label>\n                                      <input matInput formControlName=\"deliveredBy\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('deliveredBy')\n                                            .hasError('required')\n                                        \">Delivered By is required</mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Delivered On</mat-label>\n                                      <input matInput [matDatepicker]=\"deliveredOnPicker\" formControlName=\"deliveredOn\"\n                                        required />\n                                      <mat-datepicker-toggle matSuffix\n                                        [for]=\"deliveredOnPicker\"></mat-datepicker-toggle>\n                                      <mat-datepicker #deliveredOnPicker></mat-datepicker>\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('deliveredOn')\n                                            .hasError('required')\n                                        \">Delivered On is required</mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Status</mat-label>\n                                      <mat-select formControlName=\"status\" (selectionChange)=\"\n                                          getSelectedStatus($event)\n                                        \">\n                                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.name\">{{ status.name\n                                          }}</mat-option>\n                                      </mat-select>\n\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('status')\n                                            .hasError('required')\n                                        \">Status is required</mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <!-- taxName -->\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Tax Name</mat-label>\n                                      <input matInput formControlName=\"taxName\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('taxName')\n                                            .hasError('required') &&\n                                          purchaseOrderForm.get('taxName')\n                                            .touched\n                                        \">\n                                        Please enter a tax name!\n                                      </mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <!-- taxRate -->\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Tax Rate</mat-label>\n                                      <input matInput formControlName=\"taxRate\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('taxRate')\n                                            .hasError('required') &&\n                                          purchaseOrderForm.get('taxRate')\n                                            .touched\n                                        \">\n                                        Please enter a tax rate!\n                                      </mat-error>\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('taxRate')\n                                            .hasError('pattern') &&\n                                          purchaseOrderForm.get('taxRate')\n                                            .touched\n                                        \">\n                                        Please ensure the tax rate is a number\n                                        with up to 2 decimal places!\n                                      </mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <!-- taxAmount -->\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Tax Amount</mat-label>\n                                      <input matInput formControlName=\"taxAmount\" mask=\"separator\"\n                                        thousandSeparator=\",\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('taxAmount')\n                                            .hasError('required') &&\n                                          purchaseOrderForm.get('taxAmount')\n                                            .touched\n                                        \">\n                                        Please enter amount!\n                                      </mat-error>\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('taxAmount')\n                                            .hasError('pattern') &&\n                                          purchaseOrderForm.get('taxAmount')\n                                            .touched\n                                        \">\n                                        Please ensure amount does not exceed 2\n                                        decimal values!\n                                      </mat-error>\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('taxAmount')\n                                            .hasError('max') &&\n                                          purchaseOrderForm.get('taxAmount')\n                                            .touched\n                                        \">\n                                        Please ensure amount does not exceed 1\n                                        billion!\n                                      </mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <!-- subTotal -->\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Subtotal</mat-label>\n                                      <input matInput formControlName=\"subTotal\" mask=\"separator\"\n                                        thousandSeparator=\",\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('subTotal')\n                                            .hasError('required') &&\n                                          purchaseOrderForm.get('subTotal')\n                                            .touched\n                                        \">\n                                        Please enter amount!\n                                      </mat-error>\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('subTotal')\n                                            .hasError('pattern') &&\n                                          purchaseOrderForm.get('subTotal')\n                                            .touched\n                                        \">\n                                        Please ensure amount does not exceed 2\n                                        decimal values!\n                                      </mat-error>\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('subTotal')\n                                            .hasError('max') &&\n                                          purchaseOrderForm.get('subTotal')\n                                            .touched\n                                        \">\n                                        Please ensure amount does not exceed 1\n                                        billion!\n                                      </mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <!-- totalAmount -->\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Total Amount</mat-label>\n                                      <input matInput formControlName=\"totalAmount\" mask=\"separator\"\n                                        thousandSeparator=\",\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('totalAmount')\n                                            .hasError('required') &&\n                                          purchaseOrderForm.get('totalAmount')\n                                            .touched\n                                        \">\n                                        Please enter unit amount!\n                                      </mat-error>\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('totalAmount')\n                                            .hasError('pattern') &&\n                                          purchaseOrderForm.get('totalAmount')\n                                            .touched\n                                        \">\n                                        Please ensure amount does not exceed 2\n                                        decimal values!\n                                      </mat-error>\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('totalAmount')\n                                            .hasError('max') &&\n                                          purchaseOrderForm.get('totalAmount')\n                                            .touched\n                                        \">\n                                        Please ensure amount does not exceed 1\n                                        billion!\n                                      </mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Quantity Delivered</mat-label>\n                                      <input matInput formControlName=\"quantityDelivered\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('quantityDelivered')\n                                            .hasError('min')\n                                        \">Quantity Delivered cannot be less than\n                                        0</mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Quantity Canceled</mat-label>\n                                      <input matInput formControlName=\"quantityCanceled\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('quantityCanceled')\n                                            .hasError('min')\n                                        \">Quantity Canceled cannot be less than\n                                        0</mat-error>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <!-- <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Quantity Open</mat-label>\n                                      <input matInput formControlName=\"quantityOpen\" />\n                                      <mat-error *ngIf=\"\n                                          purchaseOrderForm\n                                            .get('quantityOpen')\n                                            .hasError('min')\n                                        \">Quantity Open cannot be less than\n                                        0</mat-error>\n                                    </mat-form-field>\n                                  </div> -->\n\n                                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                      <mat-label>Receiving Comments</mat-label>\n                                      <textarea matInput formControlName=\"receivingComments\"></textarea>\n                                    </mat-form-field>\n                                  </div>\n\n                                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                                    <div class=\"float-right\">\n                                      <!-- <button *ngIf=\"addButton\" [disabled]=\"purchaseOrderForm.invalid\"\n                                        (click)=\"addToArray()\" class=\"btn-space\" mat-raised-button color=\"primary\">\n                                        + Add Receive details\n                                      </button> -->\n                                      <button *ngIf=\"editButton\" [disabled]=\"purchaseOrderForm.invalid\"\n                                        class=\"btn-space\" (click)=\"updateItemDeliveryDetails()\" mat-raised-button\n                                        color=\"primary\">\n                                        + Update Receive Details\n                                      </button>\n                                      <button type=\"button\" (click)=\"clearForm()\" mat-raised-button color=\"warn\">\n                                        Clear\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </form>\n\n                              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <div class=\"table-responsiv\">\n                                  <div class=\"materialTableHead\">\n                                    <div class=\"row mx-1\">\n                                      <div class=\"col-12\">\n                                        <ul class=\"head-buttons-left ms-0\">\n                                          <li class=\"dropdown\">\n                                            <h2>Received Items</h2>\n                                          </li>\n                                          <li class=\"dropd m-l-20\">\n                                            <label for=\"search-input\">\n                                              <i class=\"material-icons search-icon\">search</i>\n                                            </label>\n                                            <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                              #filter class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                          </li>\n\n                                          <!-- Accounting Actions Title -->\n                                          <li *ngIf=\"\n                                              secondTableSelection.selected\n                                                .length > 0\n                                            \">\n                                            <h2 class=\"accounting-actions-title\">\n                                              Accounting Actions\n                                            </h2>\n                                          </li>\n\n                                          <!-- Accounting Actions Buttons -->\n                                          <ng-container>\n                                            <li *ngIf=\"\n                                                secondTableSelection.selected\n                                                  .length > 0\n                                              \">\n                                              <div class=\"m-l-10\" matTooltip=\"Add Accounting Details\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"\n                                                    secondCheckboxActive('Add')\n                                                  \">\n                                                  <mat-icon class=\"col-white\">add_circle</mat-icon>\n                                                </button>\n                                              </div>\n                                            </li>\n\n                                            <li *ngIf=\"\n                                                secondTableSelection.selected\n                                                  .length > 0\n                                              \">\n                                              <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"\n                                                    secondCheckboxActive(\n                                                      'Update'\n                                                    )\n                                                  \">\n                                                  <mat-icon class=\"col-white\">edit</mat-icon>\n                                                </button>\n                                              </div>\n                                            </li>\n\n                                            <li *ngIf=\"\n                                                secondTableSelection.selected\n                                                  .length > 0\n                                              \">\n                                              <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"\n                                                    secondCheckboxActive('View')\n                                                  \">\n                                                  <mat-icon class=\"col-white\">visibility</mat-icon>\n                                                </button>\n                                              </div>\n                                            </li>\n                                          </ng-container>\n                                        </ul>\n                                      </div>\n                                    </div>\n                                  </div>\n\n                                  <mat-table #table matTableExporter [dataSource]=\"dataSourceDeliveryRequest\" matSort\n                                    class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                    <ng-container matColumnDef=\"secondTableSelect\">\n                                      <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-7'\">\n                                        <mat-checkbox (change)=\"\n                                            $event\n                                              ? masterSecondTableToggle()\n                                              : null\n                                          \" [checked]=\"\n                                            secondTableSelection.hasValue() &&\n                                            isAllSecondTableSelected()\n                                          \" [indeterminate]=\"\n                                            secondTableSelection.hasValue() &&\n                                            !isAllSecondTableSelected()\n                                          \" [ngClass]=\"'tbl-checkbox'\">\n                                        </mat-checkbox>\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-7'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"\n                                            $event\n                                              ? secondTableSelection.toggle(row)\n                                              : null\n                                          \" [checked]=\"\n                                            secondTableSelection.isSelected(row)\n                                          \" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"\n                                            checkboxSecondTableLabel(row)\n                                          \">\n                                        </mat-checkbox>\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"prItemCode\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                                        Code\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\"\n                                        matTooltip=\"{{ row.prItemCode }}\">\n                                        {{ row.prItemCode }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"quantityOpen\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\" matTooltip=\"QuantityOpen\">\n                                        Q.O\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.quantityOpen | number : \".2-2\" }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"quantityDelivered\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\" matTooltip=\"QuantityDelivered\">\n                                        Q.D\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{\n                                        row.quantityDelivered\n                                        | number : \".2-2\"\n                                        }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"quantityCanceled\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\" matTooltip=\"QuantityCancelled\">\n                                        Q.C\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{\n                                        row.quantityCanceled | number : \".2-2\"\n                                        }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"totalAmount\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\" matTooltip=\"QuantityCancelled\">\n                                        TotalAmt\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.totalAmount | number : \".2-2\" }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"tranCode\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\" matTooltip=\"QuantityCancelled\">\n                                        TranCode\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.tranCode || \"-\" }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"transactionStatus\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        TranStatus\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container [ngSwitch]=\"row.transactionStatus\">\n                                          <button *ngSwitchCase=\"'PENDING'\"\n                                            class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-check-circle\"></i>&nbsp; {{ row.transactionStatus }}\n                                          </button>\n\n                                          <button *ngSwitchCase=\"'POSTED'\"\n                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-undo-alt\"></i>&nbsp; {{ row.transactionStatus }}\n                                          </button>\n\n                                          <ng-container *ngSwitchDefault>\n                                            N.A\n                                          </ng-container>\n                                        </ng-container>\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"tranDate\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Tran Date\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{\n                                        row.tranDate\n                                        ? (row.tranDate | date : \"short\")\n                                        : \"N.A\"\n                                        }}\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"status\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-28\">Status</mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                          <button *ngSwitchCase=\"'RECEIVED'\"\n                                            class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                            {{ row.status }}\n                                          </button>\n\n                                          <button *ngSwitchCase=\"'RETURNED'\"\n                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                            {{ row.status }}\n                                          </button>\n                                        </ng-container>\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"action\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                        Action</mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                        <button matTooltip=\"Edit\" mat-icon-button color=\"accent\"\n                                          (click)=\"$event.stopPropagation()\" (click)=\"\n                                            editItemDeliveryDetails(\n                                              row,\n                                              'deliveryItem'\n                                            )\n                                          \" class=\"tbl-action-btn\" [disabled]=\"\">\n                                          <app-feather-icons [icon]=\"'edit'\"\n                                            [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                        </button>\n                                      </mat-cell>\n                                    </ng-container>\n\n                                    <mat-header-row *matHeaderRowDef=\"\n                                        displayedColumnsDeliveryRequest\n                                      \"></mat-header-row>\n                                    <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                                    <mat-row *matRowDef=\"\n                                        let row;\n                                        columns: displayedColumnsDeliveryRequest\n                                      \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                                    <mat-cell *matNoDataRow colspan=\"4\">\n                                      No data matching the filter \"{{\n                                      input.value\n                                      }}\"\n                                    </mat-cell>\n                                  </mat-table>\n                                  <!-- Loading spinner -->\n                                  <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                    </mat-progress-spinner>\n                                  </div>\n                                  <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[\n                                      2, 5, 10, 20, 30, 40, 50, 100\n                                    ]\" aria-label=\"Select page of users\"></mat-paginator>\n                                </div>\n                              </div>\n\n                              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 my-3\">\n                                <div class=\"example-button-row\" align=\"end\">\n                                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                    (click)=\"cancel()\">\n                                    <mat-icon>cancel</mat-icon>\n                                    Back\n                                  </button>\n\n                                  <!-- <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                                    (click)=\"onValidate('Verifier')\" mat-raised-button color=\"primary\">\n                                    <mat-icon>done_outline</mat-icon>\n                                    Verifier Approval\n                                  </button> -->\n\n                                  <!-- <button class=\"btn-space\" (click)=\"onSubmit()\" mat-raised-button color=\"primary\">\n                                    <mat-icon>file_download</mat-icon>\n                                    Submit\n                                  </button> -->\n\n                                  <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                    [class.auth-spinner]=\"posting\" [disabled]=\"posting\" [hidden]=\"viewMode\"\n                                    (click)=\"onSubmit()\">\n                                    <mat-icon>file_download</mat-icon>\n                                    Submit\n                                  </button>\n\n                                  <!-- [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"  -->\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"row mx-1\">\n                              <hr />\n                              <div class=\"col-md-12\">\n                                <div class=\"row\">\n                                  <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                    <div class=\"float-start m-t-15\">\n                                      <h5><strong>Original bill</strong></h5>\n\n                                      <p>\n                                        Total amount:\n                                        {{\n                                        purchaseOrder.subTotalAmount\n                                        | currency : \"KSH \"\n                                        }}\n                                      </p>\n                                      <!-- <p>Discount : KES. 0</p> -->\n                                      <p>\n                                        Total tax amt:{{\n                                        purchaseOrder.totalTax\n                                        | currency : \"KSH \"\n                                        }}\n                                      </p>\n                                      <hr />\n                                      <h5>\n                                        <b>Total :</b>\n                                        {{\n                                        purchaseOrder.totalAmount\n                                        | currency : \"KSH \"\n                                        }}\n                                      </h5>\n                                    </div>\n                                  </div>\n                                  <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                    <div class=\"float-end m-t-15 text-end\">\n                                      <h5><strong>Bill Balance</strong></h5>\n                                      <p>\n                                        Amount:\n                                        {{ billBalanceAmt | currency : \"KSH \" }}\n                                      </p>\n                                      <hr />\n                                      <h5><strong>Current Bill</strong></h5>\n                                      <p>\n                                        Amount:\n                                        {{ totalDues | currency : \"KSH \" }}\n                                      </p>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                <div class=\"clearfix\"></div>\n                                <hr />\n                                <!-- <div class=\"text-end\">\n                                  <button class=\"btn-space\" mat-raised-button color=\"primary\"> Go Back </button>\n                                </div> -->\n                              </div>\n                            </div>\n                          </mat-tab>\n                          <mat-tab label=\"Upload Delivery Note\">\n                            <br />\n\n                            <div class=\"mt-3\">\n                              <div class=\"header\">\n                                <div class=\"row\">\n                                  <h2>Upload Delivery Note</h2>\n                                </div>\n                              </div>\n\n                              <div class=\"mx-4\">\n                                <div class=\"card\">\n                                  <div class=\"body\">\n                                    <div class=\"mb-3\" *ngIf=\"isUploadingFile\">\n                                      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                      </mat-progress-bar>\n                                    </div>\n                                    <div class=\"row\">\n                                      <div class=\"col-lg-10 col-md-11 col-sm-8 col-xs-8\">\n                                        <app-file-upload type=\"file\" (change)=\"\n                                            onSelectFile($event.target.files)\n                                          \"></app-file-upload>\n                                      </div>\n                                      <div\n                                        class=\"col-lg-2 col-md-2 col-sm-4 col-xs-4 d-flex align-items-center justify-content-center\">\n                                        <button class=\"btn-space\" mat-raised-button color=\"primary\" [disabled]=\"\n                                            !deliveryNoteModelPopulated\n                                          \" (click)=\"onSubmitDeliveryNote('Add')\">\n                                          <mat-icon>file_download</mat-icon>\n                                          Submit\n                                        </button>\n\n                                        <!-- !accForm.valid || -->\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                <div class=\"header\">\n                                  <div class=\"row\">\n                                    <h2>Uploaded Delivery Notes</h2>\n                                  </div>\n                                </div>\n                                <div class=\"body mt-1\">\n                                  <div class=\"mb-3\" *ngIf=\"isFetchingDocuments\">\n                                    <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                    </mat-progress-bar>\n                                  </div>\n\n                                  <div class=\"doc-file-type\" *ngIf=\"!isFetchingDocuments\">\n                                    <ul class=\"list-unstyled\" style=\"\n                                        position: relative;\n                                        max-height: 385px;\n                                      \" [perfectScrollbar]>\n                                      <div class=\"document-list row\" *ngIf=\"documents.length > 0\">\n                                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\"\n                                          *ngFor=\"let document of documents\">\n                                          <div class=\"card\">\n                                            <div class=\"body\">\n                                              <li class=\"d-flex mb-3 mt-2\">\n                                                <span\n                                                  class=\"msr-3 align-self-center img-icon primary-rgba text-primary\"><i\n                                                    class=\"far fa-file-excel\"></i></span>\n                                                <div class=\"set-flex\">\n                                                  <h5 class=\"font-16 mb-1 truncate\">\n                                                    {{ document.filename }}\n                                                  </h5>\n                                                  <p>\n                                                    .{{ document.filetype }}\n                                                  </p>\n                                                </div>\n                                                <div class=\"ms-auto\">\n                                                  <td>\n                                                    <i class=\"far fa-trash-alt psr-3 custom-icon-size text-danger\"\n                                                      (click)=\"\n                                                        deleteDeliveryNoteDocument(\n                                                          document.id\n                                                        )\n                                                      \"></i>\n                                                    <i class=\"far fa-arrow-alt-circle-down custom-icon-size text-primary\"\n                                                      (click)=\"\n                                                        downloadDeliveryNoteDoc(\n                                                          document.id\n                                                        )\n                                                      \"></i>\n                                                  </td>\n                                                </div>\n                                              </li>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <div *ngIf=\"documents.length === 0\" class=\"text-center\">\n                                        <p>No files available.</p>\n                                      </div>\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </mat-tab>\n                        </mat-tab-group>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllRequisitionsComponent } from './pages/all-requisitions/all-requisitions.component';\nimport { ManageRequisitionComponent } from './pages/manage-requisition/manage-requisition.component';\nimport { RoutePrivilegeGuard } from '../../data/services/_AccessControlAuthGuard.service';\nimport { PurchaseOrderAcknowledgementComponent } from './pages/purchase-order-acknowledgement/purchase-order-acknowledgement.component';\n\nconst routes: Routes = [\n\n   //Budgets\n   {\n    path: \"all-requisitions\",\n    component: AllRequisitionsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'ProcurementModule', requiredPrivilege:[\"All Requisitions\"] },\n  },\n  {\n    path: \"manage-requisitions\",\n    component: ManageRequisitionComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'ProcurementModule', requiredPrivilege:[\"Manage Requisitions\"] },\n  },\n  {\n    path: \"purchase-order-acknowledgement\",\n    component: PurchaseOrderAcknowledgementComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'ProcurementModule', requiredPrivilege:[\"Purchase Order Acknowledgement\"] },\n  },\n\n \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RequisitionRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule, DatePipe } from \"@angular/common\";\n\nimport { RequisitionRoutingModule } from \"./requisition-routing.module\";\nimport { AllRequisitionsComponent } from \"./pages/all-requisitions/all-requisitions.component\";\nimport { ManageRequisitionComponent } from \"./pages/manage-requisition/manage-requisition.component\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatStepperModule } from \"@angular/material/stepper\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatTableExporterModule } from \"mat-table-exporter\";\nimport { NgApexchartsModule } from \"ng-apexcharts\";\nimport { NgxMaskModule } from \"ngx-mask\";\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\nimport { ComponentsModule } from \"src/app/shared/components/components.module\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\nimport { DashboardModule } from \"../dashboard/dashboard.module\";\nimport { ValidateRequisitionComponent } from \"./dialogs/validate-requisition/validate-requisition.component\";\nimport { MatChipsModule } from \"@angular/material/chips\";\n\nimport { MatBadgeModule } from \"@angular/material/badge\";\n\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatBottomSheetModule } from \"@angular/material/bottom-sheet\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\n\nimport { MatExpansionModule } from \"@angular/material/expansion\";\n\nimport { MatSliderModule } from \"@angular/material/slider\";\n\nimport { FormsModule } from \"@angular/forms\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { PurchaseOrderAcknowledgementComponent } from './pages/purchase-order-acknowledgement/purchase-order-acknowledgement.component';\n\n@NgModule({\n  declarations: [\n    AllRequisitionsComponent,\n    ManageRequisitionComponent,\n    ValidateRequisitionComponent,\n    PurchaseOrderAcknowledgementComponent,\n  ],\n  imports: [\n    CommonModule,\n    RequisitionRoutingModule,\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n\n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n\n    MatFormFieldModule,\n\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n\n    MatSnackBarModule,\n    MatToolbarModule,\n\n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule,\n    MatChipsModule,\n    CommonModule,\n\n    FormsModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatListModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatSliderModule,\n    NgbModule,\n  ],\n  providers: [DatePipe],\n})\nexport class RequisitionModule {}\n"],"names":[],"sourceRoot":"webpack:///"}