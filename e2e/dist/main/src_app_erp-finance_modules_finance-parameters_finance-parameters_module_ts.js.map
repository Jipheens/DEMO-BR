{"version":3,"file":"src_app_erp-finance_modules_finance-parameters_finance-parameters_module_ts.js","mappings":"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","sources":["./src/app/erp-finance/data/lookups/countries/countries.component.ts","./src/app/erp-finance/data/lookups/countries/countries.component.html","./src/app/erp-finance/data/lookups/currency-lookup/currency-lookup.component.ts","./src/app/erp-finance/data/lookups/currency-lookup/currency-lookup.component.html","./src/app/erp-finance/data/lookups/validation/gl-validation/gl-validation.component.ts","./src/app/erp-finance/data/lookups/validation/gl-validation/gl-validation.component.html","./src/app/erp-finance/data/services/approval-limits.service.ts","./src/app/erp-finance/data/services/gl-mapping.service.ts","./src/app/erp-finance/modules/finance-parameters/finance-parameters-routing.module.ts","./src/app/erp-finance/modules/finance-parameters/finance-parameters.module.ts","./src/app/erp-finance/modules/finance-parameters/pages/approval-limits/all-approval-limits/all-approval-limits.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/approval-limits/all-approval-limits/all-approval-limits.component.html","./src/app/erp-finance/modules/finance-parameters/pages/approval-limits/manage-approval-limit/manage-approval-limit.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/approval-limits/manage-approval-limit/manage-approval-limit.component.html","./src/app/erp-finance/modules/finance-parameters/pages/costCentres/all-cost-centres/all-cost-centres.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/costCentres/all-cost-centres/all-cost-centres.component.html","./src/app/erp-finance/modules/finance-parameters/pages/costCentres/manage-cost-centres/manage-cost-centres.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/costCentres/manage-cost-centres/manage-cost-centres.component.html","./src/app/erp-finance/modules/finance-parameters/pages/currency-maintenance/all-currency/all-currency.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/currency-maintenance/all-currency/all-currency.component.html","./src/app/erp-finance/modules/finance-parameters/pages/currency-maintenance/manage-currency/manage-currency.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/currency-maintenance/manage-currency/manage-currency.component.html","./src/app/erp-finance/modules/finance-parameters/pages/currency-maintenance/validate-currency/validate-currency.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/currency-maintenance/validate-currency/validate-currency.component.html","./src/app/erp-finance/modules/finance-parameters/pages/customer-types/all-customer-types/all-customer-types.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/customer-types/all-customer-types/all-customer-types.component.html","./src/app/erp-finance/modules/finance-parameters/pages/customer-types/manage-customer-types/manage-customer-types.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/customer-types/manage-customer-types/manage-customer-types.component.html","./src/app/erp-finance/modules/finance-parameters/pages/expenses/all-expenses/all-expenses.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/expenses/all-expenses/all-expenses.component.html","./src/app/erp-finance/modules/finance-parameters/pages/expenses/manage-expenses/manage-expenses.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/expenses/manage-expenses/manage-expenses.component.html","./src/app/erp-finance/modules/finance-parameters/pages/gl-accounts/all-accounts/all-accounts.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/gl-accounts/all-accounts/all-accounts.component.html","./src/app/erp-finance/modules/finance-parameters/pages/gl-accounts/manage-accounts/manage-accounts.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/gl-accounts/manage-accounts/manage-accounts.component.html","./src/app/erp-finance/modules/finance-parameters/pages/gl-mapping/gl-mapping.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/gl-mapping/gl-mapping.component.html","./src/app/erp-finance/modules/finance-parameters/pages/payment-methods/all-payment-methods/all-payment-methods.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/payment-methods/all-payment-methods/all-payment-methods.component.html","./src/app/erp-finance/modules/finance-parameters/pages/payment-methods/manage-payment-methods/manage-payment-methods.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/payment-methods/manage-payment-methods/manage-payment-methods.component.html","./src/app/erp-finance/modules/finance-parameters/pages/tax-maintenance/all-tax/all-tax.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/tax-maintenance/all-tax/all-tax.component.html","./src/app/erp-finance/modules/finance-parameters/pages/tax-maintenance/manage-tax/manage-tax.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/tax-maintenance/manage-tax/manage-tax.component.html","./src/app/erp-finance/modules/finance-parameters/pages/tax-maintenance/validate/validate.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/tax-maintenance/validate/validate.component.html","./src/app/erp-procurement/data/services/currency-management.service.ts"],"sourcesContent":["import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { CurrencyService } from 'src/app/erp-finance/data/services/currency.service';\nimport { CurrencyManagementService } from 'src/app/erp-procurement/data/services/currency-management.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.sass']\n})\nexport class CountriesComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    // \"id\",\n    \"country\",\n    \"currency\",\n    \"currencyCode\",\n    // \"currencyCountry\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private CurrencyManService: CurrencyService,\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((currency) => {\n        if (currency === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    this.CurrencyManService\n      .getCountry()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n\n          this.currencyDetails = res;\n\n          this.currenciesArray = this.data.selected;\n\n          console.log(\"this.currencies: \", this.currencyDetails);\n\n          this.dataSource = new MatTableDataSource<any>(this.currencyDetails);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n\n","<div class=\"addContainer\">\n\n  <div class=\"contact-details\">\n    <div class=\"mb-3\" *ngIf=\"isLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\">Select currency</div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n        <div *ngIf=\"isLoading\">\n          <div class=\"d-flex justify-content-center\">\n            <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n          </div>\n        </div>\n        <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n            <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n              <div class=\"row\">\n                <div class=\"col-6 px-4\">\n                  <div class=\"mx-auto\">\n                    <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                      #input />\n                  </div>\n                </div>\n                <div class=\"col-6 px-4\">\n                  <div class=\"mx-auto\">\n                    <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                      <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                        [disabled]=\"multimodifyloading\">\n                        <mat-icon class=\"col-white\">done_all </mat-icon>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </ng-container>\n\n            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n              #exporter=\"matTableExporter\">\n\n              <ng-container matColumnDef=\"select\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                    [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-cell>\n              </ng-container>\n\n             \n\n              <ng-container matColumnDef=\"country\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                  country\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                  {{ row.country }}\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currency\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  currency\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.currency }}\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currencyCode\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  currencyCode\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.currencyCode }}\n                </mat-cell>\n              </ng-container>\n\n              <!-- <ng-container matColumnDef=\"currencyCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    currencyCountry\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.currencyCode }}\n                  </mat-cell>\n                </ng-container> -->\n\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n              <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n              <mat-cell *matNoDataRow colspan=\"4\">\n                No data matching the filter \"{{ input.value }}\"\n              </mat-cell>\n            </mat-table>\n\n            <!-- Loading spinner -->\n            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n              </mat-progress-spinner>\n            </div>\n            <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n              aria-label=\"Select page of users\"></mat-paginator>\n          </div>\n        </div>\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { CurrencyManagementService } from \"src/app/erp-procurement/data/services/currency-management.service\";\nimport { ManageRfqsComponent } from \"src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-currency-lookup\",\n  templateUrl: \"./currency-lookup.component.html\",\n  styleUrls: [\"./currency-lookup.component.sass\"],\n})\nexport class CurrencyLookupComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"currencyCode\",\n    \"currencySymbol\",\n    \"currencyName\",\n    \"currencyCountry\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private currencyManagementService: CurrencyManagementService,\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n\n    this.currencyManagementService\n      .getCurrencies()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.data = res;\n\n          this.currencyDetails = res;\n          this.currenciesArray = this.data.selected;\n\n          console.log(\"this.currencies: \", this.currencyDetails);\n\n          this.dataSource = new MatTableDataSource<any>(this.currencyDetails);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n  <div class=\"contact-details\">\n    <div class=\"mb-3\" *ngIf=\"isLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\">Select currency</div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n        <div *ngIf=\"isLoading\">\n          <div class=\"d-flex justify-content-center\">\n            <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n          </div>\n        </div>\n        <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n            <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n              <div class=\"row\">\n                <div class=\"col-6 px-4\">\n                  <div class=\"mx-auto\">\n                    <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                      #input />\n                  </div>\n                </div>\n                <div class=\"col-6 px-4\">\n                  <div class=\"mx-auto\">\n                    <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                      <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                        [disabled]=\"multimodifyloading\">\n                        <mat-icon class=\"col-white\">done_all </mat-icon>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n\n\n            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n              #exporter=\"matTableExporter\">\n\n              <ng-container matColumnDef=\"select\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">Id\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ row.id }}</mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currencySymbol\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                  currencySymbol\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                  {{ row.currencySymbol }}\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currencyCode\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  currencyCode\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.currencyCode }}\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currencyName\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  currencyName\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.currencyName }}\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"currencyCountry\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  currencyCountry\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  {{ row.currencyCountry }}\n                </mat-cell>\n              </ng-container>\n\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n              <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n              <mat-cell *matNoDataRow colspan=\"4\">\n                No data matching the filter \"{{ input.value }}\"\n              </mat-cell>\n            </mat-table>\n\n            <!-- Loading spinner -->\n            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n              </mat-progress-spinner>\n            </div>\n            <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n              aria-label=\"Select page of users\"></mat-paginator>\n          </div>\n        </div>\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { ExpenseManagementService } from 'src/app/erp-finance/data/services/expense-management.service';\nimport { GlAccountsService } from 'src/app/erp-finance/data/services/gl-accounts.service';\nimport { ManageSupplierCategoriesComponent } from 'src/app/erp-suppliersmanagement/modules/suppliers-parameters/supplier-categories/manage-supplier-categories/manage-supplier-categories.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-gl-validation',\n  templateUrl: './gl-validation.component.html',\n  styleUrls: ['./gl-validation.component.sass']\n})\nexport class GlValidationComponent implements OnInit {\n\n  \n   \n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  action!: string;\n\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  returned: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageSupplierCategoriesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private glManService: GlAccountsService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n    console.log(\"DATADATA: \", this.Data)\n  }\n\n  //***************************************************************************************************** */\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n    console.log(\"ids: \", this.Data)\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    if (this.postedBy === this.currentUser) {\n\n      this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n      this.canVerify = false;\n\n    } \n    \n    else {\n      this.canVerify = true;\n    }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.action = \"APPROVED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n \n    const params = new HttpParams()\n      .set(\"remarks\", this.statusForm.value.reason)\n      \n      \n      // let body = [\n      //   {\n      //     id: this.Data.id,\n      //   //  id: this.Data.map((element)=> \n      //   //   {\n      //   //    element.id\n      //   //   }),\n      //     status: this.action\n      //   }]\n\n      let body = [];\n      \n\n\n        this.Data.forEach((element) =>\n        {\n          let glAccount = {accountNumber: element.accountNumber, status: this.action};\n          body.push(glAccount);\n        })\n  \n    this.glManService\n      .validateAccounts(\n         body)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            \"GL Account validated successfully!\"\n          );\n          if (res) {\n            \n            \n          }\n          \n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: \" + err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-finance/finance-parameters/all-GLs\"]);\n        }\n      });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Validate GL Account</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n            \n            <!-- <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">Expense Code:</dt>\n                <dd>{{Data.expenseCode}}</dd>\n                <dt class=\"pull-left me-2\">Expense Name:</dt>\n                <dd> {{ Data.expenseName }}</dd>\n                <dt class=\"pull-left me-2\">Posted By:</dt>\n                <dd> {{ Data.postedBy }}</dd>\n              </dl>\n            </div> -->\n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <!-- Approve -->\n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n\n              <!-- Return -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n\n              <!-- Reject -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n              \n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApprovalLimitManagementService {\n  \n\n  constructor\n    (\n      private http: HttpClient,\n    ) { }\n\n    // ****************************************************************************************************************************\n      // fetch all cost centres\n    getApprovalLimits(): Observable<any>\n      {\n        const ApprovalLimitsUrl =`${environment.baseUrlFinance}/api/v1/financeapprovals/all`; \n        return this.http.get<any[]>(ApprovalLimitsUrl);\n      }\n\n      getApprovalLimitsById(params: any): Observable<any> {\n        return this.http.get<any>(\n          `${environment.baseUrlFinance}/api/v1/financeapprovals/find/by/id`, {params}\n        );\n      }\n\n      getApprovalLimitsByStatus(params): Observable<any> {\n        const ApprovalLimitsUrl = `${environment.baseUrlFinance}/api/v1/financeapprovals/fetchbyStatus`;\n        return this.http.get<any[]>(ApprovalLimitsUrl, { params });\n      }\n    \n    //adding cost centres\n    addApprovalLimit(data: any): Observable<any>\n      {\n        const ApprovalLimitsUrl =`${environment.baseUrlFinance}/api/v1/financeapprovals/create`; \n        return this.http.post<any[]>(ApprovalLimitsUrl, data);\n      }\n\n    //updating cost centres\n    updateApprovalLimit(data: any): Observable<any>\n      {\n        const ApprovalLimitsUrl =`${environment.baseUrlFinance}/api/v1/financeapprovals/update`; \n        return this.http.put<any[]>(ApprovalLimitsUrl, data);\n      }\n    \n    deleteApprovalLimitTemporarily(params: any): Observable<any>\n      {\n        const ApprovalLimitsUrl =`${environment.baseUrlFinance}/api/v1/financeapprovals/delete`; \n        return this.http.delete<any[]>(ApprovalLimitsUrl, {params});\n      }\n\n\n    uploadBatchApprovalLimits(data: any): Observable<any> \n      {\n        const ApprovalLimitsUrl = `${environment.baseUrlFinance}/api/v1/financeapprovals/create/bulk`;\n        return this.http.post<any>(ApprovalLimitsUrl, data);\n      }\n\n\n\n  validateApprovalLimits(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/financeapprovals/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlMappingsService {\n  constructor(private http: HttpClient) {}\n\n  addGLMapping(data: any): Observable<any> {\n    const GLMappingManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/mapping/create`;\n    return this.http.post<any>(GLMappingManagementUrl, data);\n  }\n\n  getGLMapping(): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/gls/mapping/find`\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\n\nimport { AllCostCentresComponent } from './pages/costCentres/all-cost-centres/all-cost-centres.component';\nimport { ManageCostCentresComponent } from './pages/costCentres/manage-cost-centres/manage-cost-centres.component';\nimport { AllExpensesComponent } from './pages/expenses/all-expenses/all-expenses.component';\nimport { ManageExpensesComponent } from './pages/expenses/manage-expenses/manage-expenses.component';\nimport { AllTaxComponent } from './pages/tax-maintenance/all-tax/all-tax.component';\nimport { ManageTaxComponent } from './pages/tax-maintenance/manage-tax/manage-tax.component';\nimport { AllCurrencyComponent } from './pages/currency-maintenance/all-currency/all-currency.component';\nimport { ManageCurrencyComponent } from './pages/currency-maintenance/manage-currency/manage-currency.component';\nimport { AllAccountsComponent } from './pages/gl-accounts/all-accounts/all-accounts.component';\nimport { ManageAccountsComponent } from './pages/gl-accounts/manage-accounts/manage-accounts.component';\nimport { AllPaymentMethodsComponent } from './pages/payment-methods/all-payment-methods/all-payment-methods.component';\nimport { ManagePaymentMethodsComponent } from './pages/payment-methods/manage-payment-methods/manage-payment-methods.component';\nimport { AllCustomerInvoicesComponent } from '../finance-management/account-receivables/customerInvoices/all-customer-invoices/all-customer-invoices.component';\nimport { ManageCustomerInvoicesComponent } from '../finance-management/account-receivables/customerInvoices/manage-customer-invoices/manage-customer-invoices.component';\nimport { AllCustomerTypesComponent } from './pages/customer-types/all-customer-types/all-customer-types.component';\nimport { ManageCustomerTypesComponent } from './pages/customer-types/manage-customer-types/manage-customer-types.component';\nimport { AllApprovalLimitsComponent } from './pages/approval-limits/all-approval-limits/all-approval-limits.component';\nimport { ManageApprovalLimitComponent } from './pages/approval-limits/manage-approval-limit/manage-approval-limit.component';\nimport { GlMappingComponent } from './pages/gl-mapping/gl-mapping.component';\n\nconst routes: Routes = [\n   //Approval Limits\n   {\n    path: \"all-approval-limits\",\n    component: AllApprovalLimitsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\n      \"All Approval Limits\", \"Dashboard\"\n    ] },\n  },\n  {\n    path: \"manage-approval-limits\",\n    component: ManageApprovalLimitComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\n      \"Manage Approval Limits\", \"Dashboard\"\n    ] },\n  },\n\n  \n  //Tax Parameters\n  {\n    path: \"all-taxes\",\n    component: AllTaxComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"All Taxes\"] },\n  },\n\n  {\n    path: \"manage-taxes\",\n    component: ManageTaxComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"Manage Taxes\"] },\n  },\n\n  //Currency Parameters\n  {\n    path: \"all-currency\",\n    component: AllCurrencyComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"All Currencies\"] },\n  },\n\n  {\n    path: \"manage-currency\",\n    component: ManageCurrencyComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"Manage Currencies\"] },\n  },\n\n\n\n\n  //Cost Centres\n  {\n    path: \"all-CCentres\",\n    component: AllCostCentresComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"All Costcenters\"] },\n  },\n  {\n    path: \"manage-CCentres\",\n    component: ManageCostCentresComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"Manage Costcenters\"] },\n  },\n\n  //Expenses\n  {\n    path: \"all-expenses\",\n    component: AllExpensesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"All Expenses\"] },\n  },\n  {\n    path: \"manage-expenses\",\n    component: ManageExpensesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"Manage Expenses\"] },\n  },\n\n  //GL Accounts \n  {\n    path: \"all-GLs\",\n    component: AllAccountsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"All GL-Accounts\"] },\n  },\n  {\n    path: \"manage-GLs\",\n    component: ManageAccountsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"Manage GL-Accounts\"] },\n  },\n  {\n    path: \"manage-gl-mapping-for-accounting\",\n    component: GlMappingComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\"Dashboard\"] },\n  },\n\n  //Payments Methods\n  {\n    path: \"all-PaymentMethods\",\n    component: AllPaymentMethodsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\n      \"Manage Customers\"\n    ] },\n  },\n  {\n    path: \"manage-PaymentMethods\",\n    component: ManagePaymentMethodsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\n      \"All Customers\",\n    ] },\n  },\n\n  //Customer Types\n  {\n    path: \"all-CustomerTypes\",\n    component: AllCustomerTypesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\n      \"Manage Customers\"\n    ] },\n  },\n  {\n    path: \"manage-CustomerTypes\",\n    component: ManageCustomerTypesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'FinanceModule', requiredPrivilege: [\n      \"All Customers\",\n    ] },\n\n\n  },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FinanceParametersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { FinanceParametersRoutingModule } from './finance-parameters-routing.module';\n\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { AllCostCentresComponent } from './pages/costCentres/all-cost-centres/all-cost-centres.component';\nimport { ManageCostCentresComponent } from './pages/costCentres/manage-cost-centres/manage-cost-centres.component';\nimport { AllExpensesComponent } from './pages/expenses/all-expenses/all-expenses.component';\nimport { ManageExpensesComponent } from './pages/expenses/manage-expenses/manage-expenses.component';\nimport { AllCurrencyComponent } from './pages/currency-maintenance/all-currency/all-currency.component';\nimport { ManageCurrencyComponent } from './pages/currency-maintenance/manage-currency/manage-currency.component';\nimport { ValidateCurrencyComponent } from './pages/currency-maintenance/validate-currency/validate-currency.component';\nimport { AllTaxComponent } from './pages/tax-maintenance/all-tax/all-tax.component';\nimport { ManageTaxComponent } from './pages/tax-maintenance/manage-tax/manage-tax.component';\nimport { ValidateComponent } from './pages/tax-maintenance/validate/validate.component';\nimport { AllAccountsComponent } from './pages/gl-accounts/all-accounts/all-accounts.component';\nimport { ManageAccountsComponent } from './pages/gl-accounts/manage-accounts/manage-accounts.component';\nimport { MaintainedCurrenciesLookUpComponent } from '../../data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component';\nimport { CcentreLookupComponent } from '../../data/lookups/ccentre-lookup/ccentre-lookup.component';\nimport { CountriesComponent } from '../../data/lookups/countries/countries.component';\nimport { CurrencyLookupComponent } from '../../data/lookups/currency-lookup/currency-lookup.component';\nimport { ExpCCentreLookupComponent } from '../../data/lookups/exp-c-centre-lookup/exp-c-centre-lookup.component';\nimport { ExpenseLookupComponent } from '../../data/lookups/expense-lookup/expense-lookup.component';\nimport { TaxLookupComponent } from '../../data/lookups/tax-lookup/tax-lookup.component';\nimport { CostCentreValidationComponent } from '../../data/lookups/validation/cost-centre-validation/cost-centre-validation.component';\nimport { CustomerValidationComponent } from '../../data/lookups/validation/customer-validation/customer-validation.component';\nimport { ExpenseValidationComponent } from '../../data/lookups/validation/expense-validation/expense-validation.component';\nimport { GlValidationComponent } from '../../data/lookups/validation/gl-validation/gl-validation.component';\nimport { PaymentsValidationComponent } from '../../data/lookups/validation/payments-validation/payments-validation.component';\nimport { GlsLookupComponent } from '../../data/lookups/gls-lookup/gls-lookup.component';\nimport { AllPaymentMethodsComponent } from './pages/payment-methods/all-payment-methods/all-payment-methods.component';\nimport { ManagePaymentMethodsComponent } from './pages/payment-methods/manage-payment-methods/manage-payment-methods.component';\nimport { AllCustomerTypesComponent } from './pages/customer-types/all-customer-types/all-customer-types.component';\nimport { ManageCustomerTypesComponent } from './pages/customer-types/manage-customer-types/manage-customer-types.component';\nimport { AllApprovalLimitsComponent } from './pages/approval-limits/all-approval-limits/all-approval-limits.component';\nimport { ManageApprovalLimitComponent } from './pages/approval-limits/manage-approval-limit/manage-approval-limit.component';\nimport { GlMappingComponent } from './pages/gl-mapping/gl-mapping.component';\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    \n    TaxLookupComponent,\n    AllCostCentresComponent,\n    ManageCostCentresComponent,\n    AllExpensesComponent,\n    ManageExpensesComponent,\n    ExpenseLookupComponent,\n    CcentreLookupComponent,\n    ExpCCentreLookupComponent,\n     ExpenseValidationComponent,\n     CostCentreValidationComponent,\n    ValidateComponent,\n    ValidateCurrencyComponent,\n    ManageCurrencyComponent,\n    AllCurrencyComponent,\n    AllTaxComponent,\n    ManageTaxComponent,\n    AllAccountsComponent,\n    ManageAccountsComponent,\n    GlValidationComponent,\n    CountriesComponent,\n    MaintainedCurrenciesLookUpComponent,\n    PaymentsValidationComponent,\n    CurrencyLookupComponent,\n    CustomerValidationComponent,\n    GlsLookupComponent,\n    AllPaymentMethodsComponent,\n    ManagePaymentMethodsComponent,\n    AllCustomerTypesComponent,\n    ManageCustomerTypesComponent,\n    AllApprovalLimitsComponent,\n    ManageApprovalLimitComponent,\n    GlMappingComponent,\n\n  \n\n\n  \n  ],\n  imports: [\n    CommonModule,\n    FinanceParametersRoutingModule,\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n\n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n\n    MatFormFieldModule,\n\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n\n    MatSnackBarModule,\n    MatToolbarModule,\n\n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule,\n    MatChipsModule,\n\n\n    FormsModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatListModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatSliderModule,\n    NgbModule,\n  ],\n  providers: [DatePipe]\n})\nexport class FinanceParametersModule { }\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { ApprovalLimitManagementService } from \"src/app/erp-finance/data/services/approval-limits.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-all-approval-limits\",\n  templateUrl: \"./all-approval-limits.component.html\",\n  styleUrls: [\"./all-approval-limits.component.scss\"],\n})\nexport class AllApprovalLimitsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"id\",\n    \"approvalCategory\",\n    \"approvalRole\",\n    \"amount\",\n    \"action\",\n  ];\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(false, []);\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  approvalCategories = [\n    { name: \"Expenditure\" },\n    { name: \"Services\" },\n    { name: \"Goods\" },\n  ];\n  approvalRoles = [\n    { name: \"Finance Manager\" },\n    { name: \"Senior Finance Manager\" },\n    { name: \"Head of Finance And Strategy\" },\n    { name: \"Managing Director And CEO\" },\n  ];\n\n  approvalLimitData = [\n    {\n      id: \"\",\n      approvalCategory: \"Expenditure\",\n      approvalRole: \"Finance Manager\",\n      amount: \"10000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"Expenditure\",\n      approvalRole: \"Senior Finance Manager\",\n      amount: \"10000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"Expenditure\",\n      approvalRole: \"Head of Finance And Strategy\",\n      amount: \"100000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"Expenditure\",\n      approvalRole: \"Managing Director And CEO\",\n      amount: \"15000000\",\n    },\n\n    {\n      id: \"\",\n      approvalCategory: \"Services\",\n      approvalRole: \"Finance Manager\",\n      amount: \"250000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"Services\",\n      approvalRole: \"Senior Finance Manager\",\n      amount: \"500000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"Services\",\n      approvalRole: \"Head of Finance And Strategy\",\n      amount: \"1000000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"Services\",\n      approvalRole: \"Managing Director And CEO\",\n      amount: \"15000000\",\n    },\n\n    {\n      id: \"\",\n      approvalCategory: \"CapexAndOpex\",\n      approvalRole: \"Finance Manager\",\n      amount: \"350000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"CapexAndOpex\",\n      approvalRole: \"Senior Finance Manager\",\n      amount: \"700000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"CapexAndOpex\",\n      approvalRole: \"Head of Finance And Strategy\",\n      amount: \"3000000\",\n    },\n    {\n      id: \"\",\n      approvalCategory: \"CapexAndOpex\",\n      approvalRole: \"Managing Director And CEO\",\n      amount: \"15000000\",\n    },\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private approvalLimitService: ApprovalLimitManagementService,\n    private snackbar: SnackbarService\n  ) { }\n\n  ngOnInit(): void {\n    this.generateApprovalForm();\n\n    this.getData();\n  }\n\n  ngAfterViewInit() {\n\n    // this.dataSource = new MatTableDataSource(this.approvalLimitData);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n\n  generateApprovalForm(formData?): void {\n    this.tranForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      approvalCategory: [\n        formData?.approvalCategory ?? \"\",\n        [Validators.required],\n      ],\n      approvalRole: [formData?.approvalRole ?? \"\", [Validators.required]],\n      amount: [\n        formData?.amount ?? 0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n          Validators.min(0),\n        ],\n      ],\n    });\n  }\n  //**************************************************************************************************************************************************************** */\n  data: any;\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n\n    this.approvalLimitService\n      .getApprovalLimits()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  //*********************************************************************************************************************************************************** */\n  //Form&Table Logic\n  //*********************************************************************************************************************************************************** */\n  isLoading: boolean = true;\n  showRecForm = false;\n  recAction: string = \"\";\n  selectedRecIndex: number;\n\n  tranForm: FormGroup;\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  resetFormAndHide() {\n    // this.mngForm.patchValue({\n    //   parttrans: this.dataSource.data,\n    // });\n    this.tranForm.reset();\n    this.showRecForm = false;\n  }\n\n  addRec() {\n    this.recAction = \"Add\";\n    this.showRecForm = true;\n  }\n\n  refresh() {\n    this.dataSource.data = [...this.dataSource.data];\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  editRec(data: any, index: number) {\n    this.recAction = \"Update\";\n    this.selectedRecIndex = index;\n    this.generateApprovalForm(data);\n    this.showRecForm = true;\n  }\n\n  posting: boolean = false;\n  pushToDataSource() {\n    // if (this.recAction === \"Add\") {\n    //   this.dataSource.data.push(this.tranForm.value);\n    // } else\n    if (this.recAction === \"Update\") {\n      console.log(\"this.tranForm.value:: \", this.tranForm.value);\n\n      this.approvalLimitService\n        .updateApprovalLimit(this.tranForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            this.getData();\n          },\n        }),\n        Subscription;\n      // let indexToUpdate: number;\n      // if (this.tranForm.value.id) {\n      //   indexToUpdate = this.dataSource.data.findIndex(\n      //     (item) => item.id === this.tranForm.value.id\n      //   );\n      // } else {\n      //   indexToUpdate = this.selectedRecIndex;\n      // }\n      // if (indexToUpdate !== -1) {\n      //   this.dataSource.data[indexToUpdate] = this.tranForm.value;\n      // }\n    }\n\n    this.resetFormAndHide();\n    this.refresh();\n  }\n\n  deleteRec(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.refresh();\n  }\n\n  cancelRec() {\n    this.resetFormAndHide();\n  }\n  //******************************************************************************************************************************************************** */\n}\n","\n<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <app-breadcrumb [title]=\"'Approval Limits'\" [items]=\"['Approval Limits']\" [active_item]=\"'Approval Limits'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <ng-container *ngIf=\"showRecForm\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                 <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n                        <h6 class=\"mx-0\">{{recAction}} Approval Details</h6>\n                        <form class=\"register-form mx-0\" [formGroup]=\"tranForm\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>Approval Category</mat-label>\n                                        <input matInput formControlName=\"approvalCategory\" required readonly/>\n                                        <mat-error *ngIf=\"tranForm.get('approvalCategory').hasError('required')\">\n                                            Approval Category is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>Approval Role</mat-label>\n                                        <input matInput formControlName=\"approvalRole\" required readonly/>\n                                        <mat-error *ngIf=\"tranForm.get('approvalRole').hasError('required')\">\n                                            Approval Role required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n            \n                                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>Amount</mat-label>\n                                        <input matInput formControlName=\"amount\" mask=\"separator\" thousandSeparator=\",\" />\n                                        <mat-icon matSuffix>attach_money</mat-icon>\n                                        <mat-error *ngIf=\"\n                              tranForm.get('amount').hasError('required') &&\n                              tranForm.get('amount').touched\n                            \">\n                                            Please enter unit amount!\n                                        </mat-error>\n                                        <mat-error *ngIf=\"\n                              tranForm.get('amount').hasError('pattern') &&\n                              tranForm.get('amount').touched\n                            \">\n                                            Please ensure amount does not exceed 2 decimal values!\n                                        </mat-error>\n                                        <mat-error *ngIf=\"\n                              tranForm.get('amount').hasError('max') &&\n                              tranForm.get('amount').touched\n                            \">\n                                            Please ensure amount does not exceed 1 billion!\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                    <div class=\"example-button-row\" align=\"start\">\n                                        <button class=\"btn-space\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                                            [disabled]=\"!tranForm.valid || posting\" [hidden]=\"viewMode\"\n                                            (click)=\"pushToDataSource()\">\n                                            {{ recAction }} Limit Record\n                                        </button>\n            \n                                        <button mat-raised-button color=\"warn\" (click)=\"cancelRec()\" tabindex=\"-1\">\n                                            Cancel\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n          \n        </ng-container>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                 <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Approval Limits</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n                                            <!-- <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addRec()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li> -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <!-- XLSX export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n\n                                            <!-- CSV Export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n\n                                            <!-- TXT Export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-12\">ID</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        {{ row.id ? row.id : \"#\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"approvalCategory\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">Approval\n                                        Category</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{\n                                        row.approvalCategory }}</mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"approvalRole\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-30\">Approval Role</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">{{\n                                        row.approvalRole }}</mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"amount\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-35\">Amount</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                                        {{\n                                        row.amount\n                                        | currency\n                                        : 'KES'\n                                        : \"symbol\"\n                                        : \"1.2-2\"\n                                        }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\">\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"editRec(row, i)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRec(i)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"onSelect(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"8\">\n                                    No data matching the filter \"{{ input.value }}\"</mat-cell>\n                            </mat-table>\n                            <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\"></mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-approval-limit',\n  templateUrl: './manage-approval-limit.component.html',\n  styleUrls: ['./manage-approval-limit.component.sass']\n})\nexport class ManageApprovalLimitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>manage-approval-limit works!</p>\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { CostCentreValidationComponent } from \"src/app/erp-finance/data/lookups/validation/cost-centre-validation/cost-centre-validation.component\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-cost-centres\",\n  templateUrl: \"./all-cost-centres.component.html\",\n  styleUrls: [\"./all-cost-centres.component.sass\"],\n})\nexport class AllCostCentresComponent implements OnInit {\n  //table columns\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"costCenterCode\",\n    \"costCenterName\",\n    // \"verifiedFlag\",\n    \"status\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  // ****************************************************************************************************************************\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private costManService: CostCentreManagementService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.costManService\n      .getCostCentersByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n  //adding cost centre\n  addCostCenter() {\n    this.router.navigate([\"/erp-finance/finance-parameters/manage-CCentres\"]);\n  }\n\n  //Updating the costcentres\n\n  editCostCentre(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-CCentres\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the costcentres\n  viewCostCentre(data: any) {\n\n    let route = \"/erp-finance/finance-parameters/manage-CCentres\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n      },\n    });\n  }\n\n  //verify cost centre\n  validateExpense(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-CCentres\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting costcentres\n\n  deleteCostCentre(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This cost centre will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this cost centre \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = {id: id}\n        this.costManService\n          .deleteCostCentreTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n              } else{\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    this.isLoading = true\n    let privilege = \"Dashboard\";\n    //Validate CostCenters\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.costManService\n            .validateCostCenters(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n                this.isLoading = false\n\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Cost Centres'\" [items]=\"['Cost Centres']\" [active_item]=\"'All Cost Centres'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Cost Centres</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addCostCenter()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                            <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n    \n                          </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                            class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                            <mat-icon>check_circle</mat-icon>\n                            VERIFIED\n                          </button> -->\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Table Definition -->\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-9\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">\n                    {{row.id}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- costCentreCode -->\n                <ng-container matColumnDef=\"costCenterCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    Cost Centre Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    {{row.costCenterCode}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- CostCentreName  -->\n                <ng-container matColumnDef=\"costCenterName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    Cost Centre Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    {{row.costCenterName}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Verification Flag -->\n                <!-- <ng-container matColumnDef=\"verifiedFlag\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                      Verified? \n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\"  class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                      <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        {{row.verifiedFlag }}\n                      </button>\n                    </mat-cell>\n                  </ng-container> -->\n\n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                    <!--  Verify Button -->\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"validateExpense(row)\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                          </app-feather-icons>\n                        </button> -->\n\n                    <!-- Edit Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editCostCentre(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- View Button -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewCostCentre(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteCostCentre(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                      </app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                </mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewCostCentre(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{input.value}}\"\n                </mat-cell>\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription, Observable } from \"rxjs\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n//file upload\nimport * as XLSX from \"xlsx\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { CostCentreValidationComponent } from \"src/app/erp-finance/data/lookups/validation/cost-centre-validation/cost-centre-validation.component\";\nimport { HttpParams } from \"@angular/common/http\";\n\nexport interface Cost {\n  costCenterName: string;\n}\n\n@Component({\n  selector: \"app-manage-cost-centres\",\n  templateUrl: \"./manage-cost-centres.component.html\",\n  styleUrls: [\"./manage-cost-centres.component.sass\"],\n})\nexport class ManageCostCentresComponent implements OnInit {\n  // ****************************************************************************************************************************\n  //table columns\n  displayedColumns: string[] = [\"index\", \"costCenterName\", \"costCenterCode\"];\n\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  hideApprovals = false;\n\n  //excel upload variables\n  exceldata: [][] | undefined;\n  subscription!: Subscription;\n  keys: string[];\n  otherRows: any[];\n  dataSheet = new Subject();\n  headerRows: any;\n  fileAcess: any;\n  firstElement: any;\n  excelSelected: any;\n  fileInfos?: Observable<any>;\n  values: any;\n  finalValues: any;\n  valuesArray: any;\n  submitted = false;\n  excelDataPresent = false;\n  sumofCredits = 0;\n  excelFileAccepted = false;\n  uploadedData: any;\n\n  //excel columns\n  excelHeaderRef: any[] = [\"costCenterName\"];\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private costManService: CostCentreManagementService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action == \"Verify\") {\n          this.pageFunction = \"Verify\";\n        }\n\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.costManService\n      .getCostCentersById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = false;\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      costCenterName: [\"\", [Validators.required]],\n      costCenterCode: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      costCenterName: [this.formData.costCenterName, [Validators.required]],\n      costCenterCode: [this.formData.costCenterCode, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      costCenterCode: [\n        { value: this.formData.costCenterCode, disabled: true },\n        [Validators.required],\n      ],\n      costCenterName: [\n        { value: this.formData.costCenterName, disabled: true },\n        [Validators.required],\n      ],\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel(): void {\n    this.router.navigate([\"/erp-finance/finance-parameters/all-CCentres\"]);\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        costCenterName: [item.costCenterName, [Validators.required]],\n        costCenterCode: [item.costCenterCode, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"costCentersTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceItems.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourceItems.paginator) {\n      this.dataSourceItems.paginator.firstPage();\n    }\n  }\n\n  //populate table from excel\n  createPopulatedForm() {\n    this.mngForm = this.fb.group({\n      costCenterName: [this.exceldata, [Validators.required]],\n      costCenterCode: [this.exceldata, [Validators.required]],\n    });\n    console.log(\"this.uploadedData: \", this.uploadedData);\n  }\n\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate() {\n    let privilege = \"Manage CCentres\"; //Insert the priviledge later\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        // userType: userType\n      };\n\n      const dialogRef = this.dialog.open(\n        CostCentreValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-parameters/all-CCentres\"]);\n      });\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // submit button function\n  posting: boolean = false;\n\n  submit() {\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.costManService\n        .addCostCentre(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-CCentres\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {this.posting = false},\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.costManService\n        .updateCostCentre(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n               res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-CCentres\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {this.posting = false},\n        }),\n        Subscription;\n    }\n  }\n\n  //Uploading a batch of items\n  submitBatch() {\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.costManService\n        .uploadBatchCostCentres(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-CCentres\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {this.posting = false},\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Cost Centres'\" [items]=\"['Cost Centres']\" [active_item]=\"'Manage Cost Centres'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                              <div class=\"chat-with remarks\">\n                                <strong>Approvers Remarks:</strong>\n                                <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                              </div>\n                            </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"ADD COST CENTRE\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                      <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>{{ pageFunction }} Cost Centres</h2>\n                        </div>\n                      </div>\n\n                      <div>\n                        <form class=\"m-4\" [formGroup]=\"mngForm\">\n                          <div class=\"row\">\n                            <!-- Cost Centre Name -->\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Cost Centre Name </mat-label>\n                                <input matInput formControlName=\"costCenterName\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('costCenterName')\n                                      .hasError('required')\n                                  \">\n                                  Cost Centre's Name is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Cost Centre Code -->\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> Cost Centre Code </mat-label>\n                                <input matInput formControlName=\"costCenterCode\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('costCenterCode')\n                                      .hasError('required')\n                                  \">\n                                  Cost Centre's Name is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                          </div>\n\n                          <!-- Action Buttons -->\n                          <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                              <div mat-dialog-action [align]=\"'end'\">\n                                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                  (click)=\"cancel()\">\n                                  Cancel\n                                </button>\n                                <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\" [disabled]=\"!mngForm.valid || posting\"\n                                  [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                  Submit\n                                </button>\n\n                                <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                                  (click)=\"onValidate()\" mat-raised-button color=\"primary\">\n                                  <mat-icon> done_outline </mat-icon>\n                                  Verify\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </mat-tab>\n\n                <mat-tab label=\"UPLOAD MULTIPLE COST CENTRES\" *ngIf=\"pageFunction === 'Add'\">\n                  <div [hidden]=\"hideSubmit\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4\">\n                        <div class=\"row clearfix\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                            <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                          </div>\n                          <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                            <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                              (click)=\"downloadTemplate()\">\n                              <i class=\"fa fa-download\"></i> Excel Template\n                            </button>\n                          </div>\n                        </div>\n\n                        <div class=\"mt-4 mx-0\">\n                          <div style=\"\n                              display: flex;\n                              flex-wrap: wrap;\n                              margin-right: 10px;\n                              margin-bottom: 10px;\n                            \">\n                            <mat-chip-list aria-label=\"Fish selection\">\n                              <mat-chip color=\"accent\" selected *ngFor=\"\n                                  let itemError of itemErrors;\n                                  let i = index\n                                \">\n                                <span>{{ i + 1 }}. </span>\n                                {{ itemError.field }}: {{ itemError.message }}\n                                <mat-icon>error</mat-icon>\n                              </mat-chip>\n                            </mat-chip-list>\n                          </div>\n\n                          <div class=\"card\">\n                            <div class=\"header\">\n                              <h2>Cost Centers</h2>\n                            </div>\n                            <div class=\"tableBody\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table table-hover\">\n                                  <thead>\n                                    <tr>\n                                      <th>CostCenterName</th>\n                                      <th>CostCenterCode</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    <tr *ngFor=\"let item of items\">\n                                      <td>{{ item.costCenterName }}</td>\n                                      <td>{{ item.costCenterCode }}</td>\n                                      <td>{{ item.description }}</td>\n                                      <td>{{ item.shortName }}</td>\n                                      <td>{{ item.currencyID }}</td>\n                                      <td>{{ item.glAccountTypeID }}</td>\n                                      <td>{{ item.glSubAccountTypeID }}</td>\n                                      <td>{{ item.glCategoryID }}</td>\n                                      <td>{{ item.postingTypeID }}</td>\n                                      <td>{{ item.glClassID }}</td>\n                                      <td>{{ item.contraAccountID }}</td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <br />\n                  <div class=\"row mx-4 mt-4\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                      <div mat-dialog-action [align]=\"'end'\">\n                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                          (click)=\"cancel()\">\n                          Cancel\n                        </button>\n                        <button *ngIf=\"items.length > 0\" mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" [class.auth-spinner]=\"posting\" [disabled]=\"posting\"\n                          (click)=\"submitBatch()\">\n                          Submit Batch\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  \n                </mat-tab>\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil, BehaviorSubject } from \"rxjs\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { SelectedFiles } from \"src/app/shared/services/files.service\";\n\nimport { CurrencyService } from \"src/app/erp-finance/data/services/currency.service\";\nimport { ValidateCurrencyComponent } from \"../validate-currency/validate-currency.component\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\n\n@Component({\n  selector: \"app-all-currency\",\n  templateUrl: \"./all-currency.component.html\",\n  styleUrls: [\"./all-currency.component.sass\"],\n})\nexport class AllCurrencyComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"currency\",\n    \"country\",\n    \"currencyCode\",\n    \"action\",\n  ];\n\n  currencyStatuses: any[] = [\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  Form: FormGroup;\n\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n\n  countryArray: [] = [];\n\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  mngForm!: FormGroup;\n\n\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private currencyManService: CurrencyService,\n    private notificationAPI: NotificationService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.currencyManService\n      .getCurrenciesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n\n  addCurrencyType() {\n    this.router.navigate([\"/erp-finance/finance-parameters/manage-currency\"]);\n  }\n\n  editCurrencyType(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-currency\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n      },\n    });\n  }\n  viewCurrencyType(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-currency\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n      },\n    });\n  }\n\n  validateCurrency(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-currency\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Validate\",\n      },\n    });\n  }\n\n  deleteCurrency(id: number) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This currency will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Currency\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = {id: id}\n        this.currencyManService\n          .deleteCurrencyTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n              }else{\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Currencies\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.currencyManService\n            .validateCurrencies(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Currencies'\" [items]=\"['Currencies']\" [active_item]=\"'All Currencies'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Currencies</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addCurrencyType()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                          <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n  \n                        </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                          class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                          <mat-icon>check_circle</mat-icon>\n                          VERIFIED\n                        </button> -->\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color =\"primary\" (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"table-img tbl-col-width-per-9\">Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">{{row.id}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"currency\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Currency</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.currency}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"currencyCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>CurrencyCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.currencyCode}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"country\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Country</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.country}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container> -->\n\n\n\n                <!--  <ng-container matColumnDef=\"taxRate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>TaxRate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.taxRate}}</mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"createdDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>CreatedDate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\">\n                    {{row.createdDate | date: 'MM/dd/yyyy'}}</mat-cell>\n                </ng-container>-->\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"validateCurrency(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                       </button> -->\n\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editCurrencyType(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewCurrencyType(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteCurrency(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onSelect(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { getCurrencySymbol } from \"@angular/common\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray,\n  AbstractControl,\n} from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport {\n  Subject,\n  takeUntil,\n  Subscription,\n  BehaviorSubject,\n  Observable,\n} from \"rxjs\";\n\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { SelectedFiles } from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport * as XLSX from \"xlsx\";\nimport { CdkColumnDef } from \"@angular/cdk/table\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { CurrencyService } from \"src/app/erp-finance/data/services/currency.service\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { ValidateComponent } from \"../../tax-maintenance/validate/validate.component\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ValidateCurrencyComponent } from \"../validate-currency/validate-currency.component\";\nimport { CountriesComponent } from \"src/app/erp-finance/data/lookups/countries/countries.component\";\nimport { HttpParams } from \"@angular/common/http\";\n\nexport interface Currency {\n  country: string;\n  currency: string;\n  currencyCode: string;\n}\n\n@Component({\n  selector: \"app-manage-currency\",\n  templateUrl: \"./manage-currency.component.html\",\n  styleUrls: [\"./manage-currency.component.scss\"],\n})\nexport class ManageCurrencyComponent implements OnInit {\n  //table columns\n  displayedColumns: string[] = [\"country\", \"currency\", \"currencyCode\"];\n\n  status: any[] = [\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  suppliercategoryId: any;\n  id: any;\n  hideSubmit = false;\n\n  disableActions: boolean = false;\n  hideApprovals: boolean = true;\n  isLoading: any;\n  dataSource!: MatTableDataSource<any>;\n  data: any;\n\n  //excel upload variables\n  exceldata: [][] | undefined;\n  subscription!: Subscription;\n  keys: string[];\n  otherRows: any[];\n  dataSheet = new Subject();\n  headerRows: any;\n  fileAcess: any;\n  firstElement: any;\n  excelSelected: any;\n  fileInfos?: Observable<any>;\n  values: any;\n  finalValues: any;\n  valuesArray: any;\n  submitted = false;\n  excelDataPresent = false;\n  sumofCredits = 0;\n  excelFileAccepted = false;\n  uploadedData: any;\n\n  //excel columns\n  excelHeaderRef: any[] = [\"currencyName\", \"currencySymbol\", \"currencyCountry\"];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private currencyManService: CurrencyService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    // console.log(\"this.formData: \", this.formData);\n\n    this.route.queryParams.subscribe((params) => {\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action == \"Validate\") {\n          this.pageFunction = \"Validate\";\n          this.disableActions = true;\n        }\n\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.currencyManService\n      .getCurrenciesById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateDisabledFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      //currencyCode: [\"\", [Validators.required]],\n      country: [\"\", [Validators.required]],\n      currency: [\"\", [Validators.required]],\n      currencyCode: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      country: [this.formData.country, [Validators.required]],\n      //currencyCode: [this.formData.currencyCode, [Validators.required]],\n      currency: [this.formData.currency, [Validators.required]],\n      currencyCode: [this.formData.currencyCode, [Validators.required]],\n      ccyCode: [this.formData.ccyCode],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      country: [\n        { value: this.formData.country, disabled: true },\n        [Validators.required],\n      ],\n      // currencyCode: [{ value: this.formData.currencyCode, disabled: true }, [Validators.required]],\n      currency: [\n        { value: this.formData.currency, disabled: true },\n        [Validators.required],\n      ],\n      currencyCode: [\n        { value: this.formData.currencyCode, disabled: true },\n        [Validators.required],\n      ],\n      ccyCode: [this.formData.ccyCode],\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/erp-finance/finance-parameters/all-currency\"]);\n  }\n\n  currenciesArray: [] = [];\n  currencyCode = \"\";\n\n  selectedCurrency: any[] = [];\n  currenciesLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"880px\";\n    dialogConfig.data = {\n      action: \"view currencies\",\n      selected: this.selectedCurrency,\n    };\n\n    const dialogRef = this.dialog.open(CountriesComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      result.data.forEach((element) => {\n        this.currencyCode = element.currencyCode;\n        this.mngForm.patchValue({\n          country: element.country,\n          currency: element.currency,\n          currencyCode: element.currencyCode,\n        });\n      });\n    });\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\nfor (const item of items) {\n      const formGroup = this.fb.group({\n        country: [item.country, [Validators.required]],\n        currencyCode: [item.currencyCode, [Validators.required]],\n        currency: [item.currency, [Validators.required]],\n\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"currencyTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n\n  hasAccess: boolean;\n\n  onValidateCurrency(userType) {\n    let privilege = \"Validate Currency\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"650px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(\n        ValidateCurrencyComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-parameters/all-currency\"]);\n      });\n    }\n  }\n\n  posting: boolean = false;\n  submit() {\n    this.posting = true\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.currencyManService\n        .addCurrencies(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Currency Added Successfully\"\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-currency\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => { this.posting = false},\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.currencyManService\n        .updateCurrencies(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"RES: \", res)\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Currency Updated Successfully\"\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-currency\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { this.posting = false},\n        }),\n        Subscription;\n    }\n  }\n\n  //Uploading a batch of items\n  submitBatch() {\n    this.posting = true\n    if (this.pageFunction === \"Add\") {\n      this.currencyManService\n        .uploadBatchCurrrency(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-currency\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { this.posting = false},\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Currencies'\" [items]=\"['Currencies']\" [active_item]=\"'Manage Currencies'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"body\">\n       \n        <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <div class=\"card bg-color\">\n              <div class=\"chat\">\n                <div class=\"chat-header clearfix\">\n                  <div class=\"row\">\n                    <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                      <div class=\"chat-about\">\n                        <div class=\"chat-with\">Posted By</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                            {{ formData.postedBy }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                      <div class=\"chat-about\">\n                        <div class=\"chat-with\">Posted Date</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                            {{ formData.postedTime | date : \"medium\" }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                      <div class=\"chat-about\">\n                        <div class=\"chat-with\">Verified By</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                            {{ formData.verifiedBy }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                      <div class=\"chat-about\">\n                        <div class=\"chat-with\">Verification Date</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                            {{ formData.verifiedTime | date : \"medium\" }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12\">\n                      <div class=\"chat-about mt-2 remarks-container\">\n                        <div class=\"chat-with\">Verifier Remarks</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                            {{ formData.verifierRemarks }}\n                          </div>\n                        </div>\n                      </div>\n                      <!-- <div class=\"chat-about mt-2 remarks-container\">\n                        <div class=\"chat-with remarks\">\n                          <strong>Approvers Remarks:</strong>\n                          <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                        </div>\n                      </div> -->\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n       \n        <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n          <mat-tab label=\"CURRENCY DETAILS\">\n            <div class=\"row clearfix mx-1\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"header\">\n                  <div class=\"row mx-2\">\n                    <h2>{{ pageFunction }} Currency</h2>\n                  </div>\n                </div>\n             \n                <div class=\"body\">\n                 \n                  \n                  <form class=\"mx-4\" [formGroup]=\"mngForm\">\n                    <div class=\"row\">\n                  \n                            <!-- Country -->\n                      <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                          <mat-label>Country</mat-label>\n                          <mat-icon matSuffix (click)=\"currenciesLookUp()\">search</mat-icon>\n                          <input matInput formControlName=\"country\"/>\n                          <mat-error *ngIf=\"mngForm.get('country').hasError('required')\">Country is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                  \n                             <!-- Currency  -->\n                      <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                          <mat-label>Currency</mat-label>\n                          <input matInput formControlName=\"currency\"/>\n                          <mat-error *ngIf=\"mngForm.get('currency').hasError('required')\">Currency is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                  \n                             <!--  currencyCode -->\n                      <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                          <mat-label> Currency Code</mat-label>\n                          <input matInput formControlName=\"currencyCode\"/>\n                          <mat-error *ngIf=\"mngForm.get('currencyCode').hasError('required')\">Currency code is required</mat-error>\n                        </mat-form-field>\n                      </div>\n                  \n                    </div>\n                    \n                    <div class=\"row\">\n                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                        <div mat-dialog-action [align]=\"'end'\">\n                          <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                            Cancel\n                          </button>\n                          <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\" [disabled]=\"!mngForm.valid || posting\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                            Submit\n                          </button>\n                  \n                          <!-- <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                          (click)=\"onValidateCurrency('Verifier')\" mat-raised-button color=\"primary\">\n                          <mat-icon>done_outline</mat-icon>\n                          Verify Currencies\n                        </button>\n                  -->\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n\n\n\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n          <mat-tab label=\"UPLOAD CURRENCIES DETAILS\" *ngIf=\"pageFunction === 'Add'\">\n            <div [hidden]=\"hideSubmit\">\n              <div class=\"row clearfix mx-2\">\n                <div class=\"mt-4\">\n                  <div class=\"row clearfix\">\n                    <h5>Upload Excel File</h5>\n                  </div>\n                  <div class=\"row align-items-center\">\n                    <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                      <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                    </div>\n                    <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                      <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                        (click)=\"downloadTemplate()\">\n                        <i class=\"fa fa-download\"></i> Excel Template\n                      </button>\n                    </div>\n                  </div>\n\n                  <div class=\"mt-4 mx-0\">\n                    <div style=\"\n                        display: flex;\n                        flex-wrap: wrap;\n                        margin-right: 10px;\n                        margin-bottom: 10px;\n                      \">\n                      <mat-chip-list aria-label=\"Fish selection\">\n                        <mat-chip color=\"accent\" selected *ngFor=\"\n                            let itemError of itemErrors;\n                            let i = index\n                          \">\n                          <span>{{ i + 1 }}. </span>\n                          {{ itemError.field }}: {{ itemError.message }}\n                          <mat-icon>error</mat-icon>\n                        </mat-chip>\n                      </mat-chip-list>\n                    </div>\n\n                    <div class=\"card\">\n                      <div class=\"header\">\n                        <h2>Currencies</h2>\n                      </div>\n                      <div class=\"tableBody\">\n                        <div class=\"table-responsive\">\n                          <table class=\"table table-hover\">\n                            <thead>\n                              <tr>\n                                <th>Currency</th>\n                                <th>CurrencyCode</th>\n                                <th>Country</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let item of items\">\n                                <td>{{ item.currency }}</td>\n                                <td>{{ item.currencyCode }}</td>\n                                <td>{{ item.country }}</td>\n                                \n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n\n            <br />\n            <div class=\"row mx-4 mt-4\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                <div mat-dialog-action [align]=\"'end'\">\n                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                    (click)=\"cancel()\">\n                    Cancel\n                  </button>\n                  <button *ngIf=\"items.length > 0\" mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" [class.auth-spinner]=\"posting\" [disabled]=\"posting\"\n                    (click)=\"submitBatch()\">\n                    Submit Batch\n                  </button>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n</section>\n\n","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\n\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ManageTaxComponent } from '../../tax-maintenance/manage-tax/manage-tax.component';\nimport { CurrencyService } from 'src/app/erp-finance/data/services/currency.service';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-validate-currency',\n  templateUrl: './validate-currency.component.html',\n  styleUrls: ['./validate-currency.component.sass']\n})\nexport class ValidateCurrencyComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  status!: string;\n\n  resData: any;\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageTaxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private router: Router,\n    private datepipe: DatePipe,\n    private CurrencyManService: CurrencyService,\n  ) {\n    this.Data = this.data.data;\n  }\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    if (this.postedBy === this.currentUser) {\n\n      this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n      this.canVerify = false;\n\n    } else {\n      this.canVerify = true;\n    }\n\n    //console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.status = \"APPROVED\";\n    this.statusForm.patchValue({\n      remarks: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n    /* const params = {\n       id: this.Data.id,\n      role: this.data.userType,\n      status: this.status,\n      reason: this.statusForm.value.reason,\n      verifiedBy: this.currentUser,\n      verifiedOn: todayDate\n     };*/\n\n    \n    //const params = new HttpParams()\n\n      /*.set(\"id\", this.Data.id)\n      .set(\"role\", this.data.userType)\n      .set(\"action\", this.status)\n      .set(\"reason\", this.statusForm.value.reason)\n      .set(\"verifiedBy\", this.currentUser)\n      .set(\"verifiedOn\", todayDate)*/\n\n      const params = new HttpParams()\n      .set(\"remarks\", this.statusForm.value.remarks)\n  \n      let body = [];\n\n      this.Data.forEach((element) => \n      {\n        let currencies = {\n          id: element.id,\n          remarks: this.status\n        };\n        body.push(currencies);\n      })\n\n\n\n   \n    // this.CurrencyManService\n    //   .verifyBulkCurrency(params, body)\n    //   .pipe(takeUntil(this.destroy$))\n    //   .subscribe({\n    //     next: (res) => {\n    //       if (res.statusCode == 200) {\n    //         this.snackbar.showNotification(\n    //           \"snackbar-success\",\n    //           \"Currency Verified successfully\"\n    //         );\n            \n    //       }\n    //       // else {\n    //       //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n    //       // }\n    //     },\n    //     error: (err) => {\n    //       console.log(\"err = \", err);\n    //       this.snackbar.showNotification(\n    //         \"snackbar-danger\",\n    //         \"Server Error: \" + err.message\n    //       );\n    //     },\n    //     complete: () => {\n    //       this.dialogRef.close();\n    //       this.router.navigate([\"/erp-finance/finance-parameters/manage-currency\"]);\n    //     }\n    //   });\n  \n\n  }\n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Verify Currency</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text\n            \n            <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">CurrencyName:</dt>\n                <dd>{{Data.currencyName}}</dd>\n                <dt class=\"pull-left me-2\">CurrencySymbol:</dt>\n                <dd>{{Data.currencySymbol}}</dd>\n                <dt class=\"pull-left me-2\">CurrencyCountry:</dt>\n                <dd>{{Data.currencyCountry}}</dd>\n               \n              </dl>\n            </div>-->\n  \n           \n          </div>\n  \n          <div class=\"\">\n          \n\n  \n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { GlValidationComponent } from \"src/app/erp-finance/data/lookups/validation/gl-validation/gl-validation.component\";\nimport { PaymentMethodService } from \"src/app/erp-finance/data/services/payment-method.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-customer-types\",\n  templateUrl: \"./all-customer-types.component.html\",\n  styleUrls: [\"./all-customer-types.component.sass\"],\n})\nexport class AllCustomerTypesComponent implements OnInit {\n  displayedColumns: string[] = [\"select\", \"id\", \"customerTypeCode\", \"customerType\", \"description\", \"action\"];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  // ****************************************************************************************************************************\n\n  Form: FormGroup\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private paymentMethodsManService: PaymentMethodService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb:FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //***************************************************************************************************************\n  // Find by status\n  \n  //**********************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.paymentMethodsManService\n      .getCustomerTypesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n\n\n\n  // fetching all the data\n  // getData() {\n  //   this.paymentMethodsManService\n  //     .getAllCustomerTypes()\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         if (res.statusCode == 201 || 200 || 302) {\n  //           this.data = res.entity;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           //confirm data value\n  //           console.log(\"this.data: \", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {},\n  //     }),\n  //     Subscription;\n  // }\n\n\n  // ****************************************************************************************************************************\n  addCustomerType() {\n    this.router.navigate([\n      \"/erp-finance/finance-parameters/manage-CustomerTypes\",\n    ]);\n  }\n\n\n  editCustomerType(data: any) {\n\n    let route = \"/erp-finance/finance-parameters/manage-CustomerTypes\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n      },\n    });\n  }\n\n  viewCustomerType(data: any) {\n\n    let route = \"/erp-finance/finance-parameters/manage-CustomerTypes\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n      },\n    });\n  }\n\n  validateCustomerType(data: any) {\n\n    let route = \"/erp-finance/finance-parameters/manage-CustomerTypes\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Verify\",\n      },\n    });\n  }\n\n\n  deleteCustomerType(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Customer Type will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Customer Type \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n\n        this.paymentMethodsManService\n          .deleteCustomerType(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n              }else{ this.snackbar.showNotification(\n                \"snackbar-danger\",\n               res.message\n              );}\n             \n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n               err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  // ****************************************************************************************************************************\n// Multiple Approvals\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Customer Types\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.paymentMethodsManService\n            .validateBulkCustomerTypes(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Customer Types'\" [items]=\"['Customer Types']\" [active_item]=\"'All Customer Types'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Customer Types</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                          <div class=\"m-l-10\" matTooltip=\"ADD\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"addCustomerType()\">\n                              <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                            <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n    \n                          </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                            class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                            <mat-icon>check_circle</mat-icon>\n                            VERIFIED\n                          </button> -->\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Table Definition -->\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-9\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">\n                    {{ row.id }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- customerType  -->\n                <ng-container matColumnDef=\"customerTypeCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{ row.customerTypeCode }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- customerType  -->\n                <ng-container matColumnDef=\"customerType\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Customer Type\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{ row.customerTypeName }}\n                  </mat-cell>\n                </ng-container>\n\n                <!--  description  -->\n                <ng-container matColumnDef=\"description\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Description\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{ row.description }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Status -->\n                <!-- <ng-container matColumnDef=\"status\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                      class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                      Status\n                    </mat-header-cell>\n                      <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                        (click)=\"$event.stopPropagation()\">\n                        <ng-container [ngSwitch]=\"row.status\">\n                          <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                            <i class=\"fas fa-times-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                            <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                        </ng-container>\n                      </mat-cell>\n                  </ng-container> -->\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <!--  Verify Button -->\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"validateGLAccount(row)\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                          </app-feather-icons>\n                        </button> -->\n\n                    <!-- Edit Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editCustomerType(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- View Button -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewCustomerType(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteCustomerType(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                      </app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                </mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewCustomerType(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, Observable, takeUntil } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { GlValidationComponent } from \"src/app/erp-finance/data/lookups/validation/gl-validation/gl-validation.component\";\nimport { PaymentMethodService } from \"src/app/erp-finance/data/services/payment-method.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport * as XLSX from \"xlsx\";\n\n@Component({\n  selector: \"app-manage-customer-types\",\n  templateUrl: \"./manage-customer-types.component.html\",\n  styleUrls: [\"./manage-customer-types.component.sass\"],\n})\nexport class ManageCustomerTypesComponent implements OnInit {\n  displayedColumns: string[] = [\"customerTypeName\", \"description\"];\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  hideApprovals = false;\n\n  //excel columns\n  excelHeaderRef: any[] = [\"customerTypeName\", \"description\"];\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private paymentMethodManService: PaymentMethodService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action == \"Verify\") {\n          this.pageFunction = \"Verify\";\n        }\n\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.paymentMethodManService\n      .getCustomerTypeById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :::\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      customerTypeName: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      customerTypeName: [this.formData.customerTypeName, [Validators.required]],\n      description: [this.formData.description, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      // id: [{ value: this.formData.id, disabled: true }],\n      customerTypeName: [\n        { value: this.formData.customerTypeName, disabled: true },\n        [Validators.required],\n      ],\n      description: [\n        { value: this.formData.description, disabled: true },\n        [Validators.required],\n      ],\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel(): void {\n    this.router.navigate([\"/erp-finance/finance-parameters/all-CustomerTypes\"]);\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        customerTypeName: [item.customerTypeName, [Validators.required]],\n        description: [item.description, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"customerTypesTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n\n  // ****************************************************************************************************************************\n  // submit button function\n  posting: boolean = false;\n  submit() {\n    console.log(\"data::::\", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.paymentMethodManService\n        .addCustomerTypes(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-CustomerTypes\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.paymentMethodManService\n        .updateCustomerType(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-CustomerTypes\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  //Uploading a batch of items\n  submitBatch() {\n    this.posting = true\n    if (this.pageFunction === \"Add\") {\n      this.paymentMethodManService\n        .uploadCustomerTypes(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-CustomerTypes\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {this.posting = false},\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Customer Types'\" [items]=\"['Customer Types']\"\n        [active_item]=\"'Manage Customer Types'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix row m-t-25\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with remarks\">\n                              <strong>Approvers Remarks:</strong>\n                              <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                            </div>\n                          </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mx-2\" col>\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"ADD CUSTOMER TYPE\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n\n                      <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>\n                            {{ pageFunction }} Customer Type\n                          </h2>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                        </div>\n                      </div>\n                      <div>\n\n                        <form class=\"m-4\" [formGroup]=\"mngForm\">\n                          <div class=\"row\">\n\n\n                            <!--  Customer  Type -->\n                            <div class=\"col-xl-6 col-lg-46col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Customer Type\n                                </mat-label>\n                                <input matInput formControlName=\"customerTypeName\" />\n                                <mat-error *ngIf=\"mngForm.get('customerTypeName').hasError('required')\">\n                                  The Customer Type is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Description  -->\n                            <div class=\"col-xl-6 col-lg-46col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Description\n                                </mat-label>\n                                <input matInput formControlName=\"description\" />\n                                <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">\n                                  The Description is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n\n                          </div>\n\n                          <!-- Action Buttons -->\n                          <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                              <div mat-dialog-action [align]=\"'end'\">\n                                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                  (click)=\"cancel()\">\n                                  Cancel\n                                </button>\n                                <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                                  [disabled]=\"!mngForm.valid || posting\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                  Submit\n                                </button>\n\n                                <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                                  (click)=\"onValidate()\" mat-raised-button color=\"primary\">\n                                  <mat-icon>\n                                    done_outline\n                                  </mat-icon>\n                                  Verify\n                                </button>\n\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n\n                      </div>\n\n                    </div>\n                  </div>\n                </mat-tab>\n\n                <!-- <mat-tab label=\"UPLOAD MULTIPLE CUSTOMER TYPES\">\n                  <div [hidden]=\"hideSubmit\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4\">\n                        <div class=\"row clearfix\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                            <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                          </div>\n                          <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                            <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                              (click)=\"downloadTemplate()\">\n                              <i class=\"fa fa-download\"></i> Excel Template\n                            </button>\n                          </div>\n                        </div>\n\n                        <div class=\"mt-4 mx-0\">\n                          <div style=\"\n                        display: flex;\n                        flex-wrap: wrap;\n                        margin-right: 10px;\n                        margin-bottom: 10px;\n                      \">\n                            <mat-chip-list aria-label=\"Fish selection\">\n                              <mat-chip color=\"accent\" selected *ngFor=\"\n                            let itemError of itemErrors;\n                            let i = index\n                          \">\n                                <span>{{ i + 1 }}. </span>\n                                {{ itemError.field }}: {{ itemError.message }}\n                                <mat-icon>error</mat-icon>\n                              </mat-chip>\n                            </mat-chip-list>\n                          </div>\n\n                          <div class=\"card\">\n                            <div class=\"header\">\n                              <h2>Currencies</h2>\n                            </div>\n                            <div class=\"tableBody\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table table-hover\">\n                                  <thead>\n                                    <tr>\n                                      <th>CustomerType</th>\n                                      <th>Description</th>\n\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    <tr *ngFor=\"let item of items\">\n                                      <td>{{ item.customerTypeName }}</td>\n                                      <td>{{ item.description }}</td>\n\n\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <br />\n                  <div class=\"row mx-4 mt-4\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                      <div mat-dialog-action [align]=\"'end'\">\n                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                          (click)=\"cancel()\">\n                          Cancel\n                        </button>\n                        <button *ngIf=\"items.length > 0\" mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                          [class.auth-spinner]=\"posting\" [disabled]=\"posting\" (click)=\"submitBatch()\">\n                          Submit Batch\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                </mat-tab> -->\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { ExpenseManagementService } from \"src/app/erp-finance/data/services/expense-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { element } from \"protractor\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { HttpParams } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-all-expenses\",\n  templateUrl: \"./all-expenses.component.html\",\n  styleUrls: [\"./all-expenses.component.scss\"],\n})\nexport class AllExpensesComponent implements OnInit {\n  //table columns\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"expenseName\",\n    // \"expenseCode\",\n    //\"expenseType\",\n    //\"expenseGlAccount\",\n    // \"costCenterCode\",\n    // \"costCenterName\",\n    \"status\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n\n  // ****************************************************************************************************************************\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private expenseManService: ExpenseManagementService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {\n    console.log(\"Constructor of all expenses\");\n  }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  //***************************************************************************************************************\n  // Find by status\n\n  //**********************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.expenseManService\n      .getExpensesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n  // ****************************************************************************************************************************\n  //adding Expense\n  addExpense() {\n    this.router.navigate([\"/erp-finance/finance-parameters/manage-expenses\"]);\n  }\n\n  //Updating the expenses\n\n  editExpense(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-expenses\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the expenses\n  viewExpense(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-expenses\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n      },\n    });\n  }\n\n  //Validating Expense\n  validateExpense(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-expenses\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting expenses\n\n  deleteExpense(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Expense will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Expense \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.expenseManService\n          .deleteExpenseTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.expenseManService\n            .validateBulkExpense(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                  this.selection.clear();\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n\n  //*************************************************************************************************************** */\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Expenses'\" [items]=\"['Expenses']\" [active_item]=\"'All Expenses Centres'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Expenses</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addExpense()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                            <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n    \n                          </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                            class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                            <mat-icon>check_circle</mat-icon>\n                            VERIFIED\n                          </button> -->\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Table Definition -->\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-9\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">\n                    {{ row.id }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Expense Code -->\n                <!-- <ng-container matColumnDef=\"expenseCode\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>\n                      Expense Code\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                      {{row.expenseCode}}\n                    </mat-cell>\n                  </ng-container> -->\n\n                <!-- Expense Name  -->\n                <ng-container matColumnDef=\"expenseName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-45\">\n                    Expense Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-45\">\n                    <span class=\"mat-table-emboss\">\n                      {{ row.expenseName }}\n                    </span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Expense Type  -->\n                <!-- <ng-container matColumnDef=\"expenseType\" class=\"emboss\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>\n                      Expense Type\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                      {{row.expenseType}}\n                    </mat-cell>\n                  </ng-container> -->\n\n                <!-- Expense GL Account  -->\n                <ng-container matColumnDef=\"expenseGlAccount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                    Expense GL\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                    {{ row.expenseGlAccount }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Verification Flag -->\n                <!-- <ng-container matColumnDef=\"verifiedFlag\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>\n                      Verified? \n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                      <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        {{row.verifiedFlag }}\n                      </button>\n                    </mat-cell>\n                  </ng-container> -->\n\n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <!--  Verify Button -->\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"validateExpense(row)\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                          </app-feather-icons>\n                        </button> -->\n\n                    <!-- Edit Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"editExpense(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- View Button  -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewExpense(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteExpense(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                      </app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                </mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewExpense(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription, Observable } from \"rxjs\";\n\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n//file upload\nimport * as XLSX from \"xlsx\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { ExpenseManagementService } from \"src/app/erp-finance/data/services/expense-management.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { Filter } from \"angular-feather/icons\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { HttpParams } from \"@angular/common/http\";\n\n//declaring an interface\nexport interface Cost {\n  expenseGlAccount: string;\n  expenseName: string;\n  expenseType: string;\n}\n\n@Component({\n  selector: \"app-manage-expenses\",\n  templateUrl: \"./manage-expenses.component.html\",\n  styleUrls: [\"./manage-expenses.component.sass\"],\n})\nexport class ManageExpensesComponent implements OnInit {\n  // ****************************************************************************************************************************\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  costCenterForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  disableActions = false;\n  hideApprovals = false;\n\n  showMultipleUpload = false;\n\n  // ***************************************************************\n  cCentresArray: [] = [];\n  displayedItemColumns: string[] = [\n    \"id\",\n    \"costCenterCode\",\n    \"costCenterName\",\n    \"glAccount\",\n    \"actions\",\n  ];\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n  // ************************************************************\n  //excel columns\n  excelHeaderRef: any[] = [\"expenseGlAccount\", \"expenseName\", \"expenseType\"];\n  isLoading: any;\n  expensetypes: String[] = [\"OPEX\", \"CAPEX\"];\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private expsenseManService: ExpenseManagementService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private costManService: CostCentreManagementService,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization\n  ngOnInit(): void {\n    this.getPage();\n    // this.getcostCenter();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action === \"Verify\") {\n          this.pageFunction = \"Verify\";\n          this.disableActions = true;\n        }\n\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n\n    this.generateCostCenterForm();\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.expsenseManService\n      .getExpenseById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      expenseName: [\"\", [Validators.required]],\n      expenseType: [\"\", [Validators.required]],\n      exCostCenters: [[]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      expenseName: [this.formData.expenseName, [Validators.required]],\n      expenseType: [this.formData.expenseType, [Validators.required]],\n      exCostCenters: this.formData.exCostCenters,\n    });\n    this.dataSourceItems.data = this.formData.exCostCenters;\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      expenseCode: [\n        { value: this.formData.expenseCode, disabled: true },\n        [Validators.required],\n      ],\n      expenseName: [\n        { value: this.formData.expenseName, disabled: true },\n        [Validators.required],\n      ],\n      expenseType: [\n        { value: this.formData.expenseType, disabled: true },\n        [Validators.required],\n      ],\n    });\n    this.dataSourceItems.data = this.formData.exCostCenters;\n  }\n\n  generateCostCenterForm(formData?): void {\n    this.costCenterForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n\n      costCenterCode: [formData?.costCenterCode ?? \"\", [Validators.required]],\n      costCenterName: [formData?.costCenterName ?? \"\", [Validators.required]],\n      glAccount: [formData?.glAccount ?? \"\", [Validators.required]],\n    });\n  }\n\n  //*********************************************************************************************************************************************************** */\n  //Form&Table Logic\n  //*********************************************************************************************************************************************************** */\n  showCostCenterForm = false;\n  selectedCostCenterIndex: number;\n  ccAction: string = \"\";\n\n  resetFormAndHide() {\n    this.mngForm.patchValue({\n      exCostCenters: this.dataSourceItems.data,\n    });\n    this.costCenterForm.reset();\n    this.showCostCenterForm = false;\n  }\n\n  addCostCenter() {\n    this.ccAction = \"Add\";\n    this.showCostCenterForm = true;\n  }\n\n  refresh() {\n    this.dataSourceItems.data = [...this.dataSourceItems.data];\n  }\n\n  editCostCenter(data: any, index: number) {\n    this.ccAction = \"Update\";\n    this.selectedCostCenterIndex = index;\n    this.generateCostCenterForm(data);\n    this.showCostCenterForm = true;\n  }\n\n  pushToDataSourceItems() {\n    if (this.ccAction === \"Add\") {\n      this.dataSourceItems.data.push(this.costCenterForm.value);\n    } else if (this.ccAction === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.costCenterForm.value.id) {\n        indexToUpdate = this.dataSourceItems.data.findIndex(\n          (item) => item.id === this.costCenterForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedCostCenterIndex;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSourceItems.data[indexToUpdate] = this.costCenterForm.value;\n      }\n    }\n\n    this.resetFormAndHide();\n    this.refresh();\n  }\n  applyGlsToAllCostCenters() {\n    const newGlAccount = this.costCenterForm.value?.glAccount;\n\n    if (newGlAccount !== undefined) {\n      this.dataSourceItems.data.forEach((item) => {\n        item.glAccount = newGlAccount;\n      });\n      this.showCostCenterForm = false;\n      this.refresh();\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"GL Account value is undefined or null!\"\n      );\n    }\n  }\n\n  deleteCostCenter(index: number) {\n    this.dataSourceItems.data.splice(index, 1);\n    this.refresh();\n  }\n\n  cancelCostCenter() {\n    this.resetFormAndHide();\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel() {\n    console.log(\"Before routing\");\n    this.router.navigate([\"/erp-finance/finance-parameters/all-expenses\"]);\n    // admin/parameters/all-expenses\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        expenseName: [item.expenseName, [Validators.required]],\n        expenseType: [item.expenseType, [Validators.required]],\n        expenseGlAccount: [item.expenseGlAccount, [Validators.required]],\n        exCostCenters: [item.exCostCenters],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"expensesTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n\n  //filter through the table\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceItems.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourceItems.paginator) {\n      this.dataSourceItems.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //Cost centres look up\n\n  cCentreIsSelected = false;\n  selectedCostCentres: any[] = [];\n  cCentresLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"view Cost Centres\",\n      selected: this.selectedCostCentres,\n    };\n\n    const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        this.cCentresArray = result.data.map((element) => {\n          return {\n            costCenterCode: element.costCenterCode,\n            costCenterName: element.costCenterName,\n          };\n        });\n\n        this.dataSourceItems = new MatTableDataSource(this.cCentresArray);\n        this.dataSourceItems.paginator = this.paginatorItems;\n        this.dataSourceItems.sort = this.sortItems;\n\n        this.cCentreIsSelected = true;\n\n        this.mngForm.patchValue({\n          exCostCenters: this.dataSourceItems.data,\n          // numberOfItems: this.dataSourceItems.data.length\n        });\n      }\n    });\n  }\n\n  onDeleteItem(index: number) {\n    this.dataSourceItems.data.splice(index, 1);\n    this.dataSourceItems.data = this.dataSourceItems.data.slice();\n  }\n\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate(userType) {\n    let privilege = \"Manage Expenses\"; //Insert the priviledge later\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType,\n      };\n\n      console.log(\"this.formData: \", this.formData);\n\n      const dialogRef = this.dialog.open(\n        ExpenseValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-parameters/all-expenses\"]);\n      });\n    }\n  }\n\n  //******************************************************************************************************************************************************** */\n  // Look up for the GLs for stock accounts mapping\n  selectedItem: any[] = [];\n  _glsLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View GL Accounts\",\n      selected: this.selectedItem,\n      type: \"Expense\",\n    };\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        this.costCenterForm.patchValue({\n          glAccount: element.accountID,\n        });\n      });\n    });\n  }\n\n  // ****************************************************************************************************************************\n  posting: boolean = false;\n\n  cleanUpIds(formData: any): any {\n    const cleanRecursive = (data: any): any => {\n      if (data === null || typeof data !== \"object\") {\n        return data;\n      }\n      if (Array.isArray(data)) {\n        // If it's an array, recursively clean each element\n        return data.map((element) => cleanRecursive(element));\n      }\n\n      // Remove \"id\" field if it is null, undefined, or an empty string\n      const cleanedData: any = {};\n      for (const [key, value] of Object.entries(data)) {\n        if (\n          key === \"id\" &&\n          (value === null || value === undefined || value === \"\")\n        ) {\n          continue; // Skip \"id\" field\n        }\n        cleanedData[key] = cleanRecursive(value);\n      }\n      return cleanedData;\n    };\n    // Clone the form data to avoid modifying the original object\n    const cleanedData = cleanRecursive({ ...formData });\n\n    return cleanedData;\n  }\n\n  response: any;\n  submit() {\n    const cleanedFormData = this.cleanUpIds(this.mngForm.value);\n\n    console.log(\"Both: \", cleanedFormData);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.expsenseManService\n        .addExpense(cleanedFormData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"res: \", res);\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            this.router.navigate([\n              \"/erp-finance/finance-parameters/all-expenses\",\n            ]);\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.expsenseManService\n        .updateExpense(cleanedFormData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            this.router.navigate([\n              \"/erp-finance/finance-parameters/all-expenses\",\n            ]);\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  //*************************************************************************************************************************** */\n  //submit button function\n  // posting: boolean = false;\n\n  // submit() {\n  //   console.log(\"Both: \", this.mngForm.value);\n  //   this.posting = true;\n  //   if (this.pageFunction === \"Add\") {\n  //     this.expsenseManService\n  //       .addExpense(this.mngForm.value)\n  //       .pipe(takeUntil(this.destroy$))\n  //       .subscribe({\n  //         next: (res) => {\n  //           console.log(\"res.status: \", res.statusCode);\n  //           if (res.statusCode == 201 || 200 || 302) {\n  //             this.snackbar.showNotification(\"snackbar-success\", res.message);\n  //             this.router.navigate([\n  //               \"/erp-finance/finance-parameters/all-expenses\",\n  //             ]);\n  //           } else {\n  //             this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //           }\n  //         },\n  //         error: (err) => {\n  //           this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //         },\n  //         complete: () => {\n  //           this.posting = false;\n  //         },\n  //       }),\n  //       Subscription;\n  //   } else if (this.pageFunction === \"Update\") {\n  //     this.expsenseManService\n  //       .updateExpense(this.mngForm.value)\n  //       .pipe(takeUntil(this.destroy$))\n  //       .subscribe({\n  //         next: (res) => {\n  //           if (res.statusCode == 201 || 200 || 302) {\n  //             this.snackbar.showNotification(\"snackbar-success\", res.message);\n  //             this.router.navigate([\n  //               \"/erp-finance/finance-parameters/all-expenses\",\n  //             ]);\n  //           } else {\n  //             this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //           }\n  //         },\n  //         error: (err) => {\n  //           this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //         },\n  //         complete: () => {\n  //           this.posting = false;\n  //         },\n  //       }),\n  //       Subscription;\n  //   }\n  // }\n\n  //uploading batch expense files\n\n  submitBatch() {\n    console.log(\"submitting batch\");\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.expsenseManService\n        .uploadBatchExpenses(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-expenses\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb\n        [title]=\"'Manage Expenses'\"\n        [items]=\"['Expenses']\"\n        [active_item]=\"'Manage Expenses'\"\n      >\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div\n                                class=\"badge badge-solid-blue\"\n                                style=\"color: #fff; background-color: #007bff\"\n                              >\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div\n                                class=\"badge badge-solid-pink\"\n                                style=\"color: #fff; background-color: #e81c62\"\n                              >\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div\n                                class=\"badge badge-solid-blue\"\n                                style=\"color: #fff; background-color: #28a745\"\n                              >\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div\n                                class=\"badge badge-solid-pink\"\n                                style=\"color: #fff; background-color: #d35400\"\n                              >\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div\n                                class=\"badge badge-solid-green\"\n                                style=\"color: #fff; background-color: #004840\"\n                              >\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                              <div class=\"chat-with remarks\">\n                                <strong>Approvers Remarks:</strong>\n                                <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                              </div>\n                            </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n              <mat-tab label=\"ADD AN EXPENSE\">\n                <div class=\"row clearfix mx-2\">\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                    <div class=\"header\">\n                      <div class=\"row\">\n                        <h2>{{ pageFunction }} Expenses</h2>\n                      </div>\n                    </div>\n\n                    <div>\n                      <form [formGroup]=\"mngForm\" class=\"mt-3\">\n                        <div class=\"row\">\n                          <!-- Expense Name -->\n                          <div\n                            class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\"\n                          >\n                            <mat-form-field\n                              class=\"example-full-width mb-0\"\n                              appearance=\"outline\"\n                            >\n                              <mat-label> Expense Name </mat-label>\n                              <input matInput formControlName=\"expenseName\" />\n                              <mat-error\n                                *ngIf=\"\n                                  mngForm\n                                    .get('expenseName')\n                                    .hasError('required')\n                                \"\n                              >\n                                Expense Name is required\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- Expense Type -->\n                          <div\n                            class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\"\n                          >\n                            <mat-form-field\n                              class=\"example-full-width\"\n                              appearance=\"outline\"\n                            >\n                              <mat-label>Expense Type</mat-label>\n\n                              <mat-select formControlName=\"expenseType\">\n                                <mat-option\n                                  *ngFor=\"let expensetype of expensetypes\"\n                                  [value]=\"expensetype\"\n                                  >{{ expensetype }}\n                                </mat-option>\n                              </mat-select>\n\n                              <mat-error\n                                *ngIf=\"\n                                  mngForm\n                                    .get('expenseType')\n                                    .hasError('required')\n                                \"\n                              >\n                                Please select expense type\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n                        </div>\n                      </form>\n\n                      <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>Expense Cost Centers</h2>\n                        </div>\n                      </div>\n\n                      <form\n                        *ngIf=\"showCostCenterForm\"\n                        [formGroup]=\"costCenterForm\"\n                        class=\"mt-3\"\n                      >\n                        <div class=\"row\">\n                          <!-- Cost Center Code -->\n                          <div\n                            class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\"\n                          >\n                            <mat-form-field\n                              class=\"example-full-width mb-0\"\n                              appearance=\"outline\"\n                            >\n                              <mat-label> Cost Center Code </mat-label>\n                              <input\n                                matInput\n                                formControlName=\"costCenterCode\"\n                              />\n                              <mat-error\n                                *ngIf=\"\n                                  costCenterForm\n                                    .get('costCenterCode')\n                                    .hasError('required')\n                                \"\n                              >\n                                Cost Center Code is required\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- Cost Center Name -->\n                          <div\n                            class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\"\n                          >\n                            <mat-form-field\n                              class=\"example-full-width\"\n                              appearance=\"outline\"\n                            >\n                              <mat-label> Cost Center Name </mat-label>\n                              <input\n                                matInput\n                                formControlName=\"costCenterName\"\n                              />\n                              <mat-error\n                                *ngIf=\"\n                                  costCenterForm\n                                    .get('costCenterName')\n                                    .hasError('required')\n                                \"\n                              >\n                                Cost Center Name is required\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- GL Account -->\n                          <div\n                            class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\"\n                          >\n                            <mat-form-field\n                              class=\"example-full-width mb-0\"\n                              appearance=\"outline\"\n                            >\n                              <mat-label> GL Account </mat-label>\n                              <input matInput formControlName=\"glAccount\" />\n                              <mat-icon matSuffix (click)=\"_glsLookUp()\"\n                                >search</mat-icon\n                              >\n                              <mat-error\n                                *ngIf=\"\n                                  costCenterForm\n                                    .get('glAccount')\n                                    .hasError('required')\n                                \"\n                              >\n                                GL Account is required\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n                          <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-1 mb-3\">\n                            <div\n                              matTooltip=\"Apply Account to All Cost Centers\"\n                              class=\"mt-1\"\n                            >\n                              <button\n                                mat-mini-fab\n                                color=\"primary\"\n                                (click)=\"applyGlsToAllCostCenters()\"\n                              >\n                                <mat-icon class=\"col-white\">sync</mat-icon>\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row mb-2\">\n                          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                            <div class=\"example-button-row\" align=\"start\">\n                              <button\n                                class=\"btn-space\"\n                                mat-raised-button\n                                color=\"primary\"\n                                [class.auth-spinner]=\"posting\"\n                                [disabled]=\"!costCenterForm.valid || posting\"\n                                [hidden]=\"viewMode\"\n                                (click)=\"pushToDataSourceItems()\"\n                              >\n                                {{ ccAction }} CostCenter\n                              </button>\n\n                              <button\n                                mat-raised-button\n                                color=\"warn\"\n                                (click)=\"cancelCostCenter()\"\n                                tabindex=\"-1\"\n                              >\n                                Cancel\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n\n                      <div class=\"mt-0\">\n                        <div class=\"materialTableHeader\">\n                          <div class=\"row\">\n                            <div class=\"col-8\">\n                              <ul class=\"header-buttons-left ms-0\">\n                                <li class=\"dropdown\">\n                                  <h2>Selected Cost Centres</h2>\n                                </li>\n                                <li class=\"dropdown m-l-20\">\n                                  <label for=\"search-input\"\n                                    ><i class=\"material-icons search-icon\"\n                                      >search</i\n                                    ></label\n                                  >\n                                  <input\n                                    placeholder=\"Filter...\"\n                                    type=\"text\"\n                                    (keyup)=\"applyFilter($event)\"\n                                    #filter\n                                    class=\"browser-default search-field\"\n                                    aria-label=\"Search box\"\n                                  />\n                                </li>\n                                <li>\n                                  <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                    <button\n                                      mat-mini-fab\n                                      color=\"primary\"\n                                      (click)=\"cCentresLookUp()\"\n                                    >\n                                      <mat-icon class=\"col-white\">add</mat-icon>\n                                    </button>\n                                  </div>\n                                </li>\n                                <li>\n                                  <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                    <button mat-mini-fab color=\"primary\">\n                                      <mat-icon class=\"col-white\"\n                                        >refresh</mat-icon\n                                      >\n                                    </button>\n                                  </div>\n                                </li>\n                              </ul>\n                            </div>\n                            <div class=\"col-4\">\n                              <ul class=\"header-buttons\">\n                                <li>\n                                  <div\n                                    class=\"export-button m-l-10\"\n                                    matTooltip=\"XLSX\"\n                                  >\n                                    <img\n                                      src=\"assets/images/icons/xlsx.png\"\n                                      alt=\"\"\n                                      (click)=\"\n                                        exporter.exportTable('xlsx', {\n                                          fileName: 'assets-list',\n                                          sheet: 'sheet1'\n                                        })\n                                      \"\n                                    />\n                                  </div>\n                                </li>\n                                <li>\n                                  <div\n                                    class=\"export-button m-l-10\"\n                                    matTooltip=\"CSV\"\n                                  >\n                                    <img\n                                      src=\"assets/images/icons/csv.png\"\n                                      alt=\"\"\n                                      (click)=\"exporter.exportTable('csv')\"\n                                    />\n                                  </div>\n                                </li>\n                                <li>\n                                  <div\n                                    class=\"export-button m-l-10\"\n                                    matTooltip=\"JSON\"\n                                  >\n                                    <img\n                                      src=\"assets/images/icons/json.png\"\n                                      alt=\"\"\n                                      (click)=\"exporter.exportTable('json')\"\n                                    />\n                                  </div>\n                                </li>\n                                <li>\n                                  <div\n                                    class=\"export-button m-l-10\"\n                                    matTooltip=\"TXT\"\n                                  >\n                                    <img\n                                      src=\"assets/images/icons/txt.png\"\n                                      alt=\"\"\n                                      (click)=\"exporter.exportTable('txt')\"\n                                    />\n                                  </div>\n                                </li>\n                              </ul>\n                            </div>\n                          </div>\n                        </div>\n\n                        <mat-table\n                          #table\n                          matTableExporter\n                          [dataSource]=\"dataSourceItems\"\n                          matSort\n                          class=\"mat-cell\"\n                          #exporter=\"matTableExporter\"\n                        >\n                          <!-- Id  -->\n                          <ng-container matColumnDef=\"id\">\n                            <mat-header-cell\n                              *matHeaderCellDef\n                              mat-sort-header\n                              class=\"psl-3 tbl-col-width-per-6\"\n                              >#</mat-header-cell\n                            >\n                            <mat-cell\n                              *matCellDef=\"let row\"\n                              class=\"psl-3 tbl-col-width-per-6\"\n                            >\n                              <span *ngIf=\"row.id; else noId\">{{\n                                row.id\n                              }}</span>\n                              <ng-template #noId></ng-template>\n                            </mat-cell>\n                          </ng-container>\n\n                          <!-- Cost Centre Code -->\n                          <ng-container matColumnDef=\"costCenterCode\">\n                            <mat-header-cell\n                              *matHeaderCellDef\n                              mat-sort-header\n                              class=\"psl-3 tbl-col-width-per-35\"\n                              >Cost Centre Code\n                            </mat-header-cell>\n                            <mat-cell\n                              *matCellDef=\"let row\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-35\"\n                            >\n                              <span *ngIf=\"row.costCenterCode\">\n                                {{ row.costCenterCode }}\n                              </span>\n                            </mat-cell>\n                          </ng-container>\n\n                          <!-- Cost Centre Name -->\n                          <ng-container matColumnDef=\"costCenterName\">\n                            <mat-header-cell\n                              *matHeaderCellDef\n                              mat-sort-header\n                              class=\"psl-3 tbl-col-width-per-35\"\n                              >Cost Centre Name\n                            </mat-header-cell>\n                            <mat-cell\n                              *matCellDef=\"let row\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-35\"\n                            >\n                              <span *ngIf=\"row.costCenterName\">\n                                {{ row.costCenterName }}\n                              </span>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"glAccount\">\n                            <mat-header-cell\n                              *matHeaderCellDef\n                              mat-sort-header\n                              class=\"psl-3 tbl-col-width-per-35\"\n                              >Gl Account\n                            </mat-header-cell>\n                            <mat-cell\n                              *matCellDef=\"let row\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-35\"\n                            >\n                              <span *ngIf=\"row.glAccount\">\n                                {{ row.glAccount }}\n                              </span>\n                            </mat-cell>\n                          </ng-container>\n\n                          <!-- Action Buttons -->\n                          <ng-container matColumnDef=\"actions\">\n                            <mat-header-cell\n                              class=\"psl-3 tbl-col-width-per-35\"\n                              *matHeaderCellDef\n                              >Actions</mat-header-cell\n                            >\n                            <mat-cell\n                              *matCellDef=\"let row; let i = index\"\n                              class=\"psl-3 tbl-col-width-per-35\"\n                            >\n                              <!-- Edit Button -->\n                              <button\n                                mat-icon-button\n                                color=\"accent\"\n                                (click)=\"$event.stopPropagation()\"\n                                (click)=\"editCostCenter(row, i)\"\n                                class=\"tbl-action-btn\"\n                              >\n                                <app-feather-icons\n                                  [icon]=\"'edit'\"\n                                  [class]=\"'tbl-fav-edit'\"\n                                >\n                                </app-feather-icons>\n                              </button>\n\n                              <!-- Delete Button -->\n                              <button\n                                mat-icon-button\n                                color=\"accent\"\n                                (click)=\"$event.stopPropagation()\"\n                                (click)=\"deleteCostCenter(i)\"\n                                class=\"tbl-action-btn\"\n                              >\n                                <app-feather-icons\n                                  [icon]=\"'trash-2'\"\n                                  [class]=\"'tbl-fav-delete'\"\n                                >\n                                </app-feather-icons>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n                          <mat-header-row\n                            *matHeaderRowDef=\"displayedItemColumns\"\n                          ></mat-header-row>\n                          <mat-row\n                            *matRowDef=\"\n                              let row;\n                              let i = index;\n                              columns: displayedItemColumns\n                            \"\n                            [style.cursor]=\"'pointer'\"\n                            matRipple\n                          >\n                          </mat-row>\n                        </mat-table>\n                        <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                          <mat-progress-spinner\n                            color=\"primary\"\n                            [diameter]=\"40\"\n                            mode=\"indeterminate\"\n                          >\n                          </mat-progress-spinner>\n                        </div>\n                        <mat-paginator\n                          [pageSize]=\"10\"\n                          [pageSizeOptions]=\"[2, 6, 10, 20, 30, 40, 50, 100]\"\n                          aria-label=\"Select page of users\"\n                        ></mat-paginator>\n\n                        <!-- Action Buttons -->\n                        <div class=\"row\">\n                          <div\n                            class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\"\n                          >\n                            <div mat-dialog-action [align]=\"'end'\">\n                              <button\n                                class=\"btn-space\"\n                                type=\"button\"\n                                mat-raised-button\n                                color=\"warn\"\n                                mat-button\n                                (click)=\"cancel()\"\n                              >\n                                Cancel\n                              </button>\n\n                              <button\n                                mat-raised-button\n                                color=\"primary\"\n                                [class.auth-spinner]=\"posting\"\n                                [disabled]=\"!mngForm.valid || posting\"\n                                [hidden]=\"hideSubmit\"\n                                (click)=\"submit()\"\n                              >\n                                Submit\n                              </button>\n\n                              <button\n                                class=\"btn-space\"\n                                *ngIf=\"!hideApprovals\"\n                                [hidden]=\"hideApprovals\"\n                                (click)=\"onValidate('Verifier')\"\n                                mat-raised-button\n                                color=\"primary\"\n                              >\n                                <mat-icon>done_outline</mat-icon>\n                                Verify\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!-- Second Tab -->\n              </mat-tab>\n\n              <mat-tab\n                *ngIf=\"showMultipleUpload\"\n                label=\"UPLOAD MULTIPLE EXPENSES\"\n              >\n                <div [hidden]=\"hideSubmit\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"mt-4\">\n                      <div class=\"row clearfix\">\n                        <h5>Upload Excel File</h5>\n                      </div>\n                      <div class=\"row align-items-center\">\n                        <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                          <app-file-upload\n                            (change)=\"handleFileInput($event.target.files)\"\n                          ></app-file-upload>\n                        </div>\n                        <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                          <button\n                            mat-raised-button\n                            color=\"primary\"\n                            [hidden]=\"hideSubmit\"\n                            (click)=\"downloadTemplate()\"\n                          >\n                            <i class=\"fa fa-download\"></i> Excel Template\n                          </button>\n                        </div>\n                      </div>\n\n                      <div class=\"mt-4 mx-0\">\n                        <div\n                          style=\"\n                            display: flex;\n                            flex-wrap: wrap;\n                            margin-right: 10px;\n                            margin-bottom: 10px;\n                          \"\n                        >\n                          <mat-chip-list aria-label=\"Fish selection\">\n                            <mat-chip\n                              color=\"accent\"\n                              selected\n                              *ngFor=\"\n                                let itemError of itemErrors;\n                                let i = index\n                              \"\n                            >\n                              <span>{{ i + 1 }}. </span>\n                              {{ itemError.field }}: {{ itemError.message }}\n                              <mat-icon>error</mat-icon>\n                            </mat-chip>\n                          </mat-chip-list>\n                        </div>\n\n                        <div class=\"card\">\n                          <div class=\"header\">\n                            <h2>Expenses</h2>\n                          </div>\n                          <div class=\"tableBody\">\n                            <div class=\"table-responsive\">\n                              <table class=\"table table-hover\">\n                                <thead>\n                                  <tr>\n                                    <th>ExpenseName</th>\n                                    <th>ExpenseType</th>\n                                    <th>ExpenseGlAccount</th>\n                                    <th>ExCostCenters</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr *ngFor=\"let item of items\">\n                                    <td>{{ item.expenseName }}</td>\n                                    <td>{{ item.expenseType }}</td>\n                                    <td>{{ item.expenseGlAccount }}</td>\n                                    <td>{{ item.exCostCenters }}</td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <br />\n                <div class=\"row mx-4 mt-4\">\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                    <div mat-dialog-action [align]=\"'end'\">\n                      <button\n                        class=\"btn-space\"\n                        type=\"button\"\n                        mat-raised-button\n                        color=\"warn\"\n                        mat-button\n                        (click)=\"cancel()\"\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        *ngIf=\"items.length > 0\"\n                        mat-raised-button\n                        color=\"primary\"\n                        [hidden]=\"hideSubmit\"\n                        [class.auth-spinner]=\"posting\"\n                        [disabled]=\"posting\"\n                        (click)=\"submitBatch()\"\n                      >\n                        Submit Batch\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </mat-tab>\n            </mat-tab-group>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { GlAccountsService } from \"src/app/erp-finance/data/services/gl-accounts.service\";\nimport { GlValidationComponent } from \"src/app/erp-finance/data/lookups/validation/gl-validation/gl-validation.component\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-all-accounts\",\n  templateUrl: \"./all-accounts.component.html\",\n  styleUrls: [\"./all-accounts.component.scss\"],\n})\nexport class AllAccountsComponent implements OnInit {\n  //table columns\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"accountID\",\n    \"description\",\n    //\"currencyID\",\n    \"glAccountTypeID\",\n    \"glSubAccountType\",\n    \"acBalance\",\n    \"fsClass\",\n    \"acDesignation\",\n    \"status\",\n    \"actions\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n\n  // ****************************************************************************************************************************\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private glManService: GlAccountsService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    \n      this.getData(this.currentPage, this.pageSize);\n    \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n  data: any;\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n      status: this.Form.value.status,\n    };\n\n    this.glManService\n      .getGLAccountsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n\n  // ****************************************************************************************************************************\n  //adding GL Accounts\n  addGLAccount() {\n    this.router.navigate([\"/erp-finance/finance-parameters/manage-GLs\"]);\n  }\n\n  //Updating the GL Accounts\n\n  editGLAccount(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-GLs\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the costcentres\n  viewGLAccount(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-GLs\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n      },\n    });\n  }\n\n  //verify cost centre\n  validateGLAccount(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-GLs\";\n    this.router.navigate([route], {\n      queryParams: {\n        accountNumber: data.id,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting costcentres\n\n  // accountNumber = this.data.accountNumber;\n  deleteGLAccount(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This GL Account will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this GL Account \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = {\n          id: id,\n        };\n        this.glManService\n          .deleteGLAccountTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate GL\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.glManService\n            .validateAccounts(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData(this.currentPage, this.pageSize);\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n\n  showRecordDetails(row) {\n    // Generate the HTML content for the SweetAlert modal\n    const content = `\n      <div style=\"font-family: Arial, sans-serif; text-align: left;\">\n        <table style=\"width: 100%;\">\n          <tr>\n            <td><strong>Status:</strong></td>\n            <td>${row.status}</td>\n          </tr>\n          <tr>\n            <td><strong>Posted Flag:</strong></td>\n            <td>${row.postedFlag}</td>\n          </tr>\n          <tr>\n            <td><strong>Posted By:</strong></td>\n            <td>${row.postedBy}</td>\n          </tr>\n          <tr>\n            <td><strong>Posted Time:</strong></td>\n            <td>${row.postedTime}</td>\n          </tr>\n          <tr>\n            <td><strong>Verified Flag:</strong></td>\n            <td>${row.verifiedFlag}</td>\n          </tr>\n          <tr>\n            <td><strong>Verified By:</strong></td>\n            <td>${row.verifiedBy}</td>\n          </tr>\n          <tr>\n            <td><strong>Verified Time:</strong></td>\n            <td>${row.verifiedTime}</td>\n          </tr>\n          <tr>\n            <td><strong>Verifier Status:</strong></td>\n            <td>${row.verifierStatus}</td>\n          </tr>\n          <tr>\n            <td><strong>Verifier Remarks:</strong></td>\n            <td>${row.verifierRemarks}</td>\n          </tr>\n          <tr>\n            <td><strong>Account ID:</strong></td>\n            <td>${row.accountID}</td>\n          </tr>\n          <tr>\n            <td><strong>Description:</strong></td>\n            <td>${row.description}</td>\n          </tr>\n          <tr>\n            <td><strong>Currency ID:</strong></td>\n            <td>${row.currencyID}</td>\n          </tr>\n          <tr>\n            <td><strong>GL Account Type ID:</strong></td>\n            <td>${row.glAccountTypeID}</td>\n          </tr>\n          <tr>\n            <td><strong>GL SubAccount Type:</strong></td>\n            <td>${row.glSubAccountType}</td>\n          </tr>\n          <tr>\n            <td><strong>Account Balance:</strong></td>\n            <td>${row.acBalance}</td>\n          </tr>\n          <tr>\n            <td><strong>FS Class:</strong></td>\n            <td>${row.fsClass}</td>\n          </tr>\n          <tr>\n            <td><strong>Account Designation:</strong></td>\n            <td>${row.acDesignation}</td>\n          </tr>\n        </table>\n      </div>\n    `;\n    Swal.fire({\n      title: \"Record Details\",\n      html: content,\n      icon: \"info\",\n      confirmButtonText: \"Close\",\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All GL Accounts'\" [items]=\"['GL Accounts']\" [active_item]=\"'All GL Accounts'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n\n\n              <div class=\"materialTableHeader mt-0\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                          <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n  \n                        </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                          class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                          <mat-icon>check_circle</mat-icon>\n                          VERIFIED\n                        </button> -->\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>General Ledger Accounts</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addGLAccount()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <!-- Container element with *ngIf condition -->\n                      <ng-container *ngIf=\"selection.selected.length > 0\">\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">check</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                            <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">cancel</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">undo</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ng-container>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- Table Definition -->\n\n              <table mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-4\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" class=\"tbl-checkbox\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-4\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" class=\"tbl-checkbox\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- ID -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    ID\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    {{ row.id }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Account ID -->\n                <ng-container matColumnDef=\"accountID\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Account ID\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.accountID }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Account description -->\n                <ng-container matColumnDef=\"description\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Account Desc\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.description }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Currency ID -->\n                <!-- <ng-container matColumnDef=\"currencyID\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Currency ID\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.currencyID }}\n                   </mat-cell>\n                </ng-container> -->\n\n                <!-- GL Account Type ID -->\n                <ng-container matColumnDef=\"glAccountTypeID\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Acc Type ID\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.glAccountTypeID }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- GL Account Type -->\n                <ng-container matColumnDef=\"glSubAccountType\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Sub Acc Type\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.glSubAccountType }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- AC Balance -->\n                <ng-container matColumnDef=\"acBalance\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    AC Balance\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{\n\n                    row.acBalance | currency : row.currencyID : \"symbol\" : \"1.2-2\"\n                    }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- FS Class -->\n                <ng-container matColumnDef=\"fsClass\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    FS Class\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.fsClass }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- AC Designation -->\n                <ng-container matColumnDef=\"acDesignation\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    AC Designation\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.acDesignation }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <!-- Edit Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editGLAccount(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- View Button -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewGLAccount(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteGLAccount(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                      </app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Header and row definitions -->\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"showRecordDetails(row)\" matRipple>\n                </mat-row>\n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                    }}\"</td>\n                </tr>\n              </table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n\n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\" (page)=\"onPageChange($event)\"\n                [length]=\"totalItems\" [pageIndex]=\"currentPage\" [pageSize]=\"pageSize\" showFirstLastButtons>\n              </mat-paginator>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, Observable, takeUntil } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { GlAccountsService } from \"src/app/erp-finance/data/services/gl-accounts.service\";\nimport * as XLSX from \"xlsx\";\nimport { GlValidationComponent } from \"src/app/erp-finance/data/lookups/validation/gl-validation/gl-validation.component\";\nimport { HttpParams } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-manage-accounts\",\n  templateUrl: \"./manage-accounts.component.html\",\n  styleUrls: [\"./manage-accounts.component.scss\"],\n})\nexport class ManageAccountsComponent implements OnInit {\n  // ****************************************************************************************************************************\n  //table columns\n\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  accId: any;\n  hideSubmit = false;\n  hideApprovals = false;\n\n  // ****************************************************************************************************************************\n\n  acDesignationOptions: string[] = [\n    \"BILLABLE AC\",\n    \"PAYABLES AC\",\n    \"BANK CASH AC NAME\",\n    \"STOCK ACCOUNT\",\n    \"IMPREST AC\",\n    \"STAFF DEBT AC\",\n    \"NHIF AC DESIGNATION\",\n    \"NSSF AC DESIGNATION\",\n    \"PAYE AC DESIGNATION\",\n    \"STAFF LOANS AC DESIGNATION\",\n    \"HOUSE_LEVY AC DESIGNATION\",\n    \"PENSION AC DESIGNATION\",\n    \"GRATUITY AC DESIGNATION\",\n    \"NETPAY AC DESIGNATION\",\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private glManService: GlAccountsService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action == \"Verify\") {\n          this.pageFunction = \"Verify\";\n        }\n\n        this.accId = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.accId);\n    this.glManService\n      .getGLAccountsById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateForm(this.formData);\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData(this.formData);\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData(this.formData);\n      this.hideSubmit = true;\n      this.hideApprovals = false;\n    }\n  }\n\n\n  // ****************************************************************************************************************************\n\n  generateForm(formData?): void {\n    this.mngForm = this.fb.group({\n      id: formData?.id ?? \"\",\n      accountID: [formData?.accountID, [Validators.required]],\n      description: formData?.description ?? \"\",\n      currencyID: [formData?.currencyID, [Validators.required]],\n      glAccountTypeID: [formData?.glAccountTypeID, [Validators.required]],\n      glSubAccountType: [formData?.glSubAccountType, [Validators.required]],\n      acBalance: [formData?.acBalance, [Validators.required]],\n\n      plAndBs: [formData?.plAndBs, [Validators.required]],\n      financialGrouping: [formData?.financialGrouping],\n\n      fsClass: [formData?.fsClass, [Validators.required]],\n      acDesignation: [formData?.acDesignation, [Validators.required]],\n\n      reportingLineActual: [formData?.reportingLineActual, [Validators.required]],\n      mainReportingLine: [formData?.mainReportingLine, [Validators.required]],\n    });\n  }\n\n  // <td>{{ item.plAndBs }}</td>\n  //                                     <td>{{ item.financialGrouping }}</td>\n\n  generateDisabledFormWithData(formData?): void {\n    this.mngForm = this.fb.group({\n      accountID: [{ value: formData?.accountID, disabled: true }],\n      description: [{ value: formData?.description, disabled: true }],\n      currencyID: [{ value: formData?.currencyID, disabled: true }],\n      glAccountTypeID: [{ value: formData?.glAccountTypeID, disabled: true }],\n      glSubAccountType: [{ value: formData?.glSubAccountType, disabled: true }],\n      acBalance: [{ value: formData?.acBalance, disabled: true }],\n\n      plAndBs: [{ value: formData?.plAndBs, disabled: true }],\n      financialGrouping: [\n        { value: formData?.financialGrouping, disabled: true },\n      ],\n\n      fsClass: [{ value: formData?.fsClass, disabled: true }],\n      acDesignation: [{ value: formData?.acDesignation, disabled: true }],\n\n      reportingLineActual: [{ value: formData?.reportingLineActual, disabled: true }],\n      mainReportingLine: [{ value: formData?.mainReportingLine, disabled: true }],\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel(): void {\n    this.router.navigate([\"/erp-finance/finance-parameters/all-GLs\"]);\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        // Trim the keys in each object of jsonData\n        const trimmedData = jsonData.map((item: any) => {\n          const trimmedItem: any = {};\n          Object.keys(item).forEach((key) => {\n            trimmedItem[key.trim()] = item[key];\n          });\n          return trimmedItem;\n        });\n\n        this.items = trimmedData;\n\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        accountID: [item.accountID, [Validators.required]],\n        description: [item.description, [Validators.required]],\n        currencyID: [item.currencyID, [Validators.required]],\n        glAccountTypeID: [item.glAccountTypeID, [Validators.required]],\n        glSubAccountType: [item.glSubAccountType, [Validators.required]],\n        acBalance: [item.acBalance, [Validators.required]],\n\n        plAndBs: [item.plAndBs, [Validators.required]],\n        financialGrouping: [item.financialGrouping],\n\n        fsClass: [item.fsClass, [Validators.required]],\n        acDesignation: [item.acDesignation, [Validators.required]],\n\n        reportingLineActual: [item.reportingLineActual, [Validators.required]],\n        mainReportingLine: [item.mainReportingLine, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"glAccountsTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate() {\n    let privilege = \"Validate GL\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        // userType: userType\n      };\n\n      const dialogRef = this.dialog.open(GlValidationComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-parameters/all-GLs\"]);\n      });\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // submit button function\n  posting: boolean = false;\n\n  submit() {\n    console.log(\"data::::\", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.glManService\n        .addGLAccount(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\"/erp-finance/finance-parameters/all-GLs\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.glManService\n        .updateGLAccounts(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\"/erp-finance/finance-parameters/all-GLs\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  //Uploading a batch of items\n  submitBatch() {\n    this.posting = true;\n\n    if (this.pageFunction === \"Add\") {\n      this.glManService\n        .addGLAccounts(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\"/erp-finance/finance-parameters/all-GLs\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n\n\n  // ******************************************************************************************************************************\n  // ******************************************************************************************************************************\n\n\n  //Import from Excel\n  @ViewChild(\"fileInput\") newFileInput: any;\n\n  newItems: any[] = []; // Array to store\n  newItemsForm: FormGroup;\n  newItemErrors: { [key: string]: string }[] = [];\n\n  handleNewFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        // Trim the keys in each object of jsonData\n        const trimmedData = jsonData.map((item: any) => {\n          const trimmedItem: any = {};\n          Object.keys(item).forEach((key) => {\n            trimmedItem[key.trim()] = item[key];\n          });\n          return trimmedItem;\n        });\n\n        this.newItems = trimmedData;\n\n        console.log(\" this.newItems :\", this.newItems);\n\n        // Initialize the form\n        this.newItemsForm = this.fb.group({\n          newItems: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateNewItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateNewItems() {\n    this.newItemErrors = [];\n    const newItems = this.newItems;\n\n    const itemsFormArray = this.newItemsForm.get(\"newItems\") as FormArray;\n\n    for (const newItem of newItems) {\n      const formGroup = this.fb.group({\n        accountId: [newItem.accountId, [Validators.required]],\n        description: [newItem.description, [Validators.required]],\n        glAccountTypeID: [newItem.glAccountTypeID, [Validators.required]],\n        glSubAccountType: [newItem.glSubAccountType, [Validators.required]],\n        reportingLineActual: [newItem.reportingLineActual, [Validators.required]],\n        mainReportingLine: [newItem.mainReportingLine, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectNewErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectNewErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectNewErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getNewErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getNewErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getNewErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n\n  }\n\n  submitNewBatch() {\n    this.posting = true;\n\n    if (this.pageFunction === \"Add\") {\n      this.glManService\n        .addNewGLAccounts(this.newItems)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\"/erp-finance/finance-parameters/all-GLs\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage General Ledger Accounts'\" [items]=\"['GL Accounts']\"\n        [active_item]=\"'Manage GL Accounts'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix row m-t-25\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-0\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-0\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-0\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-0\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-0 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-0\">\n                              <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with remarks\">\n                              <strong>Approvers Remarks:</strong>\n                              <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                            </div>\n                          </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"{{ pageFunction }} GL ACCOUNT\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                      <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>{{ pageFunction }} GL Accounts</h2>\n                        </div>\n                      </div>\n\n                      <form class=\"m-4\" [formGroup]=\"mngForm\">\n                        <div class=\"row\">\n                          <!-- Account ID -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>Account ID</mat-label>\n                              <input matInput formControlName=\"accountID\" />\n                              <mat-error *ngIf=\"\n                                  mngForm.get('accountID').hasError('required')\n                                \">Account ID is required</mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- Description -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>Description</mat-label>\n                              <input matInput formControlName=\"description\" />\n                              <mat-error *ngIf=\"\n                                  mngForm\n                                    .get('description')\n                                    .hasError('required')\n                                \">Description is required</mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- Currency ID -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>Currency ID</mat-label>\n                              <input matInput formControlName=\"currencyID\" />\n                              <mat-error *ngIf=\"\n                                  mngForm.get('currencyID').hasError('required')\n                                \">Currency ID is required</mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- GL Account Type ID -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>GL Account Type ID</mat-label>\n                              <input matInput formControlName=\"glAccountTypeID\" />\n                              <mat-error *ngIf=\"\n                                  mngForm\n                                    .get('glAccountTypeID')\n                                    .hasError('required')\n                                \">GL Account Type ID is required</mat-error>\n                            </mat-form-field>\n                          </div>\n                          <!-- GL Account Type ID -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>GL Sub Account Type </mat-label>\n                              <input matInput formControlName=\"glSubAccountType\" />\n                              <mat-error *ngIf=\"\n                                  mngForm\n                                    .get('glSubAccountType')\n                                    .hasError('required')\n                                \">GL Sub Account Type is required</mat-error>\n                            </mat-form-field>\n                          </div>\n                          <!-- FsClass -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>FS Class</mat-label>\n                              <input matInput formControlName=\"fsClass\" />\n                              <mat-error *ngIf=\"\n                                  mngForm.get('fsClass').hasError('required')\n                                \">FS Class is required</mat-error>\n                            </mat-form-field>\n                          </div>\n                          <!-- For reportingLineActual -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>Reporting Line Actual</mat-label>\n                              <input matInput formControlName=\"reportingLineActual\" />\n                              <mat-error *ngIf=\"\n                                  mngForm\n                                    .get('reportingLineActual')\n                                    .hasError('required')\n                                \">Reporting Line Actual is required</mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- For mainReportingLine -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>Main Reporting Line</mat-label>\n                              <input matInput formControlName=\"mainReportingLine\" />\n                              <mat-error *ngIf=\"\n                                  mngForm\n                                    .get('mainReportingLine')\n                                    .hasError('required')\n                                \">Main Reporting Line is required</mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- acDesignation -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>AC Designation</mat-label>\n                              <mat-select formControlName=\"acDesignation\">\n                                <mat-option *ngFor=\"let option of acDesignationOptions\" [value]=\"option\">\n                                  {{ option }}\n                                </mat-option>\n                              </mat-select>\n                              <mat-error *ngIf=\"\n                                  mngForm\n                                    .get('acDesignation')\n                                    .hasError('required')\n                                \">AC Designation is required</mat-error>\n                            </mat-form-field>\n                          </div>\n\n                          <!-- AC Balance -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                              <mat-label>AC Balance</mat-label>\n                              <input matInput formControlName=\"acBalance\" />\n                              <mat-error *ngIf=\"\n                                  mngForm.get('acBalance').hasError('required')\n                                \">AC Balance is required</mat-error>\n                            </mat-form-field>\n                          </div>\n                        </div>\n\n                        <!-- Action Buttons -->\n                        <div class=\"row\">\n                          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                            <div mat-dialog-action [align]=\"'end'\">\n                              <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                (click)=\"cancel()\">\n                                Cancel\n                              </button>\n                              <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                                [disabled]=\"!mngForm.valid || posting\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                Submit\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </mat-tab>\n\n                <mat-tab label=\"UPLOAD MULTIPLE GL ACCOUNTS\" *ngIf=\"pageFunction === 'Add'\">\n                  <div [hidden]=\"hideSubmit\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4\">\n                        <div class=\"row clearfix mx-2 m-3\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                            <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                          </div>\n                          <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                            <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                              (click)=\"downloadTemplate()\">\n                              <i class=\"fa fa-download\"></i> Excel Template\n                            </button>\n                          </div>\n                        </div>\n\n                        <div class=\"mt-4 mx-0\">\n                          <div style=\"\n                              display: flex;\n                              flex-wrap: wrap;\n                              margin-right: 10px;\n                              margin-bottom: 10px;\n                            \">\n                            <mat-chip-list aria-label=\"Fish selection\">\n                              <mat-chip color=\"accent\" selected *ngFor=\"\n                                  let itemError of itemErrors;\n                                  let i = index\n                                \">\n                                <span>{{ i + 1 }}. </span>\n                                {{ itemError.field }}: {{ itemError.message }}\n                                <mat-icon>error</mat-icon>\n                              </mat-chip>\n                            </mat-chip-list>\n                          </div>\n\n                          <div class=\"card\">\n                            <div class=\"header\">\n                              <h2>GL Accounts</h2>\n                            </div>\n                            <div class=\"tableBody\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table table-hover\">\n                                  <thead>\n                                    <tr>\n                                      <th>Account ID</th>\n                                      <th>Description</th>\n                                      <th>Currency ID</th>\n                                      <th>GLAccountTypeID</th>\n                                      <th>GlSubAccountType</th>\n                                      <th>PL and BS</th>\n                                      <th>Financial Grouping</th>\n                                      <th>AC Balance</th>\n                                      <th>Fs Class</th>\n                                      <th>Reporting Line Actual</th>\n                                      <th>Main Reporting Line</th>\n                                      <th>AC Designation</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    <tr *ngFor=\"let item of items\">\n                                      <td>{{ item.accountID }}</td>\n                                      <td>{{ item.description }}</td>\n                                      <td>{{ item.currencyID }}</td>\n                                      <td>{{ item.glAccountTypeID }}</td>\n                                      <td>{{ item.glSubAccountType }}</td>\n                                      <td>{{ item.plAndBs }}</td>\n                                      <td>{{ item.financialGrouping }}</td>\n\n                                      <td>{{ item.acBalance }}</td>\n                                      <td>{{ item.fsClass }}</td>\n                                      <td>{{ item.reportingLineActual }}</td>\n                                      <td>{{ item.mainReportingLine }}</td>\n                                      <td>{{ item.acDesignation }}</td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <br />\n                  <div class=\"row mx-4 mt-4\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                      <div mat-dialog-action [align]=\"'end'\">\n                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                          (click)=\"cancel()\">\n                          Cancel\n                        </button>\n                        <button *ngIf=\"items.length > 0\" mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                          [class.auth-spinner]=\"posting\" [disabled]=\"posting\" (click)=\"submitBatch()\">\n                          Submit Batch\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </mat-tab>\n\n                <mat-tab label=\"UPLOAD NEW GL ACCOUNTS\" *ngIf=\"pageFunction === 'Add'\">\n                  <div [hidden]=\"hideSubmit\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4\">\n                        <div class=\"row clearfix mx-2 m-3\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                            <app-file-upload (change)=\"handleNewFileInput($event.target.files)\"></app-file-upload>\n                          </div>\n                          <!-- <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                            <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                              (click)=\"downloadTemplate()\">\n                              <i class=\"fa fa-download\"></i> Excel Template\n                            </button>\n                          </div> -->\n                        </div>\n\n                        <div class=\"mt-4 mx-0\">\n                          <div style=\"\n                              display: flex;\n                              flex-wrap: wrap;\n                              margin-right: 10px;\n                              margin-bottom: 10px;\n                            \">\n                            <mat-chip-list aria-label=\"Fish selection\">\n                              <mat-chip color=\"accent\" selected *ngFor=\"\n                                  let newItemError of newItemErrors;\n                                  let i = index\n                                \">\n                                <span>{{ i + 1 }}. </span>\n                                {{ newItemError.field }}:\n                                {{ newItemError.message }}\n                                <mat-icon>error</mat-icon>\n                              </mat-chip>\n                            </mat-chip-list>\n                          </div>\n\n                          <div class=\"card\">\n                            <div class=\"header\">\n                              <h2>GL Accounts</h2>\n                            </div>\n                            <div class=\"tableBody\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table table-hover\">\n                                  <thead>\n                                    <tr>\n                                      <th>Account ID</th>\n                                      <th>Description</th>\n                                      <th>GlAccountTypeID</th>\n                                      <th>GlSubAccountType</th>\n                                      <th>Reporting Line Actual</th>\n                                      <th>Main Reporting Line</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    <tr *ngFor=\"let newItem of newItems\">\n                                      <td>{{ newItem.accountId }}</td>\n                                      <td>{{ newItem.description }}</td>\n                                      <td>{{ newItem.glAccountTypeID }}</td>\n                                      <td>{{ newItem.glSubAccountType }}</td>\n\n                                      <td>{{ newItem.reportingLineActual }}</td>\n                                      <td>{{ newItem.mainReportingLine }}</td>\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <br />\n                  <div class=\"row mx-4 mt-4\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                      <div mat-dialog-action [align]=\"'end'\">\n                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                          (click)=\"cancel()\">\n                          Cancel\n                        </button>\n                        <button *ngIf=\"newItems.length > 0\" mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                          [class.auth-spinner]=\"posting\" [disabled]=\"posting\" (click)=\"submitNewBatch()\">\n                          Submit Batch\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </mat-tab>\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\nimport { takeUntil, Subscription, Subject } from \"rxjs\";\nimport { ExpenseLookupComponent } from \"src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { GlMappingsService } from \"src/app/erp-finance/data/services/gl-mapping.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-gl-mapping\",\n  templateUrl: \"./gl-mapping.component.html\",\n  styleUrls: [\"./gl-mapping.component.sass\"],\n})\nexport class GlMappingComponent implements OnInit {\n  pageFunction = \"Add\";\n\n  constructor(\n    private dialog: MatDialog,\n    private fb: FormBuilder,\n    private glMappingsService: GlMappingsService,\n    private snackbar: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.generateForm();\n    this.getData();\n    this.showForm = true;\n  }\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  formData: any;\n  showForm: boolean = false;\n  isLoading: boolean = true;\n  getData() {\n    this.isLoading = true;\n    this.glMappingsService\n      .getGLMapping()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            this.pageFunction = \"Update\";\n            this.showForm = true;\n\n            this.generateForm(this.formData);\n\n            console.log(\"this.formData :\", this.formData);\n          } else if (res.statusCode === 404) {\n            this.pageFunction = \"Add\";\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              \"No GL Mapping exists. Please create one and then submit.\"\n            );\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      }),\n      Subscription;\n  }\n\n  mngForm: FormGroup;\n  generateForm(formData?: any): void {\n    this.mngForm = this.fb.group({\n      id: [formData?.id || 0],\n      orgBankName: [formData?.orgBankName || \"\", [Validators.required]],\n      orgBankId: [formData?.orgBankId || \"\", [Validators.required]],\n      invoiceBillableControllAc: [formData?.invoiceBillableControllAc || \"\", [Validators.required]],\n      receivingBillableControllAc: [formData?.receivingBillableControllAc || \"\", [Validators.required]],\n      invoicePayableControllAc: [formData?.invoicePayableControllAc || \"\", [Validators.required]],\n      stockControllAc: [formData?.stockControllAc || \"\", [Validators.required]],\n      imprestControllAc: [formData?.imprestControllAc || \"\", [Validators.required]],\n      staffDeptControllAc: [formData?.staffDeptControllAc || \"\", [Validators.required]],\n      nhifControllAc: [formData?.nhifControllAc || \"\", [Validators.required]],\n      nssfControllAc: [formData?.nssfControllAc || \"\", [Validators.required]],\n      payeControllAc: [formData?.payeControllAc || \"\", [Validators.required]],\n      staffLoanControllAc: [formData?.staffLoanControllAc || \"\", [Validators.required]],\n      houseLevyControllAc: [formData?.houseLevyControllAc || \"\", [Validators.required]],\n      pensionControllAc: [formData?.pensionControllAc || \"\", [Validators.required]],\n      gratuityControllAc: [formData?.gratuityControllAc || \"\", [Validators.required]],\n      helbControllAc: [this.formData?.helbControllAc || '', [Validators.required]],\n      houseLevyExpAc: [this.formData?.houseLevyExpAc || '', [Validators.required]],\n      branchSalaryExpAc: [this.formData?.branchSalaryExpAc || '', [Validators.required]],\n      branchPensionExpAc: [this.formData?.branchPensionExpAc || '', [Validators.required]],\n      branchNssfExpAc: [this.formData?.branchNssfExpAc || '', [Validators.required]],\n\n      netpayControllAc: [formData?.netpayControllAc || \"\", [Validators.required]],\n      bankControllAc: [formData?.bankControllAc || \"\", [Validators.required]],\n      expCodeSalary: [formData?.expCodeSalary || \"\", [Validators.required]],\n      expCodeStaffPension: [formData?.expCodeStaffPension || \"\", [Validators.required]],\n      nonAccountedImprestGroupMail: [formData?.nonAccountedImprestGroupMail || \"\", [Validators.required]],\n\n      expCodeHouseLevy: [formData?.expCodeHouseLevy || \"\", [Validators.required]],\n      expCodeNssf: [formData?.expCodeNssf || \"\", [Validators.required]],\n    });\n  }\n\n  // // controll accounts\n  // private String helbControllAc;\n\n\n  // //EXPENSE Accounts\n  // public String houseLevyExpAc;\n  // public String branchSalaryExpAc;\n  // public String branchPensionExpAc;\n  // public String branchNssfExpAc;\n\n\n\n  selectedItem: any[] = [];\n  _glsLookUp(acctType: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View GL Accounts\",\n      selected: this.selectedItem,\n      type: \"Expense\",\n    };\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      if (result && result.data) {\n        result.data.forEach((element) => {\n          switch (acctType) {\n            case \"invoiceBillableControllAc\":\n              this.mngForm.patchValue({\n                invoiceBillableControllAc: element.accountID,\n              });\n              break;\n            case \"receivingBillableControllAc\":\n              this.mngForm.patchValue({\n                receivingBillableControllAc: element.accountID,\n              });\n              break;\n            case \"invoicePayableControllAc\":\n              this.mngForm.patchValue({\n                invoicePayableControllAc: element.accountID,\n              });\n              break;\n            case \"stockControllAc\":\n              this.mngForm.patchValue({\n                stockControllAc: element.accountID,\n              });\n              break;\n            case \"imprestControllAc\":\n              this.mngForm.patchValue({\n                imprestControllAc: element.accountID,\n              });\n              break;\n            case \"staffDeptControllAc\":\n              this.mngForm.patchValue({\n                staffDeptControllAc: element.accountID,\n              });\n              break;\n            case \"nhifControllAc\":\n              this.mngForm.patchValue({\n                nhifControllAc: element.accountID,\n              });\n              break;\n            case \"nssfControllAc\":\n              this.mngForm.patchValue({\n                nssfControllAc: element.accountID,\n              });\n              break;\n            case \"payeControllAc\":\n              this.mngForm.patchValue({\n                payeControllAc: element.accountID,\n              });\n              break;\n            case \"staffLoanControllAc\":\n              this.mngForm.patchValue({\n                staffLoanControllAc: element.accountID,\n              });\n              break;\n            case \"houseLevyControllAc\":\n              this.mngForm.patchValue({\n                houseLevyControllAc: element.accountID,\n              });\n              break;\n            case \"pensionControllAc\":\n              this.mngForm.patchValue({\n                pensionControllAc: element.accountID,\n              });\n              break;\n            case \"gratuityControllAc\":\n              this.mngForm.patchValue({\n                gratuityControllAc: element.accountID,\n              });\n              break;\n            case 'helbControllAc':\n              this.mngForm.patchValue({\n                helbControllAc: element.accountID,\n              });\n              break;\n            case 'houseLevyExpAc':\n              this.mngForm.patchValue({\n                houseLevyExpAc: element.accountID,\n              });\n              break;\n            case 'branchSalaryExpAc':\n              this.mngForm.patchValue({\n                branchSalaryExpAc: element.accountID,\n              });\n              break;\n            case 'branchPensionExpAc':\n              this.mngForm.patchValue({\n                branchPensionExpAc: element.accountID,\n              });\n              break;\n            case 'branchNssfExpAc':\n              this.mngForm.patchValue({\n                branchNssfExpAc: element.accountID,\n              });\n              break;\n            case \"netpayControllAc\":\n              this.mngForm.patchValue({\n                netpayControllAc: element.accountID,\n              });\n              break;\n            case \"bankControllAc\":\n              this.mngForm.patchValue({\n                bankControllAc: element.accountID,\n              });\n              break;\n            case \"expCodeSalary\":\n              this.mngForm.patchValue({\n                expCodeSalary: element.accountID,\n              });\n              break;\n            case \"expCodeStaffPension\":\n              this.mngForm.patchValue({\n                expCodeStaffPension: element.accountID,\n              });\n              break;\n            case \"expHouseLevyControllAc\":\n              this.mngForm.patchValue({\n                expHouseLevyControllAc: element.accountID,\n              });\n              break;\n\n\n            // Add more cases for other fields if needed\n            default:\n              break;\n          }\n        });\n      }\n    });\n  }\n\n  expenseIsSelected = false;\n  selectedExpense: [] = [];\n  expenseArray: [] = [];\n  expenseGlCode = \"\";\n\n  expenseLookUp(expType: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpense,\n    };\n\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      // this.mngForm.patchValue({\n      //   expenseCode: result.data[0].expenseCode,\n      // });\n      if (result && result.data) {\n        result.data.forEach((element) => {\n          switch (expType) {\n            case \"expCodeSalary\":\n              this.mngForm.patchValue({\n                expCodeSalary: element.expenseCode,\n              });\n              break;\n\n            case \"expCodeStaffPension\":\n              this.mngForm.patchValue({\n                expCodeStaffPension: element.expenseCode,\n              });\n              break;\n            case \"expCodeHouseLevy\":\n              this.mngForm.patchValue({\n                expCodeHouseLevy: element.expenseCode,\n              });\n              break;\n\n            case \"expCodeNssf\":\n              this.mngForm.patchValue({\n                expCodeNssf: element.expenseCode,\n              });\n              break;\n\n\n            default:\n              break;\n          }\n        });\n      }\n      // \n      // \n      // \n\n    });\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-finance/dashboard\"]);\n  }\n\n  posting: boolean = false;\n\n  submit() {\n    this.posting = true;\n\n    console.log(\"this.mngForm.value: \", this.mngForm.value)\n\n    if (this.pageFunction === \"Add\") {\n      this.glMappingsService\n        .addGLMapping(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.getData();\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.glMappingsService\n        .addGLMapping(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.getData();\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'GLs For Accounting'\" [items]=\"['GL Mapping']\" [active_item]=\"'GL Mapping'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || posting\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"GL Mapping for Accounting\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                      <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>{{ pageFunction }} GL Mapping</h2>\n                        </div>\n                      </div>\n\n                      <div>\n                        <form class=\"m-4\" [formGroup]=\"mngForm\">\n                          <div class=\"row\">\n                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> OrgBankName </mat-label>\n                                <input matInput formControlName=\"orgBankName\" />\n                                <mat-error *ngIf=\"mngForm.get('orgBankName').hasError('required')\">\n                                  Org bank name is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label> OrgBankId </mat-label>\n                                <input matInput formControlName=\"orgBankId\" />\n                                <mat-error *ngIf=\"mngForm.get('orgBankId').hasError('required')\">\n                                  Org bank id is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-4 col-lg-4 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Non accounted imprest group mail</mat-label>\n                                <input matInput formControlName=\"nonAccountedImprestGroupMail\" />\n                                <mat-error *ngIf=\"mngForm.get('nonAccountedImprestGroupMail').hasError('required')\">\n                                  Non accounted imprest group mail is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Invoice Billable Control Ac</mat-label>\n                                <input matInput formControlName=\"invoiceBillableControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('invoiceBillableControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('invoiceBillableControllAc').hasError('required')\">\n                                  Invoice Billable Control Ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Receiving Billable Control Ac</mat-label>\n                                <input matInput formControlName=\"receivingBillableControllAc\" />\n                                <mat-icon matSuffix\n                                  (click)=\"_glsLookUp('receivingBillableControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('receivingBillableControllAc').hasError('required')\">\n                                  Receiving Billable Control Ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Invoice payable control ac</mat-label>\n                                <input matInput formControlName=\"invoicePayableControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('invoicePayableControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('invoicePayableControllAc').hasError('required')\">\n                                  Invoice payable control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Stock control ac</mat-label>\n                                <input matInput formControlName=\"stockControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('stockControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('stockControllAc').hasError('required')\">\n                                  Stock control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Imprest control ac</mat-label>\n                                <input matInput formControlName=\"imprestControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('imprestControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('imprestControllAc').hasError('required')\">\n                                  Imprest control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Staff dept control ac</mat-label>\n                                <input matInput formControlName=\"staffDeptControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('staffDeptControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('staffDeptControllAc').hasError('required')\">\n                                  Staff dept control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Nhif control ac</mat-label>\n                                <input matInput formControlName=\"nhifControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('nhifControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('nhifControllAc').hasError('required')\">\n                                  Nhif control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Nssf control ac</mat-label>\n                                <input matInput formControlName=\"nssfControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('nssfControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('nssfControllAc').hasError('required')\">\n                                  Nssf control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Paye control ac</mat-label>\n                                <input matInput formControlName=\"payeControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('payeControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('payeControllAc').hasError('required')\">\n                                  Paye control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Staff loan control ac</mat-label>\n                                <input matInput formControlName=\"staffLoanControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('staffLoanControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('staffLoanControllAc').hasError('required')\">\n                                  Staff loan control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>House levy control ac</mat-label>\n                                <input matInput formControlName=\"houseLevyControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('houseLevyControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('houseLevyControllAc').hasError('required')\">\n                                  House levy control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Pension control ac</mat-label>\n                                <input matInput formControlName=\"pensionControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('pensionControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('pensionControllAc').hasError('required')\">\n                                  Pension control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Gratuity control ac</mat-label>\n                                <input matInput formControlName=\"gratuityControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('gratuityControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('gratuityControllAc').hasError('required')\">\n                                  Gratuity control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label>HELB control ac</mat-label>\n                                  <input matInput formControlName=\"helbControllAc\" />\n                                  <mat-icon matSuffix (click)=\"_glsLookUp('helbControllAc')\">search</mat-icon>\n                                  <mat-error *ngIf=\"mngForm.get('helbControllAc').hasError('required')\">\n                                      HELB control ac is required\n                                  </mat-error>\n                              </mat-form-field>\n                          </div>\n                          <!-- \"helbControllAc\": \"\",\n                          //     \"expCodeSalary\": \"EXP11\",\n                          //     \"expCodeStaffPension\": \"EXP14\",\n                          //     \"expCodeNssf\": \"EXP14\",\n                          //     \"expCodeHouseLevy\": \"EXP9\",\n                          //     \"houseLevyExpAc\": \"\",\n                          //     \"branchSalaryExpAc\": \"\",\n                          //     \"branchPensionExpAc\": \"\",\n                          //     \"branchNssfExpAc\": \"\",    -->\n                          <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label>House levy expense ac</mat-label>\n                                  <input matInput formControlName=\"houseLevyExpAc\" />\n                                  <mat-icon matSuffix (click)=\"_glsLookUp('houseLevyExpAc')\">search</mat-icon>\n                                  <mat-error *ngIf=\"mngForm.get('houseLevyExpAc').hasError('required')\">\n                                      House levy expense ac is required\n                                  </mat-error>\n                              </mat-form-field>\n                          </div>\n                          \n                          <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label>Branch salary expense ac</mat-label>\n                                  <input matInput formControlName=\"branchSalaryExpAc\" />\n                                  <mat-icon matSuffix (click)=\"_glsLookUp('branchSalaryExpAc')\">search</mat-icon>\n                                  <mat-error *ngIf=\"mngForm.get('branchSalaryExpAc').hasError('required')\">\n                                      Branch salary expense ac is required\n                                  </mat-error>\n                              </mat-form-field>\n                          </div>\n                          \n                          <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label>Branch pension expense ac</mat-label>\n                                  <input matInput formControlName=\"branchPensionExpAc\" />\n                                  <mat-icon matSuffix (click)=\"_glsLookUp('branchPensionExpAc')\">search</mat-icon>\n                                  <mat-error *ngIf=\"mngForm.get('branchPensionExpAc').hasError('required')\">\n                                      Branch pension expense ac is required\n                                  </mat-error>\n                              </mat-form-field>\n                          </div>\n                          \n                          <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label>Branch NSSF expense ac</mat-label>\n                                  <input matInput formControlName=\"branchNssfExpAc\" />\n                                  <mat-icon matSuffix (click)=\"_glsLookUp('branchNssfExpAc')\">search</mat-icon>\n                                  <mat-error *ngIf=\"mngForm.get('branchNssfExpAc').hasError('required')\">\n                                      Branch NSSF expense ac is required\n                                  </mat-error>\n                              </mat-form-field>\n                          </div>\n                          \n\n                            <!-- Add blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Netpay control ac</mat-label>\n                                <input matInput formControlName=\"netpayControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('netpayControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('netpayControllAc').hasError('required')\">\n                                  Netpay control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Bank control ac</mat-label>\n                                <input matInput formControlName=\"bankControllAc\" />\n                                <mat-icon matSuffix (click)=\"_glsLookUp('bankControllAc')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('bankControllAc').hasError('required')\">\n                                  Bank control ac is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Exp code salary</mat-label>\n                                <input matInput formControlName=\"expCodeSalary\" />\n                                <mat-icon matSuffix (click)=\"expenseLookUp('expCodeSalary')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('expCodeSalary').hasError('required')\">\n                                  Exp code salary is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add similar blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Exp code staff pension</mat-label>\n                                <input matInput formControlName=\"expCodeStaffPension\" />\n                                <mat-icon matSuffix (click)=\"expenseLookUp('expCodeStaffPension')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('expCodeStaffPension').hasError('required')\">\n                                  Exp code staff pension is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Add blocks for other fields -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Exp code house levy </mat-label>\n                                <input matInput formControlName=\"expCodeHouseLevy\" />\n                                <mat-icon matSuffix (click)=\"expenseLookUp('expCodeHouseLevy')\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('expCodeHouseLevy').hasError('required')\">\n                                  Exp house levy code is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-3 col-lg-3 col-md-11 col-sm-11 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label>Exp code NSSF</mat-label>\n                                  <input matInput formControlName=\"expCodeNssf\" />\n                                  <mat-icon matSuffix (click)=\"expenseLookUp('expCodeNssf')\">search</mat-icon>\n                                  <mat-error *ngIf=\"mngForm.get('expCodeNssf').hasError('required')\">\n                                      Exp NSSF code is required\n                                  </mat-error>\n                              </mat-form-field>\n                          </div>\n                          \n\n                          </div>\n\n                          <!-- Action Buttons -->\n                          <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                              <div mat-dialog-action [align]=\"'end'\">\n                                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                  (click)=\"cancel()\">\n                                  Cancel\n                                </button>\n                                <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                                  [disabled]=\"!mngForm.valid || posting\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                  {{pageFunction}}\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n\n                      </div>\n                    </div>\n                  </div>\n                </mat-tab>\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { GlValidationComponent } from \"src/app/erp-finance/data/lookups/validation/gl-validation/gl-validation.component\";\nimport { PaymentMethodService } from \"src/app/erp-finance/data/services/payment-method.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-payment-methods\",\n  templateUrl: \"./all-payment-methods.component.html\",\n  styleUrls: [\"./all-payment-methods.component.sass\"],\n})\nexport class AllPaymentMethodsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"paymentMethodType\",\n    \"description\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  // ****************************************************************************************************************************\n  Form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private paymentMethodsManService: PaymentMethodService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.paymentMethodsManService\n      .getPaymentMethodsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n  //adding Payment Method\n  addPaymentMethod() {\n    this.router.navigate([\n      \"/erp-finance/finance-parameters/manage-PaymentMethods\",\n    ]);\n  }\n\n  //Updating the Payment Method\n\n  editPaymentMethod(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-PaymentMethods\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the costcentres\n  viewPaymentMethod(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-PaymentMethods\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n      },\n    });\n  }\n\n  //verify cost centre\n  validatePaymentMethod(data: any) {\n\n    let route = \"/erp-finance/finance-parameters/manage-PaymentMethods\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting costcentres\n\n  // accountNumber = this.data.accountNumber;\n  deletePaymentMethod(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Payment Method will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Payment Method \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.paymentMethodsManService\n          .deletePaymentMethod(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Payment Methods\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.paymentMethodsManService\n            .validateBulkPaymentMethods(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n      <div class=\"block-header\">\n        <!-- breadcrumb -->\n        <app-breadcrumb [title]=\"'All Payment Methods'\" [items]=\"['Payment Methods']\" [active_item]=\"'All Payment Methods'\">\n        </app-breadcrumb>\n      </div>\n  \n      <app-gen-widgets></app-gen-widgets>\n      \n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div class=\"card\">\n            <div class=\"body\">\n              <div class=\"table-responsive\">\n                <div class=\"materialTableHeader\">\n                  <div class=\"row\">\n                    <div class=\"col-8\">\n                      <ul class=\"header-buttons-left ms-0\">\n                        <li class=\"dropdown\">\n                          <h2>Payment Methods</h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter class=\"browser-default search-field\"\n                            aria-label=\"Search box\">\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"ADD\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"addPaymentMethod()\">\n                              <mat-icon class=\"col-white\">add</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                              <mat-icon class=\"col-white\">refresh</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n\n                         <!-- Container element with *ngIf condition -->\n                     <li *ngIf=\"selection.selected.length > 0\">\n                      <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                          class=\"mat-button-custom\">\n                          <mat-icon class=\"col-white\">check</mat-icon>\n                        </button>\n                      </div>\n                    </li>\n                    <li *ngIf=\"selection.selected.length > 0\">\n                      <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                        <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                          class=\"mat-button-custom\">\n                          <mat-icon class=\"col-white\">cancel</mat-icon>\n                        </button>\n                      </div>\n                    </li>\n                    <li *ngIf=\"selection.selected.length > 0\">\n                      <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                        <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                          class=\"mat-button-custom\">\n                          <mat-icon class=\"col-white\">undo</mat-icon>\n                        </button>\n                      </div>\n                    </li>\n                     \n                      </ul>\n                    </div>\n                    <div class=\"col-4\">\n                      <ul class=\"header-buttons\">\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                              (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                            <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                            <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                            <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n  \n                <div class=\"materialTableHeader mt-2\">\n                  <div class=\"row\">\n                    <div class=\"col-2\">\n                      <form [formGroup]=\"Form\">\n                        <!-- <div class=\"row\">\n                            <div class=\"col-4\"> -->\n                        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                          <mat-label>Status</mat-label>\n  \n                          <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                            <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                              }}\n                            </mat-option>\n                          </mat-select>\n  \n                          <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                            Please select Status\n                          </mat-error>\n                        </mat-form-field>\n                        <!-- </div>\n    \n                          </div> -->\n                      </form>\n                    </div>\n                    <div class=\"col-10\">\n                      <div class=\"button-container mt-1\">\n                        <!-- Button for PENDING status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                          (click)=\"getSelectedStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n  \n                        <!-- Button for VERIFIED status -->\n                        <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                            class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                            <mat-icon>check_circle</mat-icon>\n                            VERIFIED\n                          </button> -->\n  \n                        <!-- Button for APPROVED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                          class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                          <mat-icon>thumb_up</mat-icon>\n                          APPROVED\n                        </button>\n                        <!-- Button for RETURNED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                          class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                          <mat-icon>reply</mat-icon>\n                          RETURNED\n                        </button>\n  \n                        <!-- Button for REJECTED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                          class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                          <mat-icon>cancel</mat-icon>\n                          REJECTED\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- Table Definition -->\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                  #exporter=\"matTableExporter\">\n  \n                   <!-- Select Column -->\n                  <ng-container matColumnDef=\"select\">\n                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                        (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                      <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                        (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-cell>\n                  </ng-container>\n                  \n                  <!-- id -->\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-9\">\n                      #\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">\n                      {{row.id}}\n                    </mat-cell>\n                  </ng-container>\n                  \n                  <!-- paymentMethodType  -->\n                  <ng-container matColumnDef=\"paymentMethodType\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Payment Method\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                      {{row.paymentMethodType}}\n                    </mat-cell>\n                  </ng-container>\n  \n                  <!--  description  -->\n                  <ng-container matColumnDef=\"description\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>\n                     Description\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                      {{row.description}}\n                    </mat-cell>\n                  </ng-container>\n  \n                  <!-- Status -->\n                  <!-- <ng-container matColumnDef=\"status\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                      class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                      Status\n                    </mat-header-cell>\n                      <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                        (click)=\"$event.stopPropagation()\">\n                        <ng-container [ngSwitch]=\"row.status\">\n                          <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                            <i class=\"fas fa-times-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                            <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                          <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                            {{ row.status }}\n                          </button>\n                        </ng-container>\n                      </mat-cell>\n                  </ng-container> -->\n  \n                 \n                  <!-- Action Buttons -->\n                  <ng-container matColumnDef=\"action\">\n                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                        *matHeaderCellDef>\n                        Action\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i = index\"\n                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                       \n                         <!--  Verify Button -->\n                        <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"validateGLAccount(row)\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                          </app-feather-icons>\n                        </button> -->\n                        \n                        <!-- Edit Button -->\n                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"editPaymentMethod(row)\"class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                            </app-feather-icons>\n                        </button>\n  \n                        <!-- View Button -->\n                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"(click)=\"viewPaymentMethod(row)\" class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                            </app-feather-icons>\n                        </button>\n  \n                        <!-- Delete Button -->\n                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"deletePaymentMethod(row.id)\" class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                            </app-feather-icons>\n                        </button>\n                    </mat-cell>\n                  </ng-container>\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                  </mat-header-row>\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewPaymentMethod(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                  <mat-cell *matNoDataRow colspan=\"4\">\n                    No data matching the filter \"{{input.value}}\"\n                  </mat-cell>\n                </mat-table>\n               \n                <div *ngIf=\"isLoading\"  class=\"tbl-spinner\">\n                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                  </mat-progress-spinner>\n                </div>\n                <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\" aria-label=\"Select page of users\">\n                </mat-paginator>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  ","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, Observable, takeUntil } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { GlValidationComponent } from \"src/app/erp-finance/data/lookups/validation/gl-validation/gl-validation.component\";\nimport { GlAccountsService } from \"src/app/erp-finance/data/services/gl-accounts.service\";\nimport { PaymentMethodService } from \"src/app/erp-finance/data/services/payment-method.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport * as XLSX from \"xlsx\";\n\n@Component({\n  selector: \"app-manage-payment-methods\",\n  templateUrl: \"./manage-payment-methods.component.html\",\n  styleUrls: [\"./manage-payment-methods.component.sass\"],\n})\nexport class ManagePaymentMethodsComponent implements OnInit {\n  // ****************************************************************************************************************************\n  //table columns\n  displayedColumns: string[] = [\"paymentMethod\", \"description\"];\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  hideApprovals = false;\n\n  //excel columns\n  excelHeaderRef: any[] = [\"paymentMethodType\", \"description\"];\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private paymentMethodManService: PaymentMethodService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.paymentMethodManService\n      .getPaymentMethodById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      // id: [\"\"],\n      paymentMethodType: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      paymentMethodCode: [this.formData.paymentMethodCode],\n      paymentMethodType: [\n        this.formData.paymentMethodType,\n        [Validators.required],\n      ],\n      description: [this.formData.description, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      // id: [{ value: this.formData.id, disabled: true }],\n      paymentMethodType: [\n        { value: this.formData.paymentMethodType, disabled: true },\n        [Validators.required],\n      ],\n      description: [\n        { value: this.formData.description, disabled: true },\n        [Validators.required],\n      ],\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel(): void {\n    this.router.navigate([\n      \"/erp-finance/finance-parameters/all-PaymentMethods\",\n    ]);\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        paymentMethodType: [item.paymentMethodType, [Validators.required]],\n        description: [item.description, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"paymentMethodsTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n  // submit button function\n  posting: boolean = false;\n  submit() {\n    console.log(\"data::::\", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.paymentMethodManService\n        .addPaymentMethods(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-PaymentMethods\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.paymentMethodManService\n        .updatePaymentMethod(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"RESPONSE::::\", res);\n\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-PaymentMethods\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  submitBatch() {\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.paymentMethodManService\n        .uploadBatchPaymentMethods(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-expenses\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n      <div class=\"block-header\">\n        <!-- breadcrumb -->\n        <app-breadcrumb [title]=\"'Manage Payment Methods'\" [items]=\"['Payment Methods']\" [active_item]=\"'Manage Payment Methods'\">\n        </app-breadcrumb>\n      </div>\n\n      <div class=\"row clearfix row m-t-25\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n          <div class=\"card\">\n            <div class=\"body\" *ngIf=\"showForm\">\n\n              <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                  <div class=\"card bg-color\">\n                    <div class=\"chat\">\n                      <div class=\"chat-header clearfix\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                            <div class=\"chat-about\">\n                              <div class=\"chat-with\">Posted By</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                  {{ formData.postedBy }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                            <div class=\"chat-about\">\n                              <div class=\"chat-with\">Posted Date</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                  {{ formData.postedTime | date : \"medium\" }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n  \n                          <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                            <div class=\"chat-about\">\n                              <div class=\"chat-with\">Verified By</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                  {{ formData.verifiedBy }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                            <div class=\"chat-about\">\n                              <div class=\"chat-with\">Verification Date</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                  {{ formData.verifiedTime | date : \"medium\" }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-12\">\n                            <div class=\"chat-about mt-2 remarks-container\">\n                              <div class=\"chat-with\">Verifier Remarks</div>\n                              <div class=\"chat-num-messages mt-2\">\n                                <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                  {{ formData.verifierRemarks }}\n                                </div>\n                              </div>\n                            </div>\n                            <!-- <div class=\"chat-about mt-2 remarks-container\">\n                              <div class=\"chat-with remarks\">\n                                <strong>Approvers Remarks:</strong>\n                                <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                              </div>\n                            </div> -->\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"mx-2\" col>\n                <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                  <mat-tab label=\"{{pageFunction}} PAYMENT METHOD\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                    \n                        <div class=\"header\">\n                          <div class=\"row\">\n                            <h2>\n                              {{ pageFunction }} Payment Method\n                            </h2>\n                          </div>\n                        </div>\n         \n                        <div>\n              \n                          <form class=\"mx-4\" [formGroup]=\"mngForm\">\n                            <div class=\"row\">\n                              \n          \n                              <!-- Payment Method-->\n                              <div class=\"col-xl-6 col-lg-46col-md-12 col-sm-12 mb-3\">\n                                <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                  <mat-label>\n                                    Payment Method\n                                </mat-label>\n                                  <input matInput formControlName=\"paymentMethodType\" />\n                                  <mat-error *ngIf=\"mngForm.get('paymentMethodType').hasError('required')\">\n                                    The Payment Method is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n\n                              <!-- Description  -->\n                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                                <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                  <mat-label>\n                                    Description\n                                </mat-label>\n                                  <input matInput formControlName=\"description\" />\n                                  <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">\n                                    The Description is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n                          \n                            \n                            </div>\n                            \n                            <!-- Action Buttons -->\n                            <div class=\"row\">\n                              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                                <div mat-dialog-action [align]=\"'end'\">\n                                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                                    Cancel\n                                  </button>\n                                  <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" [class.auth-spinner]=\"posting\" [disabled]=\"!mngForm.valid || posting\" (click)=\"submit()\">\n                                    Submit\n                                  </button>\n      \n                                  <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                                    (click)=\"onValidate()\" mat-raised-button color=\"primary\">\n                                    <mat-icon>\n                                      done_outline\n                                    </mat-icon>\n                                      Verify\n                                  </button>\n                        \n                                </div>\n                              </div>\n                            </div>\n                          </form>\n                          \n                        </div>\n                  \n                    </div>\n                  </div>\n                </mat-tab>\n                \n                <mat-tab  label=\"UPLOAD MULTIPLE PAYMENT METHODS\" *ngIf=\"pageFunction === 'Add'\">\n                  <div [hidden]=\"hideSubmit\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4\">\n                        <div class=\"row clearfix\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                            <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                          </div>\n                          <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                            <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                              (click)=\"downloadTemplate()\">\n                              <i class=\"fa fa-download\"></i> Excel Template\n                            </button>\n                          </div>\n                        </div>\n      \n                        <div class=\"mt-4 mx-0\">\n                          <div style=\"\n                              display: flex;\n                              flex-wrap: wrap;\n                              margin-right: 10px;\n                              margin-bottom: 10px;\n                            \">\n                            <mat-chip-list aria-label=\"Fish selection\">\n                              <mat-chip color=\"accent\" selected *ngFor=\"\n                                  let itemError of itemErrors;\n                                  let i = index\n                                \">\n                                <span>{{ i + 1 }}. </span>\n                                {{ itemError.field }}: {{ itemError.message }}\n                                <mat-icon>error</mat-icon>\n                              </mat-chip>\n                            </mat-chip-list>\n                          </div>\n      \n                          <div class=\"card\">\n                            <div class=\"header\">\n                              <h2>Payment Types</h2>\n                            </div>\n                            <div class=\"tableBody\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table table-hover\">\n                                  <thead>\n                                    <tr>\n                                      <th>PaymentMethodType</th>\n                                      <th>Description</th>\n                                \n                                     \n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    <tr *ngFor=\"let item of items\">\n                                      <td>{{ item.paymentMethodType }}</td>\n                                      <td>{{ item.description }}</td>\n                                  \n                                      \n                                      \n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                 \n                  <br>\n                  <div class=\"row mx-4 mt-4\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                      <div mat-dialog-action [align]=\"'end'\">\n                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                          Cancel\n                        </button>\n                        <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" [class.auth-spinner]=\"posting\" [disabled]=\"posting\" (click)=\"submitBatch()\">\n                          Submit Batch\n                        </button>\n              \n                      </div>\n                    </div>\n                  </div>\n                </mat-tab>\n              </mat-tab-group>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    \n    </div>\n  </section>\n  ","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { TaxMaintenanceService } from \"src/app/erp-finance/data/services/tax-maintenance.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ValidateComponent } from \"../validate/validate.component\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\n\n@Component({\n  selector: \"app-all-tax\",\n  templateUrl: \"./all-tax.component.html\",\n  styleUrls: [\"./all-tax.component.scss\"],\n})\nexport class AllTaxComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"taxName\",\n    \"taxCode\",\n    //'taxCountry',\n    \"taxRate\",\n    \"status\",\n    \"postedBy\",\n        \"postedTime\",\n    \"action\",\n  ];\n\n  taxStatuses: any[] = [\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  Form!: FormGroup;\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private taxMainService: TaxMaintenanceService,\n    private fb: FormBuilder,\n    private notificationAPI: NotificationService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.taxMainService\n      .getTaxesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n\n  addTax() {\n    this.router.navigate([\"/erp-finance/finance-parameters/manage-taxes\"]);\n  }\n\n  editTax(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-taxes\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Update\" },\n    });\n  }\n  viewTax(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-taxes\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"View\" },\n    });\n  }\n\n  validateTax(data: any) {\n    let route = \"/erp-finance/finance-parameters/manage-taxes\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Validate\" },\n    });\n  }\n\n  deleteTax(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this tax?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Tax!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = {id: id}\n        this.taxMainService\n          .deleteTaxTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"Status:\", res);\n              if (res.statusCode == 201 || 200 || 302) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n              }else{\n                this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate GL\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.taxMainService\n            .validateTaxes(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Taxes'\" [items]=\"['Taxes']\" [active_item]=\"'All Taxes'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Taxes</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addTax()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <!--<div class=\"col-4\">\n                      <form [formGroup]=\"Form\">\n                        <div class=\"row\">\n                          <div class=\"col-4\">\n                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                              <mat-label>Status</mat-label>\n  \n                              <mat-select formControlName=\"status\" (selectionChange)=\"getTaxStatus($event)\">\n                                <mat-option *ngFor=\"let status of taxStatuses\" [value]=\"status.name\">{{\n                                  status.name }}\n                                </mat-option>\n                              </mat-select>\n  \n                              <mat-error *ngIf=\"\n                                  Form.get('status').hasError('required')\n                                \">\n                                Please select Status\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n  \n                        </div>\n                      </form>\n                    \n\n\n                     </div>-->\n\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                            <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n    \n                          </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                            class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                            <mat-icon>check_circle</mat-icon>\n                            VERIFIED\n                          </button> -->\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <table mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n                <ng-container matColumnDef=\"select\">\n                  <th mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </th>\n                  <td mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-9\">Id</th>\n                  <td mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">{{row.id}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"taxName\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>TaxName</th>\n                  <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.taxName}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"taxCode\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>TaxCode</th>\n                  <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.taxCode}}\n                  </td>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"taxCountry\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>TaxCountry</th>\n                    <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.taxCountry}}\n                    </td>\n                  </ng-container>-->\n\n\n                <ng-container matColumnDef=\"taxRate\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>TaxRate</th>\n                  <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.taxRate}}</td>\n                </ng-container>\n\n\n                <!-- status  -->\n                <!-- <ng-container matColumnDef=\"status\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                    <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.status}}\n                    </td>\n                  </ng-container>-->t\n\n                <ng-container matColumnDef=\"postedBy\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>PostedBy</th>\n                  <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"> {{row.postedBy}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"status\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Status</th>\n                  <td mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"postedTime\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header>PostedTime</th>\n                  <td mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\">\n                    {{row.postedTime | date: 'medium'}}</td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"action\">\n                  <th mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>Action\n                  </th>\n                  <td mat-cell *matCellDef=\"let row; let i = index\"\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                        (click)=\"validateTax(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                       </button> -->\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"editTax(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\" (click)=\"viewTax(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteTax(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"onSelect(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </tr>\n                <td mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</td>\n              </table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators, AbstractControl, FormArray } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription, Observable } from \"rxjs\";\n\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport * as XLSX from \"xlsx\";\n\nimport { ValidateComponent } from \"../validate/validate.component\";\nimport { TaxMaintenanceService } from \"src/app/erp-finance/data/services/tax-maintenance.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { HttpParams } from \"@angular/common/http\";\n\nexport interface Tax {\n  taxName: string;\n  //taxCode:string;\n  //taxCountry:string;\n  taxRate: string;\n}\n\n@Component({\n  selector: \"app-manage-tax\",\n  templateUrl: \"./manage-tax.component.html\",\n  styleUrls: [\"./manage-tax.component.sass\"],\n})\nexport class ManageTaxComponent implements OnInit, OnDestroy {\n  //Table columns\n\n  displayedColumns: string[] = [\n    //\"id\",\n    \"TaxName\",\n    //\"TaxCode\",\n    // \"TaxCountry\",\n    \"TaxRate\",\n    // \"status\",\n    // \"createdBy\",\n    //\"createdOn\",\n    // \"verifiedBy\",\n    //\"verifiedOn\",\n  ];\n\n  status: any[] = [\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  isLoading: any;\n\n  dataSource!: MatTableDataSource<any>;\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n\n  disableActions: boolean = false;\n  hideApprovals: boolean = true;\n\n  exceldata: [][] | undefined;\n  subscription!: Subscription;\n  keys: string[];\n  otherRows: any[];\n  dataSheet = new Subject();\n  headerRows: any;\n  fileAcess: any;\n  firstElement: any;\n  excelSelected: any;\n  fileInfos?: Observable<any>;\n  values: any;\n  finalValues: any;\n  valuesArray: any;\n  submitted = false;\n  excelDataPresent = false;\n  sumofCredits = 0;\n  excelFileAccepted = false;\n  uploadedData: any;\n\n  //excel columns\n  excelHeaderRef: any[] = [\"taxName\", \"taxRate\"];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private taxMainService: TaxMaintenanceService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    console.log(\"this.formData: \", this.formData);\n\n    this.route.queryParams.subscribe((params) => {\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action == \"Validate\") {\n          this.pageFunction = \"Validate\";\n          this.disableActions = true;\n        }\n\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.taxMainService\n      .getTaxById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateDisabledFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      taxName: [\"\", [Validators.required]],\n      // taxCode: [\"\", [Validators.required]],\n      // taxCountry: [\"\", [Validators.required]],\n      taxRate: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      taxName: [this.formData.taxName, [Validators.required]],\n      //taxCode: [this.formData.taxCode, [Validators.required]],\n      //taxCountry: [this.formData.taxCountry, [Validators.required]],\n      taxRate: [this.formData.taxRate, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      taxName: [\n        { value: this.formData.taxName, disabled: true },\n        [Validators.required],\n      ],\ntaxRate: [\n        { value: this.formData.taxRate, disabled: true },\n        [Validators.required],\n      ],\n  \n    });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/erp-finance/finance-parameters/all-taxes\"]);\n  }\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        taxName: [item.taxName, [Validators.required]],\n        taxRate: [item.taxRate, [Validators.required]],\n\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"taxTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  hasAccess: boolean;\n\n  onValidate(userType) {\n    let privilege = \"Validate\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"650px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(ValidateComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-parameters/all-taxes\"]);\n      });\n    }\n  }\n\n  posting: boolean = false;\n  submit() {\n    this.posting = true;\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.taxMainService\n        .addTax(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Tax Added Successfully\"\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-taxes\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => {this.posting = false},\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.taxMainService\n        .updateTax(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Tax Updated Successfully\"\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-taxes\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n            err.message\n            );\n          },\n          complete: () => {this.posting = false},\n        }),\n        Subscription;\n    }\n  }\n\n\n  submitBatch() {\n    console.log(\"submitting batch\");\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.taxMainService\n        .uploadBatchTaxes(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-parameters/all-taxes\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { this.posting = false},\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Taxes'\" [items]=\"['Taxes']\" [active_item]=\"'Manage Taxes'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"body\">\n\n        <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <div class=\"card bg-color\">\n              <div class=\"chat\">\n                <div class=\"chat-header clearfix\">\n                  <div class=\"row\">\n                    <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                      <div class=\"chat-about\">\n                        <div class=\"chat-with\">Posted By</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                            {{ formData.postedBy }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                      <div class=\"chat-about\">\n                        <div class=\"chat-with\">Posted Date</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                            {{ formData.postedTime | date : \"medium\" }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                      <div class=\"chat-about\">\n                        <div class=\"chat-with\">Verified By</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                            {{ formData.verifiedBy }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                      <div class=\"chat-about\">\n                        <div class=\"chat-with\">Verification Date</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                            {{ formData.verifiedTime | date : \"medium\" }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12\">\n                      <div class=\"chat-about mt-2 remarks-container\">\n                        <div class=\"chat-with\">Verifier Remarks</div>\n                        <div class=\"chat-num-messages mt-2\">\n                          <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                            {{ formData.verifierRemarks }}\n                          </div>\n                        </div>\n                      </div>\n                      <!-- <div class=\"chat-about mt-2 remarks-container\">\n                        <div class=\"chat-with remarks\">\n                          <strong>Approvers Remarks:</strong>\n                          <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                        </div>\n                      </div> -->\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n          <mat-tab label=\"ADD TAX\">\n            <div class=\"row clearfix mx-2\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"header\">\n                  <div class=\"row\">\n                    <h2>{{ pageFunction }} Tax</h2>\n                  </div>\n                </div>\n            \n                <div class=\"body\">\n                  <form class=\"mx-4\" [formGroup]=\"mngForm\">\n                    <div class=\"row\">\n                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                          <mat-label>TaxName</mat-label>\n                          <input matInput formControlName=\"taxName\" />\n                          <mat-error *ngIf=\"mngForm.get('taxName').hasError('required')\">Tax Name is\n                            required</mat-error>\n                        </mat-form-field>\n                      </div>\n\n                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                          <mat-label>TaxRate</mat-label>\n                          <input matInput formControlName=\"taxRate\" type=\"number\" />\n                          <mat-error *ngIf=\"mngForm.get('taxRate').hasError('required')\">Tax Rate is\n                            required</mat-error>\n                        </mat-form-field>\n                      </div>\n                    </div>\n\n                    <div class=\"row\">\n                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                        <div mat-dialog-action [align]=\"'end'\">\n                          <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                            (click)=\"cancel()\">\n                            Cancel\n                          </button>\n                          <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" [class.auth-spinner]=\"posting\" [disabled]=\"!mngForm.valid || posting\"\n                            (click)=\"submit()\">\n                            Submit\n                          </button>\n\n                          <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                            (click)=\"onValidate('Verifier')\" mat-raised-button color=\"primary\">\n                            <mat-icon>done_outline</mat-icon>\n                            Verify Taxes\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n          <mat-tab label=\"UPLOAD TAXES\" *ngIf=\"pageFunction === 'Add'\">\n            <div [hidden]=\"hideSubmit\">\n              <div class=\"row clearfix mx-2\">\n                <div class=\"mt-4\">\n                  <div class=\"row clearfix\">\n                    <h5>Upload Excel File</h5>\n                  </div>\n                  <div class=\"row align-items-center\">\n                    <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                      <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                    </div>\n                    <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                      <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                        (click)=\"downloadTemplate()\">\n                        <i class=\"fa fa-download\"></i> Excel Template\n                      </button>\n                    </div>\n                  </div>\n\n                  <div class=\"mt-4 mx-0\">\n                    <div style=\"\n                        display: flex;\n                        flex-wrap: wrap;\n                        margin-right: 10px;\n                        margin-bottom: 10px;\n                      \">\n                      <mat-chip-list aria-label=\"Fish selection\">\n                        <mat-chip color=\"accent\" selected *ngFor=\"\n                            let itemError of itemErrors;\n                            let i = index\n                          \">\n                          <span>{{ i + 1 }}. </span>\n                          {{ itemError.field }}: {{ itemError.message }}\n                          <mat-icon>error</mat-icon>\n                        </mat-chip>\n                      </mat-chip-list>\n                    </div>\n\n                    <div class=\"card\">\n                      <div class=\"header\">\n                        <h2>Taxes</h2>\n                      </div>\n                      <div class=\"tableBody\">\n                        <div class=\"table-responsive\">\n                          <table class=\"table table-hover\">\n                            <thead>\n                              <tr>\n                                <th>TaxName</th>\n                                <th>TaxRate</th>\n                                \n                               \n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let item of items\">\n                                <td>{{ item.taxName }}</td>\n                                <td>{{ item.taxRate }}</td>\n                               \n                                \n                                \n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n\n            <br />\n            <div class=\"row mx-4 mt-4\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                <div mat-dialog-action [align]=\"'end'\">\n                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                    (click)=\"cancel()\">\n                    Cancel\n                  </button>\n                  <button *ngIf=\"items.length > 0\" mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" [class.auth-spinner]=\"posting\" [disabled]=\"posting\"\n                    (click)=\"submitBatch()\">\n                    Submit Batch\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n          </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n</section>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\nimport { ManageTaxComponent } from '../manage-tax/manage-tax.component';\nimport { TaxMaintenanceService } from 'src/app/erp-finance/data/services/tax-maintenance.service';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-validate',\n  templateUrl: './validate.component.html',\n  styleUrls: ['./validate.component.sass']\n})\nexport class ValidateComponent implements OnInit {\n\n \n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  status!: string;\n\n  resData: any;\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageTaxComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private router: Router,\n    private datepipe: DatePipe,\n    private taxMainService: TaxMaintenanceService,\n  ) {\n    this.Data = this.data.data;\n  }\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    if (this.postedBy === this.currentUser) {\n\n      this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n      this.canVerify = false;\n\n    } else {\n      this.canVerify = true;\n    }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.status = \"APPROVED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n    /* const params = {\n       id: this.Data.id,\n      role: this.data.userType,\n      status: this.status,\n      reason: this.statusForm.value.reason,\n      verifiedBy: this.currentUser,\n      verifiedOn: todayDate\n     };*/\n\n    \n    const params = new HttpParams()\n      .set(\"reason\", this.statusForm.value.reason)\n  \n      let body = [];\n\n      this.Data.forEach((element) => \n      {\n        let taxes = {\n          id: element.id,\n          status: this.status\n        };\n        body.push(taxes);\n      })\n\n\n  \n    console.log(\"Form = \", params);\n  \n    // this.taxMainService\n    //   .verifyBulkTax(params,body)\n    //   .pipe(takeUntil(this.destroy$))\n    //   .subscribe({\n    //     next: (res) => {\n    //       if (res.statusCode == 200) {\n    //         this.snackbar.showNotification(\n    //           \"snackbar-success\",\n    //           \"Tax Verified successfully\"\n    //         );\n            \n    //       }\n    //       // else {\n    //        this.snackbar.showNotification(\"snackbar-danger\", res.message);\n    //       // }\n    //     },\n    //     error: (err) => {\n    //       console.log(\"err = \", err);\n    //       this.snackbar.showNotification(\n    //         \"snackbar-danger\",\n    //         \"Server Error: \" + err.message\n    //       );\n    //     },\n    //     complete: () => {\n    //       this.dialogRef.close();\n    //       this.router.navigate([\"/erp-finance/finance-parameters/manage-taxes\"]);\n    //     }\n    //   });\n  \n\n  }\n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Verify Tax</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Tex\n            \n            <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">TaxName:</dt>\n                <dd>{{Data.taxName}}</dd>\n                <dt class=\"pull-left me-2\">TaxRate:</dt>\n                <dd> {{ Data.taxRate }}</dd>\n               \n              </dl>\n            </div>t-->\n  \n           \n          </div>\n  \n          <div class=\"\">\n          \n\n  \n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrencyManagementService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  // http://localhost:9090/api/v1/currencies/view\r\n  // http://localhost:9090/api/v1/currencies/view_byId/1\r\n  // http://localhost:9090/api/v1/currencies/add\r\n\r\n  getCurrencies(): Observable<any> {\r\n    const currencyManagementUrl = `${environment.baseUrlProcurement}/api/v1/currencies/view`;\r\n    return this.http.get<any[]>(currencyManagementUrl);\r\n  }\r\n  getCurrenciesById(id: any): Observable<any> {\r\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/currencies/view_byId/${id}`);\r\n  }\r\n\r\n  getCurrenciesByCode(BudgetCategoriesCode: any): Observable<any> {\r\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/BudgetCategories/find/by/BudgetCategories/code/${BudgetCategoriesCode}`);\r\n  }\r\n\r\n  addCurrencies(data: any): Observable<any> {\r\n    const currencyManagementUrl = `${environment.baseUrlProcurement}/api/v1/currencies/add`;\r\n    return this.http.post<any>(currencyManagementUrl, data);\r\n  }\r\n\r\n  updateCurrencies(currencyDetails: any): Observable<any> {\r\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/currencies/update`;\r\n    return this.http.put<any>(updateBillUrl, currencyDetails)\r\n  }\r\n\r\n  deleteCurrencyTemporarily(id: any): Observable<any> {\r\n    const currencyManagementUrl = `${environment.baseUrlProcurement}/api/v1/currencies/delete/id`;\r\n    return this.http.put<any>(currencyManagementUrl, id);\r\n  }\r\n\r\n  deleteCurrenciesPermanently(id: any): Observable<any> {\r\n    const currencyManagementUrl = `${environment.baseUrlProcurement}/api/v1/currencies/delete/${id}`;\r\n    return this.http.delete<any>(currencyManagementUrl, id);\r\n  }\r\n\r\n\r\n    // ********************************************************************************************************************\r\n\r\n\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}