{"version":3,"file":"src_app_erp-admin_data_services_roleService_service_ts-src_app_erp-hr_modules_employees_emplo-f3b455.js","mappings":";;;;;;;;;;;;;;;;AAGgE;;;AAOzD,MAAM,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAIzC,QAAQ;QAEN,MAAM,QAAQ,GAAE,GAAG,uFAAwB,wBAAwB,CAAC;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,QAAQ,CAAC,CAAC;IACxC,CAAC;IAED,YAAY,CAAC,MAAW;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,uFAAwB,+BAA+B,EAAE,EAAC,MAAM,EAAC,CACrE,CAAC;IACJ,CAAC;IAGH,iBAAiB,CAAC,MAAW;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,uFAAwB,gCAAgC,EAAE,EAAC,MAAM,EAAC,CACtE,CAAC;IACJ,CAAC;IAEC,gBAAgB,CAAC,MAAM;QACrB,MAAM,QAAQ,GAAG,GAAG,uFAAwB,kCAAkC,CAAC;QAC/E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,QAAQ,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IACpD,CAAC;IAGH,OAAO,CAAC,IAAS;QAEb,MAAM,QAAQ,GAAE,GAAG,uFAAwB,2BAA2B,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAEH,UAAU,CAAC,IAAS;QAEhB,MAAM,QAAQ,GAAE,GAAG,uFAAwB,2BAA2B,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAEH,qBAAqB,CAAC,MAAW;QAE7B,MAAM,QAAQ,GAAE,GAAG,uFAAwB,2BAA2B,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,QAAQ,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IACrD,CAAC;IAGH,gBAAgB,CAAC,IAAS;QAEtB,MAAM,QAAQ,GAAG,GAAG,uFAAwB,gCAAgC,CAAC;QAC7E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAIH,aAAa,CAAC,cAAmB;QACjC,MAAM,UAAU,GAAG,GAAG,uFAAwB,iCAAiC,CAAC;QAChF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,UAAU,EAAE,cAAc,CAAC,CAAC;IACtD,CAAC;IAGC,qBAAqB,CAAC,MAAW;QAC/B,MAAM,SAAS,GAAG,GAAG,uFAAwB,4BAA4B,CAAC;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,SAAS,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IACjD,CAAC;;wEAnEU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;ACHb,MAAM,gBAAgB;IAC3B,cAAc,CAAC,aAAqB;QAClC,IAAI,aAAa,IAAI,SAAS,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;YAC/D,IAAG,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,IAAI,EAAC;gBACxD,OAAO,KAAK,CAAC;aACd;iBAAI;gBACH,0FAA0F;gBAC5F,KAAK,MAAM,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE;oBAC1C,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;wBAC7C,OAAO,IAAI,CAAC;qBACb;iBACF;aACA;YACD,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;gFAlBU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHsC;AAEY;AACX;AACV;AACY;AAEL;AAMY;AAGrC;AAC4G;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC2B5F,sEAA0C;IAG9B,gTAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,gFAA4B;IAAA,iEAAK;IAAA,6DAAW;;;;IAIxD,sEAA0C;IAG9B,gTAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,gFAA4B;IAAA,kEAAM;IAAA,6DAAW;;;;IAIzD,sEAA0C;IAG9B,gTAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,gFAA4B;IAAA,gEAAI;IAAA,6DAAW;;;IAgD3C,kFAC6B;IAAA,wDAE7B;IAAA,6DAAa;;;IAFT,sFAAwB;IAAC,2DAE7B;IAF6B,8FAE7B;;;IAGJ,6EAA2D;IACvD,kFACJ;IAAA,6DAAY;;;IA0CJ,6EAEJ;IACQ,sFACJ;IAAA,6DAAY;;;IAyBxB,6EAAiE;IAAA,sFAC1C;IAAA,6DAAY;;;;IAa/C,uFAAqE;IACnC,qVAAmB,sBAAc,GAAG,IAAI,IAAC,6QAG9B,qBAAa,IAHiB;IAIvE,6DAAe;;;IALgB,2FAAiC;IAE5D,2DAAmD;IAAnD,6HAAmD;;;;IAK3D,gFAAkE;IAChC,+KAAS,wBAAwB,IAAC,gVACzC,iCAAqB,GAAG,IAAI,IADa,sQAGhB,qBAAa,IAHG;IAIhE,6DAAe;;;;IALa,2FAAiC;IAGzD,2DAAqC;IAArC,2GAAqC;;;IAO7C,uFACqD;IACjD,gEACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,uFACJ;;;IAKA,uFACqD;IACjD,yEACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,0FACJ;;;IAIA,uFACqD;IACjD,2EACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,iGACJ;;;IAIA,uFACqD;IACjD,6EACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,mGACJ;;;IAIA,uFACqD;IACjD,wEACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,8FACJ;;;IAIA,uFACqD;IACjD,uEACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;;IAAA,6DAAW;;;IADP,2DACJ;IADI,6KACJ;;;IAIA,uFACqD;IACjD,qEACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;;IAAA,6DAAW;;;IADP,2DACJ;IADI,2KACJ;;;IAIA,uFACqD;IACjD,qFACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,oGACJ;;;IAIA,uFACqD;IACjD,yEACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,+FACJ;;;IAIA,uFACqD;IACjD,0EACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,gGACJ;;;IAIA,uFACqD;IACjD,sEACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,6FACJ;;;IAIA,uFACqD;IACjD,+EACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,qGACJ;;;IAIA,uFACqD;IACjD,uEACJ;IAAA,6DAAkB;;;IAClB,gFAAiF;IAC7E,wDACJ;IAAA,6DAAW;;;IADP,2DACJ;IADI,6FACJ;;;IAKA,uFACqD;IACjD,oEACJ;IAAA,6DAAkB;;;IAKV,+EACuD;IACnD,qEAAmC;IAAA,wDAEvC;IAAA,6DAAS;;;IAF8B,2DAEvC;IAFuC,iGAEvC;;;IACA,+EACqD;IACjD,qEAAmC;IAAA,wDAEvC;IAAA,6DAAS;;;IAF8B,2DAEvC;IAFuC,iGAEvC;;;IACA,+EACuD;IACnD,qEAA+B;IAAA,wDAEnC;IAAA,6DAAS;;;IAF0B,2DAEnC;IAFmC,iGAEnC;;;IACA,+EACsD;IAClD,qEAAyC;IAAA,wDAE7C;IAAA,6DAAS;;;IAFoC,2DAE7C;IAF6C,iGAE7C;;;IACA,+EAA4E;IACxE,qEAAsC;IAAA,wDAE1C;IAAA,6DAAS;;;IAFiC,2DAE1C;IAF0C,iGAE1C;;;IA3BR,gFAEuC;IAAnC,2KAAS,wBAAwB,IAAC;IAClC,6EAAsC;IAClC,+IAIS;IACT,+IAIS;IACT,+IAIS;IACT,+IAIS;IACT,+IAGS;IACb,sEAAe;IACnB,6DAAW;;;IA1BO,2DAAuB;IAAvB,qFAAuB;IACxB,2DAAwB;IAAxB,qFAAwB;IAKxB,2DAAwB;IAAxB,qFAAwB;IAKxB,2DAAwB;IAAxB,qFAAwB;IAKxB,2DAAuB;IAAvB,oFAAuB;;;IAiBxC,wFACsB;IAClB,oEACJ;IAAA,6DAAkB;;;;IAClB,iFAC0D;IAEf,yKAAS,wBAAwB,IAAC,yTAC5D,kBAAU,QAAQ,UAAK,IADqC;IAErE,qFACoB;IACxB,6DAAS;IAET,+EAC2D;IADnB,yKAAS,wBAAwB,IAAC,yTAC7D,kBAAU,MAAM,UAAK,IADwC;IAEtE,qFACoB;IACxB,6DAAS;IAOT,+EAC0D;IADnB,yKAAS,wBAAwB,IAAC,yTAC5D,gCAAoB,IADwC;IAErE,qFACoB;IACxB,6DAAS;;IAnB8B,2DAAwB;IAAxB,yEAAwB;IAAxC,yEAAe;IAMA,2DAAuB;IAAvB,wEAAuB;IAAtC,wEAAc;IAWK,2DAA0B;IAA1B,2EAA0B;IAA7C,4EAAkB;;;IAKjD,6EACiB;;;IACjB,2EAEU;;IADN,+EAA0B;;;IAI9B,sEAAkB;IAC+B,wDACtC;IAAA,6DAAK;;;IADR,2DAAuC;IAAvC,gHAAuC;IAAE,2DACtC;IADsC,yHACtC;;;IAGf,4EAAyD;IACrD,oFACmB;IACvB,6DAAM;;;IACN,4EAAyC;IACrC,wFACuB;IAC3B,6DAAM;;IAFoC,2DAAe;IAAf,yEAAe;;;;ADra9E,MAAM,6BAA6B;IAwCxC,YACU,MAAiB,EACjB,eAA2C,EAC3C,wBAAkD,EAClD,QAAyB,EACzB,EAAe,EACf,mBAAwC;QALxC,WAAM,GAAN,MAAM,CAAW;QACjB,oBAAe,GAAf,eAAe,CAA4B;QAC3C,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAiB;QACzB,OAAE,GAAF,EAAE,CAAa;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QA7ClD,qBAAgB,GAAa;YAC3B,QAAQ;YACR,IAAI;YACJ,OAAO;YACP,cAAc;YACd,gBAAgB;YAChB,WAAW;YACX,UAAU;YACV,QAAQ;YACR,iBAAiB;YACjB,YAAY;YACZ,aAAa;YACb,UAAU;YACV,kBAAkB;YAClB,UAAU;YACV,QAAQ;YACR,QAAQ;SACT,CAAC;QAEF,YAAO,GAAY,KAAK,CAAC;QAIzB,aAAQ,GAAqB,IAAI,0CAAO,EAAW,CAAC;QAMpD,cAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAE9C,oBAAe,GAAY,KAAK,CAAC;QACjC,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAyC1B,qGAAqG;QACrG,gBAAW,GAAU;YACnB,EAAE,IAAI,EAAE,KAAK,EAAE;YACf,EAAE,IAAI,EAAE,SAAS,EAAE;YACnB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,UAAU,EAAE;SACrB,CAAC;QACF,mBAAc,GAAW,KAAK,CAAC;QAuJ/B,+HAA+H;QAC/H,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;QA8BpC,cAAS,GAAY,IAAI,CAAC;IA3NvB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QAEtD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,UAAU,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACtD,YAAY,EAAE;gBACZ,IAAI,CAAC,WAAW,CAAC,SAAS;oBACxB,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU;oBACtC,CAAoC;oBACpC,CAAE;gBACJ,gEAAmB;aACpB;YACD,MAAM,EAAE,CAAC,KAAK,CAAC;SAChB,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YACpC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAYD,uBAAuB;QACtB,kBAAkB;IACnB,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEL,mBAAmB;IACnB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAE7C,IAAI,MAAM,GAAG,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QAE/D,IAAI,CAAC,wBAAwB;aAC1B,oBAAoB,CAAC,MAAM,CAAC;aAE5B,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBAEhE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBAClC;qBAAM;oBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,iBAAiB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;YACrE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACP,CAAC;IACD,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,SAAS,CAAC,MAAW,EAAE,MAAY;QACjC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAEtC,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACf,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,gJAA4B,EAC5B,YAAY,CACb,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEjC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY,CAAC,EAAU;QACrB,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,8CAA8C;YACpD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,iBAAiB;SACrC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,wBAAwB;qBAC1B,MAAM,CAAC,EAAE,CAAC;qBACV,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,OAAO,EAAE,CAAC;4BACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAC/B,qCAAqC,CACtC,CAAC;yBACH;6BAAM;4BACL,IAAI,CAAC,OAAO,EAAE,CAAC;4BACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;yBAChD;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;oBACpE,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;iBACnB,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,qIAAqI;IAErI,cAAc,CAAC,IAAS;QACtB,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;YAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;YAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;YACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;YAC7B,YAAY,CAAC,IAAI,GAAG;gBAClB,MAAM,EAAE,gBAAgB;aACzB,CAAC;YACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,kJAAwB,EACxB,YAAY,CACb,CAAC;YACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACxC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;wBACnB,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;qBACnC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,KAAK,KAAK,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,UAAU,EAAE,KAAK;aAClB,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAID,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IACD,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IACD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAC9D,GAAG,CAAC,QAAQ,GAAG,CACjB,EAAE,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAGD,mBAAmB,CAAC,MAAW;QAC7B,IAAI,SAAS,GAAG,mBAAmB,CAAC;QAEpC,6EAA6E;QAC7E,eAAe;QACf,MAAM;QAEN,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,uDAAS,CAAC;gBACZ,KAAK,EAAE,8DAA8D;gBACrE,KAAK,EAAE,UAAU;gBACjB,gBAAgB,EAAE,2BAA2B;gBAC7C,iBAAiB,EAAE,QAAQ;gBAC3B,gBAAgB,EAAE,IAAI;gBACtB,gBAAgB,EAAE,QAAQ;gBAC1B,IAAI,EAAE,MAAM;gBAEZ,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;oBACpB,IAAI,CAAC,KAAK,EAAE;wBACV,OAAO,2BAA2B,CAAC;qBACpC;gBACH,CAAC;aACF,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,MAAM,CAAC,WAAW,EAAE;oBACtB,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC;oBAErC,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;wBACtD,OAAO;4BACL,EAAE,EAAE,OAAO,CAAC,EAAE;4BACd,MAAM,EAAE,MAAM;4BACd,eAAe,EAAE,eAAe;yBACjC,CAAC;oBACJ,CAAC,CAAC,CAAC;oBAEH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;oBAEpC,IAAI,CAAC,wBAAwB;yBAC1B,MAAM,CAAC,aAAa,CAAC;yBACrB,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBAC9B,SAAS,CAAC;wBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;4BAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,GAAG,IAAI,CAAG,EAAE;gCACvC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;gCAEF,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;gCACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;6BACxB;iCAAM,EAKN;wBACH,CAAC;wBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;4BACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;wBACjE,CAAC;wBACD,QAAQ,EAAE,GAAG,EAAE;4BACb,IAAI,CAAC,OAAO,EAAE,CAAC;wBACjB,CAAC;qBACF,CAAC;wBACF,+CAAY,CAAC;iBAChB;qBAAM;oBACL,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;oBACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;0GAlVU,6BAA6B;4HAA7B,6BAA6B;mEA2B7B,sEAAY;mEACZ,4DAAO;;;;;;;QCrDpB,8EAAyB;QAIb,gFAEiB;QACrB,6DAAM;QAEN,8EAAmC;QAEnC,0EAAiB;QAW2B,+EAAkB;QAAA,6DAAK;QAE/B,2EAA4B;QAEmB,mEAAM;QAAA,6DAAI;QACrD,kFAE4B;QAFe,4JAAS,uBAAmB,IAAC;QAAxE,6DAE4B;QAShC,uEAAI;QAEyC,uJAAS,aAAS,IAAC;QACpD,iFAA4B;QAAA,oEAAO;QAAA,6DAAW;QAI1D,2HAQK;QACL,2HAQK;QACL,2HAQK;QACT,6DAAK;QAET,4EAAmB;QAKC,qSAAS,gBAAqB,MAAM,cAAY,aAAa,SAAS,QAAQ,GAAE,IAAC;QADrF,6DACwF;QAGhG,uEAAI;QAGQ,qSAAS,gBAAqB,KAAK,CAAC,IAAC;QADzC,6DAC4C;QAGpD,uEAAI;QAGQ,qSAAS,gBAAqB,MAAM,CAAC,IAAC;QAD1C,6DAC6C;QAGrD,uEAAI;QAGQ,qSAAS,gBAAqB,KAAK,CAAC,IAAC;QADzC,6DAC4C;QAQpE,4EAAsC;QAOH,mEAAM;QAAA,6DAAY;QAE7B,mFACkD;QAA9C,+KAAmB,6BAAyB,IAAC;QAC7C,2IAGa;QACjB,6DAAa;QAEb,yIAEY;QAChB,6DAAiB;QAGzB,4EAAmB;QAGqB,uJAAS,sBAAkB,KAAK,CAAC,IAAC;QAC9D,6EAAU;QAAA,yEAAY;QAAA,6DAAW;QACjC,kEACJ;QAAA,6DAAS;QACT,+EACsE;QAAvC,uJAAS,sBAAkB,SAAS,CAAC,IAAC;QACjE,6EAAU;QAAA,oEAAO;QAAA,6DAAW;QAC5B,sEACJ;QAAA,6DAAS;QAAC,+EAE8D;QAAxC,uJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,6EAAU;QAAA,qEAAQ;QAAA,6DAAW;QAC7B,uEACJ;QAAA,6DAAS;QACT,+EACwE;QAAxC,uJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,6EAAU;QAAA,kEAAK;QAAA,6DAAW;QAC1B,uEACJ;QAAA,6DAAS;QAAC,+EAE8D;QAAxC,uJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,6EAAU;QAAA,mEAAM;QAAA,6DAAW;QAC3B,uEACJ;QAAA,6DAAS;QAKjB,4EAAmB;QAKY,wEAAW;QAAA,6DAAY;QAClC,yEAAwD;QACxD,yIAIY;QAChB,6DAAiB;QAErB,4EAAuB;QAGX,uJAAS,mBAAe,QAAQ,CAAC,IAAC;QAClC,iFAA4B;QAAA,mEAAM;QAAA,6DAAW;QAGrD,4EAAuD;QAE/C,uJAAS,mBAAe,KAAK,CAAC,IAAC;QAC/B,iFAA4B;QAAA,0EAAa;QAAA,6DAAW;QAQ5E,4EAAmB;QAEA,0EAAa;QAAA,6DAAY;QACpC,0EAA0D;QAC1D,2IACmC;QACvC,6DAAiB;QAQjC,uFACiC;QAE7B,+EAAoC;QAChC,uJAMkB;QAClB,yIAMW;QACf,sEAAe;QAEf,+EAAgC;QAC5B,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAGf,+EAAmC;QAC/B,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAA0C;QACtC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAA4C;QACxC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAAuC;QACnC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAAsC;QAClC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAAoC;QAChC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAA6C;QACzC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAAwC;QACpC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAAyC;QACrC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAAsC;QAClC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAA8C;QAC1C,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAEf,+EAAsC;QAClC,uJAGkB;QAClB,yIAEW;QACf,sEAAe;QAGf,+EAAoC;QAChC,uJAGkB;QAClB,yIA6BW;QACf,sEAAe;QAKf,+EAAoC;QAChC,uJAGkB;QAClB,yIAyBW;QACf,sEAAe;QACf,qJACiB;QACjB,uIAEU;QAGV,6HAGK;QACT,6DAAY;QACZ,+HAGM;QACN,+HAGM;QAEN,kFAEgB;QAEpB,6DAAM;;QAlcF,2DAAkC;QAAlC,4FAAkC;QAyCb,4DAAmC;QAAnC,oGAAmC;QASnC,2DAAmC;QAAnC,oGAAmC;QASnC,2DAAmC;QAAnC,oGAAmC;QA2C9C,4DAAkB;QAAlB,gFAAkB;QAGN,2DAAkB;QAAlB,gFAAkB;QAOsB,2DAAc;QAAd,qFAAc;QAMxC,2DAA6C;QAA7C,8GAA6C;QAQnC,2DAAyC;QAAzC,kGAAyC;QAKzC,2DAA6C;QAA7C,sGAA6C;QAKnE,2DAA8C;QAA9C,uGAA8C;QAKxB,2DAA8C;QAA9C,uGAA8C;QAKpE,2DAA8C;QAA9C,uGAA8C;QAUhD,2DAAkB;QAAlB,gFAAkB;QAMI,2DAEhB;QAFgB,kHAEhB;QA2BI,4DAAmD;QAAnD,oHAAmD;QAUhD,2DAAyB;QAAzB,uFAAyB;QAgOvC,4DAAiC;QAAjC,kGAAiC;QAEpB,2DAA0B;QAA1B,mGAA0B;QAUrC,2DAAgC;QAAhC,qGAAgC;QAIjD,2DAAa;QAAb,8EAAa;QAKJ,2DAAe;QAAf,yEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClcA;AAEY;AACX;AACV;AACY;AAEL;AAGzB;AAMmG;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC2BtF,qEAA0C;IAG9B,qSAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,+EAA4B;IAAA,gEAAK;IAAA,4DAAW;;;;IAIxD,qEAA0C;IAG9B,qSAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,+EAA4B;IAAA,iEAAM;IAAA,4DAAW;;;;IAIzD,qEAA0C;IAG9B,qSAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,+EAA4B;IAAA,+DAAI;IAAA,4DAAW;;;IAkD/C,iFAC6B;IAAA,uDAE7B;IAAA,4DAAa;;;IAFT,qFAAwB;IAAC,0DAE7B;IAF6B,6FAE7B;;;IAGJ,4EAA2D;IACvD,iFACJ;IAAA,4DAAY;;;;IAyCxB,sFAAqE;IACnC,yUAAmB,sBAAc,GAAG,IAAI,IAAC,kQAG9B,qBAAa,IAHiB;IAIvE,4DAAe;;;IALgB,0FAAiC;IAE5D,0DAAmD;IAAnD,0HAAmD;;;;IAK3D,+EAAkE;IAChC,qKAAS,wBAAwB,IAAC,qUACzC,iCAAqB,GAAG,IAAI,IADa,2PAGhB,qBAAa,IAHG;IAIhE,4DAAe;;;;IALa,0FAAiC;IAGzD,0DAAqC;IAArC,yGAAqC;;;IAO7C,sFACqD;IACjD,+DACJ;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,sFACJ;;;IAIA,sFACqD;IAAA,2EACrD;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,yFACJ;;;IAIA,sFAAoF;IAChF,sEACJ;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,6IACJ;;;IAIA,sFAAoF;IAChF,wEACJ;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,8FACJ;;;IAIA,sFAAoF;IAChF,2EACJ;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,iGACJ;;;IAIA,sFAAoF;IAChF,2EACJ;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,iGACJ;;;IAIA,sFAAoF;IAChF,yEACJ;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC7E,uDACJ;;IAAA,4DAAW;;;IADP,0DACJ;IADI,uKACJ;;;IAIA,sFACqD;IACjD,mEACJ;IAAA,4DAAkB;;;IAKV,6EACuD;IACnD,mEAAmC;IAAA,uDAEvC;IAAA,4DAAS;;;IAF8B,0DAEvC;IAFuC,gGAEvC;;;IACA,6EACqD;IACjD,mEAAmC;IAAA,uDAEvC;IAAA,4DAAS;;;IAF8B,0DAEvC;IAFuC,gGAEvC;;;IACA,6EACuD;IACnD,mEAA+B;IAAA,uDAEnC;IAAA,4DAAS;;;IAF0B,0DAEnC;IAFmC,gGAEnC;;;IACA,8EACsD;IAClD,oEAAyC;IAAA,uDAE7C;IAAA,4DAAS;;;IAFoC,0DAE7C;IAF6C,gGAE7C;;;IACA,6EAA4E;IACxE,oEAAsC;IAAA,uDAE1C;IAAA,4DAAS;;;IAFiC,0DAE1C;IAF0C,gGAE1C;;;IA3BR,+EAEuC;IAAnC,kKAAS,wBAAwB,IAAC;IAClC,4EAAsC;IAClC,qIAIS;IACT,qIAIS;IACT,qIAIS;IACT,qIAIS;IACT,qIAGS;IACb,qEAAe;IACnB,4DAAW;;;IA1BO,0DAAuB;IAAvB,oFAAuB;IACxB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAuB;IAAvB,mFAAuB;;;IAcxC,sFAAoF;IAChF,0EACJ;IAAA,4DAAkB;;;IAGV,6EACuD;IACnD,mEAAmC;IAAA,sEACvC;IAAA,4DAAS;;;IACT,8EACwD;IACpD,mEAAmC;IAAA,qEACvC;IAAA,4DAAS;;;IACT,8EAA2E;IACvE,oEAAkC;IAAA,uDAEtC;IAAA,4DAAS;;;IAF6B,0DAEtC;IAFsC,sGAEtC;;;IAbR,+EAAiF;IAC7E,4EAA4C;IACxC,qIAGS;IACT,sIAGS;IACT,sIAGS;IACb,qEAAe;IACnB,4DAAW;;;IAdO,0DAA6B;IAA7B,0FAA6B;IAC9B,0DAAiB;IAAjB,6EAAiB;IAIjB,0DAAiB;IAAjB,6EAAiB;;;IAalC,sFACqD;IAAA,iEAAM;IAAA,4DAAkB;;;IAmBrE,gFACiB;IAAA,iEAAM;IAAA,4DAAW;;;;IAnB1C,+EAAiF;IACrC,gKAAS,wBAAwB,IAAC,+SAC7D,kBAAU,MAAM,UAAM,IADuC;IAEtE,2EAAU;IAAA,yEAAc;IAAA,4DAAW;IAGvC,8EAC8D;IADvB,gKAAS,wBAAwB,IAAC,+SAC5D,kBAAU,QAAQ,UAAM,IADoC;IAErE,oFACoB;IACxB,4DAAS;IACT,8EACgE;IADxB,gKAAS,wBAAwB,IAAC,+SACjE,kBAAU,cAAc,UAAM,IADmC;IAE1E,2EAAU;IAAA,qEAAU;IAAA,4DAAW;IAG/B,8EACmC;IADK,gKAAS,wBAAwB,IAAC,+SAC7D,gCAAoB,IADyC;IAEtE,4IACkC;IACtC,4DAAS;;;IAZ8B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;IAUvB,0DAAkD;IAAlD,sHAAkD;;;IAoBzE,4EACiB;;;;IACjB,+EAC0E;IAAtE,uWAAS,kBAAU,MAAM,UAAM,IAAC;IACpC,4DAAU;;IAD2B,8EAA0B;;;IAG/D,qEAAkB;IAEV,uDACJ;IAAA,4DAAK;;;IAFD,0DAAuC;IAAvC,+GAAuC;IACvC,0DACJ;IADI,yHACJ;;;IAGR,2EAAyD;IACrD,mFACmB;IACvB,4DAAM;;;IACN,2EAAyC;IACrC,uFACuB;IAC3B,4DAAM;;IAFoC,0DAAe;IAAf,wEAAe;;;;ADnV9E,MAAM,qBAAqB;IA8BhC,YACU,MAAiB,EACjB,eAA2C,EAC3C,eAAgC,EAChC,QAAyB,EACzB,MAAc,EACd,gBAAkC,EAClC,EAAe;QANf,WAAM,GAAN,MAAM,CAAW;QACjB,oBAAe,GAAf,eAAe,CAA4B;QAC3C,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,OAAE,GAAF,EAAE,CAAa;QApCzB,qBAAgB,GAAa;YAC3B,QAAQ;YACR,OAAO;YACP,UAAU;YACV,YAAY;YACZ,eAAe;YACf,eAAe;YACf,aAAa;YACb,QAAQ;YACR,cAAc;YACd,QAAQ;SACT,CAAC;QACF,YAAO,GAAY,KAAK,CAAC;QAIzB,aAAQ,GAAqB,IAAI,0CAAO,EAAW,CAAC;QAMpD,cAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAE9C,oBAAe,GAAY,KAAK,CAAC;QACjC,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QA6B1B,+FAA+F;QAC/F,gBAAW,GAAU;YACnB,EAAE,IAAI,EAAE,KAAK,EAAE;YACf,EAAE,IAAI,EAAE,SAAS,EAAE;YACnB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,UAAU,EAAE;SACrB,CAAC;QAEF,mBAAc,GAAW,KAAK,CAAC;QAgI/B,+HAA+H;QAC/H,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;QA8BpC,cAAS,GAAY,IAAI,CAAC;IA3LvB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,KAAK,CAAC;SAChB,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YACpC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY,CAAC,aAAqB;QAChC,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IAC7D,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAYD,uBAAuB;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7C,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;SAC/B,CAAC;QAEF,IAAI,CAAC,eAAe;aACjB,YAAY,CAAC,MAAM,CAAC;aACpB,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBAElD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBAClC;qBAAM;oBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACtB;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;YACpE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACP,CAAC;IACD,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,SAAS,CAAC,MAAW,EAAE,MAAY;QACjC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,MAAM,KAAK,cAAc,EAAE;YAC7B,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;YAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;YAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;YACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;YAC7B,YAAY,CAAC,IAAI,GAAG;gBAClB,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,MAAM;aACf,CAAC;YACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0IAAoC,EAAE,YAAY,CAAC,CAAC;YACvF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;gBAEjC,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,KAAK,GAAG,oCAAoC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC5B,WAAW,EAAE;oBACX,WAAW,EAAE,MAAM,CAAC,KAAK;oBACzB,MAAM,EAAE,MAAM;iBACf;aACF,CAAC,CAAC;SACJ;IACH,CAAC;IAED,YAAY,CAAC,EAAU;QACrB,IAAI,MAAM,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACxB,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,iBAAiB;SACrC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,eAAe;qBACjB,MAAM,CAAC,MAAM,CAAC;qBACd,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,OAAO,EAAE,CAAC;4BACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAC/B,6BAA6B,CAC9B,CAAC;yBACH;6BAAM;4BACL,IAAI,CAAC,OAAO,EAAE,CAAC;4BACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;yBAChD;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,gBAAgB,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;oBACpE,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;iBACnB,CAAC,CAAC;aACN;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAKD,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IACD,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IACD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAC9D,GAAG,CAAC,QAAQ,GAAG,CACjB,EAAE,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAGD,mBAAmB,CAAC,MAAW;QAC7B,IAAI,SAAS,GAAG,mBAAmB,CAAC;QAEpC,6EAA6E;QAC7E,eAAe;QACf,MAAM;QAEN,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,uDAAS,CAAC;gBACZ,KAAK,EAAE,8DAA8D;gBACrE,KAAK,EAAE,UAAU;gBACjB,gBAAgB,EAAE,2BAA2B;gBAC7C,iBAAiB,EAAE,QAAQ;gBAC3B,gBAAgB,EAAE,IAAI;gBACtB,gBAAgB,EAAE,QAAQ;gBAC1B,IAAI,EAAE,MAAM;gBAEZ,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;oBACpB,IAAI,CAAC,KAAK,EAAE;wBACV,OAAO,2BAA2B,CAAC;qBACpC;gBACH,CAAC;aACF,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,IAAI,MAAM,CAAC,WAAW,EAAE;oBACtB,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC;oBAErC,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;wBACtD,OAAO;4BACL,EAAE,EAAE,OAAO,CAAC,EAAE;4BACd,MAAM,EAAE,MAAM;4BACd,eAAe,EAAE,eAAe;yBACjC,CAAC;oBACJ,CAAC,CAAC,CAAC;oBAEH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;oBAEpC,IAAI,CAAC,eAAe;yBACjB,qBAAqB,CAAC,aAAa,CAAC;yBACpC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBAC9B,SAAS,CAAC;wBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;4BAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,GAAG,IAAI,CAAG,EAAE;gCACvC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;gCAEF,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;gCACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;6BACxB;iCAAM,EAKN;wBACH,CAAC;wBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;4BACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;wBACjE,CAAC;wBACD,QAAQ,EAAE,GAAG,EAAE;4BACb,IAAI,CAAC,OAAO,EAAE,CAAC;wBACjB,CAAC;qBACF,CAAC;wBACF,+CAAY,CAAC;iBAChB;qBAAM;oBACL,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;oBACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;0FAzSU,qBAAqB;mHAArB,qBAAqB;kEAoBrB,sEAAY;kEACZ,4DAAO;;;;;;;QC5CpB,6EAAyB;QAIb,+EACiB;QACrB,4DAAM;QAEN,6EAAmC;QAEnC,yEAAiB;QAU2B,qEAAS;QAAA,4DAAK;QAEtB,0EAA4B;QAEmB,kEAAM;QAAA,4DAAI;QACrD,iFAE8B;QAFa,mJAAS,uBAAmB,IAAC;QAAxE,4DAE8B;QAElC,sEAAI;QAEyC,8IAAS,cAAU,KAAK,EAAE,EAAE,CAAC,IAAC;QAC/D,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAItD,sEAAI;QAEyC,8IAAS,aAAS,IAAC;QACpD,gFAA4B;QAAA,mEAAO;QAAA,4DAAW;QAI1D,kHAQK;QACL,kHAQK;QACL,kHAQK;QACT,4DAAK;QAET,2EAAmB;QAI4C,yRAEnG,gBAAqB,MAAM,cACX,aAAa,SACP,QAAQ,GACA,IAAD;QALuB,4DAKpB;QAGY,sEAAI;QAGQ,yRAAS,gBAAqB,KAAK,CAAC,IAAC;QADzC,4DAC4C;QAGpD,sEAAI;QAGQ,yRAAS,gBAAqB,MAAM,CAAC,IAAC;QAD1C,4DAC6C;QAGrD,sEAAI;QAGQ,yRAAS,gBAAqB,KAAK,CAAC,IAAC;QADzC,4DAC4C;QAQpE,2EAAsC;QAMP,kEAAM;QAAA,4DAAY;QAE7B,kFAAqC;QACjC,kIAGa;QACjB,4DAAa;QAEb,gIAEY;QAChB,4DAAiB;QAIzB,2EAAoB;QAGoB,8IAAS,sBAAkB,KAAK,CAAC,IAAC;QAC9D,4EAAU;QAAA,wEAAY;QAAA,4DAAW;QACjC,iEACJ;QAAA,4DAAS;QAET,8EACsE;QAAvC,8IAAS,sBAAkB,SAAS,CAAC,IAAC;QACjE,4EAAU;QAAA,mEAAO;QAAA,4DAAW;QAC5B,qEACJ;QAAA,4DAAS;QAET,8EACwE;QAAxC,8IAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC7B,sEACJ;QAAA,4DAAS;QACT,8EACwE;QAAxC,8IAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,sEACJ;QAAA,4DAAS;QACT,8EACwE;QAAxC,8IAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC3B,sEACJ;QAAA,4DAAS;QAKzB,qFACiC;QAC7B,6EAAoC;QAChC,4IAMkB;QAClB,8HAMW;QACf,qEAAe;QAEf,6EAAgC;QAC5B,4IAGkB;QAClB,8HAEW;QACf,qEAAe;QAEf,6EAAmC;QAC/B,4IAEkB;QAClB,8HAEW;QACf,qEAAe;QAEf,6EAAsC;QAClC,4IAEkB;QAClB,8HAEW;QACf,qEAAe;QAEf,6EAAwC;QACpC,4IAEkB;QAClB,8HAEW;QACf,qEAAe;QAEf,8EAA2C;QACvC,8IAEkB;QAClB,gIAEW;QACf,qEAAe;QAEf,8EAA2C;QACvC,8IAEkB;QAClB,gIAEW;QACf,qEAAe;QAEf,8EAAyC;QACrC,8IAEkB;QAClB,gIAEW;QACf,qEAAe;QAEf,8EAAoC;QAChC,8IAGkB;QAClB,gIA6BW;QACf,qEAAe;QAEf,8EAA0C;QACtC,8IAEkB;QAClB,gIAeW;QACf,qEAAe;QAEf,8EAAoC;QAChC,8IAC6E;QAC7E,iIAwBW;QACf,qEAAe;QAaf,4IACiB;QACjB,8HAEU;QAEV,oHAIK;QACT,4DAAY;QACZ,sHAGM;QACN,sHAGM;QAEN,iFAEgB;QACpB,4DAAM;;QA7WF,0DAAyB;QAAzB,kFAAyB;QAuCJ,2DAAmC;QAAnC,mGAAmC;QASnC,0DAAmC;QAAnC,mGAAmC;QASnC,0DAAmC;QAAnC,mGAAmC;QAiDtC,2DAAkB;QAAlB,+EAAkB;QAMsB,0DAAc;QAAd,oFAAc;QAMxC,0DAA6C;QAA7C,6GAA6C;QASnC,0DAAyC;QAAzC,iGAAyC;QAMzC,0DAA6C;QAA7C,qGAA6C;QAM7C,0DAA8C;QAA9C,sGAA8C;QAK9C,0DAA8C;QAA9C,sGAA8C;QAK9C,0DAA8C;QAA9C,sGAA8C;QASrD,0DAAyB;QAAzB,sFAAyB;QAuLvC,2DAAiC;QAAjC,iGAAiC;QAEpB,0DAAyB;QAAzB,kGAAyB;QAUpC,0DAAgC;QAAhC,oGAAgC;QAIjD,0DAAa;QAAb,6EAAa;QAKJ,0DAAe;QAAf,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9WA;AACR;AAEkB;AAMlC;AACyB;AACV;AAEO;AAKuE;;;;;;;;;;;;;ICqBvF,6EACuD;IACnD,mEAAmC;IAAA,uDAEvC;IAAA,4DAAS;;;IAF8B,0DAEvC;IAFuC,oGAEvC;;;IACA,6EACqD;IACjD,mEAAmC;IAAA,uDAEvC;IAAA,4DAAS;;;IAF8B,0DAEvC;IAFuC,oGAEvC;;;IACA,6EACuD;IACnD,mEAA+B;IAAA,uDAEnC;IAAA,4DAAS;;;IAF0B,0DAEnC;IAFmC,oGAEnC;;;IACA,6EACsD;IAClD,mEAAyC;IAAA,uDAE7C;IAAA,4DAAS;;;IAFoC,0DAE7C;IAF6C,oGAE7C;;;IACA,6EAA4E;IACxE,mEAAsC;IAAA,uDAE1C;IAAA,4DAAS;;;IAFiC,0DAE1C;IAF0C,oGAE1C;;;IAsBJ,4EAAgE;IAC5D,kFACJ;IAAA,4DAAY;;;;IAQ5B,0EAAmC;IAKnB,0TAAS,eAAQ,IAAC;IAClB,2EACJ;IAAA,4DAAS;IACT,6EAA2E;IAApC,2TAAS,mBAAW,IAAC;IACxD,mEACJ;IAAA,4DAAS;;;IANL,0DAA8B;IAA9B,yFAA8B;IAAC,6GAAsC;;;;IAjGrG,yEAA0C;IAGtB,iFAAsB;IAAA,4DAAS;IAE3C,4EAA8E;IAAtD,oTAAS,yBAAiB,IAAC;IAC/C,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAGlC,yEAAwB;IAGhB,yEAAc;IACV,0EAA4D;IAGtB,sEAAU;IAAA,4DAAM;IAC1C,2EAAmC;IAAA,wDAA8D;IAAA,4DAAM;IACvG,2EAA0B;IAAA,wEAAY;IAAA,4DAAM;IAC5C,2EAAmC;IAAA,wDAAqB;IAAA,4DAAM;IAC9D,2EAA0B;IAAA,0EAAc;IAAA,4DAAM;IAC9C,2EAAmC;IAAA,wDAAwB;IAAA,4DAAM;IACjE,2EAA0B;IAAA,yEAAa;IAAA,4DAAM;IAC7C,2EAAmC;IAAA,wDAAwB;IAAA,4DAAM;IAIzE,0EAAmD;IAEjB,mEAAO;IAAA,4DAAM;IACvC,2EAAmC;IAAA,wDAAgB;IAAA,4DAAM;IAEzD,2EAA0B;IAAA,yEAAa;IAAA,4DAAM;IAC7C,2EAAmC;IAAA,wDAAsB;IAAA,4DAAM;IAE/D,2EAA0B;IAAA,mEAAO;IAAA,4DAAM;IACvC,2EAAmC;IAC/B,6EAAuC;IACnC,+IAIS;IACT,+IAIS;IACT,+IAIS;IACT,+IAIS;IACT,+IAGS;IACb,qEAAe;IACnB,4DAAM;IAMlB,iEAAM;IACV,qEAAe;IAEf,yEAAc;IACV,0EAAiB;IAAA,6EAAiB;IAAA,4DAAK;IAEvC,4EAAuD;IAI5B,qEAAS;IAAA,4DAAY;IAChC,wEAAsD;IACtD,gFAA4C;IAAxB,uTAAS,qBAAa,IAAC;IAAC,kEAAM;IAAA,4DAAW;IAE7D,qJAEY;IAChB,4DAAiB;IAO7B,yIAaM;IACV,qEAAe;IACnB,4DAAmB;;;IA3FoC,2DAA8D;IAA9D,uJAA8D;IAE9D,0DAAqB;IAArB,uFAAqB;IAErB,0DAAwB;IAAxB,0FAAwB;IAExB,0DAAwB;IAAxB,0FAAwB;IAOxB,0DAAgB;IAAhB,kFAAgB;IAGhB,0DAAsB;IAAtB,wFAAsB;IAIvC,0DAAwB;IAAxB,wFAAwB;IACzB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAuB;IAAvB,mFAAuB;IAsBnB,0DAAqB;IAArB,qFAAqB;IAQ1B,0DAAkD;IAAlD,qHAAkD;IAU5D,0DAAe;IAAf,kFAAe;;ADrE9C,MAAM,oCAAoC;IAkB/C,YACS,SAAoD,EAC3B,IAAI,EAC5B,EAAe,EACf,QAAyB,EACzB,eAAgC,EAChC,MAAiB;QALlB,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI;QAC5B,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAiB;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAW;QArB3B,qBAAgB,GAAa,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAMzE,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEpD,cAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAE9C,oBAAe,GAAY,KAAK,CAAC;QACjC,iBAAY,GAAQ,KAAK,CAAC;QAgC1B,mBAAc,GAAG,KAAK,CAAC;QAyBvB,YAAO,GAAY,KAAK,CAAC;IA9CtB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAE7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACxB,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAGD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,WAAW;QACT,MAAM,YAAY,GAAG,IAAI,qEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,aAAa;SACtB,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yIAAoB,EAAE,YAAY,CAAC,CAAC;QAEvE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACrC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;gBAErC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAE3B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;iBAC9B,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,MAAM;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,wFAAwF;QAExF,MAAM,MAAM,GAAG,IAAI,4DAAU,EAAE;aAC5B,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;aAC/C,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEzD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAEhC,IAAI,CAAC,eAAe;aACjB,YAAY,CAAC,MAAM,CAAC;aACpB,IAAI,CAAC,+CAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAE1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBAChE,IAAI,CAAC,SAAS,EAAE,CAAC;iBAClB;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC/D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;SACF,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChE,CAAC;;wHA9GU,oCAAoC,uMAoBrC,qEAAe;kIApBd,oCAAoC;kEAMpC,sEAAY;kEACZ,4DAAO;;;;;;QChCpB,yEAA0B;QACtB,kIA8GM;QACV,4DAAM;;QA/GI,0DAAU;QAAV,0EAAU;;;;;;;;;;;;;;;;;;;;;;ACAmC;AACyB;AAC4B;AACnB;AAEiB;;;AAE1G,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,yFAAqB;QAChC,WAAW,EAAE,CAAC,qHAAmB,CAAC;QAClC,IAAI,EAAE;YACJ,UAAU,EAAE,qBAAqB;YACjC,iBAAiB,EAAE,CAAC,WAAW,CAAC;SACjC;KACF;IAED;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,kGAAwB;QACnC,WAAW,EAAE,CAAC,qHAAmB,CAAC;QAClC,IAAI,EAAE;YACJ,UAAU,EAAE,qBAAqB;YACjC,iBAAiB,EAAE,CAAC,WAAW,CAAC;SACjC;KACF;IAED;QACE,IAAI,EAAE,wBAAwB;QAC9B,SAAS,EAAE,mHAA6B;QACxC,WAAW,EAAE,CAAC,qHAAmB,CAAC;QAClC,IAAI,EAAE;YACJ,UAAU,EAAE,qBAAqB;YACjC,iBAAiB,EAAE,CAAC,WAAW,CAAC;SACjC;KACF;CACF,CAAC;AAMK,MAAM,sBAAsB;;4FAAtB,sBAAsB;mHAAtB,sBAAsB;uHAHxB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,sBAAsB,oFAFvB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCiC;AAEW;AACY;AACS;AAC0B;AACpC;AACnB;AACI;AAC0C;AACuB;;AAqB1H,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;iHAFf,CAAC,sDAAQ,CAAC,YARZ;YACP,0DAAY;YACZ,6EAAsB;YAEtB,wEAAe;YACf,yFAAgB;YAChB,sEAAY;SACb;mIAGU,eAAe,mBAhBxB,yFAAqB;QACrB,kGAAwB;QACxB,4HAAgC;QAChC,mHAA6B;QAC7B,0IAAoC,aAGpC,0DAAY;QACZ,6EAAsB;QAEtB,wEAAe;QACf,yFAAgB;QAChB,sEAAY;;;;;;;;;;;;;;;;;ACCT,MAAM,gCAAgC;IAE3C,gBAEG,CAAC;IAEJ,QAAQ;IAER,CAAC;;gHARU,gCAAgC;8HAAhC,gCAAgC;QC7B7C,gEAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC6C;AAEkB;AACE;AACX;AACV;AACY;AAEL;AAE0D;AAGmB;AACS;AACN;AACE;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICG3H,2EAA4D;IAWjB,yEAAY;IAAA,6DAAM;IACzC,6EAAoC;IAEhC,yDACF;IAAA,6DAAM;IAIZ,6EAAmB;IAEQ,wEAAW;IAAA,6DAAM;IACxC,6EAAoC;IAEhC,yDACF;IAAA,6DAAM;IAKd,4EAAiB;IAID,qEAAQ;IAAA,6DAAS;IACzB,8EAAmC;IAAA,yDAEjC;IAAA,6DAAO;IAOnB,6EAAmB;IAIY,wEAAW;IAAA,6DAAM;IACxC,6EAAoC;IAEhC,yDACF;IAAA,6DAAM;IAIZ,6EAAmB;IAEQ,wEAAW;IAAA,6DAAM;IACxC,6EAAoC;IAEhC,yDACF;IAAA,6DAAM;IAKd,4EAAiB;IAIA,sEAAQ;IAAA,6DAAS;IAC1B,8EAAmC;IAAA,yDAEjC;IAAA,6DAAO;;;IA5DP,4DACF;IADE,8GACF;IASE,2DACF;IADE,0GACF;IAUmC,2DAEjC;IAFiC,oGAEjC;IAcA,2DACF;IADE,6GACF;IASE,2DACF;IADE,yGACF;IAUmC,2DAEjC;IAFiC,mGAEjC;;;IAcM,6EAAiB;;;IAuBnC,6EAKC;IACC,6FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,8FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,4FACF;IAAA,6DAAY;;;IAoBZ,6EAKC;IACC,iGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,8FACF;IAAA,6DAAY;;;IAYV,mFAGG;IAAA,wDAAU;IAAA,6DACZ;;;IAFC,6EAAc;IACb,2DAAU;IAAV,2EAAU;;;IAIf,6EAKC;IACC,2FACF;IAAA,6DAAY;;;IAkBd,6EAKC;IACC,kFACF;IAAA,6DAAY;;;IAUR,mFAGG;IAAA,wDAAY;IAAA,6DACd;;;IAFC,+EAAgB;IACf,2DAAY;IAAZ,6EAAY;;;IAGjB,6EAKC;IACC,iGACF;IAAA,6DAAY;;;;IAUZ,4EAAkD;IAK9C,4TAAS,2BAAkB,IAAC;IAG5B,gFACG;IAAA,0EAAc;IAAA,6DAChB;;;;IAhBT,2EAGC;IACY,gFAAoB;IAAA,6DAAY;IAC3C,2EAAiB;IACf,qIAYM;IACN,4EAA+B;IAM3B,kTAAS,aAAiB,IAAC;IAE3B,4EAAU;IAAA,uEAAW;IAAA,6DAAW;IAElC,mFAOE;IAJA,6TAAU,gCAAuB,IAAC;IAHpC,6DAOE;IACF,6EAA+B;IAC7B,yDACF;IAAA,6DAAM;;;IAjCY,2DAA4B;IAA5B,iGAA4B;IAgC5C,2DACF;IADE,qHACF;;;IAmCF,6EAKC;IACC,+GACF;IAAA,6DAAY;;;IAjBhB,2EAGC;IAKc,wFAA4B;IAAA,6DAAY;IACnD,yEAAkD;IAClD,gJAOY;IACd,6DAAiB;;;IAPZ,2DAI3B;IAJ2B,+JAI3B;;;IAuB0C,wEAAY;;;IAU9B,6EAKC;IACC,8FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,yFACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,6FACF;IAAA,6DAAY;;;IAaZ,6EAKC;IACC,sGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,qGACF;IAAA,6DAAY;;;IAcZ,6EAKC;IACC,yGACF;IAAA,6DAAY;;;IAaZ,6EAKC;IACC,iGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,8FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,uFACF;IAAA,6DAAY;;;IAqBM,2EAAe;;;IAUjC,6EAKC;IACC,wGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,2GACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,yGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,4GACF;IAAA,6DAAY;;;IAqBM,+EAAmB;;;IAYjC,6EAKC;IACC,4FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,+FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,gGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,iGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,+FACF;IAAA,6DAAY;;;;IAxFpB,yEAAuC;IACrC,2EAAiB;IAMA,qEAAS;IAAA,6DAAY;IAChC,yEAAyC;IACzC,0JAOY;IACd,6DAAiB;IAGnB,4EAAqC;IAKtB,yEAAY;IAAA,6DAAY;IACnC,0EAAgD;IAChD,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,kEAAK;IAAA,6DAAY;IAC5B,0EAA0C;IAC1C,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,2EAAc;IAAA,6DAAY;IACrC,0EAA4C;IAC5C,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,yEAAY;IAAA,6DAAY;IACnC,0EAAiD;IACjD,4JAOY;IACd,6DAAiB;IAIrB,4EAAiB;IAYT,iUAAS,4BAAmB,IAAC;IAE7B,yDACF;IAAA,6DAAS;IAET,gFAKC;IAFC,iUAAS,yBAAgB,IAAC;IAG1B,qEACF;IAAA,6DAAS;IAIjB,sEAAe;;;IA/GJ,2DAI/B;IAJ+B,yJAI/B;IAc+B,2DAI/B;IAJ+B,uKAI/B;IAc+B,2DAI/B;IAJ+B,2JAI/B;IAc+B,2DAI/B;IAJ+B,+JAI/B;IAc+B,2DAI/B;IAJ+B,yKAI/B;IAgB8B,2DAA8B;IAA9B,2FAA8B;IAC9B,sHAA4C;IAI5C,2DACF;IADE,iHACF;;;IAkBF,4EAAU;IAAA,mEAAO;IAAA,6DAAW;IAAC,6EAC/B;;;IA2GU,wFAIG;IAAA,8DAAE;IAAA,6DACJ;;;IACD,iFAGC;IACC,wDACF;IAAA,6DAAW;;;IADT,2DACF;IADE,4GACF;;;IAIA,wFAIG;IAAA,gEAAI;IAAA,6DACN;;;IACD,iFAGG;IAAA,wDAAc;IAAA,6DAChB;;;IADE,2DAAc;IAAd,+EAAc;;;IAKjB,wFAIG;IAAA,wEAAY;IAAA,6DACd;;;IACD,iFAGG;IAAA,wDAAqB;IAAA,6DACvB;;;IADE,2DAAqB;IAArB,sFAAqB;;;IAKxB,wFAIG;IAAA,iEAAK;IAAA,6DACP;;;IACD,iFAGG;IAAA,wDAAe;IAAA,6DACjB;;;IADE,2DAAe;IAAf,gFAAe;;;IAKlB,wFAIG;IAAA,mEAAO;IAAA,6DACT;;;IACD,iFAGG;IAAA,wDAAiB;IAAA,6DACnB;;;IADE,2DAAiB;IAAjB,kFAAiB;;;IAKpB,wFAIG;IAAA,wEAAY;IAAA,6DACd;;;IACD,iFAGG;IAAA,wDAAsB;IAAA,6DACxB;;;IADE,2DAAsB;IAAtB,uFAAsB;;;IAMzB,wFAGC;IACC,oEACF;IAAA,6DAAkB;;;;IAClB,iFAGC;IAKG,2KAAS,wBAAwB,IAAC,iWACzB,uCAAoB,IADK;IAIlC,qFAIoB;IACtB,6DAAS;IAGT,+EAMC;IAHC,2KAAS,wBAAwB,IAAC,yTACzB,+BAAiB,IADQ;IAIlC,qFAIoB;IACtB,6DAAS;;IAlBL,2DAAwB;IAAxB,yEAAwB;IADxB,yEAAe;IAgBf,2DAA0B;IAA1B,2EAA0B;IAD1B,4EAAkB;;;IAQ1B,6EAEkB;;;;IAClB,gFAQC;IAHC,wXAAS,2CAAoB,IAAC;IAIhC,6DAAU;;IAHR,+EAA0B;;;IAI5B,iFAAoC;IAClC,wDAEG;IAAA,6DACJ;;;IAHC,2DAEG;IAFH,gIAEG;;;IAGP,4EAGC;IACC,wFAKuB;IACzB,6DAAM;;IAJF,2DAAe;IAAf,yEAAe;;;IAmCP,6EAAiB;;;IAY/B,6EAKC;IACC,4FACF;IAAA,6DAAY;;;IAoBZ,6EAKC;IACC,gGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,2GACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,+FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,gGACF;IAAA,6DAAY;;;;IAjGpB,yEAAuC;IACrC,2EAAiB;IAMA,qEAAS;IAAA,6DAAY;IAChC,yEAAkD;IAClD,0JAOY;IACd,6DAAiB;IAGnB,4EAAqC;IAKtB,0EAAa;IAAA,6DAAY;IACpC,0EAIE;IAMF,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,qFAAwB;IAAA,6DAAY;IAC/C,0EAAgD;IAChD,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,yEAAY;IAAA,6DAAY;IACnC,0EAAmD;IACnD,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,kEAAK;IAAA,6DAAY;IAC5B,0EAAmD;IACnD,4JAOY;IACd,6DAAiB;IAIrB,4EAAiB;IAYT,iUAAS,4BAAmB,IAAC;IAE7B,yDACF;IAAA,6DAAS;IAET,gFAKC;IAFC,iUAAS,yBAAgB,IAAC;IAG1B,qEACF;IAAA,6DAAS;IAIjB,sEAAe;;;;IAxHJ,2DAI/B;IAJ+B,2KAI/B;IAc8B,2DAA2B;IAA3B,iFAA2B;IAK3B,2DAAiB;IAAjB,uEAAiB;IAIhB,2DAI/B;IAJ+B,yKAI/B;IAc+B,2DAI/B;IAJ+B,uKAI/B;IAc+B,2DAI/B;IAJ+B,6KAI/B;IAc+B,2DAI/B;IAJ+B,6KAI/B;IAgB8B,2DAA8B;IAA9B,2FAA8B;IAC9B,sHAA4C;IAI5C,2DACF;IADE,6GACF;;;IAkBF,4EAAU;IAAA,mEAAO;IAAA,6DAAW;IAAC,4EAC/B;;;IA2GU,wFAIG;IAAA,8DAAE;IAAA,6DACJ;;;IACD,iFAGC;IACC,wDACF;IAAA,6DAAW;;;IADT,2DACF;IADE,4GACF;;;IAIA,wFAIG;IAAA,gEAAI;IAAA,6DACN;;;IACD,iFAGG;IAAA,wDAAuB;IAAA,6DACzB;;;IADE,2DAAuB;IAAvB,wFAAuB;;;IAK1B,wFAIG;IAAA,yEAAa;IAAA,6DACf;;;IACD,iFAGG;IAAA,wDAAsB;IAAA,6DACxB;;;IADE,2DAAsB;IAAtB,uFAAsB;;;IAKzB,wFAIG;IAAA,oFAAwB;IAAA,6DAC1B;;;IACD,iFAGG;IAAA,wDAAqB;IAAA,6DACvB;;;IADE,2DAAqB;IAArB,sFAAqB;;;IAKxB,wFAIG;IAAA,wEAAY;IAAA,6DACd;;;IACD,iFAGG;IAAA,wDAAwB;IAAA,6DAC1B;;;IADE,2DAAwB;IAAxB,yFAAwB;;;IAK3B,wFAIG;IAAA,iEAAK;IAAA,6DACP;;;IACD,iFAGG;IAAA,wDAAwB;IAAA,6DAC1B;;;IADE,2DAAwB;IAAxB,yFAAwB;;;IAK3B,wFAIG;IAAA,yEAAa;IAAA,6DACf;;;IACD,iFAGG;IAAA,wDAAsB;IAAA,6DACxB;;;IADE,2DAAsB;IAAtB,uFAAsB;;;IAMzB,wFAGC;IACC,oEACF;IAAA,6DAAkB;;;;IAClB,iFAGC;IAKG,2KAAS,wBAAwB,IAAC,iWACzB,uCAAoB,IADK;IAIlC,qFAIoB;IACtB,6DAAS;IAGT,+EAMC;IAHC,2KAAS,wBAAwB,IAAC,yTACzB,+BAAiB,IADQ;IAIlC,qFAIoB;IACtB,6DAAS;;IAlBL,2DAAwB;IAAxB,yEAAwB;IADxB,yEAAe;IAgBf,2DAA0B;IAA1B,2EAA0B;IAD1B,4EAAkB;;;IAQ1B,6EAEkB;;;;IAClB,gFAQC;IAHC,wXAAS,2CAAoB,IAAC;IAIhC,6DAAU;;IAHR,+EAA0B;;;IAI5B,iFAAoC;IAClC,wDAEG;IAAA,6DACJ;;;IAHC,2DAEG;IAFH,gIAEG;;;IAGP,4EAGC;IACC,wFAKuB;IACzB,6DAAM;;IAJF,2DAAe;IAAf,yEAAe;;;IAmCP,6EAAiB;;;IAY/B,mFAGG;IAAA,wDAAU;IAAA,6DACZ;;;IAFC,6EAAc;IACb,2DAAU;IAAV,2EAAU;;;IAGf,6EAKC;IACC,uGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,6FACF;IAAA,6DAAY;;;IAYV,mFAGG;IAAA,wDAAU;IAAA,6DACZ;;;IAFC,6EAAc;IACb,2DAAU;IAAV,2EAAU;;;IAGf,6EAKC;IACC,yGACF;IAAA,6DAAY;;;IAgBV,6EAMC;IACC,mGACF;IAAA,6DAAY;;;IAcZ,6EAMC;IACC,oGACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,qGACF;IAAA,6DAAY;;;IAWV,mFAGG;IAAA,wDAAU;IAAA,6DACZ;;;IAFC,6EAAc;IACb,2DAAU;IAAV,2EAAU;;;IAGf,6EAKC;IACC,4FACF;IAAA,6DAAY;;;IAoBZ,6EAKC;IACC,mGACF;IAAA,6DAAY;;;IAoBZ,6EAKC;IACC,oGACF;IAAA,6DAAY;;;;IAvIpB,yEAAuC;IACrC,2EAAiB;IAMA,4EAAgB;IAAA,6DAAY;IACvC,yEAAoD;IACpD,0JAQY;IACd,6DAAiB;IAGnB,4EAAqC;IAKtB,8EAAiB;IAAA,6DAAY;IACxC,0EAGE;IACF,4JAQY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,+EAAkB;IAAA,6DAAY;IACzC,0EAA2C;IAC3C,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,sEAAS;IAAA,6DAAY;IAChC,oFAAuC;IACrC,8JAIC;IACH,6DAAa;IACb,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,wEAAW;IAAA,6DAAY;IAClC,0EAIE;IAMF,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,yEAAY;IAAA,6DAAY;IACnC,0EAIE;IAMF,4JAOY;IACd,6DAAiB;IAIrB,4EAAiB;IAYT,iUAAS,4BAAmB,IAAC;IAE7B,yDACF;IAAA,6DAAS;IAET,gFAKC;IAFC,iUAAS,yBAAgB,IAAC;IAG1B,qEACF;IAAA,6DAAS;IAIjB,sEAAe;;;;;IA9JJ,2DAK/B;IAL+B,qLAK/B;IAiB+B,2DAK/B;IAL+B,uLAK/B;IAc+B,2DAI/B;IAJ+B,mKAI/B;IAciD,2DAAgB;IAAhB,2FAAgB;IAMlC,2DAI/B;IAJ+B,uKAI/B;IAc8B,2DAAgC;IAAhC,iFAAgC;IAKhC,2DAAsB;IAAtB,uEAAsB;IAIrB,2DAI/B;IAJ+B,uKAI/B;IAc8B,2DAAmC;IAAnC,iFAAmC;IAKnC,2DAAyB;IAAzB,uEAAyB;IAIxB,2DAI/B;IAJ+B,6KAI/B;IAgB8B,2DAA8B;IAA9B,2FAA8B;IAC9B,yHAA+C;IAI/C,2DACF;IADE,6GACF;;;IAkBF,4EAAU;IAAA,mEAAO;IAAA,6DAAW;IAAC,mFAC/B;;;IA2GU,wFAIG;IAAA,8DAAE;IAAA,6DACJ;;;IACD,iFAGC;IACC,wDACF;IAAA,6DAAW;;;IADT,2DACF;IADE,4GACF;;;IAIA,wFAIG;IAAA,4EAAgB;IAAA,6DAClB;;;IACD,iFAGG;IAAA,wDAAyB;IAAA,6DAC3B;;;IADE,2DAAyB;IAAzB,0FAAyB;;;IAK5B,wFAIG;IAAA,6EAAiB;IAAA,6DACnB;;;IACD,iFAGG;IAAA,wDAA0B;IAAA,6DAC5B;;;IADE,2DAA0B;IAA1B,2FAA0B;;;IAK7B,wFAIG;IAAA,gFAAoB;IAAA,6DACtB;;;IACD,iFAGG;IAAA,wDAAgB;IAAA,6DAClB;;;IADE,2DAAgB;IAAhB,iFAAgB;;;IAKnB,wFAIG;IAAA,qEAAS;IAAA,6DACX;;;IACD,iFAGG;IAAA,wDAAkB;IAAA,6DACpB;;;IADE,2DAAkB;IAAlB,mFAAkB;;;IAKrB,wFAIG;IAAA,uEAAW;IAAA,6DACb;;;IACD,iFAGG;IAAA,wDAAkB;IAAA,6DACpB;;;IADE,2DAAkB;IAAlB,mFAAkB;;;IAKrB,wFAIG;IAAA,wEAAY;IAAA,6DACd;;;IACD,iFAGG;IAAA,wDAAqB;IAAA,6DACvB;;;IADE,2DAAqB;IAArB,sFAAqB;;;IAMxB,wFAGC;IACC,oEACF;IAAA,6DAAkB;;;;IAClB,iFAGC;IAKG,2KAAS,wBAAwB,IAAC,iWACzB,uCAAoB,IADK;IAIlC,qFAIoB;IACtB,6DAAS;IAGT,+EAMC;IAHC,2KAAS,wBAAwB,IAAC,yTACzB,+BAAiB,IADQ;IAIlC,qFAIoB;IACtB,6DAAS;;IAlBL,2DAAwB;IAAxB,yEAAwB;IADxB,yEAAe;IAgBf,2DAA0B;IAA1B,2EAA0B;IAD1B,4EAAkB;;;IAQ1B,6EAEkB;;;;IAClB,gFAQC;IAHC,wXAAS,2CAAoB,IAAC;IAIhC,6DAAU;;IAHR,+EAA0B;;;IAI5B,iFAAoC;IAClC,wDAEG;IAAA,6DACJ;;;IAHC,2DAEG;IAFH,iIAEG;;;IAGP,4EAGC;IACC,wFAKuB;IACzB,6DAAM;;IAJF,2DAAe;IAAf,yEAAe;;;IAoCP,mFAAuB;;;IAarC,6EAKC;IACC,+FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,gGACF;IAAA,6DAAY;;;IAoBZ,6EAKC;IACC,6FACF;IAAA,6DAAY;;;IAoBZ,6EAKC;IACC,2FACF;IAAA,6DAAY;;;;IAxFpB,yEAAuC;IACrC,2EAAiB;IAMA,wEAAY;IAAA,6DAAY;IACnC,yEAAgD;IAChD,0JAOY;IACd,6DAAiB;IAGnB,4EAAqC;IAKtB,0EAAa;IAAA,6DAAY;IACpC,0EAAiD;IACjD,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,uEAAU;IAAA,6DAAY;IACjC,0EAIE;IAMF,4JAOY;IACd,6DAAiB;IAGnB,6EAAqC;IAKtB,qEAAQ;IAAA,6DAAY;IAC/B,0EAIE;IAMF,4JAOY;IACd,6DAAiB;IAIrB,4EAAiB;IAYT,iUAAS,4BAAmB,IAAC;IAE7B,yDACF;IAAA,6DAAS;IAET,gFAKC;IAFC,iUAAS,yBAAgB,IAAC;IAG1B,qEACF;IAAA,6DAAS;IAIjB,sEAAe;;;;;IA/GJ,2DAI/B;IAJ+B,qKAI/B;IAc+B,2DAI/B;IAJ+B,uKAI/B;IAc8B,2DAAiC;IAAjC,iFAAiC;IAKjC,2DAAuB;IAAvB,uEAAuB;IAItB,2DAI/B;IAJ+B,iKAI/B;IAc8B,2DAA+B;IAA/B,iFAA+B;IAK/B,2DAAqB;IAArB,uEAAqB;IAIpB,2DAI/B;IAJ+B,6JAI/B;IAgB8B,2DAA8B;IAA9B,4FAA8B;IAC9B,sHAA0C;IAI1C,2DACF;IADE,+GACF;;;IAkBF,4EAAU;IAAA,mEAAO;IAAA,6DAAW;IAAC,oFAC/B;;;IA2GU,wFAIG;IAAA,8DAAE;IAAA,6DACJ;;;IACD,iFAGC;IACC,wDACF;IAAA,6DAAW;;;IADT,2DACF;IADE,4GACF;;;IAIA,wFAIG;IAAA,wEAAY;IAAA,6DACd;;;IACD,iFAGG;IAAA,wDAAqB;IAAA,6DACvB;;;IADE,2DAAqB;IAArB,sFAAqB;;;IAKxB,wFAIG;IAAA,yEAAa;IAAA,6DACf;;;IACD,iFAGG;IAAA,wDAAsB;IAAA,6DACxB;;;IADE,2DAAsB;IAAtB,uFAAsB;;;IAKzB,wFAIG;IAAA,sEAAU;IAAA,6DACZ;;;IACD,iFAGG;IAAA,wDAAmB;IAAA,6DACrB;;;IADE,2DAAmB;IAAnB,oFAAmB;;;IAKtB,wFAIG;IAAA,oEAAQ;IAAA,6DACV;;;IACD,iFAGG;IAAA,wDAAiB;IAAA,6DACnB;;;IADE,2DAAiB;IAAjB,kFAAiB;;;IAMpB,wFAGC;IACC,oEACF;IAAA,6DAAkB;;;;IAClB,iFAGC;IAKG,2KAAS,wBAAwB,IAAC,iWACzB,uCAAoB,IADK;IAIlC,qFAIoB;IACtB,6DAAS;IAGT,+EAMC;IAHC,2KAAS,wBAAwB,IAAC,yTACzB,+BAAiB,IADQ;IAIlC,qFAIoB;IACtB,6DAAS;;IAlBL,2DAAwB;IAAxB,yEAAwB;IADxB,yEAAe;IAgBf,2DAA0B;IAA1B,2EAA0B;IAD1B,4EAAkB;;;IAQ1B,6EAEkB;;;;IAClB,gFAQC;IAHC,wXAAS,2CAAoB,IAAC;IAIhC,6DAAU;;IAHR,+EAA0B;;;IAI5B,iFAAoC;IAClC,wDAEG;IAAA,6DACJ;;;IAHC,2DAEG;IAFH,iIAEG;;;IAGP,4EAGC;IACC,wFAKuB;IACzB,6DAAM;;IAJF,2DAAe;IAAf,yEAAe;;;IAoCP,6EAAiB;;;IAUnC,6EAKC;IACC,uGACF;IAAA,6DAAY;;;IAqBZ,6EAKC;IACC,+GACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,gHACF;IAAA,6DAAY;;;IAaZ,6EAKC;IACC,wGACF;IAAA,6DAAY;;;IAqBZ,6EAKC;IACC,gHACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,iHACF;IAAA,6DAAY;;;IAsBM,2EAAe;;;IA6BjC,6EAKC;IACC,kGACF;IAAA,6DAAY;;;IAeZ,6EAKC;IACC,8FACF;IAAA,6DAAY;;;IA4BZ,6EAKC;IACC,oGACF;IAAA,6DAAY;;;IAiBZ,6EAKC;IACC,iGACF;IAAA,6DAAY;;;IAqBV,mFAGG;IAAA,wDAAU;IAAA,6DACZ;;;IAFC,6EAAc;IACb,2DAAU;IAAV,2EAAU;;;IAGf,6EAKC;IACC,oGACF;IAAA,6DAAY;;;IAoBZ,6EAKC;IACC,wGACF;IAAA,6DAAY;;;IA+BZ,6EAKC;IACC,yGACF;IAAA,6DAAY;;;IAsBM,8EAAkB;;;IAuBpC,6EAKC;IACC,sGACF;IAAA,6DAAY;;;IAkBZ,6EAKC;IACC,6FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,8FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,8FACF;IAAA,6DAAY;;;IAWZ,6EAKC;IACC,+FACF;IAAA,6DAAY;;;IAuEM,kEAAM;;;;;IAngGtC,0EAAmC;IACjC,8HAqFM;IACN,kGAAkD;IAE9C,6IAAyD;IACzD,4EAA4B;IAoBT,uEAAU;IAAA,6DAAY;IACjC,yEAA8C;IAC9C,2IAOY;IACd,6DAAiB;IAGnB,4EAAwD;IAKzC,wEAAW;IAAA,6DAAY;IAClC,yEAA+C;IAC/C,2IAOY;IACd,6DAAiB;IAGnB,4EAAwD;IAKzC,sEAAS;IAAA,6DAAY;IAChC,yEAA6C;IAC7C,2IAOY;IACd,6DAAiB;IAGnB,4EAAwD;IAKzC,0EAAa;IAAA,6DAAY;IACpC,yEAIE;IAMF,2IAOY;IACd,6DAAiB;IAGnB,4EAAwD;IAKzC,wEAAW;IAAA,6DAAY;IAClC,yEAA+C;IAC/C,2IAOY;IACd,6DAAiB;IAGnB,4EAAwD;IAKzC,qEAAQ;IAAA,6DAAY;IAE/B,mFAAuC;IACrC,6IAIC;IACH,6DAAa;IAEb,2IAOY;IACd,6DAAiB;IAEnB,4EAAwD;IAEtB,oEAAO;IAAA,6DAAQ;IAC7C,wFAA0C;IAErC,iEAAI;IAAA,6DACN;IACD,yFAGG;IAAA,mEAAM;IAAA,6DACR;IAIL,2IAOY;IACd,6DAAM;IAEN,4EAAwD;IAKzC,2EAAc;IAAA,6DAAY;IACrC,mFAA4C;IAC1C,6IAIC;IACH,6DAAa;IACb,2IAOY;IACd,6DAAiB;IAGnB,gIA0CM;IAgBN,4EAAwD;IAEnD,qEAAQ;IAAA,6DACV;IAGH,+HAmBM;IACR,6DAAM;IAEN,wEAAK;IACsC,+SAAS,iBAAQ,IAAC;IACzD,mEACF;IAAA,6DAAS;IACT,+EAKC;IACC,mEACF;IAAA,6DAAS;IAIf,6EAAU;IACR,+IAAoD;IACpD,6EAA4B;IAOT,wEAAW;IAAA,6DAAY;IAClC,yEAAgD;IAChD,2IAOY;IACd,6DAAiB;IAGnB,4EAAwD;IAKzC,mEAAM;IAAA,6DAAY;IAC7B,yEAA2C;IAC3C,2IAOY;IACd,6DAAiB;IAGnB,4EAAwD;IAKzC,uEAAU;IAAA,6DAAY;IACjC,yEAA8C;IAC9C,2IAOY;IACd,6DAAiB;IAIrB,4EAAiB;IAMA,iFAAmB;IAAA,6DAAY;IAC1C,0EAAuD;IACvD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,gFAAkB;IAAA,6DAAY;IACzC,0EAAsD;IACtD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,oFAAsB;IAAA,6DAAY;IAC7C,0EAGE;IACF,6IAOY;IACd,6DAAiB;IAIrB,6EAAiB;IAMA,4EAAc;IAAA,6DAAY;IACrC,0EAAkD;IAClD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,yEAAW;IAAA,6DAAY;IAClC,0EAA+C;IAC/C,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,kEAAI;IAAA,6DAAY;IAC3B,0EAAyC;IACzC,6IAOY;IACd,6DAAiB;IAIrB,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAIf,8EAAU;IACR,iJAAuD;IACvD,8EAA4B;IAOT,mFAAqB;IAAA,6DAAY;IAC5C,0EAAkD;IAClD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,+EAAiB;IAAA,6DAAY;IACxC,0EAAqD;IACrD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,oFAAsB;IAAA,6DAAY;IAC7C,0EAAkD;IAClD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,+EAAiB;IAAA,6DAAY;IACxC,0EAAqD;IACrD,6IAOY;IACd,6DAAiB;IAIrB,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAIf,8EAAU;IACR,iJAA2D;IAC3D,2EAAc;IACZ,8EAAkC;IAChC,qJAyHe;IAEf,mFAAe;IAEX,iJAEc;IAEd,6EAAqB;IAQD,yEAAW;IAAA,6DAAK;IAEtB,4EAA4B;IAGrB,oEAAM;IAAA,6DACR;IAEH,mFAOE;IAJA,qTAAS,6BAAoB,IAAC;IAHhC,6DAOE;IAEJ,wEAAI;IAKE,gTAAS,sBAAa,IAAC;IAEvB,kFACG;IAAA,iEAAG;IAAA,6DACL;IAIP,wEAAI;IAQE,gTAAS,mBAAU,IAAC;IAEpB,kFACG;IAAA,qEAAO;IAAA,6DACT;IAOX,6EAAmB;IAUT,0SAE5B,iBAAqB,MAAM,cACX,aAAa,SACP,QAAQ,GAE9C,IAD6C;IARH,6DASE;IAGN,wEAAI;IAQE,0SAEzB,iBAAqB,KAAK,CAC7C,IAD6C;IALH,6DAME;IAQd,uFAOC;IAEC,+EAAgC;IAC9B,yJAKC;IACD,2IAKW;IACb,sEAAe;IAEf,+EAAkC;IAChC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,+EAAyC;IACvC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,+EAAmC;IACjC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,+EAAqC;IACnC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,+EAA0C;IACxC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAGf,+EAAoC;IAClC,yJAKkB;IAClB,2IAiCW;IACb,sEAAe;IAEf,uJAEkB;IAClB,yIASU;IACV,2IAIC;IACH,6DAAY;IACZ,iIAUM;IACN,kFAMiB;IACnB,6DAAM;IAMlB,sEAAe;IAEf,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAGb,8EAAU;IACR,iJAAyD;IACzD,2EAAc;IACZ,8EAAkC;IAChC,qJAkIe;IAEf,mFAAe;IAEX,iJAEc;IAEd,6EAAqB;IAQD,wEAAU;IAAA,6DAAK;IAErB,4EAA4B;IAGrB,oEAAM;IAAA,6DACR;IAEH,mFAOE;IAJA,qTAAS,6BAAoB,IAAC;IAHhC,6DAOE;IAEJ,wEAAI;IAKE,gTAAS,sBAAa,IAAC;IAEvB,kFACG;IAAA,iEAAG;IAAA,6DACL;IAIP,wEAAI;IAQE,gTAAS,mBAAU,IAAC;IAEpB,kFACG;IAAA,qEAAO;IAAA,6DACT;IAOX,6EAAmB;IAUT,0SAE5B,iBAAqB,MAAM,cACX,aAAa,SACP,QAAQ,GAE9C,IAD6C;IARH,6DASE;IAGN,wEAAI;IAQE,0SAEzB,iBAAqB,KAAK,CAC7C,IAD6C;IALH,6DAME;IAQd,uFAOC;IAEC,+EAAgC;IAC9B,yJAKC;IACD,2IAKW;IACb,sEAAe;IAEf,+EAA2C;IACzC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,+EAA0C;IACxC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,+EAAyC;IACvC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,+EAA4C;IAC1C,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAA4C;IAC1C,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAA0C;IACxC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAGf,+EAAoC;IAClC,yJAKkB;IAClB,2IAiCW;IACb,sEAAe;IAEf,uJAEkB;IAClB,yIASU;IACV,2IAIC;IACH,6DAAY;IACZ,iIAUM;IACN,kFAMiB;IACnB,6DAAM;IAMlB,sEAAe;IAEf,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAGb,8EAAU;IACR,iJAAyD;IACzD,2EAAc;IACZ,8EAA4B;IAOT,+EAAiB;IAAA,6DAAY;IAExC,qFAA+C;IAC7C,+IAIC;IACH,6DAAa;IACb,6IAOY;IACd,6DAAiB;IAGnB,8EAAqC;IAKtB,4EAAc;IAAA,6DAAY;IACrC,2EAAkD;IAClD,6IAOY;IACd,6DAAiB;IAGnB,8EAAqC;IAKtB,yFAA2B;IAAA,6DAAY;IAElD,qFAAkD;IAChD,+IAIC;IACH,6DAAa;IACb,6IAOY;IACd,6DAAiB;IAIvB,mEAAM;IACN,8EAAqC;IACnC,qJAwKe;IAEf,mFAAe;IAEX,iJAEc;IAEd,6EAAqB;IAQD,uEAAS;IAAA,6DAAK;IAEpB,4EAA4B;IAGrB,oEAAM;IAAA,6DACR;IAEH,mFAOE;IAJA,qTAAS,6BAAoB,IAAC;IAHhC,6DAOE;IAEJ,wEAAI;IAKE,gTAAS,sBAAa,IAAC;IAEvB,kFACG;IAAA,iEAAG;IAAA,6DACL;IAIP,wEAAI;IAQE,gTAAS,mBAAU,IAAC;IAEpB,kFACG;IAAA,qEAAO;IAAA,6DACT;IAOX,6EAAmB;IAUT,0SAE5B,iBAAqB,MAAM,cACX,aAAa,SACP,QAAQ,GAE9C,IAD6C;IARH,6DASE;IAGN,wEAAI;IAQE,0SAEzB,iBAAqB,KAAK,CAC7C,IAD6C;IALH,6DAME;IAQd,uFAOC;IAEC,+EAAgC;IAC9B,yJAKC;IACD,2IAKW;IACb,sEAAe;IAEf,gFAA6C;IAC3C,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAA8C;IAC5C,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAAoC;IAClC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAAsC;IACpC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAAsC;IACpC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAAyC;IACvC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAGf,+EAAoC;IAClC,yJAKkB;IAClB,2IAiCW;IACb,sEAAe;IAEf,uJAEkB;IAClB,yIASU;IACV,2IAIC;IACH,6DAAY;IACZ,iIAUM;IACN,kFAMiB;IACnB,6DAAM;IAMlB,sEAAe;IAEf,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAIb,8EAAU;IACR,iJAA+D;IAE/D,2EAAc;IACZ,8EAAgC;IAC9B,qJAyHe;IAEf,mFAAe;IAEX,iJAEc;IAEd,6EAAqB;IAQD,wEAAU;IAAA,6DAAK;IAErB,4EAA4B;IAGrB,oEAAM;IAAA,6DACR;IAEH,mFAOE;IAJA,qTAAS,6BAAoB,IAAC;IAHhC,6DAOE;IAEJ,wEAAI;IAKE,gTAAS,sBAAa,IAAC;IAEvB,kFACG;IAAA,iEAAG;IAAA,6DACL;IAIP,wEAAI;IAQE,gTAAS,mBAAU,IAAC;IAEpB,kFACG;IAAA,qEAAO;IAAA,6DACT;IAOX,6EAAmB;IAUT,0SAE5B,iBAAqB,MAAM,cACX,aAAa,SACP,QAAQ,GAE9C,IAD6C;IARH,6DASE;IAGN,wEAAI;IAQE,0SAEzB,iBAAqB,KAAK,CAC7C,IAD6C;IALH,6DAME;IAQd,uFAOC;IAEC,+EAAgC;IAC9B,yJAKC;IACD,2IAKW;IACb,sEAAe;IAEf,gFAAyC;IACvC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAA0C;IACxC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAAuC;IACrC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAEf,gFAAqC;IACnC,yJAKC;IACD,2IAIC;IACH,sEAAe;IAGf,+EAAoC;IAClC,yJAKkB;IAClB,2IAiCW;IACb,sEAAe;IAEf,uJAEkB;IAClB,yIASU;IACV,2IAIC;IACH,6DAAY;IACZ,iIAUM;IACN,kFAMiB;IACnB,6DAAM;IAMlB,sEAAe;IAEf,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAIb,8EAAU;IACR,iJAAyD;IACzD,8EAA4B;IAOT,kFAAoB;IAAA,6DAAY;IAC3C,2EAAiD;IACjD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,qFAAuB;IAAA,6DAAY;IAC9C,2EAAoD;IACtD,6DAAiB;IAGnB,6EAAwD;IAKzC,mFAAqB;IAAA,6DAAY;IAC5C,2EAAkD;IAClD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,mFAAqB;IAAA,6DAAY;IAC5C,2EAAkD;IAClD,6IAOY;IACd,6DAAiB;IAIrB,6EAAiB;IAMA,mFAAqB;IAAA,6DAAY;IAC5C,2EAAkD;IAClD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,sFAAwB;IAAA,6DAAY;IAC/C,2EAAqD;IACvD,6DAAiB;IAGnB,6EAAwD;IAKzC,oFAAsB;IAAA,6DAAY;IAC7C,2EAAmD;IACnD,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,oFAAsB;IAAA,6DAAY;IAC7C,2EAAmD;IACnD,6IAOY;IACd,6DAAiB;IAIrB,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAKf,8EAAU;IACR,iJAAuD;IACvD,8EAA4B;IAsBT,6EAAe;IAAA,6DAAY;IACtC,2EAAmD;IACnD,mFACG;IADiB,kTAAS,2BAAkB,IAAC;IAC7C,oEAAM;IAAA,6DACR;IAED,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,yEAAW;IAAA,6DAAY;IAClC,2EAA+C;IAC/C,mFACG;IADiB,kTAAS,uBAAc,IAAC;IACzC,oEAAM;IAAA,6DACR;IAED,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,8EAAgB;IAAA,6DAAY;IACvC,2EAAmD;IACnD,mFACG;IADiB,kTAAS,2BAAkB,IAAC;IAC7C,oEAAM;IAAA,6DACR;IAIL,6EAAwD;IAKzC,+EAAiB;IAAA,6DAAY;IACxC,2EAAqD;IACrD,mFACG;IADiB,kTAAS,wBAAe,IAAC;IAC1C,oEAAM;IAAA,6DACR;IAED,6IAOY;IACd,6DAAiB;IAIrB,6EAAiB;IAMA,4EAAc;IAAA,6DAAY;IACrC,2EAAiD;IACjD,mFACG;IADiB,kTAAS,yBAAgB,IAAC;IAC3C,oEAAM;IAAA,6DACR;IAED,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,uEAAS;IAAA,6DAAY;IAChC,2EAA6C;IAC/C,6DAAiB;IAGnB,6EAAwD;IAKzC,+EAAiB;IAAA,6DAAY;IACxC,qFAA+C;IAC7C,+IAIC;IACH,6DAAa;IACb,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,mFAAqB;IAAA,6DAAY;IAC5C,2EAIE;IAMF,6IAOY;IACd,6DAAiB;IAoBnB,6EAAwD;IAKzC,oFAAsB;IAAA,6DAAY;IAC7C,2EAAwD;IACxD,mFACG;IADiB,kTAAS,yBAAgB,IAAC;IAC3C,oEAAM;IAAA,6DACR;IACD,6IAOY;IACd,6DAAiB;IAIrB,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAKf,8EAAU;IACR,iJAA0D;IAC1D,8EAA4B;IAoBT,0EAAY;IAAA,6DAAY;IACnC,2EAAgD;IAChD,6IAOY;IACd,6DAAiB;IAUnB,6EAAwD;IAKzC,wEAAU;IAAA,6DAAY;IACjC,2EAA0C;IAC1C,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,yEAAW;IAAA,6DAAY;IAClC,2EAA2C;IAC3C,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,yEAAW;IAAA,6DAAY;IAClC,2EAA2C;IAC3C,6IAOY;IACd,6DAAiB;IAGnB,6EAAwD;IAKzC,0EAAY;IAAA,6DAAY;IACnC,2EAAgD;IAChD,6IAOY;IACd,6DAAiB;IAqDrB,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,gFAKC;IACC,oEACF;IAAA,6DAAS;IAKf,8EAAU;IACR,iJAA8C;IAC9C,yEAAK;IAED,qIAEF;IAAA,6DAAI;IAEJ,yEAAK;IAED,oEACF;IAAA,6DAAS;IACT,iFAKC;IADC,0SAAS,WAAe,IAAC;IAEzB,qEACF;IAAA,6DAAS;IAET,iFAQC;IADC,gTAAS,mBAAU,IAAC;IAEpB,0DACF;IAAA,6DAAS;;;;;IAhiGC,2DAAwC;IAAxC,mHAAwC;IAsFlC,2DAAgB;IAAhB,0EAAgB;IAG9B,2DAAqB;IAArB,sFAAqB;IAuBhB,2DAI3B;IAJ2B,qJAI3B;IAc2B,2DAI3B;IAJ2B,uJAI3B;IAc2B,2DAI3B;IAJ2B,mJAI3B;IAc0B,2DAA+B;IAA/B,+EAA+B;IAK/B,2DAAqB;IAArB,qEAAqB;IAIpB,2DAI3B;IAJ2B,yIAI3B;IAc2B,2DAI3B;IAJ2B,uJAI3B;IAe6C,2DAAgB;IAAhB,0FAAgB;IAOlC,2DAI3B;IAJ2B,mJAI3B;IAqByB,4DAIzB;IAJyB,+IAIzB;IAa+C,2DAAqB;IAArB,+FAAqB;IAMzC,2DAI3B;IAJ2B,6JAI3B;IAOuB,2DAAsD;IAAtD,0HAAsD;IAgEtD,2DAAmC;IAAnC,uGAAmC;IAsCpC,2DAAqB;IAArB,sFAAqB;IAUhB,2DAI3B;IAJ2B,yJAI3B;IAc2B,2DAI3B;IAJ2B,+IAI3B;IAc2B,2DAI3B;IAJ2B,qJAI3B;IAgB2B,2DAI3B;IAJ2B,uKAI3B;IAc2B,2DAI3B;IAJ2B,qKAI3B;IAiB2B,2DAI3B;IAJ2B,2KAI3B;IAgB2B,2DAI3B;IAJ2B,6JAI3B;IAc2B,2DAI3B;IAJ2B,uJAI3B;IAc2B,2DAI3B;IAJ2B,2IAI3B;IAwBsB,2DAAqB;IAArB,sFAAqB;IAUhB,2DAI3B;IAJ2B,6JAI3B;IAc2B,2DAI3B;IAJ2B,mKAI3B;IAc2B,2DAI3B;IAJ2B,6JAI3B;IAc2B,2DAI3B;IAJ2B,mKAI3B;IAyBwB,2DAA2B;IAA3B,4FAA2B;IAChB,2DAAsB;IAAtB,0FAAsB;IAmOzB,4DAA0B;IAA1B,2FAA0B;IAwIvB,4DAAkC;IAAlC,sGAAkC;IAM3D,2DACV;IADU,uGACV;IAYiC,2DAAmC;IAAnC,uGAAmC;IAWpC,2DAAe;IAAf,yEAAe;IA+BvB,2DAA2B;IAA3B,4FAA2B;IAChB,2DAAsB;IAAtB,0FAAsB;IA4OzB,4DAA0B;IAA1B,2FAA0B;IAsJvB,4DAAkC;IAAlC,sGAAkC;IAM3D,2DACV;IADU,uGACV;IAYiC,2DAAmC;IAAnC,uGAAmC;IAWpC,2DAAe;IAAf,yEAAe;IA+BvB,2DAAqB;IAArB,sFAAqB;IAWE,2DAAsB;IAAtB,gGAAsB;IAMxC,2DAI7B;IAJ6B,mKAI7B;IAc6B,2DAI7B;IAJ6B,6JAI7B;IAe+C,2DAA4B;IAA5B,sGAA4B;IAM9C,2DAI7B;IAJ6B,yKAI7B;IAQwB,2DAA8B;IAA9B,+FAA8B;IACnB,2DAAsB;IAAtB,0FAAsB;IAkRzB,4DAA0B;IAA1B,2FAA0B;IAsJvB,4DAAkC;IAAlC,sGAAkC;IAM3D,2DACV;IADU,uGACV;IAYiC,2DAAmC;IAAnC,uGAAmC;IAWpC,2DAAe;IAAf,yEAAe;IAiCvB,2DAAyB;IAAzB,0FAAyB;IACd,2DAAsB;IAAtB,0FAAsB;IAmOzB,4DAA0B;IAA1B,2FAA0B;IA0HvB,4DAAkC;IAAlC,sGAAkC;IAM3D,2DACV;IADU,uGACV;IAYiC,2DAAmC;IAAnC,uGAAmC;IAWpC,2DAAe;IAAf,yEAAe;IA+BzB,2DAAqB;IAArB,sFAAqB;IAUhB,2DAI3B;IAJ2B,2JAI3B;IAwB2B,4DAI3B;IAJ2B,6JAI3B;IAc2B,2DAI3B;IAJ2B,6JAI3B;IAgB2B,2DAI3B;IAJ2B,6JAI3B;IAwB2B,4DAI3B;IAJ2B,+JAI3B;IAc2B,2DAI3B;IAJ2B,+JAI3B;IAyBsB,2DAAqB;IAArB,sFAAqB;IA6BhB,2DAI3B;IAJ2B,+JAI3B;IAkB2B,2DAI3B;IAJ2B,uJAI3B;IA+B2B,4DAI3B;IAJ2B,mKAI3B;IAoB2B,2DAI3B;IAJ2B,2JAI3B;IAwB6C,4DAAwB;IAAxB,kGAAwB;IAM1C,2DAI3B;IAJ2B,mKAI3B;IAc0B,2DAAiC;IAAjC,iFAAiC;IAKjC,2DAAuB;IAAvB,uEAAuB;IAItB,2DAI3B;IAJ2B,yKAI3B;IAkC2B,2DAI3B;IAJ2B,yKAI3B;IAyBsB,2DAAqB;IAArB,sFAAqB;IAuBhB,2DAI3B;IAJ2B,yJAI3B;IAqB2B,2DAI3B;IAJ2B,6IAI3B;IAc2B,2DAI3B;IAJ2B,+IAI3B;IAc2B,2DAI3B;IAJ2B,+IAI3B;IAc2B,2DAI3B;IAJ2B,yJAI3B;IAiGsB,4DAA8B;IAA9B,0FAA8B;IAC9B,qFAAoB;IAIpB,2DACF;IADE,yGACF;;;AD3hGb,MAAM,wBAAwB;IAsEnC,YACU,EAAe,EACf,mBAAwC,EACxC,QAAyB,EACzB,MAAc,EACd,KAAqB,EACrB,eAAgC,EAChC,MAAiB,EACjB,QAAkB;QAPlB,OAAE,GAAF,EAAE,CAAa;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAU;QA7E5B,aAAQ,GAAG,KAAK,CAAC;QACjB,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,KAAK,CAAC;QAKrB,aAAQ,GAAqB,IAAI,0CAAO,EAAW,CAAC;QAEpD,oBAAe,GAAY,KAAK,CAAC;QACjC,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAY,IAAI,CAAC;QAC9B,oBAAe,GAAY,KAAK,CAAC;QACjC,mBAAc,GAAG,KAAK,CAAC;QAGvB,kBAAa,GAAQ;YACnB,WAAW;YACX,OAAO;YACP,YAAY;YACZ,SAAS;YACT,OAAO;YACP,OAAO;SACR,CAAC;QAEF,uBAAkB,GAAQ;YACxB,QAAQ;YACR,SAAS;YACT,UAAU;YACV,WAAW;YACX,OAAO;YACP,SAAS;YACT,mBAAmB;SACpB,CAAC;QACF,wBAAmB,GAAQ;YACzB,oBAAoB;YACpB,iCAAiC;YACjC,8BAA8B;YAC9B,KAAK;YACL,SAAS;YACT,SAAS;YACT,WAAW;YACX,WAAW;YACX,SAAS;YACT,aAAa;YACb,OAAO;SACR,CAAC;QACF,8BAAyB,GAAQ;YAC/B,WAAW;YACX,WAAW;YACX,WAAW;YACX,UAAU;YACV,UAAU;SACX,CAAC;QACF,0BAAqB,GAAQ;YAC3B,UAAU;YACV,WAAW;YACX,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,6BAA6B;SAC9B,CAAC;QACF,kBAAa,GAAQ;YACnB,qBAAqB;YACrB,+BAA+B;YAC/B,+BAA+B;YAC/B,MAAM;YACN,OAAO;SACR,CAAC;QAiIF,aAAQ,GAAY,KAAK,CAAC;QAuT1B,gBAAW,GAAG,IAAI,wEAAkB,CAAM,EAAE,CAAC,CAAC;QAI9C,sBAAiB,GAAa;YAC5B,IAAI;YACJ,MAAM;YACN,aAAa;YACb,OAAO;YACP,SAAS;YACT,cAAc;YACd,QAAQ;SACT,CAAC;QACF,qBAAgB,GAAG,KAAK,CAAC;QACzB,mBAAc,GAAW,EAAE,CAAC;QAuG5B,gBAAW,GAAG,IAAI,wEAAkB,CAAM,EAAE,CAAC,CAAC;QAI9C,sBAAiB,GAAa;YAC5B,IAAI;YACJ,eAAe;YACf,cAAc;YACd,aAAa;YACb,gBAAgB;YAChB,gBAAgB;YAChB,cAAc;YACd,QAAQ;SACT,CAAC;QACF,qBAAgB,GAAG,KAAK,CAAC;QACzB,mBAAc,GAAW,EAAE,CAAC;QA+F5B,gBAAW,GAAG,IAAI,wEAAkB,CAAM,EAAE,CAAC,CAAC;QAI9C,sBAAiB,GAAa;YAC5B,IAAI;YACJ,iBAAiB;YACjB,kBAAkB;YAClB,QAAQ;YACR,UAAU;YACV,UAAU;YACV,aAAa;YACb,QAAQ;SACT,CAAC;QACF,qBAAgB,GAAG,KAAK,CAAC;QACzB,mBAAc,GAAW,EAAE,CAAC;QA0G5B,gBAAW,GAAG,IAAI,wEAAkB,CAAM,EAAE,CAAC,CAAC;QAI9C,sBAAiB,GAAa;YAC5B,IAAI;YACJ,aAAa;YACb,cAAc;YACd,WAAW;YACX,SAAS;YACT,QAAQ;SACT,CAAC;QACF,qBAAgB,GAAG,KAAK,CAAC;QACzB,mBAAc,GAAW,EAAE,CAAC;QAmF5B,YAAO,GAAY,KAAK,CAAC;QAsLzB,qGAAqG;QAErG,qGAAqG;QACrG,2BAA2B;QAC3B,YAAO,GAAY,KAAK,CAAC;QAniCvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;QAC/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;QAClE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IACE,IAAI,CAAC,KAAK,CAAC,WAAW;YACtB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,KAAK,UAAU,EACtD;YACA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC1C,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAChC,IAAI,MAAM,CAAC,WAAW,EAAE;oBACtB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;oBACtC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;iBACnC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IACD,eAAe,KAAI,CAAC;IACpB,WAAW;QACT,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,eAAe;aACjB,gBAAgB,CAAC,MAAM,CAAC;aACxB,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,CAAC,MAAM,EAAE;oBACd,+DAA+D;oBAC/D,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC1D,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;wBAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;qBACzB;oBAED,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;oBAE3B,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACtB;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACP,CAAC;IACD,gBAAgB,CAAC,GAAG;QAClB,IAAI,GAAG,EAAE;YACP,IAAI,GAAG,CAAC,MAAM,EAAE;gBACd,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;oBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;oBAC9C,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;gBACD,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;oBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;oBAC9C,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;gBACD,IAAI,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE;oBACjC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;oBACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;gBACD,IAAI,GAAG,CAAC,MAAM,CAAC,uBAAuB,EAAE;oBACtC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC;oBAC3D,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;aACF;iBAAM;gBACL,IAAI,GAAG,CAAC,UAAU,EAAE;oBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC;oBACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;gBACD,IAAI,GAAG,CAAC,UAAU,EAAE;oBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC;oBACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;gBACD,IAAI,GAAG,CAAC,kBAAkB,EAAE;oBAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,kBAAkB,CAAC;oBAC/C,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;gBACD,IAAI,GAAG,CAAC,uBAAuB,EAAE;oBAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,uBAAuB,CAAC;oBACpD,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;aACF;SACF;IACH,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;YAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,YAAY,CAAC,QAAS;;QACpB,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,EAAE,mCAAI,EAAE,CAAC;YAExB,YAAY;YACZ,KAAK,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,mCAAI,EAAE,CAAC;YAC9B,SAAS,EAAE;gBACT,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,SAAS,mCAAI,EAAE;gBACzB;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,UAAU,EAAE;gBACV,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,mCAAI,EAAE;gBAC1B,CAAC,iEAAoB,CAAC,CAAC,CAAC,EAAE,iEAAoB,CAAC,EAAE,CAAC,CAAC;aACpD;YACD,QAAQ,EAAE;gBACR,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,mCAAI,EAAE;gBACxB;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,GAAG,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,GAAG,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YAC/C,UAAU,EAAE;gBACV,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,mCAAI,EAAE;gBAC1B;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,+DAAkB,CAAC,QAAQ,CAAC;iBAC7B;aACF;YACD,QAAQ,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YACzD,MAAM,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,mCAAI,MAAM,EAAE,gEAAmB,CAAC;YACzD,aAAa,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YACnE,QAAQ,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,mCAAI,KAAK,CAAC;YACvC,aAAa,EAAE;gBACb,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,mCAAI,EAAE;gBAC7B;oBACE,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,+DAAkB,CAAC,QAAQ,CAAC;iBAC7B;aACF;YACD,mBAAmB,EAAE,CAAC,EAAE,CAAC;YAEzB,cAAc;YACd,WAAW,EAAE;gBACX,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,mCAAI,QAAQ;gBACjC;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,MAAM,EAAE;gBACN,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,mCAAI,EAAE;gBACtB;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,SAAS,EAAE;gBACT,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,SAAS,mCAAI,EAAE;gBACzB;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,kBAAkB,mCAAI,OAAO;gBACvC;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,mCAAI,EAAE;gBACjC;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,oBAAoB,mCAAI,EAAE;gBACpC;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,aAAa,EAAE;gBACb,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,mCAAI,EAAE;gBAC7B;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,GAAG,CAAC;iBAC1B;aACF;YACD,UAAU,EAAE;gBACV,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,mCAAI,EAAE;gBAC1B;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;oBACxB,+DAAkB,CAAC,QAAQ,CAAC;iBAC7B;aACF;YACD,IAAI,EAAE;gBACJ,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,mCAAI,EAAE;gBACpB;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,GAAG,CAAC;iBAC1B;aACF;YAED,cAAc;YACd,aAAa,EAAE;gBACb,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,mCAAI,EAAE;gBAC7B;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,EAAE,CAAC;oBACxB,iEAAoB,CAAC,EAAE,CAAC;oBACxB,+DAAkB,CAAC,QAAQ,CAAC;iBAC7B;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,gBAAgB,mCAAI,EAAE;gBAChC;oBACE,iEAAoB,CAAC,EAAE,CAAC;oBACxB,iEAAoB,CAAC,EAAE,CAAC;oBACxB,+DAAkB,CAAC,QAAQ,CAAC;iBAC7B;aACF;YACD,aAAa,EAAE;gBACb,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,mCAAI,EAAE;gBAC7B;oBACE,gEAAmB;oBACnB,+DAAkB,CAChB,qDAAqD,CACtD;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,gBAAgB,mCAAI,EAAE;gBAChC;oBACE,+DAAkB,CAChB,qDAAqD,CACtD;iBACF;aACF;YAED,WAAW;YACX,UAAU,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,mCAAI,EAAE,CAAC;YAExC,WAAW;YACX,UAAU,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,mCAAI,EAAE,CAAC;YAExC,eAAe;YACf,gBAAgB,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,gBAAgB,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YACzE,aAAa,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YACnE,mBAAmB,EAAE;gBACnB,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,mBAAmB,mCAAI,EAAE;gBACnC,gEAAmB;aACpB;YACD,kBAAkB,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,kBAAkB,mCAAI,EAAE,CAAC;YAExD,gBAAgB;YAChB,uBAAuB,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,uBAAuB,mCAAI,EAAE,CAAC;YAElE,eAAe;YACf,YAAY,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,YAAY,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YACjE,eAAe,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,eAAe,mCAAI,EAAE,CAAC;YAClD,aAAa,EAAE;gBACb,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,qCAAI,EAAE;gBAC7B;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,EAAE,CAAC;oBACxB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,aAAa,EAAE;gBACb,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,qCAAI,EAAE;gBAC7B;oBACE,+DAAkB,CAChB,qDAAqD,CACtD;iBACF;aACF;YACD,aAAa,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YACnE,gBAAgB,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,gBAAgB,qCAAI,EAAE,CAAC;YACpD,cAAc,EAAE;gBACd,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,cAAc,qCAAI,EAAE;gBAC9B;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,EAAE,CAAC;oBACxB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,cAAc,EAAE;gBACd,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,cAAc,qCAAI,EAAE;gBAC9B;oBACE,+DAAkB,CAChB,qDAAqD,CACtD;iBACF;aACF;YAED,SAAS;YACT,YAAY,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,YAAY,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YACjE,cAAc,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,cAAc,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YACrE,QAAQ,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YACzD,UAAU,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YAC7D,cAAc,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,cAAc,qCAAI,EAAE,CAAC;YAChD,gBAAgB,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,gBAAgB,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YACzE,kBAAkB,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,kBAAkB,qCAAI,EAAE,CAAC;YACxD,YAAY,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,YAAY,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YACjE,UAAU,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YAC7D,QAAQ,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,qCAAI,EAAE,CAAC;YACpC,gBAAgB,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,gBAAgB,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YACzE,mBAAmB,EAAE;gBACnB,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,mBAAmB,qCAAI,EAAE;gBACnC,gEAAmB;aACpB;YACD,iBAAiB,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,iBAAiB,qCAAI,EAAE,CAAC;YACtD,mBAAmB,EAAE;gBACnB,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,mBAAmB,qCAAI,EAAE;gBACnC,gEAAmB;aACpB;YACD,aAAa,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YAEnE,gBAAgB;YAChB,QAAQ,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,qCAAI,cAAc,EAAE,gEAAmB,CAAC;YACrE,WAAW,EAAE;gBACX,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,qCAAI,EAAE;gBAC3B;oBACE,gEAAmB;oBACnB,+DAAkB,CAAC,QAAQ,CAAC;oBAC5B,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,2DAA2D;YAC3D,KAAK,EAAE;gBACL,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,qCAAI,EAAE;gBACrB;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,MAAM,EAAE;gBACN,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,qCAAI,EAAE;gBACtB;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,MAAM,EAAE;gBACN,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,qCAAI,EAAE;gBACtB;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,EAAE,CAAC;iBACzB;aACF;YACD,WAAW,EAAE,CAAC,eAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,qCAAI,EAAE,EAAE,gEAAmB,CAAC;YAC/D,+CAA+C;YAC/C,6DAA6D;YAC7D,qDAAqD;YACrD,mEAAmE;YACnE,uCAAuC;YACvC,mDAAmD;YACnD,qDAAqD;SACtD,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;YAC/B,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;YAC/D,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;gBAEhD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;gBAE9C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC5C,YAAY,CAAC,OAAO,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAwBD,YAAY,CAAC,KAAY;QACvB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC3D,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACxC;IACH,CAAC;IAED,gBAAgB,CAAC,QAAS;;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,IAAI,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,mCAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACnD,WAAW,EAAE;gBACX,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,mCAAI,EAAE;gBAC3B;oBACE,iEAAoB,CAAC,EAAE,CAAC;oBACxB,iEAAoB,CAAC,EAAE,CAAC;oBACxB,+DAAkB,CAAC,QAAQ,CAAC;iBAC7B;aACF;YACD,KAAK,EAAE;gBACL,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,mCAAI,EAAE;gBACrB;oBACE,+DAAkB,CAChB,qDAAqD,CACtD;iBACF;aACF;YACD,OAAO,EAAE;gBACP,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,mCAAI,EAAE;gBACvB,CAAC,iEAAoB,CAAC,CAAC,CAAC,EAAE,iEAAoB,CAAC,EAAE,CAAC,CAAC;aACpD;YACD,YAAY,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,YAAY,mCAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;SACpE,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;SAClC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,CAAC;IAED,YAAY,CAAC,IAAS,EAAE,KAAa;QACnC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACtD;aAAM,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;YAC3C,IAAI,aAAqB,CAAC;YAE1B,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE;gBAC/B,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAClD,CAAC;aACH;iBAAM;gBACL,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC;aAC5C;YAED,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;gBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;aACjE;SACF;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IA0BD,YAAY,CAAC,KAAY;QACvB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC3D,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACxC;IACH,CAAC;IAED,gBAAgB,CAAC,QAAS;;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,aAAa,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,mCAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACrE,YAAY,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,YAAY,mCAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACnE,WAAW,EAAE;gBACX,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,mCAAI,EAAE;gBAC3B,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,EAAE,CAAC,CAAC;aAChD;YACD,cAAc,EAAE;gBACd,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,cAAc,mCAAI,EAAE;gBAC9B,CAAC,iEAAoB,CAAC,EAAE,CAAC,EAAE,+DAAkB,CAAC,eAAe,CAAC,CAAC;aAChE;YACD,cAAc,EAAE;gBACd,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,cAAc,mCAAI,EAAE;gBAC9B,CAAC,6DAAgB,EAAE,iEAAoB,CAAC,EAAE,CAAC,CAAC;aAC7C;YACD,iBAAiB,EAAE,CAAC,EAAE,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;SAClC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,CAAC;IAED,YAAY,CAAC,IAAS,EAAE,KAAa;QACnC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACtD;aAAM,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;YAC3C,IAAI,aAAqB,CAAC;YAE1B,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE;gBAC/B,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAClD,CAAC;aACH;iBAAM;gBACL,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC;aAC5C;YAED,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;gBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;aACjE;SACF;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAyBD,YAAY,CAAC,KAAY;QACvB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC3D,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACxC;IACH,CAAC;IAED,gBAAgB,CAAC,QAAS;;QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,eAAe,EAAE;gBACf,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,eAAe,mCAAI,EAAE;gBAC/B;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,GAAG,CAAC;iBAC1B;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,gBAAgB,mCAAI,EAAE;gBAChC;oBACE,gEAAmB;oBACnB,iEAAoB,CAAC,CAAC,CAAC;oBACvB,iEAAoB,CAAC,GAAG,CAAC;iBAC1B;aACF;YACD,MAAM,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,mCAAI,EAAE,EAAE,iEAAoB,CAAC,EAAE,CAAC,CAAC;YAC1D,QAAQ,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YACzD,QAAQ,EAAE;gBACR,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,mCAAI,EAAE;gBACxB,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,CAAC,CAAC,EAAE,iEAAoB,CAAC,CAAC,CAAC,CAAC;aACxE;YACD,WAAW,EAAE;gBACX,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,mCAAI,EAAE;gBAC3B,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,CAAC,CAAC,EAAE,iEAAoB,CAAC,CAAC,CAAC,CAAC;aACxE;SACF,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;SAC1C,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,CAAC;IAED,YAAY,CAAC,IAAS,EAAE,KAAa;QACnC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACzD;aAAM,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;YAC3C,IAAI,aAAqB,CAAC;YAE1B,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,EAAE;gBAClC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CACrD,CAAC;aACH;iBAAM;gBACL,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC;aAC5C;YAED,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;gBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;aACpE;SACF;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAuBD,YAAY,CAAC,KAAY;QACvB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC3D,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACxC;IACH,CAAC;IAED,gBAAgB,CAAC,QAAS;;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,WAAW,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YAC/D,YAAY,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,YAAY,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YACjE,SAAS,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,SAAS,mCAAI,EAAE,EAAE,gEAAmB,CAAC;YAC3D,OAAO,EAAE,CAAC,cAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,mCAAI,EAAE,EAAE,gEAAmB,CAAC;SACxD,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,uBAAuB,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;SAC/C,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,CAAC;IAED,YAAY,CAAC,IAAS,EAAE,KAAa;QACnC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACpD;aAAM,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;YAC3C,IAAI,aAAqB,CAAC;YAE1B,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE;gBAC7B,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAC7C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAChD,CAAC;aACH;iBAAM;gBACL,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC;aAC5C;YAED,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;gBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;aAC/D;SACF;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAMD,eAAe,CAAC,KAAU;QACxB,MAAM,IAAI,GAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAEhC,MAAM,CAAC,SAAS,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAgB,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtB,mBAAmB,EAAE,IAAI,CAAC,UAAU;aACrC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,IAAI,IAAI,EAAE;YACR,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC5B;IACH,CAAC;IACD,WAAW;QACT,uBAAuB;QACvB,iBAAiB;QACjB,6BAA6B;QAC7B,KAAK;QACL,mDAAmD;QACnD,eAAe;QACf,wBAAwB;QACxB,mCAAmC;QACnC,8BAA8B;QAC9B,sDAAsD;QACtD,eAAe;QACf,8BAA8B;QAC9B,oEAAoE;QACpE,QAAQ;QACR,OAAO;QACP,eAAe;QACf,4BAA4B;QAC5B,MAAM;QACN,KAAK;IACP,CAAC;IAED,gBAAgB;QACd,IAAI,QAAQ,GAAG,UAAU,CAAC;QAE1B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC;aACrC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACnC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACb,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,QAAQ,EAAE,CAAC,CAAC;YAC7C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAOD,aAAa;QACX,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,eAAe;YACvB,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iJAAuB,EAAE,YAAY,CAAC,CAAC;QAC1E,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;oBAClC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;oBAClC,kBAAkB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;oBAClC,gBAAgB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;iBACvC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,gBAAgB;YACxB,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oJAAwB,EAAE,YAAY,CAAC,CAAC;QAC3E,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY;iBACvC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB;QACd,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,kBAAkB;YAC1B,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,wJAA0B,EAC1B,YAAY,CACb,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC5B,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc;iBAC3C,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY;QACV,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,kBAAkB;YAC1B,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+IAAuB,EAAE,YAAY,CAAC,CAAC;QAC1E,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;oBAClC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;iBACzB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB;QACd,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,kBAAkB;YAC1B,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4HAAsB,EAAE,YAAY,CAAC,CAAC;QACzE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc;iBAC3C,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,gBAAgB;YACxB,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kJAAwB,EAAE,YAAY,CAAC,CAAC;QAC3E,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,aAAa,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;oBAChC,mBAAmB,EACjB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;wBACrB,GAAG;wBACH,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;wBACtB,GAAG;wBACH,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;iBACvB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAMD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,oBAAoB;YACpB,IAAI,IAAI,CAAC,YAAY,IAAI,KAAK,EAAE;gBAC9B,IAAI,CAAC,eAAe;qBACjB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;qBAC1B,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAE1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;4BAChE,IAAI,CAAC,MAAM,EAAE,CAAC;yBACf;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;yBAChE;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;wBAC/D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvB,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;iBAAM,IAAI,IAAI,CAAC,YAAY,IAAI,QAAQ,EAAE;gBACxC,IAAI,CAAC,eAAe;qBACjB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;qBAC1B,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;4BAChE,IAAI,CAAC,MAAM,EAAE,CAAC;yBACf;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;yBAChE;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;wBAC/D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvB,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvB,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;SACF;aAAM;YACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACH,CAAC;IACD,oBAAoB;QAClB,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvC,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;YAC3B,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;gBAC1B,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;SACF;QACD,MAAM,OAAO,GAAG,wCAAwC,aAAa,CAAC,IAAI,CACxE,IAAI,CACL,EAAE,CAAC;QACJ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,iBAAiB;IACjB,sEAAsE;IACtE,kEAAkE;IAClE,8BAA8B;IAC9B,oDAAoD;IACpD,6BAA6B;IAC7B,qBAAqB;IACrB,SAAS;IACT,kDAAkD;IAClD,2BAA2B;IAC3B,qBAAqB;IACrB,SAAS;IACT,QAAQ;IACR,IAAI;IACJ,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iCAAiC,CAAC,CAAC,CAAC;IAC5D,CAAC;;gGA3sCU,wBAAwB;uHAAxB,wBAAwB;mEA8fxB,sEAAY;mEACZ,4DAAO;mEAoHP,sEAAY;mEACZ,4DAAO;mEA6GP,sEAAY;mEACZ,4DAAO;mEAwHP,sEAAY;mEACZ,4DAAO;;;;;;;;;;;;QCr3BpB,8EAAyB;QAInB,gFAKiB;QACnB,6DAAM;QAEN,0EAA0B;QAKR,yDAA2B;QAAA,6DAAS;QAGhD,2HAsiGM;QACR,6DAAM;;QAtjGN,2DAA2B;QAA3B,qFAA2B;QAYb,2DAA2B;QAA3B,oGAA2B;QAGpB,2DAAc;QAAd,+EAAc","sources":["./src/app/erp-admin/data/services/roleService.service.ts","./src/app/erp-hr/data/PrivilegeService.ts","./src/app/erp-hr/modules/employees/all-employee-documents/all-employee-documents.component.ts","./src/app/erp-hr/modules/employees/all-employee-documents/all-employee-documents.component.html","./src/app/erp-hr/modules/employees/all-employees/all-employees.component.ts","./src/app/erp-hr/modules/employees/all-employees/all-employees.component.html","./src/app/erp-hr/modules/employees/create-employee-portal-account/create-employee-portal-account.component.ts","./src/app/erp-hr/modules/employees/create-employee-portal-account/create-employee-portal-account.component.html","./src/app/erp-hr/modules/employees/employees-routing.module.ts","./src/app/erp-hr/modules/employees/employees.module.ts","./src/app/erp-hr/modules/employees/manage-employee-documents/manage-employee-documents.component.ts","./src/app/erp-hr/modules/employees/manage-employee-documents/manage-employee-documents.component.html","./src/app/erp-hr/modules/employees/manage-employees/manage-employees.component.ts","./src/app/erp-hr/modules/employees/manage-employees/manage-employees.component.html"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RolesService {\n\n  constructor(private http: HttpClient) { }\n\n\n\n  getRoles(): Observable<any>\n  {\n    const RolesUrl =`${environment.baseUrlAdmin}/api/v1/auth/roles/all`; \n    return this.http.get<any[]>(RolesUrl);\n  }\n\n  getRolesById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlAdmin}/api/v1/auth/roles/find/by/id`, {params}\n    );\n  }\n\n\ngetRoleByPfNumber(params: any): Observable<any> {\n  return this.http.get<any>(\n    `${environment.baseUrlAdmin}/api/v1/auth/active/privileges`, {params}\n  );\n}\n\n  getRolesByStatus(params): Observable<any> {\n    const RolesUrl = `${environment.baseUrlAdmin}/api/v1/auth/roles/fetchbyStatus`;\n    return this.http.get<any[]>(RolesUrl, { params });\n  }\n\n\naddRole(data: any): Observable<any>\n  {\n    const RolesUrl =`${environment.baseUrlAdmin}/api/v1/auth/roles/create`; \n    return this.http.post<any[]>(RolesUrl, data);\n  }\n\nupdateRole(data: any): Observable<any>\n  {\n    const RolesUrl =`${environment.baseUrlAdmin}/api/v1/auth/roles/update`; \n    return this.http.put<any[]>(RolesUrl, data);\n  }\n\ndeleteRoleTemporarily(params: any): Observable<any>\n  {\n    const RolesUrl =`${environment.baseUrlAdmin}/api/v1/auth/roles/delete`; \n    return this.http.delete<any[]>(RolesUrl, {params});\n  }\n\n\nuploadBatchRoles(data: any): Observable<any> \n  {\n    const RolesUrl = `${environment.baseUrlAdmin}/api/v1/auth/roles/create/bulk`;\n    return this.http.post<any>(RolesUrl, data);\n  }\n\n\n\nvalidateRoles(dataToValidate: any): Observable<any> {\nconst imprestUrl = `${environment.baseUrlAdmin}/api/v1/auth/roles/update/state`;\nreturn this.http.put<any>(imprestUrl, dataToValidate);\n}\n\n\n  getPrivielgesByParams(params: any): Observable<any> {\n    const RolessUrl = `${environment.baseUrlAdmin}/api/v1/allprivileges/read`;\n    return this.http.get<any>(RolessUrl, {params});\n  }\n\n\n\n\n\n    // ********************************************************************************************************************\n\n\n\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PrivilegeService {\n  checkPrivilege(componentName: string): boolean {\n    if (componentName == \"Default\") {\n      return true;\n    } else {\n      const userJson = JSON.parse(localStorage.getItem(\"auth-user\"));\n      if(userJson == null || userJson == \"\" || userJson == \"{}\"){\n        return false;\n      }else{\n        // Traverse through the user JSON to find the component name and its associated privileges\n      for (const module of userJson.role.clients) {\n        if (module.privileges.includes(componentName)) {\n          return true;\n        }\n      }\n      }\n      return false;\n    }\n  }\n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { EmployeeService } from \"src/app/erp-hr/data/employee-services/employee-management.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { ApplicationDetailsComponent } from \"../../jobs/job-applications/dialogs/application-details/application-details.component\";\nimport { EmployeeDocumentsService } from \"src/app/erp-hr/data/employee-services/employee-documents.service\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport Swal from \"sweetalert2\";\nimport { ManageLeaveRequestsComponent } from \"../../leave-management/leave-requests/manage-leave-requests/manage-leave-requests.component\";\nimport { EmployeesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component\";\n\n@Component({\n  selector: \"app-all-employee-documents\",\n  templateUrl: \"./all-employee-documents.component.html\",\n  styleUrls: [\"./all-employee-documents.component.scss\"],\n})\nexport class AllEmployeeDocumentsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"empPf\",\n    \"employeeName\",\n    \"departmentName\",\n    \"leavetype\",\n    \"fromdate\",\n    \"todate\",\n    \"handovertoemppf\",\n    \"handoverto\",\n    \"daysapplied\",\n    \"on_leave\",\n    \"supervisorstatus\",\n    \"hrstatus\",\n    \"status\",\n    \"action\",\n  ];\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n\n  Form: FormGroup;\n\n  currentUser: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private employeeDocumentsService: EmployeeDocumentsService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder,\n    private tokenStorageService: TokenStorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.tokenStorageService.getUser();\n\n    this.Form = this.fb.group({\n      employeeId: [this.currentUser.id, Validators.required],\n      employeeName: [\n        this.currentUser.firstName ||\n          \"\" + \" \" + this.currentUser.middleName ||\n          \"\" + \" \" + this.currentUser.lastName ||\n          \"\",\n        Validators.required,\n      ],\n      status: [\"ALL\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //************************************************************************************************ */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n  selectedStatus: string = \"ALL\";\n\n  getSelectSelectedStatus() {\n   // this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n  //  this.getData();\n  }\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n\n    let params = { employeeId: 2, status: this.Form.value.status };\n\n    this.employeeDocumentsService\n      .readByStatusAndEmpId(params)\n\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Employee Documents displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error:  \" + err.message);\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: action,\n      record: record,\n    };\n    const dialogRef = this.dialog.open(\n      ManageLeaveRequestsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      this.getData();\n    });\n  }\n  deleteRecord(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"HOLIDAY RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.employeeDocumentsService\n          .delete(id)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"HOLIDAY RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************************************** */\n\n  employeeLookup(type: any) {\n    if (type === \"Search\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"SingleEmployee\",\n      };\n      const dialogRef = this.dialog.open(\n        EmployeesLookupComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((res) => {\n        if (res && res.data && res.data.length > 0) {\n          this.Form.patchValue({\n            nationalId: res.data[0].nationalId,\n          });\n        }\n      });\n    } else if (type === \"ALL\") {\n      this.Form.patchValue({\n        nationalId: \"ALL\",\n      });\n\n      this.getData();\n    }\n  }\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    // this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n    //   privilege,\n    // ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.employeeDocumentsService\n            .verify(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                  this.selection.clear();\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Employee Documents'\" [items]=\"['Employee Documents']\"\n                [active_item]=\"'All Employee Documents'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Employee Documents</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            <!-- <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add','')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li> -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Status</mat-label>\n\n                                                    <mat-select formControlName=\"status\"\n                                                        (selectionChange)=\"getSelectSelectedStatus()\">\n                                                        <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                            [value]=\"reqStatus.name\">{{ reqStatus.name\n                                                            }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                        Please select Status\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </form>\n                                        </div>\n                                        <div class=\"col-5\">\n                                            <div class=\"button-container mt-1\">\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                    class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                    <mat-icon>check_circle</mat-icon>\n                                                    ALL\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                    class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                    <mat-icon>pending</mat-icon>\n                                                    PENDING\n                                                </button> <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                    class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                    <mat-icon>thumb_up</mat-icon>\n                                                    APPROVED\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                    class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                    <mat-icon>reply</mat-icon>\n                                                    RETURNED\n                                                </button> <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                    class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                    <mat-icon>cancel</mat-icon>\n                                                    REJECTED\n                                                </button>\n                                            </div>\n                                        </div>\n\n\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-9\">\n                                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                            <mat-label>Employee Id</mat-label>\n                                                            <input matInput formControlName=\"employeeId\" readonly />\n                                                            <mat-error *ngIf=\"\n                                                        Form.get('employeeId').hasError('required')\n                                                      \">\n                                                                Please Enter Employee Id\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-3 imp\">\n                                                        <div class=\"m-l-10\" matTooltip=\"Search Cost Center\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"employeeLookup('Search')\">\n                                                                <mat-icon class=\"col-white\">search</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                        <div class=\"m-l-10\" matTooltip=\"From All Cost Centers\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"employeeLookup('ALL')\">\n                                                                <mat-icon class=\"col-white\">all_inclusive</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                        <div class=\"col-2\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Employee Name</mat-label>\n                                                <input matInput formControlName=\"employeeName\" readonly />\n                                                <mat-error *ngIf=\"Form.get('employeeName').hasError('required')\">Please\n                                                    enter Employee Name</mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"empPf\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Employee PF\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.empPf }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"employeeName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Employee Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.employeeName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"departmentName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Department Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.departmentName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"leavetype\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Leave Type\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.leavetype }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"fromdate\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        From Date\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.fromdate | date:'mediumDate' }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"todate\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        To Date\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.todate | date:'mediumDate' }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"handovertoemppf\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Handover To Employee PF\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.handovertoemppf }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"handoverto\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Handover To\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.handoverto }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"daysapplied\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Days Applied\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.daysapplied }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"on_leave\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        On Leave\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.on_leave }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"supervisorstatus\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Supervisor Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.supervisorstatus }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"hrstatus\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        HR Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.hrstatus }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Update',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('View',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n                                        <!-- \n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"lockOrUnlockAccount(row)\" class=\"tbl-action-btn\">\n                                            <mat-icon>{{ row.isAcctActive === 'Y' ? 'lock' : 'lock_open' }}</mat-icon>\n                                        </button> -->\n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"  \n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ApplicationDetailsComponent } from \"../../jobs/job-applications/dialogs/application-details/application-details.component\";\nimport { ManageEmployeesComponent } from \"../manage-employees/manage-employees.component\";\nimport { EmployeeService } from \"src/app/erp-hr/data/employee-services/employee-management.service\";\nimport { PrivilegeService } from \"src/app/erp-hr/data/PrivilegeService\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { CreateEmployeePortalAccountComponent } from \"../create-employee-portal-account/create-employee-portal-account.component\";\n\n@Component({\n  selector: \"app-all-employees\",\n  templateUrl: \"./all-employees.component.html\",\n  styleUrls: [\"./all-employees.component.sass\"],\n})\nexport class AllEmployeesComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"empNo\",\n    \"fullName\",\n    \"nationalId\",\n    \"personalPhone\",\n    \"personalEmail\",\n    \"basicSalary\",\n    \"status\",\n    \"verifiedFlag\",\n    \"action\",\n  ];\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n  Form: FormGroup;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private employeeService: EmployeeService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private privilegeService: PrivilegeService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"ALL\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n  }\n  hasPrivilege(componentName: string): boolean {\n    return this.privilegeService.checkPrivilege(componentName);\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //****************************************************************************************** */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"ALL\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n  }\n\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.employeeService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Data displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error: \" + err.message);\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n    if (action === \"CreatePortal\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: action,\n        record: record,\n      };\n      const dialogRef = this.dialog.open(CreateEmployeePortalAccountComponent, dialogConfig);\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"result:::\", result);\n  \n        this.getData();\n      });\n    } else {\n      let route = \"/erp-hr/employees/manage-employees\";\n      this.router.navigate([route], {\n        queryParams: {\n          requestCode: record.empNo,\n          action: action,\n        },\n      });\n    }\n  }\n\n  deleteRecord(id: number) {\n    let params = { id: id };\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"THIS RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.employeeService\n          .delete(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    // this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n    //   privilege,\n    // ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.employeeService\n            .validateBulkEmployees(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                  this.selection.clear();\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Employees'\" [items]=\"['Employees']\" [active_item]=\"'All Employees'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Employees</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add', '')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Status</mat-label>\n\n                                                <mat-select formControlName=\"status\">\n                                                    <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                        [value]=\"reqStatus.name\">{{ reqStatus.name\n                                                        }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                    Please select Status\n                                                </mat-error>\n                                            </mat-form-field>\n\n                                        </form>\n                                    </div>\n                                    <div class=\"col-10\">\n                                        <div class=\"button-container mt-1\">\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                ALL\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"empNo\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">Employee Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.empNo }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"fullName\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Full Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.firstName }} {{ row.middleName }} {{ row.lastName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"nationalId\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        National ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.nationalId }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"personalPhone\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Personal Phone\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.personalPhone }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"personalEmail\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Personal Email\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.personalEmail }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"basicSalary\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Basic Salary\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.basicSalary | currency : \"Ksh\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"verifiedFlag\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Verified Flag\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container [ngSwitch]=\"row.verifiedFlag\">\n                                            <button *ngSwitchCase=\"'Y'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp; Yes\n                                            </button>\n                                            <button *ngSwitchCase=\"'N'\"\n                                                class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp; No\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-gray btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-info-circle\"></i>&nbsp;\n                                                {{ row.verifiedFlag }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell *matHeaderCellDef\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('View', row)\">\n                                            <mat-icon>remove_red_eye</mat-icon>\n                                        </button>\n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Update', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"mngRecord('CreatePortal', row)\" class=\"tbl-action-btn\">\n                                        <mat-icon>add_circle</mat-icon>\n                                    </button>\n                                    \n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\">\n                                            <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\"\n                                                color=\"warn\">delete</mat-icon>\n                                        </button>\n                                        <!-- <button mat-icon-button color=\"warn\" (click)=\"deleteJobById(row.id)\">\n                                            <mat-icon>delete</mat-icon>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- <td mat-cell *matCellDef=\"let row\">\n                                    <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\" color=\"primary\" (click)=\"onView(row.id)\">\n                                      visibility</mat-icon>\n                                    &nbsp; &nbsp;\n                                    <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\" class=\"text-primary\" (click)=\"onAccountCreation(row)\">vpn_key</mat-icon>\n                                    &nbsp; &nbsp;\n                                    <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\" class=\"text-primary\" (click)=\"onUpdate(row.id)\">update</mat-icon>\n                                    &nbsp; &nbsp;\n                                    <mat-icon *ngIf=\"hasPrivilege('Maintain Employee Management')\" color=\"warn\" (click)=\"onDelete(row.id)\">delete</mat-icon>\n                                  </td> -->\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                    (click)=\"mngRecord('View', row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\">\n                                        No data matching the filter \"{{ input }}\"\n                                    </td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialogConfig,\n  MatDialog,\n} from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { DocumentManagementSystemService } from \"src/app/erp-hr/data/job-services/document-management-system.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { AllJobApplicationsComponent } from \"../../jobs/job-applications/all-job-applications/all-job-applications.component\";\nimport { EmployeeService } from \"src/app/erp-hr/data/employee-services/employee-management.service\";\nimport { RolesLookupComponent } from \"src/app/erp-admin/modules/admin/pages/roles/dialogs/roles-lookup/roles-lookup.component\";\n\n@Component({\n  selector: \"app-create-employee-portal-account\",\n  templateUrl: \"./create-employee-portal-account.component.html\",\n  styleUrls: [\"./create-employee-portal-account.component.sass\"],\n})\nexport class CreateEmployeePortalAccountComponent implements OnInit {\n  Data: any;\n\n  displayedColumns: string[] = [\"index\", \"filename\", \"filetype\", \"action\"];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  pageFunction: any = \"Add\";\n\n  mngForm: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<AllJobApplicationsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private employeeService: EmployeeService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.pageFunction = this.data.action;\n    this.Data = this.data.record;\n\n    this.mngForm = this.fb.group({\n      empNo: [this.Data.empNo],\n      roleName: [\"\", Validators.required],\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  roleIsSelected = false;\n  rolesLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"single role\",\n    };\n\n    const dialogRef = this.dialog.open(RolesLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.roleIsSelected = true;\n\n        this.mngForm.patchValue({\n          roleName: result.data[0].name,\n        });\n      }\n    });\n  }\n\n  posting: Boolean = false;\n  submit() {\n    this.posting = true;\n\n    // let params = {empNo: this.mngForm.value.empNo, roleName: this.mngForm.value.roleName}\n\n    const params = new HttpParams()\n      .set(\"empNo\", this.mngForm.controls.empNo.value)\n      .set(\"roleName\", this.mngForm.controls.roleName.value);\n\n    console.log(\"params: \", params);\n\n    this.employeeService\n      .createPortal(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n\n          if (res.statusCode == 201) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n            this.onNoClick();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.posting = false;\n        },\n        complete: () => {\n          this.posting = false;\n        },\n      }),\n      Subscription;\n  }\n  response: any;\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n}\n","<div class=\"addContainer\">\n    <div *ngIf=\"Data\" class=\"contact-details\">\n        <div class=\"modalHeader\">\n            <div class=\"contact-details-name mb-1\">\n                <strong>Request Portal Account</strong>\n            </div>\n            <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <mat-card-content>\n\n                <ng-container>\n                    <div class=\"row mt-1\" style=\"width: 98%; margin-left: 20px\">\n                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-5 m-b-10\">Full Name:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.firstName }} {{ Data.middleName }} {{ Data.lastName }}</div>\n                                <div class=\"col-5 m-b-10\">National Id:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.nationalId }}</div>\n                                <div class=\"col-5 m-b-10\">Email Address:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.personalEmail }}</div>\n                                <div class=\"col-5 m-b-10\">Phone Number:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.personalPhone }}</div>\n\n                            </div>\n                        </div>\n                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\n                            <div class=\"row\">\n                                <div class=\"col-5 m-b-10\">Emp No:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.empNo }}</div>\n\n                                <div class=\"col-5 m-b-10\">Basic Salary:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.basicSalary }}</div>\n\n                                <div class=\"col-5 m-b-10\">Status:</div>\n                                <div class=\"col-7 pro-left m-b-10\">\n                                    <ng-container [ngSwitch]=\"Data.status\">\n                                        <button *ngSwitchCase=\"'APPROVED'\"\n                                            class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                            {{ Data.status }}\n                                        </button>\n                                        <button *ngSwitchCase=\"'REJECTED'\"\n                                            class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                            {{ Data.status }}\n                                        </button>\n                                        <button *ngSwitchCase=\"'RETURNED'\"\n                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                            {{ Data.status }}\n                                        </button>\n                                        <button *ngSwitchCase=\"'PENDING'\"\n                                            class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                            {{ Data.status }}\n                                        </button>\n                                        <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                            {{ Data.status }}\n                                        </button>\n                                    </ng-container>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <hr />\n                </ng-container>\n\n                <ng-container>\n                    <h6 class=\"mx-2\">Job Group Details</h6>\n\n                    <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Role Name</mat-label>\n                                    <input matInput formControlName=\"roleName\" required />\n                                    <mat-icon matSuffix (click)=\"rolesLookup()\">search</mat-icon>\n\n                                    <mat-error *ngIf=\"mngForm.get('roleName').hasError('required')\">\n                                        Role Name is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n\n                        </div>\n                    </form>\n\n                    <div class=\"row\" *ngIf=\"!viewMode\">\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                            <div class=\"example-button-row\" align=\"end\">\n                                <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                    [class.auth-spinner]=\"posting\" [disabled]=\"!mngForm.valid || posting\"\n                                    (click)=\"submit()\">\n                                    Submit Request\n                                </button>\n                                <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                                    Cancel\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </mat-card-content>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllEmployeesComponent } from './all-employees/all-employees.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { ManageEmployeesComponent } from './manage-employees/manage-employees.component';\nimport { ManageEmployeeDocumentsComponent } from './manage-employee-documents/manage-employee-documents.component';\nimport { AllEmployeeDocumentsComponent } from './all-employee-documents/all-employee-documents.component';\n\nconst routes: Routes = [\n  {\n    path: \"all-employees\",\n    component: AllEmployeesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"manage-employees\",\n    component: ManageEmployeesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"all-employee-documents\",\n    component: AllEmployeeDocumentsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { EmployeesRoutingModule } from './employees-routing.module';\nimport { AllEmployeesComponent } from './all-employees/all-employees.component';\nimport { ManageEmployeesComponent } from './manage-employees/manage-employees.component';\nimport { ManageEmployeeDocumentsComponent } from './manage-employee-documents/manage-employee-documents.component';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { AllEmployeeDocumentsComponent } from './all-employee-documents/all-employee-documents.component';\nimport { CreateEmployeePortalAccountComponent } from './create-employee-portal-account/create-employee-portal-account.component';\n\n\n@NgModule({\n  declarations: [\n    AllEmployeesComponent,\n    ManageEmployeesComponent,\n    ManageEmployeeDocumentsComponent,\n    AllEmployeeDocumentsComponent,\n    CreateEmployeePortalAccountComponent\n  ],\n  imports: [\n    CommonModule,\n    EmployeesRoutingModule,\n\n    DashboardModule,\n    ComponentsModule,\n    SharedModule,\n  ],\n  providers: [DatePipe]\n})\nexport class EmployeesModule { }\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogConfig,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { JobApplicationAPIService } from \"src/app/erp-hr/data/job-services/job-applications.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ApplicationDetailsComponent } from \"../../jobs/job-applications/dialogs/application-details/application-details.component\";\nimport { EmployeeService } from \"src/app/erp-hr/data/employee-services/employee-management.service\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AllJobApplicationsComponent } from \"../../jobs/job-applications/all-job-applications/all-job-applications.component\";\nimport { EmployeeDocumentsService } from \"src/app/erp-hr/data/employee-services/employee-documents.service\";\n\n@Component({\n  selector: \"app-manage-employee-documents\",\n  templateUrl: \"./manage-employee-documents.component.html\",\n  styleUrls: [\"./manage-employee-documents.component.scss\"],\n})\nexport class ManageEmployeeDocumentsComponent implements OnInit {\n\n  constructor(\n   \n  ) {}\n\n  ngOnInit(): void {\n   \n  }\n\n}\n",".....","import { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { EmployeeService } from \"src/app/erp-hr/data/employee-services/employee-management.service\";\nimport { JobManagementService } from \"src/app/erp-hr/data/job-services/job-management.service\";\nimport { BranchesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/branches-lookup/branches-lookup.component\";\nimport { DepartmentsLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/departments-lookup/departments-lookup.component\";\nimport { EmployeesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component\";\nimport { JobGradesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/job-grades-lookup/job-grades-lookup.component\";\nimport { JobRolesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/job-roles-lookup/job-roles-lookup.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-manage-employees\",\n  templateUrl: \"./manage-employees.component.html\",\n  styleUrls: [\"./manage-employees.component.sass\"],\n})\nexport class ManageEmployeesComponent implements OnInit {\n  showForm = false;\n  isLoading = true;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n  currentUserCode: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  requestCode: any;\n\n  religionArray: any = [\n    \"Christian\",\n    \"Islam\",\n    \"Irreligion\",\n    \"Atheist\",\n    \"Hindu\",\n    \"Other\",\n  ];\n\n  maritalStatusArray: any = [\n    \"Single\",\n    \"Married\",\n    \"Divorced\",\n    \"Separated\",\n    \"Widow\",\n    \"Widower\",\n    \"Prefer not to say\",\n  ];\n  educationLevelArray: any = [\n    \"Research Doctorate\",\n    \"Advanced Intermediate Doctorate\",\n    \"First Professional Doctorate\",\n    \"PHD\",\n    \"Masters\",\n    \"K.C.S.E\",\n    \"Bachelors\",\n    \"Associate\",\n    \"Diploma\",\n    \"Certificate\",\n    \"Other\",\n  ];\n  educationEnrollmentsArray: any = [\n    \"Full Time\",\n    \"Part Time\",\n    \"Graduated\",\n    \"Enrolled\",\n    \"Differed\",\n  ];\n  enrollmentStatusArray: any = [\n    \"Contract\",\n    \"Permanent\",\n    \"Contract(Internship)\",\n    \"Attachment\",\n    \"Secondment\",\n    \"Direct Sales Representative\",\n  ];\n  gpaScoreArray: any = [\n    \"First Class Honours\",\n    \"Second Class (Upper division)\",\n    \"Second Class (Lower Division)\",\n    \"Pass\",\n    \"Other\",\n  ];\n  constructor(\n    private fb: FormBuilder,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private employeeService: EmployeeService,\n    private dialog: MatDialog,\n    private datePipe: DatePipe\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n    this.currentUserCode = this.tokenStorageService.getUser().empPfNo;\n    this.generateSubForm1();\n    this.generateSubForm2();\n    this.generateSubForm3();\n    this.generateSubForm4();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.getPage();\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.requestCode) {\n          this.requestCode = params.requestCode;\n          this.getDataById();\n          this.pageFunction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n  ngAfterViewInit() {}\n  getDataById() {\n    const params = new HttpParams().set(\"empNo\", this.requestCode);\n    this.employeeService\n      .readByEmployeePf(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.entity) {\n            //in thsi res, I cant access anything beyond res.entity. Why???\n            this.formData = res.entity;\n            console.log(\"getDataById this.formData: \", this.formData);\n            if (this.pageFunction === \"View\") {\n              this.activateViewMode();\n            }\n\n            this.onPopulateTables(res);\n\n            this.getPage();\n\n            this.showForm = true;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      });\n  }\n  onPopulateTables(res) {\n    if (res) {\n      if (res.entity) {\n        if (res.entity.nextOfKins) {\n          this.dataSource1.data = res.entity.nextOfKins;\n          this.refresh1();\n        }\n        if (res.entity.dependants) {\n          this.dataSource2.data = res.entity.dependants;\n          this.refresh2();\n        }\n        if (res.entity.employeeEducations) {\n          this.dataSource3.data = res.entity.employeeEducations;\n          this.refresh3();\n        }\n        if (res.entity.employeeWorkExperiences) {\n          this.dataSource4.data = res.entity.employeeWorkExperiences;\n          this.refresh4();\n        }\n      } else {\n        if (res.nextOfKins) {\n          this.dataSource1.data = res.nextOfKins;\n          this.refresh1();\n        }\n        if (res.dependants) {\n          this.dataSource2.data = res.dependants;\n          this.refresh2();\n        }\n        if (res.employeeEducations) {\n          this.dataSource3.data = res.employeeEducations;\n          this.refresh3();\n        }\n        if (res.employeeWorkExperiences) {\n          this.dataSource4.data = res.employeeWorkExperiences;\n          this.refresh4();\n        }\n      }\n    }\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateForm(this.formData);\n      this.generateSubForm1();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateForm(this.formData);\n      this.generateSubForm1();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n  }\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  generateForm(formData?): void {\n    console.log(\"generateForm formData :: \", formData);\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n\n      //Basic Info\n      empNo: [formData?.empNo ?? \"\"],\n      firstName: [\n        formData?.firstName ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      middleName: [\n        formData?.middleName ?? \"\",\n        [Validators.minLength(3), Validators.maxLength(40)],\n      ],\n      lastName: [\n        formData?.lastName ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      dob: [formData?.dob ?? \"\", Validators.required],\n      nationalId: [\n        formData?.nationalId ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(7),\n          Validators.maxLength(8),\n          Validators.pattern(\"[0-9]+\"),\n        ],\n      ],\n      religion: [formData?.religion ?? \"\", Validators.required],\n      gender: [formData?.gender ?? \"male\", Validators.required],\n      maritalStatus: [formData?.maritalStatus ?? \"\", Validators.required],\n      disabled: [formData?.disabled ?? false],\n      disabledRegNo: [\n        formData?.disabledRegNo ?? \"\",\n        [\n          Validators.minLength(7),\n          Validators.maxLength(8),\n          Validators.pattern(\"[0-9]+\"),\n        ],\n      ],\n      marriageCertificate: [\"\"],\n\n      //Home Address\n      nationality: [\n        formData?.nationality ?? \"Kenyan\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      county: [\n        formData?.county ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      subCounty: [\n        formData?.subCounty ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      residentialCountry: [\n        formData?.residentialCountry ?? \"Kenya\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      residentialCounty: [\n        formData?.residentialCounty ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      residentialSubCounty: [\n        formData?.residentialSubCounty ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(40),\n        ],\n      ],\n      postalAddress: [\n        formData?.postalAddress ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n      postalCode: [\n        formData?.postalCode ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(12),\n          Validators.pattern(\"[0-9]+\"),\n        ],\n      ],\n      city: [\n        formData?.city ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n\n      //Contact Info\n      personalPhone: [\n        formData?.personalPhone ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern(\"[0-9]+\"),\n        ],\n      ],\n      alternativePhone: [\n        formData?.alternativePhone ?? \"\",\n        [\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern(\"[0-9]+\"),\n        ],\n      ],\n      personalEmail: [\n        formData?.personalEmail ?? \"\",\n        [\n          Validators.required,\n          Validators.pattern(\n            \"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"\n          ),\n        ],\n      ],\n      alternativeEmail: [\n        formData?.alternativeEmail ?? \"\",\n        [\n          Validators.pattern(\n            \"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"\n          ),\n        ],\n      ],\n\n      //NextOfKin\n      nextOfKins: [formData?.nextOfKins ?? []],\n\n      //Dependant\n      dependants: [formData?.dependants ?? []],\n\n      //EducationForm\n      highestEducation: [formData?.highestEducation ?? \"\", Validators.required],\n      courseProgram: [formData?.courseProgram ?? \"\", Validators.required],\n      educationEnrollment: [\n        formData?.educationEnrollment ?? \"\",\n        Validators.required,\n      ],\n      employeeEducations: [formData?.employeeEducations ?? []],\n\n      //ExperienceForm\n      employeeWorkExperiences: [formData?.employeeWorkExperiences ?? []],\n\n      //ReferenceForm\n      firstRefName: [formData?.firstRefName ?? \"\", Validators.required],\n      firstRefCompany: [formData?.firstRefCompany ?? \"\"],\n      firstRefPhone: [\n        formData?.firstRefPhone ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(20),\n        ],\n      ],\n      firstRefEmail: [\n        formData?.firstRefEmail ?? \"\",\n        [\n          Validators.pattern(\n            \"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"\n          ),\n        ],\n      ],\n      secondRefName: [formData?.secondRefName ?? \"\", Validators.required],\n      secondRefCompany: [formData?.secondRefCompany ?? \"\"],\n      secondRefPhone: [\n        formData?.secondRefPhone ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(20),\n        ],\n      ],\n      secondRefEmail: [\n        formData?.secondRefEmail ?? \"\",\n        [\n          Validators.pattern(\n            \"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"\n          ),\n        ],\n      ],\n\n      //JobInfo\n      departmentId: [formData?.departmentId ?? \"\", Validators.required],\n      departmentName: [formData?.departmentName ?? \"\", Validators.required],\n      branchId: [formData?.branchId ?? \"\", Validators.required],\n      branchName: [formData?.branchName ?? \"\", Validators.required],\n      costCenterCode: [formData?.costCenterCode ?? \"\"],\n      organizationRole: [formData?.organizationRole ?? \"\", Validators.required],\n      organizationRoleId: [formData?.organizationRoleId ?? \"\"],\n      jobGroupName: [formData?.jobGroupName ?? \"\", Validators.required],\n      jobGroupId: [formData?.jobGroupId ?? \"\", Validators.required],\n      workMail: [formData?.workMail ?? \"\"],\n      enrollmentStatus: [formData?.enrollmentStatus ?? \"\", Validators.required],\n      enrollmentStartDate: [\n        formData?.enrollmentStartDate ?? \"\",\n        Validators.required,\n      ],\n      enrollmentEndDate: [formData?.enrollmentEndDate ?? \"\"],\n      reportingToFullname: [\n        formData?.reportingToFullname ?? \"\",\n        Validators.required,\n      ],\n      reportingToPf: [formData?.reportingToPf ?? \"\", Validators.required],\n\n      //SalaryInfoForm\n      bankName: [formData?.bankName ?? \"KINGDOM BANK\", Validators.required],\n      bankAccount: [\n        formData?.bankAccount ?? \"\",\n        [\n          Validators.required,\n          Validators.pattern(\"[0-9]+\"),\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ],\n      ],\n      //confirmBankAccount: [formData?.confirmBankAccount ?? \"\"],\n      kraNo: [\n        formData?.kraNo ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ],\n      ],\n      nhifNo: [\n        formData?.nhifNo ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ],\n      ],\n      nssfNo: [\n        formData?.nssfNo ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ],\n      ],\n      basicSalary: [formData?.basicSalary ?? \"\", Validators.required],\n      //dcrsActualE2: [formData?.dcrsActualE2 ?? \"\"],\n      //totalNonCashBenefit: [formData?.totalNonCashBenefit ?? \"\"],\n      //valueOfQuarters: [formData?.valueOfQuarters ?? \"\"],\n      //ownerOccupiedInterests: [formData?.ownerOccupiedInterests ?? \"\"],\n      //mortgage: [formData?.mortgage ?? \"\"],\n      //personalRelief: [formData?.personalRelief ?? \"\"],\n      //insuranceRelief: [formData?.insuranceRelief ?? \"\"],\n    });\n\n    if (this.pageFunction === \"Add\") {\n      const storedData = localStorage.getItem(\"mngFormDataEmployee\");\n      if (storedData) {\n        this.mngForm.patchValue(JSON.parse(storedData));\n\n        this.onPopulateTables(JSON.parse(storedData));\n\n        console.log(\"storedData:: \", storedData);\n      }\n      this.mngForm.valueChanges.subscribe((value) => {\n        localStorage.setItem(\"mngFormDataEmployee\", JSON.stringify(value));\n      });\n    }\n  }\n\n  //*************************************************************************************************************************************** */\n  // Next Of Kin = 1\n  //*************************************************************************************************************************************** */\n  nextOfKinForm: FormGroup;\n  dataSource1 = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator1!: MatPaginator;\n  @ViewChild(MatSort) sort1!: MatSort;\n\n  displayedColumns1: string[] = [\n    \"id\",\n    \"name\",\n    \"phoneNumber\",\n    \"email\",\n    \"address\",\n    \"relationship\",\n    \"action\",\n  ];\n  showParTranForm1 = false;\n  parTranAction1: string = \"\";\n  selectedParTranIndex1: number;\n\n  input1: any;\n  applyFilter1(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input1 = filterValue;\n    this.dataSource1.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource1.paginator) {\n      this.dataSource1.paginator.firstPage();\n    }\n  }\n\n  generateSubForm1(formData?): void {\n    this.nextOfKinForm = this.fb.group({\n      name: [formData?.name ?? \"\", [Validators.required]],\n      phoneNumber: [\n        formData?.phoneNumber ?? \"\",\n        [\n          Validators.minLength(10),\n          Validators.maxLength(12),\n          Validators.pattern(\"[0-9]+\"),\n        ],\n      ],\n      email: [\n        formData?.email ?? \"\",\n        [\n          Validators.pattern(\n            \"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"\n          ),\n        ],\n      ],\n      address: [\n        formData?.address ?? \"\",\n        [Validators.minLength(5), Validators.maxLength(50)],\n      ],\n      relationship: [formData?.relationship ?? \"\", [Validators.required]],\n    });\n  }\n\n  resetFormAndHide1() {\n    this.mngForm.patchValue({\n      nextOfKins: this.dataSource1.data,\n    });\n    this.nextOfKinForm.reset();\n    this.showParTranForm1 = false;\n  }\n\n  addParTran1() {\n    this.parTranAction1 = \"Add\";\n    this.showParTranForm1 = true;\n  }\n\n  refresh1() {\n    this.dataSource1.data = [...this.dataSource1.data];\n    this.dataSource1.paginator = this.paginator1;\n    this.dataSource1.sort = this.sort1;\n  }\n\n  editParTran1(data: any, index: number) {\n    this.parTranAction1 = \"Update\";\n    this.selectedParTranIndex1 = index;\n    this.generateSubForm1(data);\n    this.showParTranForm1 = true;\n  }\n\n  pushToDataSource1() {\n    if (this.parTranAction1 === \"Add\") {\n      this.dataSource1.data.push(this.nextOfKinForm.value);\n    } else if (this.parTranAction1 === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.nextOfKinForm.value.id) {\n        indexToUpdate = this.dataSource1.data.findIndex(\n          (item) => item.id === this.nextOfKinForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex1;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource1.data[indexToUpdate] = this.nextOfKinForm.value;\n      }\n    }\n\n    this.resetFormAndHide1();\n    this.refresh1();\n  }\n\n  cancelParTran1() {\n    this.resetFormAndHide1();\n  }\n\n  deleteParTran1(index: number) {\n    this.dataSource1.data.splice(index, 1);\n    this.refresh1();\n  }\n\n  //*************************************************************************************************************************************** */\n  // Dependants =2\n  //*************************************************************************************************************************************** */\n\n  dependantForm: FormGroup;\n  dataSource2 = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator2!: MatPaginator;\n  @ViewChild(MatSort) sort2!: MatSort;\n\n  displayedColumns2: string[] = [\n    \"id\",\n    \"dependantName\",\n    \"dependantDob\",\n    \"birthCertNo\",\n    \"dependantPhone\",\n    \"dependantEmail\",\n    \"downloadFile\",\n    \"action\",\n  ];\n  showParTranForm2 = false;\n  parTranAction2: string = \"\";\n  selectedParTranIndex2: number;\n\n  input2: any;\n  applyFilter2(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input1 = filterValue;\n    this.dataSource2.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource2.paginator) {\n      this.dataSource2.paginator.firstPage();\n    }\n  }\n\n  generateSubForm2(formData?): void {\n    this.dependantForm = this.fb.group({\n      dependantName: [formData?.dependantName ?? \"\", [Validators.required]],\n      dependantDob: [formData?.dependantDob ?? \"\", [Validators.required]],\n      birthCertNo: [\n        formData?.birthCertNo ?? \"\",\n        [Validators.required, Validators.maxLength(15)],\n      ],\n      dependantPhone: [\n        formData?.dependantPhone ?? \"\",\n        [Validators.maxLength(15), Validators.pattern(\"[+0-9]{12,15}\")],\n      ],\n      dependantEmail: [\n        formData?.dependantEmail ?? \"\",\n        [Validators.email, Validators.maxLength(50)],\n      ],\n      dependantCertFile: [\"\"],\n    });\n  }\n\n  resetFormAndHide2() {\n    this.mngForm.patchValue({\n      dependants: this.dataSource2.data,\n    });\n    this.dependantForm.reset();\n    this.showParTranForm2 = false;\n  }\n\n  addParTran2() {\n    this.parTranAction2 = \"Add\";\n    this.showParTranForm2 = true;\n  }\n\n  refresh2() {\n    this.dataSource2.data = [...this.dataSource2.data];\n    this.dataSource2.paginator = this.paginator2;\n    this.dataSource2.sort = this.sort2;\n  }\n\n  editParTran2(data: any, index: number) {\n    this.parTranAction2 = \"Update\";\n    this.selectedParTranIndex2 = index;\n    this.generateSubForm2(data);\n    this.showParTranForm2 = true;\n  }\n\n  pushToDataSource2() {\n    if (this.parTranAction2 === \"Add\") {\n      this.dataSource2.data.push(this.dependantForm.value);\n    } else if (this.parTranAction2 === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.dependantForm.value.id) {\n        indexToUpdate = this.dataSource2.data.findIndex(\n          (item) => item.id === this.dependantForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex1;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource2.data[indexToUpdate] = this.dependantForm.value;\n      }\n    }\n\n    this.resetFormAndHide2();\n    this.refresh2();\n  }\n\n  cancelParTran2() {\n    this.resetFormAndHide2();\n  }\n\n  deleteParTran2(index: number) {\n    this.dataSource2.data.splice(index, 1);\n    this.refresh2();\n  }\n  //*************************************************************************************************************************************** */\n  // Education =3\n  //*************************************************************************************************************************************** */\n  empEducationForm: FormGroup;\n\n  dataSource3 = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator3!: MatPaginator;\n  @ViewChild(MatSort) sort3!: MatSort;\n\n  displayedColumns3: string[] = [\n    \"id\",\n    \"institutionName\",\n    \"awardCertificate\",\n    \"certNo\",\n    \"gpaScore\",\n    \"enrollOn\",\n    \"graduatedOn\",\n    \"action\",\n  ];\n  showParTranForm3 = false;\n  parTranAction3: string = \"\";\n  selectedParTranIndex3: number;\n\n  input3: any;\n  applyFilter3(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input1 = filterValue;\n    this.dataSource3.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource3.paginator) {\n      this.dataSource3.paginator.firstPage();\n    }\n  }\n\n  generateSubForm3(formData?): void {\n    this.empEducationForm = this.fb.group({\n      institutionName: [\n        formData?.institutionName ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(120),\n        ],\n      ],\n      awardCertificate: [\n        formData?.awardCertificate ?? \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(120),\n        ],\n      ],\n      certNo: [formData?.certNo ?? \"\", Validators.maxLength(15)],\n      gpaScore: [formData?.gpaScore ?? \"\", Validators.required],\n      enrollOn: [\n        formData?.enrollOn ?? \"\",\n        [Validators.required, Validators.minLength(4), Validators.maxLength(4)],\n      ],\n      graduatedOn: [\n        formData?.graduatedOn ?? \"\",\n        [Validators.required, Validators.minLength(4), Validators.maxLength(4)],\n      ],\n    });\n  }\n\n  resetFormAndHide3() {\n    this.mngForm.patchValue({\n      employeeEducations: this.dataSource3.data,\n    });\n    this.empEducationForm.reset();\n    this.showParTranForm3 = false;\n  }\n\n  addParTran3() {\n    this.parTranAction3 = \"Add\";\n    this.showParTranForm3 = true;\n  }\n\n  refresh3() {\n    this.dataSource3.data = [...this.dataSource3.data];\n    this.dataSource3.paginator = this.paginator3;\n    this.dataSource3.sort = this.sort3;\n  }\n\n  editParTran3(data: any, index: number) {\n    this.parTranAction3 = \"Update\";\n    this.selectedParTranIndex3 = index;\n    this.generateSubForm3(data);\n    this.showParTranForm3 = true;\n  }\n\n  pushToDataSource3() {\n    if (this.parTranAction3 === \"Add\") {\n      this.dataSource3.data.push(this.empEducationForm.value);\n    } else if (this.parTranAction3 === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.empEducationForm.value.id) {\n        indexToUpdate = this.dataSource3.data.findIndex(\n          (item) => item.id === this.empEducationForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex1;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource3.data[indexToUpdate] = this.empEducationForm.value;\n      }\n    }\n\n    this.resetFormAndHide3();\n    this.refresh3();\n  }\n\n  cancelParTran3() {\n    this.resetFormAndHide3();\n  }\n\n  deleteParTran3(index: number) {\n    this.dataSource3.data.splice(index, 1);\n    this.refresh3();\n  }\n\n  //*************************************************************************************************************************************** */\n  // Experience =4\n  //*************************************************************************************************************************************** */\n  workExpForm: FormGroup;\n  dataSource4 = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator4!: MatPaginator;\n  @ViewChild(MatSort) sort4!: MatSort;\n\n  displayedColumns4: string[] = [\n    \"id\",\n    \"companyName\",\n    \"workPosition\",\n    \"startDate\",\n    \"endDate\",\n    \"action\",\n  ];\n  showParTranForm4 = false;\n  parTranAction4: string = \"\";\n  selectedParTranIndex4: number;\n\n  input4: any;\n  applyFilter4(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input1 = filterValue;\n    this.dataSource4.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource4.paginator) {\n      this.dataSource4.paginator.firstPage();\n    }\n  }\n\n  generateSubForm4(formData?): void {\n    this.workExpForm = this.fb.group({\n      companyName: [formData?.companyName ?? \"\", Validators.required],\n      workPosition: [formData?.workPosition ?? \"\", Validators.required],\n      startDate: [formData?.startDate ?? \"\", Validators.required],\n      endDate: [formData?.endDate ?? \"\", Validators.required],\n    });\n  }\n\n  resetFormAndHide4() {\n    this.mngForm.patchValue({\n      employeeWorkExperiences: this.dataSource4.data,\n    });\n    this.workExpForm.reset();\n    this.showParTranForm4 = false;\n  }\n\n  addParTran4() {\n    this.parTranAction4 = \"Add\";\n    this.showParTranForm4 = true;\n  }\n\n  refresh4() {\n    this.dataSource4.data = [...this.dataSource4.data];\n    this.dataSource4.paginator = this.paginator4;\n    this.dataSource4.sort = this.sort4;\n  }\n\n  editParTran4(data: any, index: number) {\n    this.parTranAction4 = \"Update\";\n    this.selectedParTranIndex4 = index;\n    this.generateSubForm4(data);\n    this.showParTranForm4 = true;\n  }\n\n  pushToDataSource4() {\n    if (this.parTranAction4 === \"Add\") {\n      this.dataSource4.data.push(this.workExpForm.value);\n    } else if (this.parTranAction4 === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.workExpForm.value.id) {\n        indexToUpdate = this.dataSource4.data.findIndex(\n          (item) => item.id === this.workExpForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex1;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource4.data[indexToUpdate] = this.workExpForm.value;\n      }\n    }\n\n    this.resetFormAndHide4();\n    this.refresh4();\n  }\n\n  cancelParTran4() {\n    this.resetFormAndHide4();\n  }\n\n  deleteParTran4(index: number) {\n    this.dataSource4.data.splice(index, 1);\n    this.refresh4();\n  }\n  //********************************************************************************************************************** */\n  //********************************************************************************************************************** */\n  file_name: any;\n  base64File: string;\n  loading: boolean = false;\n  handleFileInput(event: any) {\n    const file: File = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.base64File = reader.result as string;\n      this.file_name = file.name;\n      this.mngForm.patchValue({\n        marriageCertificate: this.base64File,\n      });\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  }\n  getDocument() {\n    // this.loading = true;\n    // let params = {\n    //   id: this.data.record.id,\n    // };\n    // this.caseMngtService.findById(params).subscribe(\n    //   (res) => {\n    //     console.log(res);\n    //     if (res.entity.attachment) {\n    //       this.loading = false;\n    //       this.downloadDocument(res.entity.attachment);\n    //     } else {\n    //       this.loading = false;\n    //       this.notificationAPI.alertWarning(\"No Document Attached!\");\n    //     }\n    //   },\n    //   (err) => {\n    //     this.loading = false;\n    //   }\n    // );\n  }\n\n  downloadDocument() {\n    let fileName = \"Document\";\n\n    fetch(this.formData.marriageCertificate)\n      .then((response) => response.blob())\n      .then((blob) => {\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", `${fileName}`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n  }\n\n  //*************************************************************************************************************************************** */\n  //Lookups\n  //*************************************************************************************************************************************** */\n\n  selectedItem: any;\n  jobRoleLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleJobRole\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(JobRolesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          basicSalary: res.data[0].minSalary,\n          jobGroupId: res.data[0].jobGroupId,\n          organizationRoleId: res.data[0].id,\n          organizationRole: res.data[0].roleName,\n        });\n      }\n    });\n  }\n  jobGroupLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleJobGrade\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(JobGradesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          jobGroupName: res.data[0].jobGroupName,\n        });\n      }\n    });\n  }\n  departmentLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleDepartment\",\n      selected: \"\",\n    };\n    const dialogRef = this.dialog.open(\n      DepartmentsLookupComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          departmentId: res.data[0].id,\n          departmentName: res.data[0].departmentName,\n        });\n      }\n    });\n  }\n  branchLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleDepartment\",\n      selected: \"\",\n    };\n    const dialogRef = this.dialog.open(BranchesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          branchName: res.data[0].branchName,\n          branchId: res.data[0].id,\n        });\n      }\n    });\n  }\n  costCenterLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleCostCenter\",\n      selected: \"\",\n    };\n    const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          costCenterCode: res.data[0].costCenterCode,\n        });\n      }\n    });\n  }\n  employeeLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(EmployeesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          reportingToPf: res.data[0].empNo,\n          reportingToFullname:\n            res.data[0].firstName +\n            \" \" +\n            res.data[0].middleName +\n            \" \" +\n            res.data[0].lastName,\n        });\n      }\n    });\n  }\n  // **************************************************************************************************\n\n  // **************************************************************************************************\n  //Showing the submit button\n  posting: boolean = false;\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.mngForm.valid) {\n      //this.patchDates();\n      if (this.pageFunction == \"Add\") {\n        this.employeeService\n          .create(this.mngForm.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n\n              if (res.statusCode == 201) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.cancel();\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              this.posting = false;\n            },\n            complete: () => {\n              this.posting = false;\n            },\n          }),\n          Subscription;\n      } else if (this.pageFunction == \"Update\") {\n        this.employeeService\n          .update(this.mngForm.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.cancel();\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              this.posting = false;\n            },\n            complete: () => {\n              this.posting = false;\n            },\n          }),\n          Subscription;\n      }\n    } else {\n      this.displayInvalidFields();\n      this.posting = false;\n    }\n  }\n  displayInvalidFields() {\n    const invalidFields = [];\n    const controls = this.mngForm.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalidFields.push(name);\n      }\n    }\n    const message = `Please fill in the following fields: ${invalidFields.join(\n      \", \"\n    )}`;\n    this.snackbar.showNotification(\"snackbar-danger\", message);\n  }\n\n  // patchDates() {\n  //   let enrollmentStartDate = this.mngForm.value.enrollmentStartDate;\n  //   let enrollmentEndDate = this.mngForm.value.enrollmentEndDate;\n  //   this.mngForm.patchValue({\n  //     enrollmentStartDate: this.datePipe.transform(\n  //       enrollmentStartDate,\n  //       \"yyyy-mm-dd\"\n  //     ),\n  //     enrollmentEndDate: this.datePipe.transform(\n  //       enrollmentEndDate,\n  //       \"yyyy-mm-dd\"\n  //     ),\n  //   });\n  // }\n  cancel() {\n    this.router.navigate([\"/erp-hr/employees/all-employees\"]);\n  }\n\n  // *********************************************************************************************\n\n  // **********************************************************************************************\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb\n        [title]=\"'Manage Employee'\"\n        [items]=\"['Employee']\"\n        [active_item]=\"'Manage Employee'\"\n      >\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              <strong>{{ pageFunction }} Employee</strong>\n            </h2>\n          </div>\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <!-- HOD Verification -->\n                        <div class=\"col-6\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod\">\n                                    {{ formData.hodVerifierStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod-approved\">\n                                    {{ formData.hodVerifierBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-1\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.hodVerifierRemarks\n                                  }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- HR Verification -->\n                        <div class=\"col-6\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HR Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance\">\n                                    {{ formData.hrVerifierStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance-approved\">\n                                    {{ formData.hrVerifiedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-1\">\n                                <div class=\"chat-with remarks\">\n                                  <strong> Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.hrVerifiedRemarks\n                                  }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <mat-horizontal-stepper [linear]=\"false\" #stepper>\n              <mat-step>\n                <ng-template matStepLabel>Basic Information</ng-template>\n                <form [formGroup]=\"mngForm\">\n                  <div class=\"row\">\n                    <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Employee Number</mat-label>\n                                                <input matInput formControlName=\"empNo\" />\n                                                <mat-error *ngIf=\"\n                                    mngForm.get('empNo').invalid &&\n                                    mngForm.get('empNo').touched\n                                  \">\n                                                    Please enter an Employee Number\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div> -->\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>First Name</mat-label>\n                        <input matInput formControlName=\"firstName\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('firstName').invalid &&\n                            mngForm.get('firstName').touched\n                          \"\n                        >\n                          Please enter a valid First Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Middle Name</mat-label>\n                        <input matInput formControlName=\"middleName\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('middleName').invalid &&\n                            mngForm.get('middleName').touched\n                          \"\n                        >\n                          Please enter a valid Middle Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Last Name</mat-label>\n                        <input matInput formControlName=\"lastName\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('lastName').invalid &&\n                            mngForm.get('lastName').touched\n                          \"\n                        >\n                          Please enter a valid Last Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Date of Birth</mat-label>\n                        <input\n                          matInput\n                          [matDatepicker]=\"dobDatePicker\"\n                          formControlName=\"dob\"\n                        />\n                        <mat-datepicker-toggle\n                          matSuffix\n                          [for]=\"dobDatePicker\"\n                        ></mat-datepicker-toggle>\n                        <mat-datepicker #dobDatePicker></mat-datepicker>\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('dob').invalid &&\n                            mngForm.get('dob').touched\n                          \"\n                        >\n                          Please select a valid Date of Birth\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>National ID</mat-label>\n                        <input matInput formControlName=\"nationalId\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('nationalId').invalid &&\n                            mngForm.get('nationalId').touched\n                          \"\n                        >\n                          Please enter a valid National ID\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Religion</mat-label>\n\n                        <mat-select formControlName=\"religion\">\n                          <mat-option\n                            *ngFor=\"let item of religionArray\"\n                            [value]=\"item\"\n                            >{{ item }}</mat-option\n                          >\n                        </mat-select>\n\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('religion').invalid &&\n                            mngForm.get('religion').touched\n                          \"\n                        >\n                          Please enter a valid Religion\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <section class=\"example-section\">\n                        <label class=\"example-margin\">Gender:</label>\n                        <mat-radio-group formControlName=\"gender\">\n                          <mat-radio-button class=\"example-margin\" value=\"male\"\n                            >Male</mat-radio-button\n                          >\n                          <mat-radio-button\n                            class=\"example-margin\"\n                            value=\"female\"\n                            >Female</mat-radio-button\n                          >\n                        </mat-radio-group>\n                      </section>\n\n                      <mat-error\n                        *ngIf=\"\n                          mngForm.get('gender').invalid &&\n                          mngForm.get('gender').touched\n                        \"\n                      >\n                        Please select Gender\n                      </mat-error>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Marital Status</mat-label>\n                        <mat-select formControlName=\"maritalStatus\">\n                          <mat-option\n                            *ngFor=\"let status of maritalStatusArray\"\n                            [value]=\"status\"\n                            >{{ status }}</mat-option\n                          >\n                        </mat-select>\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('maritalStatus').invalid &&\n                            mngForm.get('maritalStatus').touched\n                          \"\n                        >\n                          Please enter a valid Marital Status\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div\n                      *ngIf=\"mngForm.get('maritalStatus').value === 'Married'\"\n                      class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\"\n                    >\n                      <mat-label>Marriage Certificate</mat-label>\n                      <div class=\"row\">\n                        <div class=\"col-6\" *ngIf=\"pageFunction !== 'Add'\">\n                          <button\n                            matTooltip=\"DOWNLOAD PREVIOUS ATTACHMENT\"\n                            mat-mini-fab\n                            color=\"primary\"\n                            (click)=\"downloadDocument()\"\n                            class=\"mat-button-custom\"\n                          >\n                            <mat-icon class=\"col-white\"\n                              >cloud_download</mat-icon\n                            >\n                          </button>\n                        </div>\n                        <div class=\"col-6 file-upload\">\n                          <button\n                            matTooltip=\"SELECT NEW ATTACHMENT\"\n                            mat-mini-fab\n                            color=\"primary\"\n                            class=\"upload-btn\"\n                            (click)=\"fileInput.click()\"\n                          >\n                            <mat-icon>attach_file</mat-icon>\n                          </button>\n                          <input\n                            type=\"file\"\n                            class=\"form-controls\"\n                            (change)=\"handleFileInput($event)\"\n                            accept=\".pdf\"\n                            style=\"display: none\"\n                            #fileInput\n                          />\n                          <div class=\"file-name-display\">\n                            {{ file_name || \"No file selected.\" }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- <div *ngIf=\"mngForm.get('maritalStatus').value === 'Married'\"\n                                            class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Marriage Certificate</mat-label>\n                                                <input matInput type=\"file\" formControlName=\"marriageCertificate\" />\n                                                <mat-error *ngIf=\"\n                                    mngForm.get('marriageCertificate').invalid &&\n                                    mngForm.get('marriageCertificate').touched\n                                  \">\n                                                    Please upload a valid Marriage Certificate\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div> -->\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-checkbox formControlName=\"disabled\"\n                        >Disabled</mat-checkbox\n                      >\n                    </div>\n\n                    <div\n                      *ngIf=\"mngForm.get('disabled').value\"\n                      class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\"\n                    >\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Disabled Registration Number</mat-label>\n                        <input matInput formControlName=\"disabledRegNo\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('disabledRegNo').invalid &&\n                            mngForm.get('disabledRegNo').touched\n                          \"\n                        >\n                          Please enter a valid Disabled Registration Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div>\n                    <button mat-raised-button color=\"accent\" (click)=\"cancel()\">\n                      Back\n                    </button>\n                    <button\n                      class=\"mx-2\"\n                      mat-raised-button\n                      color=\"primary\"\n                      matStepperNext\n                    >\n                      Next\n                    </button>\n                  </div>\n                </form>\n              </mat-step>\n              <mat-step>\n                <ng-template matStepLabel>Home Address</ng-template>\n                <form [formGroup]=\"mngForm\">\n                  <div class=\"row\">\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Nationality</mat-label>\n                        <input matInput formControlName=\"nationality\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('nationality').invalid &&\n                            mngForm.get('nationality').touched\n                          \"\n                        >\n                          Please enter a valid Nationality\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>County</mat-label>\n                        <input matInput formControlName=\"county\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('county').invalid &&\n                            mngForm.get('county').touched\n                          \"\n                        >\n                          Please enter a valid County\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Sub-County</mat-label>\n                        <input matInput formControlName=\"subCounty\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('subCounty').invalid &&\n                            mngForm.get('subCounty').touched\n                          \"\n                        >\n                          Please enter a valid Sub-County\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Residential Country</mat-label>\n                        <input matInput formControlName=\"residentialCountry\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('residentialCountry').invalid &&\n                            mngForm.get('residentialCountry').touched\n                          \"\n                        >\n                          Please enter a valid Residential Country\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Residential County</mat-label>\n                        <input matInput formControlName=\"residentialCounty\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('residentialCounty').invalid &&\n                            mngForm.get('residentialCounty').touched\n                          \"\n                        >\n                          Please enter a valid Residential County\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Residential Sub-County</mat-label>\n                        <input\n                          matInput\n                          formControlName=\"residentialSubCounty\"\n                        />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('residentialSubCounty').invalid &&\n                            mngForm.get('residentialSubCounty').touched\n                          \"\n                        >\n                          Please enter a valid Residential Sub-County\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Postal Address</mat-label>\n                        <input matInput formControlName=\"postalAddress\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('postalAddress').invalid &&\n                            mngForm.get('postalAddress').touched\n                          \"\n                        >\n                          Please enter a valid Postal Address\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Postal Code</mat-label>\n                        <input matInput formControlName=\"postalCode\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('postalCode').invalid &&\n                            mngForm.get('postalCode').touched\n                          \"\n                        >\n                          Please enter a valid Postal Code\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>City</mat-label>\n                        <input matInput formControlName=\"city\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('city').invalid &&\n                            mngForm.get('city').touched\n                          \"\n                        >\n                          Please enter a valid City\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div>\n                    <button mat-raised-button color=\"accent\" matStepperPrevious>\n                      Back\n                    </button>\n                    <button\n                      class=\"mx-2\"\n                      mat-raised-button\n                      color=\"primary\"\n                      matStepperNext\n                    >\n                      Next\n                    </button>\n                  </div>\n                </form>\n              </mat-step>\n              <mat-step>\n                <ng-template matStepLabel>Contact Details</ng-template>\n                <form [formGroup]=\"mngForm\">\n                  <div class=\"row\">\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Personal Phone Number</mat-label>\n                        <input matInput formControlName=\"personalPhone\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('personalPhone').invalid &&\n                            mngForm.get('personalPhone').touched\n                          \"\n                        >\n                          Please enter a valid Personal Phone Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Alternative Phone</mat-label>\n                        <input matInput formControlName=\"alternativePhone\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('alternativePhone').invalid &&\n                            mngForm.get('alternativePhone').touched\n                          \"\n                        >\n                          Please enter a valid Alternative Phone Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Personal Email Address</mat-label>\n                        <input matInput formControlName=\"personalEmail\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('personalEmail').invalid &&\n                            mngForm.get('personalEmail').touched\n                          \"\n                        >\n                          Please enter a valid Personal Email Address\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Alternative Email</mat-label>\n                        <input matInput formControlName=\"alternativeEmail\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('alternativeEmail').invalid &&\n                            mngForm.get('alternativeEmail').touched\n                          \"\n                        >\n                          Please enter a valid Alternative Email Address\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div>\n                    <button mat-raised-button color=\"accent\" matStepperPrevious>\n                      Back\n                    </button>\n                    <button\n                      class=\"mx-2\"\n                      mat-raised-button\n                      color=\"primary\"\n                      matStepperNext\n                    >\n                      Next\n                    </button>\n                  </div>\n                </form>\n              </mat-step>\n              <mat-step>\n                <ng-template matStepLabel>Next of Kin Details</ng-template>\n                <ng-container>\n                  <form [formGroup]=\"nextOfKinForm\">\n                    <ng-container *ngIf=\"showParTranForm1\">\n                      <div class=\"row\">\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Full Name</mat-label>\n                            <input matInput formControlName=\"name\" />\n                            <mat-error\n                              *ngIf=\"\n                                nextOfKinForm.get('name').invalid &&\n                                nextOfKinForm.get('name').touched\n                              \"\n                            >\n                              Please enter a valid Full Name\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Phone Number</mat-label>\n                            <input matInput formControlName=\"phoneNumber\" />\n                            <mat-error\n                              *ngIf=\"\n                                nextOfKinForm.get('phoneNumber').invalid &&\n                                nextOfKinForm.get('phoneNumber').touched\n                              \"\n                            >\n                              Please enter a valid Phone Number\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Email</mat-label>\n                            <input matInput formControlName=\"email\" />\n                            <mat-error\n                              *ngIf=\"\n                                nextOfKinForm.get('email').invalid &&\n                                nextOfKinForm.get('email').touched\n                              \"\n                            >\n                              Please enter a valid Email Address\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Street Address</mat-label>\n                            <input matInput formControlName=\"address\" />\n                            <mat-error\n                              *ngIf=\"\n                                nextOfKinForm.get('address').invalid &&\n                                nextOfKinForm.get('address').touched\n                              \"\n                            >\n                              Please enter a valid Street Address\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Relationship</mat-label>\n                            <input matInput formControlName=\"relationship\" />\n                            <mat-error\n                              *ngIf=\"\n                                nextOfKinForm.get('relationship').invalid &&\n                                nextOfKinForm.get('relationship').touched\n                              \"\n                            >\n                              Please enter a valid Relationship\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div\n                          class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\"\n                        >\n                          <div class=\"example-button-row\" align=\"start\">\n                            <button\n                              class=\"btn-space\"\n                              mat-raised-button\n                              color=\"primary\"\n                              [class.auth-spinner]=\"posting\"\n                              [disabled]=\"!nextOfKinForm.valid || posting\"\n                              [hidden]=\"viewMode\"\n                              (click)=\"pushToDataSource1()\"\n                            >\n                              {{ parTranAction1 }} Qualification\n                            </button>\n\n                            <button\n                              mat-raised-button\n                              color=\"warn\"\n                              (click)=\"cancelParTran1()\"\n                              tabindex=\"-1\"\n                            >\n                              Cancel\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </ng-container>\n\n                    <mat-tab-group>\n                      <mat-tab>\n                        <ng-template mat-tab-label>\n                          <mat-icon>receipt</mat-icon> All Next of Kin\n                        </ng-template>\n\n                        <div class=\"row m-1\">\n                          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div class=\"table-responsiv\">\n                              <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                  <div class=\"col-8\">\n                                    <ul class=\"header-buttons-left ms-0\">\n                                      <li class=\"dropdown\">\n                                        <h2>Next Of Kin</h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"\n                                          ><i class=\"material-icons search-icon\"\n                                            >search</i\n                                          ></label\n                                        >\n                                        <input\n                                          placeholder=\"Filter...\"\n                                          type=\"text\"\n                                          (keyup)=\"applyFilter1($event)\"\n                                          #filter\n                                          class=\"browser-default search-field\"\n                                          aria-label=\"Search box\"\n                                        />\n                                      </li>\n                                      <li>\n                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                          <button\n                                            mat-mini-fab\n                                            color=\"primary\"\n                                            (click)=\"addParTran1()\"\n                                          >\n                                            <mat-icon class=\"col-white\"\n                                              >add</mat-icon\n                                            >\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div\n                                          class=\"m-l-10\"\n                                          matTooltip=\"REFRESH\"\n                                        >\n                                          <button\n                                            mat-mini-fab\n                                            color=\"primary\"\n                                            (click)=\"refresh1()\"\n                                          >\n                                            <mat-icon class=\"col-white\"\n                                              >refresh</mat-icon\n                                            >\n                                          </button>\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n\n                                  <div class=\"col-4\">\n                                    <ul class=\"header-buttons\">\n                                      <li>\n                                        <div\n                                          class=\"export-button m-l-10\"\n                                          matTooltip=\"XLSX\"\n                                        >\n                                          <img\n                                            src=\"assets/images/icons/xlsx.png\"\n                                            alt=\"\"\n                                            (click)=\"\n                                              exporter.exportTable('xlsx', {\n                                                fileName: 'assets-list',\n                                                sheet: 'sheet1'\n                                              })\n                                            \"\n                                          />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div\n                                          class=\"export-button m-l-10\"\n                                          matTooltip=\"CSV\"\n                                        >\n                                          <img\n                                            src=\"assets/images/icons/csv.png\"\n                                            alt=\"\"\n                                            (click)=\"\n                                              exporter.exportTable('csv')\n                                            \"\n                                          />\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <mat-table\n                                #table\n                                matTableExporter\n                                [dataSource]=\"dataSource1\"\n                                matSort\n                                class=\"mat-cell\"\n                                #exporter=\"matTableExporter\"\n                              >\n                                <!-- ID Column -->\n                                <ng-container matColumnDef=\"id\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                    >ID</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                  >\n                                    {{ row.id ? row.id : \"#\" }}\n                                  </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"name\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Name</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.name }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"phoneNumber\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Phone Number</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.phoneNumber }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"email\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Email</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.email }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"address\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Address</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.address }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"relationship\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Relationship</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.relationship }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                  <mat-header-cell\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                    *matHeaderCellDef\n                                  >\n                                    Action\n                                  </mat-header-cell>\n                                  <mat-cell\n                                    *matCellDef=\"let row; let i = index\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                  >\n                                    <!-- Edit Button -->\n                                    <button\n                                      mat-icon-button\n                                      color=\"accent\"\n                                      (click)=\"$event.stopPropagation()\"\n                                      (click)=\"editParTran1(row, i)\"\n                                      class=\"tbl-action-btn\"\n                                    >\n                                      <app-feather-icons\n                                        [icon]=\"'edit'\"\n                                        [class]=\"'tbl-fav-edit'\"\n                                      >\n                                      </app-feather-icons>\n                                    </button>\n\n                                    <!-- Delete Button -->\n                                    <button\n                                      mat-icon-button\n                                      color=\"accent\"\n                                      (click)=\"$event.stopPropagation()\"\n                                      (click)=\"deleteParTran1(i)\"\n                                      class=\"tbl-action-btn\"\n                                    >\n                                      <app-feather-icons\n                                        [icon]=\"'trash-2'\"\n                                        [class]=\"'tbl-fav-delete'\"\n                                      >\n                                      </app-feather-icons>\n                                    </button>\n                                  </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row\n                                  *matHeaderRowDef=\"displayedColumns1\"\n                                ></mat-header-row>\n                                <mat-row\n                                  *matRowDef=\"\n                                    let row;\n                                    columns: displayedColumns1\n                                  \"\n                                  (click)=\"editParTran1(row, i)\"\n                                  [style.cursor]=\"'pointer'\"\n                                  matRipple\n                                >\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"8\">\n                                  No data matching the filter \"{{\n                                    input1.value\n                                  }}\"</mat-cell\n                                >\n                              </mat-table>\n                              <div\n                                *ngIf=\"dataSource1.data.length === 0\"\n                                class=\"tbl-spinner\"\n                              >\n                                <mat-progress-spinner\n                                  color=\"primary\"\n                                  [diameter]=\"40\"\n                                  mode=\"indeterminate\"\n                                >\n                                </mat-progress-spinner>\n                              </div>\n                              <mat-paginator\n                                [pageSize]=\"10\"\n                                [pageSizeOptions]=\"[\n                                  2, 5, 10, 20, 30, 40, 50, 100\n                                ]\"\n                                aria-label=\"Select page of users\"\n                              ></mat-paginator>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-tab>\n                    </mat-tab-group>\n                  </form>\n                </ng-container>\n\n                <div>\n                  <button mat-raised-button color=\"accent\" matStepperPrevious>\n                    Back\n                  </button>\n                  <button\n                    class=\"mx-2\"\n                    mat-raised-button\n                    color=\"primary\"\n                    matStepperNext\n                  >\n                    Next\n                  </button>\n                </div>\n              </mat-step>\n              <mat-step>\n                <ng-template matStepLabel>Dependant Details</ng-template>\n                <ng-container>\n                  <form [formGroup]=\"dependantForm\">\n                    <ng-container *ngIf=\"showParTranForm2\">\n                      <div class=\"row\">\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Full Name</mat-label>\n                            <input matInput formControlName=\"dependantName\" />\n                            <mat-error\n                              *ngIf=\"\n                                dependantForm.get('dependantName').invalid &&\n                                dependantForm.get('dependantName').touched\n                              \"\n                            >\n                              Please enter a valid Full Name\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Date of Birth</mat-label>\n                            <input\n                              matInput\n                              [matDatepicker]=\"dobPicker\"\n                              formControlName=\"dependantDob\"\n                            />\n                            <mat-datepicker-toggle\n                              matSuffix\n                              [for]=\"dobPicker\"\n                            ></mat-datepicker-toggle>\n                            <mat-datepicker #dobPicker></mat-datepicker>\n                            <mat-error\n                              *ngIf=\"\n                                dependantForm.get('dependantDob').invalid &&\n                                dependantForm.get('dependantDob').touched\n                              \"\n                            >\n                              Please enter a valid Date of Birth\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Birth Certificate Number</mat-label>\n                            <input matInput formControlName=\"birthCertNo\" />\n                            <mat-error\n                              *ngIf=\"\n                                dependantForm.get('birthCertNo').invalid &&\n                                dependantForm.get('birthCertNo').touched\n                              \"\n                            >\n                              Please enter a valid Birth Certificate Number\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Phone Number</mat-label>\n                            <input matInput formControlName=\"dependantPhone\" />\n                            <mat-error\n                              *ngIf=\"\n                                dependantForm.get('dependantPhone').invalid &&\n                                dependantForm.get('dependantPhone').touched\n                              \"\n                            >\n                              Please enter a valid Phone Number\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-4 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Email</mat-label>\n                            <input matInput formControlName=\"dependantEmail\" />\n                            <mat-error\n                              *ngIf=\"\n                                dependantForm.get('dependantEmail').invalid &&\n                                dependantForm.get('dependantEmail').touched\n                              \"\n                            >\n                              Please enter a valid Email Address\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div\n                          class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\"\n                        >\n                          <div class=\"example-button-row\" align=\"start\">\n                            <button\n                              class=\"btn-space\"\n                              mat-raised-button\n                              color=\"primary\"\n                              [class.auth-spinner]=\"posting\"\n                              [disabled]=\"!dependantForm.valid || posting\"\n                              [hidden]=\"viewMode\"\n                              (click)=\"pushToDataSource2()\"\n                            >\n                              {{ parTranAction2 }} Dependant\n                            </button>\n\n                            <button\n                              mat-raised-button\n                              color=\"warn\"\n                              (click)=\"cancelParTran2()\"\n                              tabindex=\"-1\"\n                            >\n                              Cancel\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </ng-container>\n\n                    <mat-tab-group>\n                      <mat-tab>\n                        <ng-template mat-tab-label>\n                          <mat-icon>receipt</mat-icon> All Dependants\n                        </ng-template>\n\n                        <div class=\"row m-1\">\n                          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div class=\"table-responsiv\">\n                              <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                  <div class=\"col-8\">\n                                    <ul class=\"header-buttons-left ms-0\">\n                                      <li class=\"dropdown\">\n                                        <h2>Dependants</h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"\n                                          ><i class=\"material-icons search-icon\"\n                                            >search</i\n                                          ></label\n                                        >\n                                        <input\n                                          placeholder=\"Filter...\"\n                                          type=\"text\"\n                                          (keyup)=\"applyFilter2($event)\"\n                                          #filter\n                                          class=\"browser-default search-field\"\n                                          aria-label=\"Search box\"\n                                        />\n                                      </li>\n                                      <li>\n                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                          <button\n                                            mat-mini-fab\n                                            color=\"primary\"\n                                            (click)=\"addParTran2()\"\n                                          >\n                                            <mat-icon class=\"col-white\"\n                                              >add</mat-icon\n                                            >\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div\n                                          class=\"m-l-10\"\n                                          matTooltip=\"REFRESH\"\n                                        >\n                                          <button\n                                            mat-mini-fab\n                                            color=\"primary\"\n                                            (click)=\"refresh2()\"\n                                          >\n                                            <mat-icon class=\"col-white\"\n                                              >refresh</mat-icon\n                                            >\n                                          </button>\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n\n                                  <div class=\"col-4\">\n                                    <ul class=\"header-buttons\">\n                                      <li>\n                                        <div\n                                          class=\"export-button m-l-10\"\n                                          matTooltip=\"XLSX\"\n                                        >\n                                          <img\n                                            src=\"assets/images/icons/xlsx.png\"\n                                            alt=\"\"\n                                            (click)=\"\n                                              exporter.exportTable('xlsx', {\n                                                fileName: 'assets-list',\n                                                sheet: 'sheet1'\n                                              })\n                                            \"\n                                          />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div\n                                          class=\"export-button m-l-10\"\n                                          matTooltip=\"CSV\"\n                                        >\n                                          <img\n                                            src=\"assets/images/icons/csv.png\"\n                                            alt=\"\"\n                                            (click)=\"\n                                              exporter.exportTable('csv')\n                                            \"\n                                          />\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <mat-table\n                                #table\n                                matTableExporter\n                                [dataSource]=\"dataSource2\"\n                                matSort\n                                class=\"mat-cell\"\n                                #exporter=\"matTableExporter\"\n                              >\n                                <!-- ID Column -->\n                                <ng-container matColumnDef=\"id\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                    >ID</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                  >\n                                    {{ row.id ? row.id : \"#\" }}\n                                  </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"dependantName\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Name</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.dependantName }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"dependantDob\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Date of Birth</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.dependantDob }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"birthCertNo\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Birth Certificate Number</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.birthCertNo }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"dependantPhone\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Phone Number</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.dependantPhone }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"dependantEmail\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Email</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.dependantEmail }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"downloadFile\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Download File</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.downloadFile }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                  <mat-header-cell\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                    *matHeaderCellDef\n                                  >\n                                    Action\n                                  </mat-header-cell>\n                                  <mat-cell\n                                    *matCellDef=\"let row; let i = index\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                  >\n                                    <!-- Edit Button -->\n                                    <button\n                                      mat-icon-button\n                                      color=\"accent\"\n                                      (click)=\"$event.stopPropagation()\"\n                                      (click)=\"editParTran2(row, i)\"\n                                      class=\"tbl-action-btn\"\n                                    >\n                                      <app-feather-icons\n                                        [icon]=\"'edit'\"\n                                        [class]=\"'tbl-fav-edit'\"\n                                      >\n                                      </app-feather-icons>\n                                    </button>\n\n                                    <!-- Delete Button -->\n                                    <button\n                                      mat-icon-button\n                                      color=\"accent\"\n                                      (click)=\"$event.stopPropagation()\"\n                                      (click)=\"deleteParTran2(i)\"\n                                      class=\"tbl-action-btn\"\n                                    >\n                                      <app-feather-icons\n                                        [icon]=\"'trash-2'\"\n                                        [class]=\"'tbl-fav-delete'\"\n                                      >\n                                      </app-feather-icons>\n                                    </button>\n                                  </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row\n                                  *matHeaderRowDef=\"displayedColumns2\"\n                                ></mat-header-row>\n                                <mat-row\n                                  *matRowDef=\"\n                                    let row;\n                                    columns: displayedColumns2\n                                  \"\n                                  (click)=\"editParTran2(row, i)\"\n                                  [style.cursor]=\"'pointer'\"\n                                  matRipple\n                                >\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"8\">\n                                  No data matching the filter \"{{\n                                    input2.value\n                                  }}\"</mat-cell\n                                >\n                              </mat-table>\n                              <div\n                                *ngIf=\"dataSource2.data.length === 0\"\n                                class=\"tbl-spinner\"\n                              >\n                                <mat-progress-spinner\n                                  color=\"primary\"\n                                  [diameter]=\"40\"\n                                  mode=\"indeterminate\"\n                                >\n                                </mat-progress-spinner>\n                              </div>\n                              <mat-paginator\n                                [pageSize]=\"10\"\n                                [pageSizeOptions]=\"[\n                                  2, 5, 10, 20, 30, 40, 50, 100\n                                ]\"\n                                aria-label=\"Select page of users\"\n                              ></mat-paginator>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-tab>\n                    </mat-tab-group>\n                  </form>\n                </ng-container>\n\n                <div>\n                  <button mat-raised-button color=\"accent\" matStepperPrevious>\n                    Back\n                  </button>\n                  <button\n                    class=\"mx-2\"\n                    mat-raised-button\n                    color=\"primary\"\n                    matStepperNext\n                  >\n                    Next\n                  </button>\n                </div>\n              </mat-step>\n              <mat-step>\n                <ng-template matStepLabel>Education Details</ng-template>\n                <ng-container>\n                  <form [formGroup]=\"mngForm\">\n                    <div class=\"row\">\n                      <div class=\"col-md-4 col-sm-12 mb-1\">\n                        <mat-form-field\n                          class=\"example-full-width\"\n                          appearance=\"outline\"\n                        >\n                          <mat-label>Highest Education</mat-label>\n\n                          <mat-select formControlName=\"highestEducation\">\n                            <mat-option\n                              *ngFor=\"let item of educationLevelArray\"\n                              [value]=\"item\"\n                              >{{ item }}</mat-option\n                            >\n                          </mat-select>\n                          <mat-error\n                            *ngIf=\"\n                              mngForm.get('highestEducation').invalid &&\n                              mngForm.get('highestEducation').touched\n                            \"\n                          >\n                            Please select the highest education level\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n\n                      <div class=\"col-md-4 col-sm-12 mb-1\">\n                        <mat-form-field\n                          class=\"example-full-width\"\n                          appearance=\"outline\"\n                        >\n                          <mat-label>Course Program</mat-label>\n                          <input matInput formControlName=\"courseProgram\" />\n                          <mat-error\n                            *ngIf=\"\n                              mngForm.get('courseProgram').invalid &&\n                              mngForm.get('courseProgram').touched\n                            \"\n                          >\n                            Please enter the course program\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n\n                      <div class=\"col-md-4 col-sm-12 mb-1\">\n                        <mat-form-field\n                          class=\"example-full-width\"\n                          appearance=\"outline\"\n                        >\n                          <mat-label>Education Enrollment Status</mat-label>\n\n                          <mat-select formControlName=\"educationEnrollment\">\n                            <mat-option\n                              *ngFor=\"let item of educationEnrollmentsArray\"\n                              [value]=\"item\"\n                              >{{ item }}</mat-option\n                            >\n                          </mat-select>\n                          <mat-error\n                            *ngIf=\"\n                              mngForm.get('educationEnrollment').invalid &&\n                              mngForm.get('educationEnrollment').touched\n                            \"\n                          >\n                            Please select the education enrollment date\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                    </div>\n                  </form>\n                  <hr />\n                  <form [formGroup]=\"empEducationForm\">\n                    <ng-container *ngIf=\"showParTranForm3\">\n                      <div class=\"row\">\n                        <div class=\"col-md-2 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Institution Name</mat-label>\n                            <input matInput formControlName=\"institutionName\" />\n                            <mat-error\n                              *ngIf=\"\n                                empEducationForm.get('institutionName')\n                                  .invalid &&\n                                empEducationForm.get('institutionName').touched\n                              \"\n                            >\n                              Please enter a valid Institution Name\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-2 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Award Certificate</mat-label>\n                            <input\n                              matInput\n                              formControlName=\"awardCertificate\"\n                            />\n                            <mat-error\n                              *ngIf=\"\n                                empEducationForm.get('awardCertificate')\n                                  .invalid &&\n                                empEducationForm.get('awardCertificate').touched\n                              \"\n                            >\n                              Please enter a valid Award Certificate\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-2 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Certificate Number</mat-label>\n                            <input matInput formControlName=\"certNo\" />\n                            <mat-error\n                              *ngIf=\"\n                                empEducationForm.get('certNo').invalid &&\n                                empEducationForm.get('certNo').touched\n                              \"\n                            >\n                              Please enter a valid Certificate Number\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-2 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>GPA Score</mat-label>\n                            <mat-select formControlName=\"gpaScore\">\n                              <mat-option\n                                *ngFor=\"let item of gpaScoreArray\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                              >\n                            </mat-select>\n                            <mat-error\n                              *ngIf=\"\n                                empEducationForm.get('gpaScore').invalid &&\n                                empEducationForm.get('gpaScore').touched\n                              \"\n                            >\n                              Please enter a valid GPA Score\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-2 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Enrolled On</mat-label>\n                            <input\n                              matInput\n                              [matDatepicker]=\"enrollOnPicker\"\n                              formControlName=\"enrollOn\"\n                            />\n                            <mat-datepicker-toggle\n                              matSuffix\n                              [for]=\"enrollOnPicker\"\n                            ></mat-datepicker-toggle>\n                            <mat-datepicker #enrollOnPicker></mat-datepicker>\n                            <mat-error\n                              *ngIf=\"\n                                empEducationForm.get('enrollOn').invalid &&\n                                empEducationForm.get('enrollOn').touched\n                              \"\n                            >\n                              Please enter a valid Enrolled On date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-2 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Graduated On</mat-label>\n                            <input\n                              matInput\n                              [matDatepicker]=\"graduatedOnPicker\"\n                              formControlName=\"graduatedOn\"\n                            />\n                            <mat-datepicker-toggle\n                              matSuffix\n                              [for]=\"graduatedOnPicker\"\n                            ></mat-datepicker-toggle>\n                            <mat-datepicker #graduatedOnPicker></mat-datepicker>\n                            <mat-error\n                              *ngIf=\"\n                                empEducationForm.get('graduatedOn').invalid &&\n                                empEducationForm.get('graduatedOn').touched\n                              \"\n                            >\n                              Please enter a valid Graduated On date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div\n                          class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\"\n                        >\n                          <div class=\"example-button-row\" align=\"start\">\n                            <button\n                              class=\"btn-space\"\n                              mat-raised-button\n                              color=\"primary\"\n                              [class.auth-spinner]=\"posting\"\n                              [disabled]=\"!empEducationForm.valid || posting\"\n                              [hidden]=\"viewMode\"\n                              (click)=\"pushToDataSource3()\"\n                            >\n                              {{ parTranAction3 }} Education\n                            </button>\n\n                            <button\n                              mat-raised-button\n                              color=\"warn\"\n                              (click)=\"cancelParTran3()\"\n                              tabindex=\"-1\"\n                            >\n                              Cancel\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </ng-container>\n\n                    <mat-tab-group>\n                      <mat-tab>\n                        <ng-template mat-tab-label>\n                          <mat-icon>receipt</mat-icon> All Education Details\n                        </ng-template>\n\n                        <div class=\"row m-1\">\n                          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div class=\"table-responsiv\">\n                              <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                  <div class=\"col-8\">\n                                    <ul class=\"header-buttons-left ms-0\">\n                                      <li class=\"dropdown\">\n                                        <h2>Education</h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"\n                                          ><i class=\"material-icons search-icon\"\n                                            >search</i\n                                          ></label\n                                        >\n                                        <input\n                                          placeholder=\"Filter...\"\n                                          type=\"text\"\n                                          (keyup)=\"applyFilter3($event)\"\n                                          #filter\n                                          class=\"browser-default search-field\"\n                                          aria-label=\"Search box\"\n                                        />\n                                      </li>\n                                      <li>\n                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                          <button\n                                            mat-mini-fab\n                                            color=\"primary\"\n                                            (click)=\"addParTran3()\"\n                                          >\n                                            <mat-icon class=\"col-white\"\n                                              >add</mat-icon\n                                            >\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div\n                                          class=\"m-l-10\"\n                                          matTooltip=\"REFRESH\"\n                                        >\n                                          <button\n                                            mat-mini-fab\n                                            color=\"primary\"\n                                            (click)=\"refresh3()\"\n                                          >\n                                            <mat-icon class=\"col-white\"\n                                              >refresh</mat-icon\n                                            >\n                                          </button>\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n\n                                  <div class=\"col-4\">\n                                    <ul class=\"header-buttons\">\n                                      <li>\n                                        <div\n                                          class=\"export-button m-l-10\"\n                                          matTooltip=\"XLSX\"\n                                        >\n                                          <img\n                                            src=\"assets/images/icons/xlsx.png\"\n                                            alt=\"\"\n                                            (click)=\"\n                                              exporter.exportTable('xlsx', {\n                                                fileName: 'assets-list',\n                                                sheet: 'sheet1'\n                                              })\n                                            \"\n                                          />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div\n                                          class=\"export-button m-l-10\"\n                                          matTooltip=\"CSV\"\n                                        >\n                                          <img\n                                            src=\"assets/images/icons/csv.png\"\n                                            alt=\"\"\n                                            (click)=\"\n                                              exporter.exportTable('csv')\n                                            \"\n                                          />\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <mat-table\n                                #table\n                                matTableExporter\n                                [dataSource]=\"dataSource3\"\n                                matSort\n                                class=\"mat-cell\"\n                                #exporter=\"matTableExporter\"\n                              >\n                                <!-- ID Column -->\n                                <ng-container matColumnDef=\"id\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                    >ID</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                  >\n                                    {{ row.id ? row.id : \"#\" }}\n                                  </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"institutionName\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Institution Name</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.institutionName }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"awardCertificate\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Award Certificate</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.awardCertificate }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"certNo\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Certification Number</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.certNo }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"gpaScore\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >GPA Score</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.gpaScore }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"enrollOn\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Enrolled On</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.enrollOn }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"graduatedOn\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Graduated On</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.graduatedOn }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                  <mat-header-cell\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                    *matHeaderCellDef\n                                  >\n                                    Action\n                                  </mat-header-cell>\n                                  <mat-cell\n                                    *matCellDef=\"let row; let i = index\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                  >\n                                    <!-- Edit Button -->\n                                    <button\n                                      mat-icon-button\n                                      color=\"accent\"\n                                      (click)=\"$event.stopPropagation()\"\n                                      (click)=\"editParTran3(row, i)\"\n                                      class=\"tbl-action-btn\"\n                                    >\n                                      <app-feather-icons\n                                        [icon]=\"'edit'\"\n                                        [class]=\"'tbl-fav-edit'\"\n                                      >\n                                      </app-feather-icons>\n                                    </button>\n\n                                    <!-- Delete Button -->\n                                    <button\n                                      mat-icon-button\n                                      color=\"accent\"\n                                      (click)=\"$event.stopPropagation()\"\n                                      (click)=\"deleteParTran3(i)\"\n                                      class=\"tbl-action-btn\"\n                                    >\n                                      <app-feather-icons\n                                        [icon]=\"'trash-2'\"\n                                        [class]=\"'tbl-fav-delete'\"\n                                      >\n                                      </app-feather-icons>\n                                    </button>\n                                  </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row\n                                  *matHeaderRowDef=\"displayedColumns3\"\n                                ></mat-header-row>\n                                <mat-row\n                                  *matRowDef=\"\n                                    let row;\n                                    columns: displayedColumns3\n                                  \"\n                                  (click)=\"editParTran3(row, i)\"\n                                  [style.cursor]=\"'pointer'\"\n                                  matRipple\n                                >\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"8\">\n                                  No data matching the filter \"{{\n                                    input3.value\n                                  }}\"</mat-cell\n                                >\n                              </mat-table>\n                              <div\n                                *ngIf=\"dataSource3.data.length === 0\"\n                                class=\"tbl-spinner\"\n                              >\n                                <mat-progress-spinner\n                                  color=\"primary\"\n                                  [diameter]=\"40\"\n                                  mode=\"indeterminate\"\n                                >\n                                </mat-progress-spinner>\n                              </div>\n                              <mat-paginator\n                                [pageSize]=\"10\"\n                                [pageSizeOptions]=\"[\n                                  2, 5, 10, 20, 30, 40, 50, 100\n                                ]\"\n                                aria-label=\"Select page of users\"\n                              ></mat-paginator>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-tab>\n                    </mat-tab-group>\n                  </form>\n                </ng-container>\n\n                <div>\n                  <button mat-raised-button color=\"accent\" matStepperPrevious>\n                    Back\n                  </button>\n                  <button\n                    class=\"mx-2\"\n                    mat-raised-button\n                    color=\"primary\"\n                    matStepperNext\n                  >\n                    Next\n                  </button>\n                </div>\n              </mat-step>\n\n              <mat-step>\n                <ng-template matStepLabel>Work Experience Details</ng-template>\n\n                <ng-container>\n                  <form [formGroup]=\"workExpForm\">\n                    <ng-container *ngIf=\"showParTranForm4\">\n                      <div class=\"row\">\n                        <div class=\"col-md-3 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Company Name</mat-label>\n                            <input matInput formControlName=\"companyName\" />\n                            <mat-error\n                              *ngIf=\"\n                                workExpForm.get('companyName').invalid &&\n                                workExpForm.get('companyName').touched\n                              \"\n                            >\n                              Please enter a valid Company Name\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-3 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Work Position</mat-label>\n                            <input matInput formControlName=\"workPosition\" />\n                            <mat-error\n                              *ngIf=\"\n                                workExpForm.get('workPosition').invalid &&\n                                workExpForm.get('workPosition').touched\n                              \"\n                            >\n                              Please enter a valid Work Position\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-3 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>Start Date</mat-label>\n                            <input\n                              matInput\n                              [matDatepicker]=\"startDatePicker\"\n                              formControlName=\"startDate\"\n                            />\n                            <mat-datepicker-toggle\n                              matSuffix\n                              [for]=\"startDatePicker\"\n                            ></mat-datepicker-toggle>\n                            <mat-datepicker #startDatePicker></mat-datepicker>\n                            <mat-error\n                              *ngIf=\"\n                                workExpForm.get('startDate').invalid &&\n                                workExpForm.get('startDate').touched\n                              \"\n                            >\n                              Please enter a valid Start Date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-3 col-sm-12 mb-1\">\n                          <mat-form-field\n                            class=\"example-full-width\"\n                            appearance=\"outline\"\n                          >\n                            <mat-label>End Date</mat-label>\n                            <input\n                              matInput\n                              [matDatepicker]=\"endDatePicker\"\n                              formControlName=\"endDate\"\n                            />\n                            <mat-datepicker-toggle\n                              matSuffix\n                              [for]=\"endDatePicker\"\n                            ></mat-datepicker-toggle>\n                            <mat-datepicker #endDatePicker></mat-datepicker>\n                            <mat-error\n                              *ngIf=\"\n                                workExpForm.get('endDate').invalid &&\n                                workExpForm.get('endDate').touched\n                              \"\n                            >\n                              Please enter a valid End Date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div\n                          class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\"\n                        >\n                          <div class=\"example-button-row\" align=\"start\">\n                            <button\n                              class=\"btn-space\"\n                              mat-raised-button\n                              color=\"primary\"\n                              [class.auth-spinner]=\"posting\"\n                              [disabled]=\"!workExpForm.valid || posting\"\n                              [hidden]=\"viewMode\"\n                              (click)=\"pushToDataSource4()\"\n                            >\n                              {{ parTranAction4 }} Experience\n                            </button>\n\n                            <button\n                              mat-raised-button\n                              color=\"warn\"\n                              (click)=\"cancelParTran4()\"\n                              tabindex=\"-1\"\n                            >\n                              Cancel\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </ng-container>\n\n                    <mat-tab-group>\n                      <mat-tab>\n                        <ng-template mat-tab-label>\n                          <mat-icon>receipt</mat-icon> All Experience Details\n                        </ng-template>\n\n                        <div class=\"row m-1\">\n                          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div class=\"table-responsiv\">\n                              <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                  <div class=\"col-8\">\n                                    <ul class=\"header-buttons-left ms-0\">\n                                      <li class=\"dropdown\">\n                                        <h2>Experience</h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"\n                                          ><i class=\"material-icons search-icon\"\n                                            >search</i\n                                          ></label\n                                        >\n                                        <input\n                                          placeholder=\"Filter...\"\n                                          type=\"text\"\n                                          (keyup)=\"applyFilter4($event)\"\n                                          #filter\n                                          class=\"browser-default search-field\"\n                                          aria-label=\"Search box\"\n                                        />\n                                      </li>\n                                      <li>\n                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                          <button\n                                            mat-mini-fab\n                                            color=\"primary\"\n                                            (click)=\"addParTran4()\"\n                                          >\n                                            <mat-icon class=\"col-white\"\n                                              >add</mat-icon\n                                            >\n                                          </button>\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div\n                                          class=\"m-l-10\"\n                                          matTooltip=\"REFRESH\"\n                                        >\n                                          <button\n                                            mat-mini-fab\n                                            color=\"primary\"\n                                            (click)=\"refresh4()\"\n                                          >\n                                            <mat-icon class=\"col-white\"\n                                              >refresh</mat-icon\n                                            >\n                                          </button>\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n\n                                  <div class=\"col-4\">\n                                    <ul class=\"header-buttons\">\n                                      <li>\n                                        <div\n                                          class=\"export-button m-l-10\"\n                                          matTooltip=\"XLSX\"\n                                        >\n                                          <img\n                                            src=\"assets/images/icons/xlsx.png\"\n                                            alt=\"\"\n                                            (click)=\"\n                                              exporter.exportTable('xlsx', {\n                                                fileName: 'assets-list',\n                                                sheet: 'sheet1'\n                                              })\n                                            \"\n                                          />\n                                        </div>\n                                      </li>\n                                      <li>\n                                        <div\n                                          class=\"export-button m-l-10\"\n                                          matTooltip=\"CSV\"\n                                        >\n                                          <img\n                                            src=\"assets/images/icons/csv.png\"\n                                            alt=\"\"\n                                            (click)=\"\n                                              exporter.exportTable('csv')\n                                            \"\n                                          />\n                                        </div>\n                                      </li>\n                                    </ul>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <mat-table\n                                #table\n                                matTableExporter\n                                [dataSource]=\"dataSource4\"\n                                matSort\n                                class=\"mat-cell\"\n                                #exporter=\"matTableExporter\"\n                              >\n                                <!-- ID Column -->\n                                <ng-container matColumnDef=\"id\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                    >ID</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                  >\n                                    {{ row.id ? row.id : \"#\" }}\n                                  </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"companyName\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Company Name</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.companyName }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"workPosition\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Work Position</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.workPosition }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"startDate\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >Start Date</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.startDate }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"endDate\">\n                                  <mat-header-cell\n                                    *matHeaderCellDef\n                                    mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >End Date</mat-header-cell\n                                  >\n                                  <mat-cell\n                                    *matCellDef=\"let row\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    >{{ row.endDate }}</mat-cell\n                                  >\n                                </ng-container>\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                  <mat-header-cell\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                    *matHeaderCellDef\n                                  >\n                                    Action\n                                  </mat-header-cell>\n                                  <mat-cell\n                                    *matCellDef=\"let row; let i = index\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                  >\n                                    <!-- Edit Button -->\n                                    <button\n                                      mat-icon-button\n                                      color=\"accent\"\n                                      (click)=\"$event.stopPropagation()\"\n                                      (click)=\"editParTran4(row, i)\"\n                                      class=\"tbl-action-btn\"\n                                    >\n                                      <app-feather-icons\n                                        [icon]=\"'edit'\"\n                                        [class]=\"'tbl-fav-edit'\"\n                                      >\n                                      </app-feather-icons>\n                                    </button>\n\n                                    <!-- Delete Button -->\n                                    <button\n                                      mat-icon-button\n                                      color=\"accent\"\n                                      (click)=\"$event.stopPropagation()\"\n                                      (click)=\"deleteParTran4(i)\"\n                                      class=\"tbl-action-btn\"\n                                    >\n                                      <app-feather-icons\n                                        [icon]=\"'trash-2'\"\n                                        [class]=\"'tbl-fav-delete'\"\n                                      >\n                                      </app-feather-icons>\n                                    </button>\n                                  </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row\n                                  *matHeaderRowDef=\"displayedColumns4\"\n                                ></mat-header-row>\n                                <mat-row\n                                  *matRowDef=\"\n                                    let row;\n                                    columns: displayedColumns4\n                                  \"\n                                  (click)=\"editParTran4(row, i)\"\n                                  [style.cursor]=\"'pointer'\"\n                                  matRipple\n                                >\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"8\">\n                                  No data matching the filter \"{{\n                                    input4.value\n                                  }}\"</mat-cell\n                                >\n                              </mat-table>\n                              <div\n                                *ngIf=\"dataSource4.data.length === 0\"\n                                class=\"tbl-spinner\"\n                              >\n                                <mat-progress-spinner\n                                  color=\"primary\"\n                                  [diameter]=\"40\"\n                                  mode=\"indeterminate\"\n                                >\n                                </mat-progress-spinner>\n                              </div>\n                              <mat-paginator\n                                [pageSize]=\"10\"\n                                [pageSizeOptions]=\"[\n                                  2, 5, 10, 20, 30, 40, 50, 100\n                                ]\"\n                                aria-label=\"Select page of users\"\n                              ></mat-paginator>\n                            </div>\n                          </div>\n                        </div>\n                      </mat-tab>\n                    </mat-tab-group>\n                  </form>\n                </ng-container>\n\n                <div>\n                  <button mat-raised-button color=\"accent\" matStepperPrevious>\n                    Back\n                  </button>\n                  <button\n                    class=\"mx-2\"\n                    mat-raised-button\n                    color=\"primary\"\n                    matStepperNext\n                  >\n                    Next\n                  </button>\n                </div>\n              </mat-step>\n\n              <mat-step>\n                <ng-template matStepLabel>Reference Details</ng-template>\n                <form [formGroup]=\"mngForm\">\n                  <div class=\"row\">\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>First Reference Name</mat-label>\n                        <input matInput formControlName=\"firstRefName\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('firstRefName').invalid &&\n                            mngForm.get('firstRefName').touched\n                          \"\n                        >\n                          Please enter a valid First Reference Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>First Reference Company</mat-label>\n                        <input matInput formControlName=\"firstRefCompany\" />\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>First Reference Phone</mat-label>\n                        <input matInput formControlName=\"firstRefPhone\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('firstRefPhone').invalid &&\n                            mngForm.get('firstRefPhone').touched\n                          \"\n                        >\n                          Please enter a valid First Reference Phone Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>First Reference Email</mat-label>\n                        <input matInput formControlName=\"firstRefEmail\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('firstRefEmail').invalid &&\n                            mngForm.get('firstRefEmail').touched\n                          \"\n                        >\n                          Please enter a valid First Reference Email Address\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Second Reference Name</mat-label>\n                        <input matInput formControlName=\"secondRefName\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('secondRefName').invalid &&\n                            mngForm.get('secondRefName').touched\n                          \"\n                        >\n                          Please enter a valid Second Reference Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Second Reference Company</mat-label>\n                        <input matInput formControlName=\"secondRefCompany\" />\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Second Reference Phone</mat-label>\n                        <input matInput formControlName=\"secondRefPhone\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('secondRefPhone').invalid &&\n                            mngForm.get('secondRefPhone').touched\n                          \"\n                        >\n                          Please enter a valid Second Reference Phone Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Second Reference Email</mat-label>\n                        <input matInput formControlName=\"secondRefEmail\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('secondRefEmail').invalid &&\n                            mngForm.get('secondRefEmail').touched\n                          \"\n                        >\n                          Please enter a valid Second Reference Email Address\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div>\n                    <button mat-raised-button color=\"accent\" matStepperPrevious>\n                      Back\n                    </button>\n                    <button\n                      class=\"mx-2\"\n                      mat-raised-button\n                      color=\"primary\"\n                      matStepperNext\n                    >\n                      Next\n                    </button>\n                  </div>\n                </form>\n              </mat-step>\n\n              <mat-step>\n                <ng-template matStepLabel>Job Information</ng-template>\n                <form [formGroup]=\"mngForm\">\n                  <div class=\"row\">\n                    <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Department ID</mat-label>\n                                                <input matInput formControlName=\"departmentId\" />\n                                                <mat-icon matSuffix (click)=\"departmentLookup()\">search</mat-icon>\n\n                                                <mat-error *ngIf=\"\n                                    mngForm.get('departmentId').invalid &&\n                                    mngForm.get('departmentId').touched\n                                  \">\n                                                    Please enter a valid Department ID\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div> -->\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Department Name</mat-label>\n                        <input matInput formControlName=\"departmentName\" />\n                        <mat-icon matSuffix (click)=\"departmentLookup()\"\n                          >search</mat-icon\n                        >\n\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('departmentName').invalid &&\n                            mngForm.get('departmentName').touched\n                          \"\n                        >\n                          Please enter a valid Department Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Branch Name</mat-label>\n                        <input matInput formControlName=\"branchName\" />\n                        <mat-icon matSuffix (click)=\"branchLookup()\"\n                          >search</mat-icon\n                        >\n\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('branchName').invalid &&\n                            mngForm.get('branchName').touched\n                          \"\n                        >\n                          Please enter a valid Branch Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Cost Center Code</mat-label>\n                        <input matInput formControlName=\"costCenterCode\" />\n                        <mat-icon matSuffix (click)=\"costCenterLookup()\"\n                          >search</mat-icon\n                        >\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Organization Role</mat-label>\n                        <input matInput formControlName=\"organizationRole\" />\n                        <mat-icon matSuffix (click)=\"jobRoleLookup()\"\n                          >search</mat-icon\n                        >\n\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('organizationRole').invalid &&\n                            mngForm.get('organizationRole').touched\n                          \"\n                        >\n                          Please enter a valid Organization Role\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Job Group Name</mat-label>\n                        <input matInput formControlName=\"jobGroupName\" />\n                        <mat-icon matSuffix (click)=\"jobGroupLookup()\"\n                          >search</mat-icon\n                        >\n\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('jobGroupName').invalid &&\n                            mngForm.get('jobGroupName').touched\n                          \"\n                        >\n                          Please enter a valid Job Group Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Work Mail</mat-label>\n                        <input matInput formControlName=\"workMail\" />\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Enrollment Status</mat-label>\n                        <mat-select formControlName=\"enrollmentStatus\">\n                          <mat-option\n                            *ngFor=\"let item of enrollmentStatusArray\"\n                            [value]=\"item\"\n                            >{{ item }}</mat-option\n                          >\n                        </mat-select>\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('enrollmentStatus').invalid &&\n                            mngForm.get('enrollmentStatus').touched\n                          \"\n                        >\n                          Please enter a valid Enrollment Status\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Enrollment Start Date</mat-label>\n                        <input\n                          matInput\n                          [matDatepicker]=\"startDatePicker\"\n                          formControlName=\"enrollmentStartDate\"\n                        />\n                        <mat-datepicker-toggle\n                          matSuffix\n                          [for]=\"startDatePicker\"\n                        ></mat-datepicker-toggle>\n                        <mat-datepicker #startDatePicker></mat-datepicker>\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('enrollmentStartDate').invalid &&\n                            mngForm.get('enrollmentStartDate').touched\n                          \"\n                        >\n                          Please enter a valid Enrollment Start Date\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Enrollment End Date</mat-label>\n                                                <input matInput [matDatepicker]=\"endDatePicker\"\n                                                    formControlName=\"enrollmentEndDate\" />\n                                                <mat-datepicker-toggle matSuffix\n                                                    [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                                                <mat-datepicker #endDatePicker></mat-datepicker>\n                                                <mat-error *ngIf=\"\n                                    mngForm.get('enrollmentEndDate').invalid &&\n                                    mngForm.get('enrollmentEndDate').touched\n                                  \">\n                                                    Please enter a valid Enrollment End Date\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div> -->\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Reporting To Full Name</mat-label>\n                        <input matInput formControlName=\"reportingToFullname\" />\n                        <mat-icon matSuffix (click)=\"employeeLookup()\"\n                          >search</mat-icon\n                        >\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('reportingToFullname').invalid &&\n                            mngForm.get('reportingToFullname').touched\n                          \"\n                        >\n                          Please enter a valid Reporting To Full Name\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n\n                  <div>\n                    <button mat-raised-button color=\"accent\" matStepperPrevious>\n                      Back\n                    </button>\n                    <button\n                      class=\"mx-2\"\n                      mat-raised-button\n                      color=\"primary\"\n                      matStepperNext\n                    >\n                      Next\n                    </button>\n                  </div>\n                </form>\n              </mat-step>\n\n              <mat-step>\n                <ng-template matStepLabel>Salary Information</ng-template>\n                <form [formGroup]=\"mngForm\">\n                  <div class=\"row\">\n                    <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Bank Name</mat-label>\n                                                <input matInput formControlName=\"bankName\" />\n                                                <mat-error *ngIf=\"\n                                    mngForm.get('bankName').invalid &&\n                                    mngForm.get('bankName').touched\n                                  \">\n                                                    Please enter a valid Bank Name\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div> -->\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Bank Account</mat-label>\n                        <input matInput formControlName=\"bankAccount\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('bankAccount').invalid &&\n                            mngForm.get('bankAccount').touched\n                          \"\n                        >\n                          Please enter a valid Bank Account Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Confirm Bank Account</mat-label>\n                                                <input matInput formControlName=\"confirmBankAccount\" />\n                                            </mat-form-field>\n                                        </div> -->\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>KRA Number</mat-label>\n                        <input matInput formControlName=\"kraNo\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('kraNo').invalid &&\n                            mngForm.get('kraNo').touched\n                          \"\n                        >\n                          Please enter a valid KRA Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>NHIF Number</mat-label>\n                        <input matInput formControlName=\"nhifNo\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('nhifNo').invalid &&\n                            mngForm.get('nhifNo').touched\n                          \"\n                        >\n                          Please enter a valid NHIF Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>NSSF Number</mat-label>\n                        <input matInput formControlName=\"nssfNo\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('nssfNo').invalid &&\n                            mngForm.get('nssfNo').touched\n                          \"\n                        >\n                          Please enter a valid NSSF Number\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                      <mat-form-field\n                        class=\"example-full-width\"\n                        appearance=\"outline\"\n                      >\n                        <mat-label>Basic Salary</mat-label>\n                        <input matInput formControlName=\"basicSalary\" />\n                        <mat-error\n                          *ngIf=\"\n                            mngForm.get('basicSalary').invalid &&\n                            mngForm.get('basicSalary').touched\n                          \"\n                        >\n                          Please enter a valid Basic Salary\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n\n                    <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>DCRS Actual E2</mat-label>\n                                                <input matInput formControlName=\"dcrsActualE2\" />\n                                            </mat-form-field>\n                                        </div> -->\n\n                    <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Total Non-Cash Benefit</mat-label>\n                                                <input matInput formControlName=\"totalNonCashBenefit\" />\n                                            </mat-form-field>\n                                        </div>\n\n                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Value of Quarters</mat-label>\n                                                <input matInput formControlName=\"valueOfQuarters\" />\n                                            </mat-form-field>\n                                        </div>\n\n                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Owner Occupied Interests</mat-label>\n                                                <input matInput formControlName=\"ownerOccupiedInterests\" />\n                                            </mat-form-field>\n                                        </div>\n\n                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Mortgage</mat-label>\n                                                <input matInput formControlName=\"mortgage\" />\n                                            </mat-form-field>\n                                        </div>\n                                   \n                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Personal Relief</mat-label>\n                                                <input matInput formControlName=\"personalRelief\" />\n                                            </mat-form-field>\n                                        </div>\n\n                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Insurance Relief</mat-label>\n                                                <input matInput formControlName=\"insuranceRelief\" />\n                                            </mat-form-field>\n                                        </div> -->\n                  </div>\n\n                  <div>\n                    <button mat-raised-button color=\"accent\" matStepperPrevious>\n                      Back\n                    </button>\n                    <button\n                      class=\"mx-2\"\n                      mat-raised-button\n                      color=\"primary\"\n                      matStepperNext\n                    >\n                      Next\n                    </button>\n                  </div>\n                </form>\n              </mat-step>\n\n              <mat-step>\n                <ng-template matStepLabel>Submit</ng-template>\n                <div>\n                  <p>\n                    Review your information and click \"Submit\" to complete the\n                    process.\n                  </p>\n\n                  <div>\n                    <button mat-raised-button color=\"accent\" matStepperPrevious>\n                      Back\n                    </button>\n                    <button\n                      class=\"mx-2\"\n                      mat-raised-button\n                      color=\"warn\"\n                      (click)=\"stepper.reset()\"\n                    >\n                      Reset\n                    </button>\n                    <!-- [disabled]=\"!mngForm.valid || posting\" -->\n                    <button\n                      class=\"btn-space\"\n                      mat-raised-button\n                      color=\"primary\"\n                      [class.auth-spinner]=\"posting\"\n                      [disabled]=\"posting\"\n                      [hidden]=\"viewMode\"\n                      (click)=\"onSubmit()\"\n                    >\n                      {{ pageFunction }} Employee\n                    </button>\n                  </div>\n                </div>\n              </mat-step>\n            </mat-horizontal-stepper>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n"],"names":[],"sourceRoot":"webpack:///"}