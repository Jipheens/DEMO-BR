{"version":3,"file":"src_app_erp-hr_modules_kpi-management_kpi-management_module_ts.js","mappings":"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","sources":["./src/app/erp-hr/modules/kpi-management/kpi-goals/all-kpi-goals/all-kpi-goals.component.ts","./src/app/erp-hr/modules/kpi-management/kpi-goals/all-kpi-goals/all-kpi-goals.component.html","./src/app/erp-hr/modules/kpi-management/kpi-goals/manage-kpi-goals/manage-kpi-goals.component.ts","./src/app/erp-hr/modules/kpi-management/kpi-goals/manage-kpi-goals/manage-kpi-goals.component.html","./src/app/erp-hr/modules/kpi-management/kpi-management-routing.module.ts","./src/app/erp-hr/modules/kpi-management/kpi-management.module.ts","./src/app/erp-hr/modules/kpi-management/kpi-results/kpi-results.component.ts","./src/app/erp-hr/modules/kpi-management/kpi-results/kpi-results.component.html"],"sourcesContent":["import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ManageLeaveRequestsComponent } from \"../../../leave-management/leave-requests/manage-leave-requests/manage-leave-requests.component\";\nimport { KpiGoalService } from \"src/app/erp-hr/data/kpi-services/kpi-goal.service\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-all-kpi-goals\",\n  templateUrl: \"./all-kpi-goals.component.html\",\n  styleUrls: [\"./all-kpi-goals.component.scss\"],\n})\nexport class AllKpiGoalsComponent implements OnInit {\n  displayedColumns: string[] = [\n    //\"select\",\n    // \"id\",\n    \"fullname\",\n    \"emppf\",\n    \"department\",\n    // \"status\",\n    \"action\",\n  ];\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n\n  Form: FormGroup;\n  months: string[] = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  currentUser: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private kpiGoalService: KpiGoalService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder,\n    private router: Router,\n    private tokenStorageService: TokenStorageService\n  ) {}\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    const currentMonthIndex = new Date().getMonth();\n    const currentMonthName = this.months[currentMonthIndex];\n\n    this.currentUser = this.tokenStorageService.getUser();\n\n    this.Form = this.fb.group({\n      costCenterCode: [this.currentUser.costCenterCode, Validators.required],\n      year: [currentYear.toString(), Validators.required],\n      quarter: [\"Quarter 1\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //************************************************************************************************ */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  quarterArray: any[] = [\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"];\n\n  selectedStatus: string = \"ALL\";\n\n  getSelectSelectedStatus() {\n   // this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n  //  this.getData();\n  }\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n\n    let params = new HttpParams()\n      .set(\"costcentercode\", this.Form.value.costCenterCode)\n      .set(\"year\", this.Form.value.year)\n      .set(\"quarter\", this.Form.value.quarter);\n\n    console.log(\"this.params:: \", params);\n\n    this.kpiGoalService\n      .getKPIEmployeesByCostCenter(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"KPI Goals displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error:  \" + err.message);\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    let route = \"/erp-hr/kpi-management/manage-kpi-goals\";\n    this.router.navigate([route], {\n      queryParams: {\n        action: action,\n        empPf: record.emppf,\n        quarter: this.Form.value.quarter,\n        year: this.Form.value.year,\n        costCenterCode:this.Form.value.costCenterCode,\n      },\n    });\n  }\n\n  deleteRecord(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.kpiGoalService\n          .deleteKPI(id)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************************************** */\n  onCostCenterLookup(type: any) {\n    if (type === \"Search\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"SingleCostCenter\",\n      };\n      const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n      dialogRef.afterClosed().subscribe((res) => {\n        if (res && res.data && res.data.length > 0) {\n          this.Form.patchValue({\n            costCenterCode: res.data[0].costCenterCode,\n          });\n        }\n      });\n    } else if (type === \"All\") {\n      this.Form.patchValue({\n        costCenterCode: \"All\",\n      });\n\n      this.getData();\n    }\n  }\n  // ****************************************************************************************************************************\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All KPI Goals'\" [items]=\"['KPI Goals']\"\n                [active_item]=\"'All KPI Goals'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Employees with KPI Goals</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            <!-- <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add','')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li> -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Quarter Selection</mat-label>\n\n                                                    <mat-select formControlName=\"quarter\"\n                                                        (selectionChange)=\"getSelectSelectedStatus()\">\n                                                        <mat-option *ngFor=\"let quarter of quarterArray\"\n                                                            [value]=\"quarter\">{{ quarter\n                                                            }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-error *ngIf=\"Form.get('quarter').hasError('required')\">\n                                                        Please select quarter\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </form>\n                                        </div>\n                                      \n                                        <div class=\"col-2\">\n                                            <div class=\"row\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Year</mat-label>\n                                                    <input matInput formControlName=\"year\" />\n                                                    <mat-error *ngIf=\"Form.get('year').hasError('required')\">\n                                                        Please Enter Year\n                                                    </mat-error>\n                                                </mat-form-field>\n\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-9\">\n                                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                            <mat-label>costCenterCode</mat-label>\n\n                                                            <input matInput formControlName=\"costCenterCode\" readonly />\n\n                                                            <mat-error *ngIf=\"\n                                                        Form.get('costCenterCode').hasError('required')\n                                                      \">\n                                                                Please Enter Cost Center Code\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-3 imp\">\n                                                        <div class=\"m-l-10\" matTooltip=\"Search Cost Center\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"onCostCenterLookup('Search')\">\n                                                                <mat-icon class=\"col-white\">search</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                        <div class=\"m-l-10\" matTooltip=\"From All Cost Centers\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"onCostCenterLookup('All')\">\n                                                                <mat-icon class=\"col-white\">all_inclusive</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div class=\"col-1\">\n                                        </div>\n                                        <!-- <div class=\"col-2\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Status</mat-label>\n                                                <mat-select formControlName=\"status\">\n                                                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.name\">{{\n                                                        status.name\n                                                        }}</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">Please select\n                                                    a status</mat-error>\n                                            </mat-form-field>\n                                        </div> -->\n                                    </div>\n                                </form>\n                            </div>\n\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"empPf\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Employee PF\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.empPf }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"fullname\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-33\">\n                                        Full Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-33\">\n                                        {{ row.fullname }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"emppf\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-33\">\n                                        Employee PF\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-33\">\n                                        {{ row.emppf }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"department\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-33\">\n                                        Department\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-33\">\n                                        {{ row.department }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                                        <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Update',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button> -->\n\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('View',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n                                        <!-- \n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"lockOrUnlockAccount(row)\" class=\"tbl-action-btn\">\n                                            <mat-icon>{{ row.isAcctActive === 'Y' ? 'lock' : 'lock_open' }}</mat-icon>\n                                        </button> -->\n\n                                        <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"  \n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { KpiGoalService } from \"src/app/erp-hr/data/kpi-services/kpi-goal.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ManageLeaveRequestsComponent } from \"../../../leave-management/leave-requests/manage-leave-requests/manage-leave-requests.component\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-manage-kpi-goals\",\n  templateUrl: \"./manage-kpi-goals.component.html\",\n  styleUrls: [\"./manage-kpi-goals.component.scss\"],\n})\nexport class ManageKpiGoalsComponent implements OnInit {\n  displayedColumns: string[] = [\n // \"select\",\n    // \"id\",\n    // \"empPf\",\n    // \"year\",\n    //  \"quarter\",\n    \"strategicObjective\",\n    \"tacticalPerfomance\",\n    \"isQuantitative\",\n    \"target\",\n    \"weight\",\n    \"goalSubmited\",\n    \"appraisalSubmited\",\n    \"achieved\",\n    \"employeeScore\",\n    \"finalScore\",\n    \"appraisedApprovedBy\",\n    \"status\",\n    \"goalAction\",\n    \"appraisalAction\"\n  ];\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n\n  Form: FormGroup;\n  months: string[] = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  currentUser: any;\n\n  empPf: any;\n  quarter: any;\n  year: any;\n  costCenterCode: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private kpiGoalService: KpiGoalService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private tokenStorageService: TokenStorageService\n  ) {}\n\n  ngOnInit(): void {\n    // action: action,\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.empPf) {\n          this.empPf = params.empPf;\n          this.quarter = params.quarter;\n          this.year = params.year;\n          this.costCenterCode = params.costCenterCode;\n        }\n      });\n      this.showForm = true;\n    }\n\n    this.Form = this.fb.group({\n      status: [\"PENDING\"],\n      costCenterCode: [this.costCenterCode || \"\", Validators.required],\n      year: [this.year || \"\"],\n      empPf: [this.empPf || \"\"],\n      quarter: [this.quarter || \"\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //************************************************************************************************ */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"SUBMITTED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n    { name: \"APPRAISAL\" },\n    { name: \"COMPLETED\" },\n  ];\n\n  quarterArray: any[] = [\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"];\n\n  selectedStatus: string = \"ALL\";\n\n  getSelectSelectedStatus() {\n   // this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n  //  this.getData();\n  }\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n\n    let params = new HttpParams()\n      .set(\"empPf\", this.Form.value.empPf)\n      .set(\"year\", this.Form.value.year)\n      .set(\"quarter\", this.Form.value.quarter)\n      .set(\"status\", this.Form.value.status);\n    this.kpiGoalService\n      .getEmployeeKPIsData(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"KPI Goals displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error:  \" + err.message);\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  //*********************************************************************************************** */\n\n  generateValidateSwal(action: string, row: any) {\n    let initialStatus = \"\";\n    if (action === \"Approve Goal\") {\n        initialStatus = \"APPROVED\";\n    } else if (action === \"Reject Goal\") {\n        initialStatus = \"REJECTED\";\n    }\n\n    Swal.fire({\n        title: `${action}`,\n        html:\n            `<input id=\"status\" class=\"swal2-input\" placeholder=\"Status\" value=\"${initialStatus}\" readonly>` +\n            `<input id=\"verifierRemarks\" class=\"swal2-input\" placeholder=\"Verifier Remarks\">`,\n        focusConfirm: false,\n        showCancelButton: true, // Show Cancel button\n        confirmButtonText: \"Submit\",\n        cancelButtonText: \"Cancel\",\n        preConfirm: () => {\n            return {\n                status: initialStatus,\n                verifierRemarks: (\n                    document.getElementById(\"verifierRemarks\") as HTMLInputElement\n                ).value,\n            };\n        },\n    }).then((result) => {\n        if (result.isConfirmed) {\n            const { status, verifierRemarks } = result.value;\n            const body = { status, verifierRemarks, id: row.id };\n            console.log('body:: ', body);\n\n            this.kpiGoalService\n                .updateState([body])\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                    next: (res) => {\n                        if (res.statusCode == 200) {\n                            this.getData();\n                            this.loading = false;\n                            this.notificationAPI.alertSuccess(res.message);\n                        } else {\n                            this.getData();\n                            this.loading = false;\n                            this.notificationAPI.alertWarning(res.message);\n                        }\n                    },\n                    error: (err) => {\n                        this.loading = false;\n                        this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n                    },\n                    complete: () => {},\n                });\n        }\n    });\n}\n\n  strategicObjective: any;\n  tacticalPerformance: any;\n  dataRes: any;\n  weight: any;\n  maxScore: any;\n  quantitative = 'Y';\n\n  appraisalMngt(action: string, row: any){\n\n    let finalAction = \"\";\n    if (action === \"Approve Appraisal\") {\n        finalAction = \"APPROVE\";\n    } else if (action === \"Moderate Appraisal\") {\n        finalAction = \"MODERATE\";\n    }\n  \n    this.quantitative = row.isQuantitative;\n    this.strategicObjective = row.strategicObjective;\n    this.tacticalPerformance = row.tacticalPerfomance;\n    this.weight = row.weight;\n    this.maxScore = this.weight * 2;\n  \n    let supervisorScoreInput = \"\"; \n  \n    if (finalAction === \"MODERATE\") {\n        supervisorScoreInput = '<input type=\"number\" id=\"supervisorScore\" placeholder=\"Enter Supervisor Score\">';\n    }\n  \n    Swal.fire({\n        title: \"Appraisal Details\",\n        html:\n            `<div>\n                <p><strong>Quantitative:</strong> ${this.quantitative}</p>\n                <p><strong>Strategic Objective:</strong> ${this.strategicObjective}</p>\n                <p><strong>Tactical Performance:</strong> ${this.tacticalPerformance}</p>\n                <p><strong>Weight:</strong> ${this.weight}</p>\n                <p><strong>Max Score:</strong> ${this.maxScore}</p>\n                ${supervisorScoreInput} <!-- Display supervisorScore input if MODERATE action -->\n            </div>`,\n        confirmButtonText: \"Submit\",\n        showCancelButton: true,\n        cancelButtonText: \"Cancel\"\n    }).then((result) => {\n        if (result.isConfirmed) {\n           \n            let supervisorScoreValue: number = 0; \n            if (finalAction === \"MODERATE\") {\n                const supervisorScoreInputElem = document.getElementById(\"supervisorScore\") as HTMLInputElement;\n                supervisorScoreValue = parseFloat(supervisorScoreInputElem.value);\n                if (isNaN(supervisorScoreValue)) {\n                    supervisorScoreValue = 0;\n                }\n            }\n            let body = {\n                id: row.id,\n                action: finalAction,\n                supervisorScore: supervisorScoreValue\n            };\n           \n            console.log(\"body:  \", body)\n  \n            let params = new HttpParams()\n            .set('id',row.id)\n            .set('action',finalAction)\n            .set('supervisorScore',supervisorScoreValue.toString());\n            this.kpiGoalService.appraisalApprove(params)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n                next: (res) => {\n                    if (res.statusCode == 200) {\n                        this.getData();\n                        this.loading = false;\n                        this.notificationAPI.alertSuccess(res.message);\n                    } else {\n                        this.getData();\n                        this.loading = false;\n                        this.notificationAPI.alertWarning(res.message);\n                    }\n                },\n                error: (err) => {\n                    this.loading = false;\n                    this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n                },\n                complete: () => {},\n            });\n        } else {\n           \n          \n        }\n    });\n  }\n  \n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: action,\n      record: record,\n    };\n    const dialogRef = this.dialog.open(\n      ManageLeaveRequestsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      this.getData();\n    });\n  }\n  deleteRecord(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"HOLIDAY RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.kpiGoalService\n          .deleteKPI(id)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************************************** */\n  onCostCenterLookup(type: any) {\n    if (type === \"Search\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"SingleCostCenter\",\n      };\n      const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n      dialogRef.afterClosed().subscribe((res) => {\n        if (res && res.data && res.data.length > 0) {\n          this.Form.patchValue({\n            costCenterCode: res.data[0].costCenterCode,\n          });\n        }\n      });\n    } else if (type === \"All\") {\n      this.Form.patchValue({\n        costCenterCode: \"All\",\n      });\n\n      this.getData();\n    }\n  }\n  // ****************************************************************************************************************************\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'View KPI Goals'\" [items]=\"['KPI Goals']\" [active_item]=\"'View KPI Goals'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>KPI Goals</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add','')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"materialTableHeader mt-2\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row\">\n\n                                        <div class=\"col-2\">\n                                            <div class=\"row\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>CostCenterCode</mat-label>\n                                                    <input matInput formControlName=\"costCenterCode\" readonly />\n                                                    <mat-error *ngIf=\"Form.get('costCenterCode').hasError('required')\">\n                                                        Please Enter CostCenterCode\n                                                    </mat-error>\n                                                </mat-form-field>\n\n                                            </div>\n                                        </div>\n                                        <div class=\"col-2\">\n                                            <div class=\"row\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Emp Pf</mat-label>\n                                                    <input matInput formControlName=\"empPf\" readonly />\n                                                    <mat-error *ngIf=\"Form.get('empPf').hasError('required')\">\n                                                        Please Enter empPf\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-2\">\n                                            <div class=\"row\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Quarter</mat-label>\n                                                    <input matInput formControlName=\"quarter\" readonly />\n                                                    <mat-error *ngIf=\"Form.get('quarter').hasError('required')\">\n                                                        Please Enter quarter\n                                                    </mat-error>\n                                                </mat-form-field>\n\n                                            </div>\n                                        </div>\n                                        <div class=\"col-2\">\n                                            <div class=\"row\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Year</mat-label>\n                                                    <input matInput formControlName=\"year\" readonly />\n                                                    <mat-error *ngIf=\"Form.get('year').hasError('required')\">\n                                                        Please Enter Year\n                                                    </mat-error>\n                                                </mat-form-field>\n\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-9\">\n                                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                            <mat-label>costCenterCode</mat-label>\n\n                                                            <input matInput formControlName=\"costCenterCode\" readonly />\n\n                                                            <mat-error *ngIf=\"\n                                                        Form.get('costCenterCode').hasError('required')\n                                                      \">\n                                                                Please Enter Cost Center Code\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <!-- <div class=\"col-3 imp\">\n                                                        <div class=\"m-l-10\" matTooltip=\"Search Cost Center\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"onCostCenterLookup('Search')\">\n                                                                <mat-icon class=\"col-white\">search</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                        <div class=\"m-l-10\" matTooltip=\"From All Cost Centers\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"onCostCenterLookup('All')\">\n                                                                <mat-icon class=\"col-white\">all_inclusive</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </div> -->\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Status</mat-label>\n\n                                                    <mat-select formControlName=\"status\"\n                                                        (selectionChange)=\"getSelectSelectedStatus()\">\n                                                        <mat-option *ngFor=\"let status of reqStatuses\"\n                                                            [value]=\"status.name\">{{ status.name\n                                                            }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                        Please select status\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </form>\n                                        </div>\n                                        <div class=\"col-10\">\n                                            <div class=\"button-container mt-1\">\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                    class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                    <mat-icon>check_circle</mat-icon>\n                                                    ALL\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'Pending'\"\n                                                    class=\"mat-button pending\" (click)=\"getSelectedStatus('Pending')\">\n                                                    <mat-icon>pending_actions</mat-icon>\n                                                    Pending\n                                                </button>\n                                                <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'SUBMITTED'\"\n                                                    class=\"mat-button submitted\"\n                                                    (click)=\"getSelectedStatus('SUBMITTED')\">\n                                                    <mat-icon>send</mat-icon>\n                                                    SUBMITTED\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                    class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                    <mat-icon>thumb_up</mat-icon>\n                                                    APPROVED\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                    class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                    <mat-icon>cancel</mat-icon>\n                                                    REJECTED\n                                                </button>\n\n                                                <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'APPRAISAL'\"\n                                                    class=\"mat-button appraisal\"\n                                                    (click)=\"getSelectedStatus('APPRAISAL')\">\n                                                    <mat-icon>assignment</mat-icon>\n                                                    APPRAISAL\n                                                </button>\n                                                <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'COMPLETED'\"\n                                                    class=\"mat-button completed\"\n                                                    (click)=\"getSelectedStatus('COMPLETED')\">\n                                                    <mat-icon>cancel</mat-icon>\n                                                    COMPLETED\n                                                </button>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"empPf\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Employee PF\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.empPf }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"year\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Year\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.year }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"quarter\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Quarter\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.quarter }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"strategicObjective\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Strategic Objective\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.strategicObjective }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"tacticalPerfomance\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Tactical Perfomance\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.tacticalPerfomance }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"isQuantitative\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Is Quantitative\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.isQuantitative }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"target\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Target\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        <span *ngIf=\"row.isQuantitative == 'N'\">\n                                            {{row.nonQuantitativeTarget}} \n                                        </span>\n                                        <span *ngIf=\"row.isQuantitative == 'Y'\">\n                                            {{row.quantitativeTarget}} \n                                        </span>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"weight\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Weight\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.weight }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"goalSubmited\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Goal Submited\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.goalSubmited }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"appraisalSubmited\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Appraisal Submited\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.appraisalSubmited }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"achieved\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Achieved\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        <span *ngIf=\"row.isQuantitative == 'N'\">\n                                            {{row.nonQuantitativeAchieved}} \n                                        </span>\n                                        <span *ngIf=\"row.isQuantitative == 'Y'\">\n                                            {{row.quantitativeAchieved}} \n                                        </span>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"employeeScore\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Employee Score\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.employeeScore }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"finalScore\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Final Score\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.finalScore }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"appraisedApprovedBy\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Approved By\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.appraisedApprovedBy }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'SUBMITTED'\"\n                                                class=\"badge custom-badge-solid-yellow btn btn-sm m-1\">\n                                                <i class=\"fas fa-paper-plane\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'APPRAISAL'\"\n                                                class=\"badge custom-badge-solid-purple btn btn-sm m-1\">\n                                                <i class=\"fas fa-clipboard-check\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'COMPLETED'\"\n                                                class=\"badge custom-badge-solid-teal btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-double\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"goalAction\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Goal Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                                        <button  matTooltip=\"Approve Goal\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"generateValidateSwal('Approve Goal', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'check-circle'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button>\n\n                                        <button matTooltip=\"Reject Goal\"  mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"generateValidateSwal('Reject Goal', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'x-circle'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button>\n\n                                       \n\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"appraisalAction\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Appraisal Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n\n                                        <button matTooltip=\"Approve Appraisal\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"appraisalMngt('Approve Appraisal', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'check-square'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button>\n\n                                        <button matTooltip=\"Moderate Appraisal\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"appraisalMngt('Moderate Appraisal', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'activity'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button>\n\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" \n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllKpiGoalsComponent } from './kpi-goals/all-kpi-goals/all-kpi-goals.component';\nimport { KpiResultsComponent } from './kpi-results/kpi-results.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { ManageKpiGoalsComponent } from './kpi-goals/manage-kpi-goals/manage-kpi-goals.component';\n\nconst routes: Routes = [\n  {\n    path: \"all-kpi-goals\",\n    component: AllKpiGoalsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"manage-kpi-goals\",\n    component: ManageKpiGoalsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"kpi-results\",\n    component: KpiResultsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class KpiManagementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { KpiManagementRoutingModule } from './kpi-management-routing.module';\nimport { AllKpiGoalsComponent } from './kpi-goals/all-kpi-goals/all-kpi-goals.component';\nimport { ManageKpiGoalsComponent } from './kpi-goals/manage-kpi-goals/manage-kpi-goals.component';\nimport { KpiResultsComponent } from './kpi-results/kpi-results.component';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\n\n\n@NgModule({\n  declarations: [\n    AllKpiGoalsComponent,\n    ManageKpiGoalsComponent,\n    KpiResultsComponent\n  ],\n  imports: [\n    CommonModule,\n    KpiManagementRoutingModule,\n\n\n    DashboardModule,\n    ComponentsModule,\n    SharedModule,\n  ]\n})\nexport class KpiManagementModule { }\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { CcentreLookupComponent } from 'src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component';\nimport { LeaveRequestService } from 'src/app/erp-hr/data/leave-services/leave-requests.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\nimport { ManageLeaveRequestsComponent } from '../../leave-management/leave-requests/manage-leave-requests/manage-leave-requests.component';\nimport { KpiGoalService } from 'src/app/erp-hr/data/kpi-services/kpi-goal.service';\nimport { HttpParams } from '@angular/common/http';\nimport { ReportService } from 'src/app/erp-hr/data/payroll-services/report.service';\n\n@Component({\n  selector: 'app-kpi-results',\n  templateUrl: './kpi-results.component.html',\n  styleUrls: ['./kpi-results.component.scss']\n})\nexport class KpiResultsComponent implements OnInit {\n\n  displayedColumns: string[] = [\n   // \"select\",\n    \"index\",\n    \"employeeName\",\n    \"empNo\",\n    \"departmentName\",\n    \"quarter\",\n    \"score\",\n    \"grade\",\n    //\"status\",\n    \"action\",\n  ];\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n\n  Form: FormGroup\n  months: string[] = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  currentUser: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private kpiGoalService: KpiGoalService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder,\n    private reportAPI: ReportService,\n    private tokenStorageService: TokenStorageService\n  ) { }\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    const currentMonthIndex = new Date().getMonth();\n    const currentMonthName = this.months[currentMonthIndex];\n\n    this.currentUser = this.tokenStorageService.getUser()\n\n    this.Form = this.fb.group({\n      costCenterCode: [this.currentUser.costCenterCode, Validators.required],\n      year: [currentYear.toString(), Validators.required],\n      quarter: ['Quarter 1']\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //************************************************************************************************ */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  quarterArray: any[] = [\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"];\n\n\n  selectedStatus: string = \"ALL\";\n\n  getSelectSelectedStatus() {\n   // this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n  //  this.getData();\n  }\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n\n\n    let params = new HttpParams()\n    .set('year', this.Form.value.year)\n    .set('quarter',this.Form.value.quarter)\n    .set('costcentercode', this.Form.value.costCenterCode);\n    this.kpiGoalService.getEmployeeKPIsScoreData(params)\n\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"KPI Results displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\n            \"Server Error:  \" + err.message\n          );\n        },\n        complete: () => { },\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: action,\n      record: record,\n    };\n    const dialogRef = this.dialog.open(ManageLeaveRequestsComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      this.getData();\n    });\n  }\n\n  \n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************************************** */\n  onCostCenterLookup(type: any) {\n    if (type === \"Search\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"SingleCostCenter\",\n      };\n      const dialogRef = this.dialog.open(\n        CcentreLookupComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((res) => {\n        if (res && res.data && res.data.length > 0) {\n          this.Form.patchValue({\n            costCenterCode: res.data[0].costCenterCode,\n          });\n        }\n      });\n    } else if (type === \"All\") {\n      this.Form.patchValue({\n        costCenterCode: \"All\",\n      });\n\n      this.getData();\n    }\n\n\n  }\n  // ****************************************************************************************************************************\n  downloadReport() {\n    let filename = \"FINAL_KPI_SCORES_\"+this.Form.value.quarter;\n      let params = new HttpParams()\n      .set('year', this.Form.value.year)\n      .set('quarter',this.Form.value.quarter)\n      .set('costcentercode', this.Form.value.costCenterCode);\n      this.loading = true;\n      this.kpiGoalService.generateScoreExcel(params).subscribe(data => {\n        if(data.statusCode==\"404\"){\n          this.notificationAPI.alertWarning(data.message)\n          this.loading = false;\n        }else{\n          let extension = 'xlsx'\n          this.saveToFileSystem(filename, data, this.Form.value.year,extension);\n          this.loading = false;\n        }\n      this.loading = false;\n      });\n  }\n\n  downloadQuarterReport(row:any) {\n    this.loading = true;\n    const params = new HttpParams()\n    .set('empPf',row.empNo)\n    .set('year',this.Form.value.year)\n    .set('quarter',this.Form.value.quarter)\n    .set('status', this.selectedStatus);\n    this.reportAPI.employeeKPIQuarterly(params).subscribe(\n      {\n        next: (value) => {\n          this.loading = false;\n          this.notificationAPI.alertSuccess(\"Downloading KPI Report\");\n          let url = window.URL.createObjectURL(value.data);\n          let a = document.createElement('a');\n          document.body.appendChild(a);\n          a.setAttribute('style', 'display: none');\n          a.setAttribute('target', 'blank');\n          a.href = url;\n          a.download = value.filename;\n          a.click();\n          window.URL.revokeObjectURL(url);\n          a.remove();\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"NO REPORT FOUND\");\n        },\n        complete: () => {\n  \n        },\n      }\n    )\n  }\n  downloadAnnualReport(row:any) {\n    this.loading = true;\n    const params = new HttpParams()\n    .set('empPf',row.empNo)\n    .set('year',this.Form.value.year);\n    this.reportAPI.employeeKPIAnnualy(params).subscribe(\n      {\n        next: (value) => {\n          this.loading = false;\n          this.notificationAPI.alertSuccess(\"Downloading Annual KPI Report\");\n          let url = window.URL.createObjectURL(value.data);\n          let a = document.createElement('a');\n          document.body.appendChild(a);\n          a.setAttribute('style', 'display: none');\n          a.setAttribute('target', 'blank');\n          a.href = url;\n          a.download = value.filename;\n          a.click();\n          window.URL.revokeObjectURL(url);\n          a.remove();\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"NO REPORT FOUND\");\n        },\n        complete: () => {\n  \n        },\n      }\n    )\n  }\n\n  private saveToFileSystem(filename:any,response: any, year, extension) {\n    const blob = new Blob([response], { type: 'application/vnd.ms-excel' });\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    anchor.download = filename+'_for_'+year+'.'+extension;\n    anchor.href = url;\n    anchor.click();\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All KPI Results'\" [items]=\"['KPI Results']\" [active_item]=\"'All KPI Results'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>KPI Results</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            <!-- <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add','')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li> -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"Generate Report\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"downloadReport()\">\n                                                        <mat-icon class=\"col-white\">file_copy</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            \n                                            <!-- <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li> -->\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Quarter</mat-label>\n\n                                                    <mat-select formControlName=\"quarter\"\n                                                        (selectionChange)=\"getSelectSelectedStatus()\">\n                                                        <mat-option *ngFor=\"let quarter of quarterArray\"\n                                                            [value]=\"quarter\">{{ quarter\n                                                            }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-error *ngIf=\"Form.get('quarter').hasError('required')\">\n                                                        Please select quarter\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </form>\n                                        </div>\n                                        <!-- <div class=\"col-5\">\n                                            <div class=\"button-container mt-1\">\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                    class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                    <mat-icon>check_circle</mat-icon>\n                                                    ALL\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                    class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                    <mat-icon>pending</mat-icon>\n                                                    PENDING\n                                                </button> <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                    class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                    <mat-icon>thumb_up</mat-icon>\n                                                    APPROVED\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                    class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                    <mat-icon>reply</mat-icon>\n                                                    RETURNED\n                                                </button> <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                    class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                    <mat-icon>cancel</mat-icon>\n                                                    REJECTED\n                                                </button>\n                                            </div>\n                                        </div> -->\n                                        <div class=\"col-2\">\n                                            <div class=\"row\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Year</mat-label>\n                                                    <input matInput formControlName=\"year\" />\n                                                    <mat-error *ngIf=\"Form.get('year').hasError('required')\">\n                                                        Please Enter Year\n                                                    </mat-error>\n                                                </mat-form-field>\n\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-9\">\n                                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                            <mat-label>costCenterCode</mat-label>\n\n                                                            <input matInput formControlName=\"costCenterCode\" readonly />\n\n                                                            <mat-error *ngIf=\"\n                                                        Form.get('costCenterCode').hasError('required')\n                                                      \">\n                                                                Please Enter Cost Center Code\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-3 imp\">\n                                                        <div class=\"m-l-10\" matTooltip=\"Search Cost Center\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"onCostCenterLookup('Search')\">\n                                                                <mat-icon class=\"col-white\">search</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                        <div class=\"m-l-10\" matTooltip=\"From All Cost Centers\">\n                                                            <button mat-mini-fab color=\"primary\"\n                                                                (click)=\"onCostCenterLookup('All')\">\n                                                                <mat-icon class=\"col-white\">all_inclusive</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div class=\"col-1\">\n                                        </div>\n                                        <!-- <div class=\"col-2\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Status</mat-label>\n                                                <mat-select formControlName=\"status\">\n                                                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.name\">{{\n                                                        status.name\n                                                        }}</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">Please select\n                                                    a status</mat-error>\n                                            </mat-form-field>\n                                        </div> -->\n                                    </div>\n                                </form>\n                            </div>\n\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"index\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Index\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row;let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{i + 1}}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"employeeName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Employee Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.employeeName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"empNo\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Employee Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.empNo }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"departmentName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Department Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.departmentName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"quarter\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Quarter\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.quarter }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"score\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Score\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.score }}\n                                    </mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"score\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Score\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.score }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"grade\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Grade\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.grade\">\n                                            <button *ngSwitchCase=\"'Exceptional'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.grade }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'Exceeds Targets'\"\n                                                class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.grade }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'Met Targets'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.grade }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'Needs Improvement'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.grade }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'Unsatisfactory'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.grade }}\n                                            </button>\n                                            <button *ngIf=\"!row.grade\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                No Grade\n                                            </button>\n                                            <!-- <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                               {{ row.grade }}\n                                            </button> -->\n\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n                                \n\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n\n                                        <button matTooltip=\"Quarterly Report\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"downloadQuarterReport(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'download'\"\n                                                [class]=\"'tbl-fav-download'\"></app-feather-icons>\n                                        </button>\n\n                                        <button matTooltip=\"Annual Report\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"downloadAnnualReport(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'download'\"\n                                                [class]=\"'tbl-fav-download'\"></app-feather-icons>\n                                        </button>\n\n\n                                        <!-- \n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"lockOrUnlockAccount(row)\" class=\"tbl-action-btn\">\n                                            <mat-icon>{{ row.isAcctActive === 'Y' ? 'lock' : 'lock_open' }}</mat-icon>\n                                        </button> -->\n\n                                        <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"  \n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>"],"names":[],"sourceRoot":"webpack:///"}