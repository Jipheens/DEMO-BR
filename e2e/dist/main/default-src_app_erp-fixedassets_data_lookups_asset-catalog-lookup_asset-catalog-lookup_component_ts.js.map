{"version":3,"file":"default-src_app_erp-fixedassets_data_lookups_asset-catalog-lookup_asset-catalog-lookup_component_ts.js","mappings":"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","sources":["./src/app/erp-fixedassets/data/lookups/asset-catalog-lookup/asset-catalog-lookup.component.ts","./src/app/erp-fixedassets/data/lookups/asset-catalog-lookup/asset-catalog-lookup.component.html","./src/app/erp-fixedassets/data/services/asset-catalogue.service.ts"],"sourcesContent":["import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { CatalogueManagementService } from \"src/app/erp-inventory/data/services/catalogue-management.service\";\nimport { ManageRfqsComponent } from \"src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { AssetCatalogueService } from \"../../services/asset-catalogue.service\";\n\n@Component({\n  selector: \"app-asset-catalog-lookup\",\n  templateUrl: \"./asset-catalog-lookup.component.html\",\n  styleUrls: [\"./asset-catalog-lookup.component.sass\"],\n})\nexport class AssetCatalogLookupComponent implements OnInit {\n  displayedColumns: string[] = ['select', 'id', 'assetCode', 'name', 'category', 'description',];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  catalogueDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  expenseArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private assetCatalogueService: AssetCatalogueService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"single item\") {\n      this.selection = new SelectionModel<any>(false, []);\n    }\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.expenseArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select stock items\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  getData() {\n    let params = { status: \"APPROVED\" };\n    this.assetCatalogueService\n      .getCataloguesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode == 200) {\n            this.data = res.entity;\n\n            this.catalogueDetails = res.entity;\n\n            this.expenseArray = this.data.selected;\n\n            this.dataSource = new MatTableDataSource<any>(\n              this.catalogueDetails\n            );\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n        <div class=\"mb-3\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n        <div class=\"modalHeader\">\n            <div class=\"contact-details-name mb-1\">Select Catalogue Item</div>\n            <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <mat-card-content>\n                <div *ngIf=\"isLoading\">\n                    <div class=\"d-flex justify-content-center\">\n                        <img src=\"assets/images/loading.gif\"\n                            style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                    </div>\n                </div>\n                <div class=\"body\">\n                    <div class=\"table-responsi m-t-5\">\n                        <ng-container *ngIf=\"!isLoading\">\n                            <div class=\"table-header py-2 mx-3\" style=\"background-color: rgba(219, 218, 218, 0.836);\">\n                                <div class=\"row\">\n                                    <div class=\"col-6 px-4\">\n                                        <div class=\"mx-auto\">\n                                            <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                                placeholder=\"Filter...\" #input />\n                                        </div>\n                                    </div>\n                                    <div class=\"col-6 px-4\">\n                                        <div class=\"mx-auto\">\n                                            <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                    [class.auth-spinner]=\"multimodifyloading\"\n                                                    [disabled]=\"multimodifyloading\">\n                                                    <mat-icon class=\"col-white\">done_all </mat-icon>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-container>\n\n\n                        <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                            #exporter=\"matTableExporter\">\n                            <!-- Select Column -->\n                            <ng-container matColumnDef=\"select\">\n                                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\">\n                                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                        [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                    </mat-checkbox>\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-5'\">\n                                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                        [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                    </mat-checkbox>\n                                </mat-cell>\n                            </ng-container>\n\n                            <!-- id -->\n                            <ng-container matColumnDef=\"id\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-6\"> Id </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-6\"> {{row.id}} </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"assetCode\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"> Code </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\"> {{row.assetCode}} </mat-cell>\n                            </ng-container>\n\n                            <!-- name -->\n                            <ng-container matColumnDef=\"name\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"> Name </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"> {{row.name}} </mat-cell>\n                            </ng-container>\n\n\n                            <!-- category -->\n                            <ng-container matColumnDef=\"category\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"> Category </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"> {{row.category}} </mat-cell>\n                            </ng-container>\n                            <!-- description -->\n                            <ng-container matColumnDef=\"description\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"> Description </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" (click)=\"onSelect(row)\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"> {{row.description}}\n                                </mat-cell>\n                            </ng-container>\n\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\"\n                                matRipple>\n                            </mat-row>\n                            <mat-cell *matNoDataRow colspan=\"4\">\n                                No data matching the filter \"{{ input.value }}\"\n                            </mat-cell>\n                        </mat-table>\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                            <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                            </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                            aria-label=\"Select page of users\"></mat-paginator>\n                    </div>\n                </div>\n            </mat-card-content>\n        </div>\n    </div>\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AssetCatalogueService {\n\n  constructor(private http: HttpClient) { }\n\n  getCatalogues(): Observable<any> {\n    const CataloguessUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets-catalogue/all`;\n    return this.http.get<any[]>(CataloguessUrl);\n  }\n\n  getCataloguesByStatus(params: any): Observable<any> {\n    const CataloguessUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets-catalogue/fetchbyStatus`;\n    return this.http.get<any[]>(CataloguessUrl, {\n      params: params,\n    });\n  }\n\n  getCataloguesById(params: any): Observable<any> {\n    const CataloguessUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets-catalogue/find/by/id`;\n    return this.http.get<any>(CataloguessUrl, { params: params, });\n  }\n\n  addCatalogues(data: any): Observable<any> {\n    const CataloguessUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets-catalogue/create`;\n    return this.http.post<any>(CataloguessUrl, data);\n  }\n\n  updateCatalogues(CataloguesDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets-catalogue/update`;\n    return this.http.put<any>(updateBillUrl, CataloguesDetails)\n  }\n\n  deleteCataloguesTemporarily(params: any): Observable<any> {\n    const CataloguessUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets-catalogue/delete`;\n    return this.http.delete<any>(CataloguessUrl, { params });\n  }\n\n\n  validateCatalogue(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/fixed-assets-catalogue/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n\n\n\n\n  // ********************************************************************************************************************\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}