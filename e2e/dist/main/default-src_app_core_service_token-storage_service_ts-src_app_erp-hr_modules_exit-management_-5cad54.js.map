{"version":3,"file":"default-src_app_core_service_token-storage_service_ts-src_app_erp-hr_modules_exit-management_-5cad54.js","mappings":"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","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-hr/data/exit-requests/exit-requests.service.ts","./src/app/erp-hr/modules/exit-management/exit-requests/manage-exit-requests/manage-exit-requests.component.ts","./src/app/erp-hr/modules/exit-management/exit-requests/manage-exit-requests/manage-exit-requests.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExitManagementService {\n    headers = new HttpHeaders().set('Content-Type', 'application/json');\n    baseURL = `${environment.baseUrlHR}/api/v1/employee-exits`;\n\n    constructor(private http: HttpClient) { }\n\n    create(data: any): Observable<any> {\n        let API_URL = `${this.baseURL}/add`;\n        return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n\n\n    read(): Observable<any> {\n        let API_URL = `${this.baseURL}/all`;\n        return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n            .pipe(\n                map((res) => {\n                    return res || {}\n                }),\n                catchError(this.errorMgmt)\n            )\n    }\n    readByStatus(params: any): Observable<any> {\n        let API_URL = `${this.baseURL}/fetchbyStatus`;\n        return this.http.get(API_URL, { params: params,headers: this.headers, withCredentials: false })\n            .pipe(\n                map((res) => {\n                    return res || {}\n                }),\n                catchError(this.errorMgmt)\n            )\n    }\n\n    findById(params: any): Observable<any> {\n        let API_URL = `${this.baseURL}/find/by/id`;\n        return this.http.get(API_URL, { params: params, withCredentials: false })\n            .pipe(\n                map((res) => {\n                    return res || {}\n                }),\n                catchError(this.errorMgmt)\n            )\n    }\n    update(data: any): Observable<any> {\n        let API_URL = `${this.baseURL}/update`;\n        return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n\n    scheduleExitInterview(data: any): Observable<any> {\n        let API_URL = `${this.baseURL}/schedule-interview`;\n        return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n    interviewResults(data: any): Observable<any> {\n        let API_URL = `${this.baseURL}/interview-outcome`;\n        return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n    verify(dataToProcess: any): Observable<any> {\n        let API_URL = `${this.baseURL}/update/state`;\n        return this.http.put(API_URL, dataToProcess, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n    delete(params: any): Observable<any> {\n        let API_URL = `${this.baseURL}/delete`;\n        return this.http.delete(API_URL, { params: params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n\n\n    //********************************************* */\n    createBulk(data: any): Observable<any> {\n        let API_URL = `${this.baseURL}/create/bulk`;\n        return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n    //********************************************* */\n\n\n\n    errorMgmt(error: HttpErrorResponse) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            errorMessage = error.error.message;\n        } else {\n            errorMessage = `${error.error.message}`;\n        }\n        return throwError(errorMessage);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { EmployeesLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { AllEmployeesComponent } from '../../../employees/all-employees/all-employees.component';\nimport { ExitManagementService } from 'src/app/erp-hr/data/exit-requests/exit-requests.service';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\n\n@Component({\n  selector: 'app-manage-exit-requests',\n  templateUrl: './manage-exit-requests.component.html',\n  styleUrls: ['./manage-exit-requests.component.sass']\n})\nexport class ManageExitRequestsComponent implements OnInit {\n\n  mngForm: FormGroup;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n  isLoading: boolean = true;\n\n  exitTypes: string[] = [\"Resignation\", \"Retirement\", \"Termination\", \"Layoff\", \"End of Contract\", \"Other\"];\n\n\n  constructor(\n    public dialogRef: MatDialogRef<AllEmployeesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private exitManagementService: ExitManagementService,\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService\n\n  ) { }\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.formData = this.data.record\n    this.generateForm(this.formData);\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n    console.log(\"this.data.action :\", this.data.action);\n    if (this.data.action === \"Add\") {\n      this.isLoading = false;\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"Update\") {\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"View\") {\n      this.generateForm(this.data.record);\n      this.activateViewMode();\n    }\n    this.isLoading = false;\n  }\n\n  formData: any;\n\n  generateForm(formData?): void {\n    console.log(\"generateForm formData :: \", formData);\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? ''],\n      typeOfSeparation: [formData?.typeOfSeparation ?? '', Validators.required],\n      exitReason: [formData?.exitReason ?? '', Validators.required],\n      exitDate: [formData?.exitDate ?? '', Validators.required],\n\n    });\n  }\n\n\n  formatStartTime(startTime): string {\n    if (startTime) {\n      const { hour, minute, second, nano } = startTime;\n      return `${hour}:${minute}:${second}.${nano}`;\n    }\n    return '';\n  }\n\n\n\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  //********************************************************************************************************************** */\n  //********************************************************************************************************************** */\n  file_name: any;\n  base64File: string;\n  loading: boolean = false;\n  handleFileInput(event: any) {\n    const file: File = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.base64File = reader.result as string;\n      this.file_name = file.name;\n      this.mngForm.patchValue({\n        attachment: this.base64File,\n      });\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  }\n  getDocument() {\n    this.loading = true;\n    let params = {\n      id: this.data.record.id,\n    };\n    this.exitManagementService.findById(params).subscribe(\n      (res) => {\n        console.log(res);\n        if (res.entity.attachment) {\n          this.loading = false;\n          this.downloadDocument(res.entity.attachment);\n        } else {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"No Document Attached!\");\n        }\n      },\n      (err) => {\n        this.loading = false;\n      }\n    );\n  }\n\n  downloadDocument(fileToDownload: string) {\n    let fileName = \"LeaveForm\";\n\n    fetch(fileToDownload)\n      .then((response) => response.blob())\n      .then((blob) => {\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", `${fileName}`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n  }\n\n  //********************************************************************************************************************** */\n\n  //********************************************************************************************************************** */\n\n  posting: boolean = false;\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.exitManagementService.create(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"res: \", res);\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.exitManagementService.update(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n\n  selectedItem: any\n  employeeLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(EmployeesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          empPf: res.data[0].empNo,\n\n        });\n      }\n    });\n  }\n\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>{{ pageFunction }} Exit Request </strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <ng-container>\n            <h6 class=\"mx-2\">Exit Request Details</h6>\n            <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n                <div class=\"row\">\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Type of Exit</mat-label>\n                            <mat-select formControlName=\"typeOfSeparation\">\n                                <mat-option *ngFor=\"let exitType of exitTypes\" [value]=\"exitType\">{{ exitType\n                                    }}</mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"\n                  mngForm.get('typeOfSeparation').invalid &&\n                  mngForm.get('typeOfSeparation').touched\n                \">\n                                Type of Exit is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Exit Date</mat-label>\n                            <input matInput [matDatepicker]=\"exitDatePicker\" formControlName=\"exitDate\" />\n                            <mat-datepicker-toggle matSuffix [for]=\"exitDatePicker\"></mat-datepicker-toggle>\n                            <mat-datepicker #exitDatePicker></mat-datepicker>\n                            <mat-error *ngIf=\"\n                  mngForm.get('exitDate').invalid &&\n                  mngForm.get('exitDate').touched\n                \">\n                                Exit Date is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Exit Reason</mat-label>\n                            <textarea matInput formControlName=\"exitReason\"></textarea>\n                            <mat-error *ngIf=\"\n                  mngForm.get('exitReason').invalid &&\n                  mngForm.get('exitReason').touched\n                \">\n                                Exit Reason is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n\n            <div class=\"row\" *ngIf=\"!viewMode\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                    <div class=\"example-button-row\" align=\"end\">\n                        <button class=\"btn-space\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" (click)=\"submit()\">\n                            {{ pageFunction }} Exit Request\n                        </button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}