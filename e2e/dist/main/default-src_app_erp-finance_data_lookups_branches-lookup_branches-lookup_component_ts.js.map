{"version":3,"file":"default-src_app_erp-finance_data_lookups_branches-lookup_branches-lookup_component_ts.js","mappings":"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","sources":["./src/app/account/data/services/account.service.ts","./src/app/erp-finance/data/lookups/branches-lookup/branches-lookup.component.ts","./src/app/erp-finance/data/lookups/branches-lookup/branches-lookup.component.html"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nimport { User } from \"../types/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AccountService {\n  constructor(private http: HttpClient) {}\n\n \n  // /soa/otherusers/find/{id}\n  getUserById(userId): Observable<User> {\n    const getUserByIdUrl = `${environment.baseUrlAdmin}/soa/otherusers/find/${userId}`;\n\n    return this.http.get<User>(getUserByIdUrl);\n  }\n\n\n\n\n  updateProfile(profileBody):Observable<{message:string}>{\n    const updatePasswordUrl = `${environment.baseUrlAdmin}/soa/otherusers/updateprofile`;\n\n    return this.http.put<{message: string}>(updatePasswordUrl, profileBody)\n  }\n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { AccountService } from \"src/app/account/data/services/account.service\";\nimport { ManageCustomersComponent } from \"src/app/erp-finance/modules/finance-parameters/pages/customer-management/manage-customers/manage-customers.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { MiddlewareService } from \"../../services/middlware.service\";\n\n@Component({\n  selector: \"app-branches-lookup\",\n  templateUrl: \"./branches-lookup.component.html\",\n  styleUrls: [\"./branches-lookup.component.sass\"],\n})\nexport class BranchesLookupComponent implements OnInit {\n  displayedColumns: string[] = [\"select\", \"BranchID\", \"BranchName\"];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(false, []);\n\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  array: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCustomersComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private accountService: AccountService,\n    private middlewareService: MiddlewareService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"Single Branch\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.array.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  getData() {\n    this.isLoading = true;\n\n    let params = { bankID: this.data.bankId };\n    this.middlewareService\n      .getBranchesFromCore(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"RESPONSE =>: \", res);\n\n          this.data = res;\n\n          console.log(\"this.data: \", this.data);\n\n          this.dataSource = new MatTableDataSource<any>(this.data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n        <div class=\"mb-3\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n        <div class=\"modalHeader\">\n            <div class=\"contact-details-name mb-1\">Select Branch</div>\n            <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <mat-card-content>\n                <div *ngIf=\"isLoading\">\n                    <div class=\"d-flex justify-content-center\">\n                        <img src=\"assets/images/loading.gif\"\n                            style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                    </div>\n                </div>\n                <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </ng-container>\n\n                        <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                            #exporter=\"matTableExporter\">\n\n                            <ng-container matColumnDef=\"select\">\n                                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-15'\">\n                                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                        [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                    </mat-checkbox>\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-15'\">\n                                    <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                        [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                    </mat-checkbox>\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"BranchID\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-25\">Branch ID</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{\n                                    row.BranchID }}</mat-cell>\n                            </ng-container>\n\n                            <!-- Branch Name -->\n                            <ng-container matColumnDef=\"BranchName\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-60\">Branch Name</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-60\">{{\n                                    row.BranchName }}</mat-cell>\n                            </ng-container>\n\n\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\"\n                                matRipple>\n                            </mat-row>\n                            <mat-cell *matNoDataRow colspan=\"4\">\n                                No data matching the filter \"{{ input.value }}\"\n                            </mat-cell>\n                        </mat-table>\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                            <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                            </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                            aria-label=\"Select page of users\"></mat-paginator>\n                    </div>\n                </div>\n            </mat-card-content>\n        </div>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}