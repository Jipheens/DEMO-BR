{"version":3,"file":"src_app_erp-procurement_modules_needs_needs_module_ts.js","mappings":"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","sources":["./src/app/erp-budget/data/services/budget.service.ts","./src/app/erp-finance/data/services/gl-accounts.service.ts","./src/app/erp-procurement/data/services/need.service.ts","./src/app/erp-procurement/modules/needs/dialogs/validate-need/validate-need.component.ts","./src/app/erp-procurement/modules/needs/dialogs/validate-need/validate-need.component.html","./src/app/erp-procurement/modules/needs/needs-routing.module.ts","./src/app/erp-procurement/modules/needs/needs.module.ts","./src/app/erp-procurement/modules/needs/pages/all-needs/all-needs.component.ts","./src/app/erp-procurement/modules/needs/pages/all-needs/all-needs.component.html","./src/app/erp-procurement/modules/needs/pages/manage-need/manage-need.component.ts","./src/app/erp-procurement/modules/needs/pages/manage-need/manage-need.component.html","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BudgetsService {\n\n\n\n  constructor(private http: HttpClient) { }\n\n  getBudgets(): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/all`;\n    return this.http.get<any[]>(BudgetManagementUrl);\n  }\n  getBudgetsByHodAndFinanceStatus(params): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/fetchbyhodandfinancestatus`;\n    return this.http.get<any[]>(BudgetManagementUrl, { params });\n  }\n  getBudgetsByStatus(params): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/fetchbyStatus`;\n    return this.http.get<any[]>(BudgetManagementUrl, { params });\n  }\n  getBudgetsByCostCenterCodeAndStatus(params): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/fetchbycostcentercodeandstatus`;\n    return this.http.get<any[]>(BudgetManagementUrl, { params });\n  }\n\n  getBudgetsByYear(params): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/all-by-year`;\n    return this.http.get<any[]>(BudgetManagementUrl, { params });\n  }\n  getBudgetsById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/budgets/lines/find/by/id`, {params}\n    );\n  }\n\n  getBudget(): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/all`;\n    return this.http.get<any[]>(BudgetManagementUrl);\n  }\n  addBudget(data: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/create`;\n    return this.http.post<any>(BudgetManagementUrl, data);\n  }\n  extractBulkBudgets(params: any, data: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/excel`;\n    return this.http.post<any>(BudgetManagementUrl, data,{params});\n  }\n\n  addBudgets(data: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/create/bulk`;\n    return this.http.post<any>(BudgetManagementUrl, data);\n  }\n\n  updateBudgets(BudgetDetails: any): Observable<any> {\n    const updateBudgetUrl = `${environment.baseUrlFinance}/api/v1/budgets/expenses/update-expense`;\n    return this.http.put<any>(updateBudgetUrl, BudgetDetails);\n  }\n\n  updateBudgetExps(BudgetDetails: any): Observable<any> {\n    const updateBudgetUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/update-expense`;\n    return this.http.put<any>(updateBudgetUrl, BudgetDetails);\n  }\n\n  deleteBudgetTemporarily(params: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/delete`;\n    return this.http.delete<any>(BudgetManagementUrl, {params});\n  }\n\n  validateBudgets(params: any, dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate, {params});\n  }\n\n  \n\n\n  budgetCheck(data: any): Observable<any> {\n    const BudgetManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/lines/check`;\n    return this.http.post<any>(BudgetManagementUrl, data);\n  }\n\n\n \n  uploadExcelPath(excelFilePath: string) {\n    return this.http.post<any>('http://localhost:9191/generateBudget', { excelFilePath });\n  }\n\n\n  generateBudget(file: File): Observable<any> {\n    const formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n    return this.http.post(`http://localhost:9191/generateBudget`, formData);\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlAccountsService {\n  constructor(private http: HttpClient) {}\n\n  getGLAccounts(): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/all`;\n    return this.http.get<any[]>(GLAccountManagementUrl);\n  }\n  getGLAccountsByStatus(params): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/fetchbyStatus`;\n    return this.http.get<any[]>(GLAccountManagementUrl, { params });\n  }\n\n\n  getGLAccountsByFilterParameters(params): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/findByFilter`;\n    return this.http.get<any[]>(GLAccountManagementUrl, { params });\n  }\n\n  getGLAccountsById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/gls/find/by/id`, {params}\n    );\n  }\n\n  getGLAccountByGlName(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/gls/find/by/acdescription`, {params}\n    );\n  }\n\n  getGLAccountByExpAndCostCenter(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/expenses/find/by/costcenter/and/expensecode`, {params}\n    );\n  }\n\n  addGLAccount(data: any): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/create`;\n    return this.http.post<any>(GLAccountManagementUrl, data);\n  }\n\n  addGLAccounts(data: any): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/create/mock/bulk`;\n    return this.http.post<any>(GLAccountManagementUrl, data);\n  }\n  addNewGLAccounts(data: any): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/map-budget`;\n    return this.http.post<any>(GLAccountManagementUrl, data);\n  }\n\n  updateGLAccounts(GLAccountDetails: any): Observable<any> {\n    const updateGLAccountUrl = `${environment.baseUrlFinance}/api/v1/gls/update`;\n    return this.http.put<any>(updateGLAccountUrl, GLAccountDetails);\n  }\n\n  deleteGLAccountTemporarily(params: any): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/delete`;\n    return this.http.delete<any>(GLAccountManagementUrl, {params});\n  }\n\n  validateAccounts(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/gls/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n\n  // ********************************************************************************************************************\n\n  initiateCoreSynchronization(): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/gls/balances/synchronize`;\n    return this.http.post<any>(GLAccountManagementUrl, {});\n  }\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, map } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment.prod\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class NeedService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getNeeds(): Observable<any> {\r\n    const NeedssUrl = `${environment.baseUrlProcurement}/api/v1/requisition/need/all`;\r\n    return this.http.get<any[]>(NeedssUrl);\r\n  }\r\n\r\n  getNeedsByStatus(params: any): Observable<any> {\r\n    const NeedssUrl = `${environment.baseUrlProcurement}/api/v1/requisition/need/all/by/hod_status/procurement_status`;\r\n    return this.http.get<any[]>(NeedssUrl, {\r\n      params: params,\r\n    });\r\n  }\r\n\r\n  getNeedsById(params: any): Observable<any> {\r\n    const NeedssUrl = `${environment.baseUrlProcurement}/api/v1/requisition/need/find/by/id`;\r\n    return this.http.get<any>(NeedssUrl, { params: params, });\r\n  }\r\n\r\n  addNeeds(data: any): Observable<any> {\r\n    const NeedssUrl = `${environment.baseUrlProcurement}/api/v1/requisition/need/add`;\r\n    return this.http.post<any>(NeedssUrl, data);\r\n  }\r\n\r\n  updateNeeds(NeedsDetails: any): Observable<any> {\r\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/requisition/need/update`;\r\n    return this.http.put<any>(updateBillUrl, NeedsDetails)\r\n  }\r\n\r\n  deleteNeedsTemporarily(params: any): Observable<any> {\r\n    const NeedssUrl = `${environment.baseUrlProcurement}/api/v1/requisition/need/delete`;\r\n    return this.http.delete<any>(NeedssUrl, { params });\r\n  }\r\n\r\n\r\n\r\n  validateNeed(params: any): Observable<any> {\r\n    const API_URL = `${environment.baseUrlProcurement}/api/v1/requisition/need/update/state`;\r\n    return this.http.put(\r\n      API_URL,\r\n      {},\r\n      {\r\n        params: params,\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // ********************************************************************************************************************\r\n\r\n  donwloadRequsitionReport(params: any): Observable<any> {\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"Accept\", \"application/pdf\");\r\n    let requestOptions: any = {\r\n      params: params,\r\n      headers: headers,\r\n      responseType: \"blob\",\r\n      withCredentials: false,\r\n    };\r\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/report/download/need_requisition`;\r\n    return this.http.get(API_URL, requestOptions).pipe(\r\n      map((response: BlobPart) => {\r\n        console.log(\"Hey this is download Requsitition Report\", response);\r\n        return {\r\n          filename: \"Report\",\r\n          data: new Blob([response], { type: \"application/pdf\" }),\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ManageNeedComponent } from '../../pages/manage-need/manage-need.component';\nimport { NeedService } from 'src/app/erp-procurement/data/services/need.service';\n\n\n@Component({\n  selector: 'app-validate-need',\n  templateUrl: './validate-need.component.html',\n  styleUrls: ['./validate-need.component.sass']\n})\nexport class ValidateNeedComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  status!: string;\n\n  resData: any;\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageNeedComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private needService: NeedService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n  }\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    this.canVerify = true;\n\n    // if (this.postedBy === this.currentUser) {\n\n    //   this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n    //   this.canVerify = false;\n\n    // } else {\n    //   this.canVerify = true;\n    // }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.status = \"APPROVED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n\n    const params = new HttpParams()\n\n      .set(\"id\", this.Data.id)\n      .set(\"userType\", this.data.userType)\n      .set(\"action\", this.status)\n      .set(\"reason\", this.statusForm.value.reason)\n\n    console.log(\"Form = \", params);\n  \n    this.needService\n      .validateNeed(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              \"Need validated successfully\"\n            );\n            \n          }\n          else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: \" + err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-procurement/needs/all-needs\"]);\n        }\n      });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n  <div class=\"contact-details\">\n    <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\"><strong>Validate Need</strong></div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n\n        <div class=\"row\">\n          <!--Gift Icon-->\n          <div class=\"col text-center my-2\">\n            <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n          </div>\n          <!--Modal Text-->\n          \n         \n          <div class=\"col-8 my-2\">\n            <dl class=\"dl-horizontal\">\n              <dt class=\"pull-left me-2\">NeedCode:</dt>\n              <dd>{{Data.needCode}}</dd>\n              <dt class=\"pull-left me-2\">NeedTitle:</dt>\n              <dd> {{ Data.needTitle }}</dd>\n              <dt class=\"pull-left me-2\">Description:</dt>\n              <dd> {{ Data.needDescription }}</dd>\n            </dl>\n          </div>\n\n         \n        </div>\n\n        <div class=\"\">\n          <hr />\n\n          <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Approve</button>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Return</button>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Reject</button>\n              </div>\n            </div>\n          </div>\n          <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n            <div class=\"row\" *ngIf=\"rejected\">\n              <div class=\"col-10 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Reason for rejection</mat-label>\n                  <textarea formControlName=\"reason\" matInput></textarea>\n                  <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                </mat-form-field>\n              </div>\n              <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                  (click)=\"changeStatus()\">Submit</button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllNeedsComponent } from './pages/all-needs/all-needs.component';\nimport { ManageNeedComponent } from './pages/manage-need/manage-need.component';\nimport { RoutePrivilegeGuard } from '../../data/services/_AccessControlAuthGuard.service';\n\nconst routes: Routes = [\n  {\n    path: \"all-needs\",\n    component: AllNeedsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'ProcurementModule', requiredPrivilege:[\"All Needs\"] },\n  },\n  {\n    path: \"manage-need\",\n    component: ManageNeedComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'ProcurementModule', requiredPrivilege:[\"Manage Needs\"] },\n  },\n \n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NeedsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { NeedsRoutingModule } from './needs-routing.module';\nimport { AllNeedsComponent } from './pages/all-needs/all-needs.component';\nimport { ManageNeedComponent } from './pages/manage-need/manage-need.component';\nimport { ValidateNeedComponent } from './dialogs/validate-need/validate-need.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\n\n\n@NgModule({\n  declarations: [\n    AllNeedsComponent,\n    ManageNeedComponent,\n    ValidateNeedComponent\n  ],\n  imports: [\n    CommonModule,\n    NeedsRoutingModule,\n\n     //Additional imports\n     DashboardModule,\n     MatIconModule,\n     NgApexchartsModule,\n     PerfectScrollbarModule,\n     MatMenuModule,\n     MatTooltipModule,\n     MatProgressBarModule,\n \n     MatTableModule,\n     MatPaginatorModule,\n     MatInputModule,\n     MatSortModule,\n \n     MatSelectModule,\n     MatTabsModule,\n     MatCheckboxModule,\n     MatTableExporterModule,\n     MatProgressSpinnerModule,\n \n     MatFormFieldModule,\n \n     MatButtonModule,\n     MatDialogModule,\n     MatDatepickerModule,\n     ComponentsModule,\n     MatCardModule,\n     ReactiveFormsModule,\n \n     MatSnackBarModule,\n     MatToolbarModule,\n \n     SharedModule,\n     MatStepperModule,\n     NgxMaskModule,\n     MatChipsModule,\n \n     FormsModule,\n     MatBadgeModule,\n     MatAutocompleteModule,\n     MatBottomSheetModule,\n     MatListModule,\n     MatSidenavModule,\n     MatExpansionModule,\n     MatSliderModule,\n     NgbModule,\n  ],\n  providers: [DatePipe],\n})\nexport class NeedsModule { }\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { NeedService } from \"src/app/erp-procurement/data/services/need.service\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-needs\",\n  templateUrl: \"./all-needs.component.html\",\n  styleUrls: [\"./all-needs.component.sass\"],\n})\nexport class AllNeedsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"id\",\n    \"needCode\",\n    \"needTitle\",\n    \"needDescription\",\n    \"status\",\n    \"postedBy\",\n    \"postedTime\",\n    \"hodApproval\",\n    \"procurementApproval\",\n    \"downloadNeedReport\",\n    \"action\",\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  currentDate: Date = new Date();\n  dateTomorrow: Date = new Date(\n    this.currentDate.getTime() + 1 * 24 * 60 * 60 * 1000\n  );\n  oneWeekAgo: Date = new Date(\n    this.currentDate.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n  currentUser: any;\n\n  requisitionTypes: any[] = [{ name: \"RFQ\" }, { name: \"RFP\" }];\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private needService: NeedService,\n    private fb: FormBuilder,\n    private datepipe: DatePipe,\n    private tokenStorageService: TokenStorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.currentUser = this.tokenStorageService.getUser().username;\n    this.Form = this.fb.group({\n      requisitionType: [\"RFQ\", Validators.required],\n      hodStatus: [\"PENDING\", Validators.required],\n      procurementStatus: [\"PENDING\", Validators.required],\n      fromDate: [this.oneWeekAgo, Validators.required],\n      toDate: [this.dateTomorrow, Validators.required],\n    });\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    \n      this.getData(this.currentPage, this.pageSize);\n    \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // getData() {\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n\n  //   let fromDate = this.datepipe.transform(\n  //     this.Form.value.fromDate,\n  //     \"YYYY-MM-dd\"\n  //   );\n  //   let toDate = this.datepipe.transform(\n  //     this.Form.value.toDate,\n  //     \"YYYY-MM-dd\"\n  //   );\n  //   const params = new HttpParams()\n  //    .set(\"needType\", this.Form.value.requisitionType)\n  //     .set(\"hod_status\", this.Form.value.hodStatus)\n  //     .set(\"procurement_status\", this.Form.value.procurementStatus)\n  //     .set(\"fromDate\", fromDate)\n  //     .set(\"toDate\", toDate)\n\n  //   this.needService.getNeedsByStatus(params).pipe(takeUntil(this.destroy$)).subscribe(\n  //     {\n  //       next: (res) => {\n  //         if (res.entity) {\n  //           this.data = res.entity;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data)\n\n  //         } else {\n  //           this.snackbar.showNotification(\n  //             \"snackbar-danger\",\n  //             \"No Data Available\"\n  //           )\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\n  //           \"snackbar-danger\",\n  //           \"No Needs Matching these parameters!\"\n  //         );\n  //       },\n  //       complete: () => {\n\n  //       }\n\n  //     }\n  //   ), Subscription;\n\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n  // data: any;\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    // let params = {\n    //   pageNo: page,\n    //   pageSize: size,\n    //   searchTerm: this.input,\n    //   status: this.Form.value.status,\n    // };\n    let fromDate = this.datepipe.transform(\n      this.Form.value.fromDate,\n      \"YYYY-MM-dd\"\n    );\n    let toDate = this.datepipe.transform(this.Form.value.toDate, \"YYYY-MM-dd\");\n    const params = new HttpParams()\n      .set(\"pageNo\", page)\n      .set(\"pageSize\", size)\n      .set(\"searchTerm\", this.input)\n\n      .set(\"needType\", this.Form.value.requisitionType)\n      .set(\"hod_status\", this.Form.value.hodStatus)\n      .set(\"procurement_status\", this.Form.value.procurementStatus)\n      .set(\"fromDate\", fromDate)\n      .set(\"toDate\", toDate);\n    this.needService\n      .getNeedsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  getSelectedStatus(event: any) {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  addNeed() {\n    this.router.navigate([\"/erp-procurement/needs/manage-need\"]);\n  }\n\n  editNeed(data: any) {\n    const additionalData = data;\n    //const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-procurement/needs/manage-need\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Update\" },\n    });\n  }\n  viewNeed(data: any) {\n    const additionalData = data;\n    //const serializedData = JSON.stringify(additionalData);\n    let route = \"/erp-procurement/needs/manage-need\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"View\" },\n    });\n  }\n  validateNeed(data: any) {\n    const additionalData = data;\n    // const serializedData = JSON.stringify(additionalData);\n    let route = \"/erp-procurement/needs/manage-need\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Validate\" },\n    });\n  }\n\n  downloadReqReport(row: any) {\n    this.downloadLoading = true;\n\n    const params = new HttpParams().set(\"needCode\", row.needCode);\n\n    this.needService\n      .donwloadRequsitionReport(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          let url = window.URL.createObjectURL(res.data);\n\n          // if you want to open PDF in new tab\n          window.open(url);\n\n          let a = document.createElement(\"a\");\n          document.body.appendChild(a);\n          a.setAttribute(\"style\", \"display: none\");\n          a.setAttribute(\"target\", \"blank\");\n          a.href = url;\n          // a.download = \".pdf\";\n          a.download = `RequsitionReport_${row.needCode}.pdf`;\n          a.click();\n          window.URL.revokeObjectURL(url);\n          a.remove();\n\n          this.downloadLoading = false;\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            \"Report generated successfully\"\n          );\n          // if (res.statusCode === 200) {\n          // } else {\n          //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          // }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Error doanloading PO!\"\n          );\n          this.downloadLoading = false;\n        },\n        complete: () => {\n          this.downloadLoading = false;\n        },\n      }),\n      Subscription;\n  }\n\n  deleteNeed(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Need?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Need!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams()\n          .set(\"id\", id)\n          .set(\"username\", this.currentUser);\n        this.needService\n          .deleteNeedsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Need Deleted Successfully\"\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  sampleRecords = [\n    {\n      id: 1,\n      NeedCode: \"ABC123\",\n      operatingUnit: \"Operating Unit 1\",\n      description: \"Description 1\",\n      status: \"Incomplete\",\n      preparer: \"Preparer 1\",\n      number: \"Number 1\",\n      total: 100,\n      currency: \"USD\",\n      requester: \"Requester 1\",\n      organization: \"Organization 1\",\n      location: \"Location 1\",\n      supplierName: \"Supplier 1\",\n      supplierPhone: \"1234567890\",\n      createdDate: \"2023-06-15T13:05:41.206224\",\n      NeedAttachments: [\n        {\n          file: \"currFile1\",\n          filename: \"currFilename1\",\n          filetype: \"currFiletype1\",\n        },\n        {\n          file: \"currFile2\",\n          filename: \"currFilename2\",\n          filetype: \"currFiletype2\",\n        },\n      ],\n      NeedItems: [\n        {\n          type: \"Type 1\",\n          category: \"Category 1\",\n          itemDescription: \"Item Description 1\",\n          unitOfMeasure: \"Unit 1\",\n          quantity: \"10\",\n          unitPrice: \"10\",\n          needByDate: \"2023-06-14\",\n          accountNumber: \"Account 1\",\n          taxRate: \"10%\",\n          taxName: \"Tax 1\",\n        },\n      ],\n    },\n    {\n      id: 2,\n      NeedCode: \"DEF456\",\n      operatingUnit: \"Operating Unit 2\",\n      description: \"Description 2\",\n      status: \"Approved\",\n      preparer: \"Preparer 2\",\n      number: \"Number 2\",\n      total: 200,\n      currency: \"EUR\",\n      requester: \"Requester 2\",\n      organization: \"Organization 2\",\n      location: \"Location 2\",\n      supplierName: \"Supplier 2\",\n      supplierPhone: \"9876543210\",\n      createdDate: \"2023-06-15T13:05:41.206224\",\n      NeedAttachments: [\n        {\n          file: \"currFile3\",\n          filename: \"currFilename3\",\n          filetype: \"currFiletype3\",\n        },\n        {\n          file: \"currFile4\",\n          filename: \"currFilename4\",\n          filetype: \"currFiletype4\",\n        },\n      ],\n      NeedItems: [\n        {\n          type: \"Type 2\",\n          category: \"Category 2\",\n          itemDescription: \"Item Description 2\",\n          unitOfMeasure: \"Unit 2\",\n          quantity: \"20\",\n          unitPrice: \"20\",\n          needByDate: \"2023-06-15\",\n          accountNumber: \"Account 2\",\n          taxRate: \"15%\",\n          taxName: \"Tax 2\",\n        },\n      ],\n    },\n    {\n      id: 3,\n      NeedCode: \"GHI789\",\n      operatingUnit: \"Operating Unit 3\",\n      description: \"Description 3\",\n      status: \"Rejected\",\n      preparer: \"Preparer 3\",\n      number: \"Number 3\",\n      total: 300,\n      currency: \"GBP\",\n      requester: \"Requester 3\",\n      organization: \"Organization 3\",\n      location: \"Location 3\",\n      supplierName: \"Supplier 3\",\n      supplierPhone: \"0123456789\",\n      createdDate: \"2023-06-15T13:05:41.206224\",\n      NeedAttachments: [\n        {\n          file: \"currFile5\",\n          filename: \"currFilename5\",\n          filetype: \"currFiletype5\",\n        },\n        {\n          file: \"currFile6\",\n          filename: \"currFilename6\",\n          filetype: \"currFiletype6\",\n        },\n      ],\n      NeedItems: [\n        {\n          type: \"Type 3\",\n          category: \"Category 3\",\n          itemDescription: \"Item Description 3\",\n          unitOfMeasure: \"Unit 3\",\n          quantity: \"30\",\n          unitPrice: \"30\",\n          needByDate: \"2023-06-16\",\n          accountNumber: \"Account 3\",\n          taxRate: \"20%\",\n          taxName: \"Tax 3\",\n        },\n      ],\n    },\n    {\n      id: 3,\n      NeedCode: \"GHI789\",\n      operatingUnit: \"Operating Unit 3\",\n      description: \"Description 3\",\n      status: \"Returned\",\n      preparer: \"Preparer 3\",\n      number: \"Number 3\",\n      total: 300,\n      currency: \"GBP\",\n      requester: \"Requester 3\",\n      organization: \"Organization 3\",\n      location: \"Location 3\",\n      supplierName: \"Supplier 3\",\n      supplierPhone: \"0123456789\",\n      createdDate: \"2023-06-15T13:05:41.206224\",\n\n      NeedAttachments: [\n        {\n          file: \"currFile5\",\n          filename: \"currFilename5\",\n          filetype: \"currFiletype5\",\n        },\n        {\n          file: \"currFile6\",\n          filename: \"currFilename6\",\n          filetype: \"currFiletype6\",\n        },\n      ],\n      NeedItems: [\n        {\n          type: \"Type 3\",\n          category: \"Category 3\",\n          itemDescription: \"Item Description 3\",\n          unitOfMeasure: \"Unit 3\",\n          quantity: \"30\",\n          unitPrice: \"30\",\n          needByDate: \"2023-06-16\",\n          accountNumber: \"Account 3\",\n          taxRate: \"20%\",\n          taxName: \"Tax 3\",\n        },\n      ],\n    },\n  ];\n}\n\n// 'id', 'rfqApplicationCode','rfqName', 'rfqCode', 'supplierCode', 'supplierName','status', 'postedBy', 'postedTime'\n\n// Rfqapplication: {\n//   \"supplierCode\": \"\",\n//   \"supplierName\": \"\",\n//   \"rfqCode\": \"\",\n//   \"rfqName\": \"\",\n\n//   \"itemSubTotalAmount\": 0,\n//   \"itemVatTotalAmount\": 0,\n//   \"itemGrantTotal\": 0,\n\n//   \"items\": [\n//     {\n//       \"itemName\": \"\",\n//       \"unitPricePerItem\": 0,\n//       \"unitOfMeasure\": \"\",\n//       \"taxName\": \"\",\n//       \"taxRate\": 0,\n//       \"quantity\": 0,\n//       \"description\": \"\"\n\n// \"subTotalAmount\": 0,\n//   \"vatTotalAmount\": 0,\n//   \"grantTotal\": 0,\n//     },\n// {\n//       \"itemName\": \"\",\n//       \"unitPricePerItem\": 0,\n//       \"unitOfMeasure\": \"\",\n//       \"taxName\": \"\",\n//       \"taxRate\": 0,\n//       \"quantity\": 0,\n//       \"description\": \"\"\n\n// \"subTotalAmount\": 0,\n//   \"vatTotalAmount\": 0,\n//   \"grantTotal\": 0,\n//     },\n// {\n//       \"itemName\": \"\",\n//       \"unitPricePerItem\": 0,\n//       \"unitOfMeasure\": \"\",\n//       \"taxName\": \"\",\n//       \"taxRate\": 0,\n//       \"quantity\": 0,\n//       \"description\": \"\"\n\n// \"subTotalAmount\": 0,\n//   \"vatTotalAmount\": 0,\n//   \"grantTotal\": 0,\n//     }\n//   ],\n//   \"financialAttachments\": [\n//     {\n//       \"file\": \"\",\n//       \"filetype\": \"\",\n//       \"filename\": \"\"\n//     }\n//   ],\n//   \"technicalAttachments\": [\n//     {\n//       \"file\": \"\",\n//       \"filetype\": \"\",\n//       \"filename\": \"\"\n//     }\n//   ],\n\n// }\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Requisitions'\" [items]=\"['Requisitions']\" [active_item]=\"'All Requisitions'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Requisitions</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNeed()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'Requisition-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-10\">\n                    <form [formGroup]=\"Form\">\n                      <div class=\"row\">\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>RequisitionType</mat-label>\n\n                            <mat-select formControlName=\"requisitionType\" (selectionChange)=\"getSelectedStatus($event)\">\n                              <mat-option *ngFor=\"let requisitionType of requisitionTypes\"\n                                [value]=\"requisitionType.name\">{{ requisitionType.name }}\n                              </mat-option>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"\n                                Form.get('requisitionType').hasError('required')\n                              \">\n                              Please select Status\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>HOD Status</mat-label>\n\n                            <mat-select formControlName=\"hodStatus\" (selectionChange)=\"getSelectedStatus($event)\">\n                              <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{\n                                reqStatus.name }}\n                              </mat-option>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"Form.get('hodStatus').hasError('required')\">\n                              Please select HOD Status\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>Procurement Status</mat-label>\n\n                            <mat-select formControlName=\"procurementStatus\"\n                              (selectionChange)=\"getSelectedStatus($event)\">\n                              <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{\n                                reqStatus.name }}\n                              </mat-option>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"\n                                Form.get('procurementStatus').hasError(\n                                  'required'\n                                )\n                              \">\n                              Please select Procurement Status\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>From Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker\" formControlName=\"fromDate\" required\n                              (dateChange)=\"getSelectedStatus($event)\" />\n                            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error *ngIf=\"Form.get('fromDate').hasError('required')\">\n                              Please select From Date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n\n                        <div class=\"col-2\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>To Date</mat-label>\n                            <input matInput [matDatepicker]=\"picker2\" formControlName=\"toDate\" required\n                              (dateChange)=\"getSelectedStatus($event)\" />\n                            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                            <mat-datepicker #picker2></mat-datepicker>\n                            <mat-error *ngIf=\"Form.get('toDate').hasError('required')\">\n                              Please select To Date\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"table-img tbl-col-width-per-6\">Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\">{{ row.id }}</mat-cell>\n                </ng-container>\n                <!-- ['id', 'needCode', 'needTitle', 'needDescription', 'status', 'postedBy', 'postedTime', 'hodApproval', 'procurementApproval', 'action']; -->\n                <ng-container matColumnDef=\"needCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-12\">RequisitionCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                    {{ row.needCode }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"needTitle\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-12\">RequisitionTitle</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                    {{ row.needTitle }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"needDescription\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">RequisitionDescription</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                    {{ row.needDescription }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"postedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-12\">PostedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                    {{ row.postedBy }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"postedTime\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-12\">PostedTime</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                    {{ row.postedTime | date : \"MM/dd/yyyy\" }}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-12\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"hodApproval\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">HOD Approval</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.hodStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.hodStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.hodStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.hodStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.hodStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.hodStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"procurementApproval\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Procurement Approval</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.procurementStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.procurementStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.procurementStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.procurementStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.procurementStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.procurementStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"downloadNeedReport\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">DownloadReport</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-purple btn btn btn-sm m-1\"\n                      (click)=\"downloadReqReport(row)\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"editNeed(row)\"\n                      class=\"tbl-action-btn\" [disabled]=\"\n                        row.hodStatus === 'APPROVED' ||\n                        row.procurementStatus === 'APPROVED'\n                      \">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"validateNeed(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\" (click)=\"viewNeed(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteNeed(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewNeed(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                \n                \n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                      }}\"</td>\n              </tr>\n\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              \n              \n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormArray,\n  AbstractControl,\n  FormControl,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, BehaviorSubject, takeUntil, Subscription } from \"rxjs\";\n\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { ValidateNeedComponent } from \"../../dialogs/validate-need/validate-need.component\";\nimport * as XLSX from \"xlsx\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NeedService } from \"src/app/erp-procurement/data/services/need.service\";\nimport { CatalogueLookupComponent } from \"src/app/erp-inventory/data/lookups/catalogue-lookup/catalogue-lookup.component\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { ExpenseLookupComponent } from \"src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component\";\nimport { BudgetsService } from \"src/app/erp-budget/data/services/budget.service\";\nimport { GlAccountsService } from \"src/app/erp-finance/data/services/gl-accounts.service\";\nimport { AssetCatalogLookupComponent } from \"src/app/erp-fixedassets/data/lookups/asset-catalog-lookup/asset-catalog-lookup.component\";\n\n@Component({\n  selector: \"app-manage-need\",\n  templateUrl: \"./manage-need.component.html\",\n  styleUrls: [\"./manage-need.component.scss\"],\n})\nexport class ManageNeedComponent implements OnInit {\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n\n  bgtForm: FormGroup;\n\n  displayedColumns: string[] = [\n    \"id\",\n    \"itemCode\",\n    \"itemName\",\n    \"unitOfMeasure\",\n    \"itemQuantity\",\n    \"estimatedPrice\",\n    \"itemDescription\",\n\n    \"needByDate\",\n\n    // \"budgetFlag\",\n    // \"allowOverride\",\n\n    \"actions\",\n  ];\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  formData: any;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  needId: any;\n\n  NeedStatuses: any[] = [\n    { name: \"Incomplete\" },\n    { name: \"Approved\" },\n    { name: \"Rejected\" },\n    { name: \"Returned\" },\n  ];\n\n  itemTypes: any[] = [{ name: \"Goods\" }, { name: \"Services\" }];\n\n  subTotalAmount: number = 0;\n  totalTax: number = 0;\n  grandtotalAmount: number = 0;\n\n  requisitionTypes: any[] = [{ name: \"RFQ\" }, { name: \"RFP\" }];\n  requisitionCategories: any[] = [\n    { name: \"Stock\" },\n    { name: \"FixedAsset\" },\n    { name: \"Expense\" },\n    //{ name: \"Prepayment\" },\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private filesService: FilesService,\n    private tokenStorageService: TokenStorageService,\n    private needService: NeedService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private budgetService: BudgetsService,\n    private accountService: GlAccountsService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.getPage();\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.id) {\n          this.needId = params.id;\n          console.log(\"ID:\", this.needId);\n          this.getDataById();\n          this.pageAction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n\n  ngAfterViewInit() {\n    let event = { value: this.mngForm.value.requisitionCategory };\n    this.getSelectedPurchaseOrderCategory(event);\n  }\n  pageAction = \"Add\";\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.needId);\n    this.needService\n      .getNeedsById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            // this.isLoading = false;\n            if (this.pageAction === \"Update\") {\n              this.pageFunction = \"Update\";\n            } else if (this.pageAction === \"View\") {\n              this.pageFunction = \"View\";\n              this.disableActions = true;\n            } else if (this.pageAction === \"Validate\") {\n              this.pageFunction = \"Validate\";\n              this.disableActions = true;\n              this.approvalVisible = true;\n            }\n\n            // this.formData = JSON.parse(params.additionalData);\n\n            if (this.formData.needItems.length > 0) {\n              this.dataSource = new MatTableDataSource(this.formData.needItems);\n              this.dataSource.paginator = this.paginator;\n              this.dataSource.sort = this.sort;\n            }\n\n            if (this.formData.needAttachments.length > 0) {\n              this.isFileDataLoading = false;\n              this.formData.needAttachments.forEach((element) => {\n                const newRow = this.fb.group({\n                  file: [element.file],\n                  filename: [element.filename],\n                  filetype: [element.filetype],\n                });\n                this.rows.push(newRow);\n              });\n\n              this.updateView();\n            }\n\n            this.showForm = true;\n\n            console.log(\"ID:\", this.needId);\n            console.log(\"Additional Data:\", this.formData);\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              \"No Data Available for the Id provided\"\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"No Need Matching these parameters!\"\n          );\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n      this.generateNeedForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.generateNeedForm();\n\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.generateDisabledNeedForm();\n\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateFormWithData();\n      this.generateDisabledNeedForm();\n\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      needCode: [\"\"],\n      needType: [\"RFQ\", [Validators.required]],\n      requisitionCategory: [\"Stock\", [Validators.required]],\n      needTitle: [\"\", [Validators.required]],\n      needDescription: [\"\", [Validators.required, Validators.maxLength(300)]],\n\n      needItems: [[]],\n      needAttachments: [[]],\n\n      costcentercode: [this.currentUser.costcentercode, [Validators.required]],\n\n      expenseCode: [\"\", [Validators.required]],\n      // budgetFlag:[\"\", [Validators.required]],\n    });\n\n    let event = { value: this.mngForm.value.requisitionCategory };\n    this.getSelectedPurchaseOrderCategory(event);\n  }\n\n  generateFormWithData() {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      needCode: [this.formData.needCode, [Validators.required]],\n      needType: [this.formData.needType, [Validators.required]],\n      requisitionCategory: [\n        this.formData.requisitionCategory,\n        [Validators.required],\n      ],\n      needTitle: [this.formData.needTitle, [Validators.required]],\n      needDescription: [\n        this.formData.needDescription,\n        [Validators.required, Validators.maxLength(300)],\n      ],\n      // status: [this.formData.status, [Validators.required]],\n\n      needItems: [this.formData.needItems],\n      needAttachments: [this.formData.needAttachments],\n\n      costcentercode: [this.formData.costcentercode, [Validators.required]],\n\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n\n      //  budgetFlag: [this.formData.budgetFlag, [Validators.required]],\n    });\n    let event = { value: this.mngForm.value.requisitionCategory };\n    this.getSelectedPurchaseOrderCategory(event);\n  }\n\n  generateDisabledFormWithData() {\n    this.mngForm = this.fb.group({\n      needCode: [this.formData.needCode, [Validators.required]],\n      needType: [this.formData.needType, [Validators.required]],\n      requisitionCategory: [\n        this.formData.requisitionCategory,\n        [Validators.required],\n      ],\n      needTitle: [this.formData.needTitle, [Validators.required]],\n      needDescription: [this.formData.needDescription, [Validators.required]],\n      // status: [this.formData.status, [Validators.required]],\n\n      needItems: [this.formData.needItems],\n      needAttachments: [this.formData.needAttachments],\n\n      costcentercode: [this.formData.costcentercode],\n\n      expenseCode: [this.formData.expenseCode],\n\n      //budgetFlag: [this.formData.budgetFlag],\n    });\n  }\n\n  getNeedPeriod(event: any) {\n    console.log(\"event: \", event.value);\n  }\n\n  enterManually: boolean = true;\n  manualItemsEntry() {\n    this.showItemsForm = true;\n    this.enterManually = true;\n\n    let event = { value: this.mngForm.value.requisitionCategory };\n    this.getSelectedPurchaseOrderCategory(event);\n\n    console.log(\"event: \", event);\n  }\n\n  isCatalogueItemsReadOnly: boolean = true;\n  getSelectedPurchaseOrderCategory(event: any) {\n    console.log(\"event.value: \", event.value);\n\n    if (event.value == \"Stock\" || event.value == \"FixedAsset\") {\n      this.isCatalogueItemsReadOnly = true;\n      console.log(\"Stock: \", this.isCatalogueItemsReadOnly);\n    } else {\n      this.isCatalogueItemsReadOnly = false;\n      console.log(\"!Stock: \", this.isCatalogueItemsReadOnly);\n    }\n\n    if (this.bgtForm) {\n      this.bgtForm.reset();\n    }\n    }\n  // *************************************************************************************************************************************\n  //Import requsitions from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n  importExcel() {\n    this.enterManually = false;\n    this.fileInput.nativeElement.click();\n  }\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     itemName: \"Sample Item 1\",\n        //     itemQuantity: 5,\n        //     itemDescription: \"Sample description for Item 1\",\n        //     unitOfMeasure: \"pcs\",\n        //     needByDate: \"2023-06-23\",\n        //   },\n        //  \n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = []; // Clear previous errors\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray; // Create a separate FormArray variable\n\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        itemName: [{ value: item.itemName }, [Validators.required]],\n        itemQuantity: [{ value: item.itemQuantity }, [Validators.required]],\n        itemDescription: [\n          { value: item.itemDescription },\n          [Validators.required],\n        ],\n        unitOfMeasure: [{ value: item.unitOfMeasure }, [Validators.required]],\n        needByDate: [{ value: item.needByDate }, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup); // Use push method on the FormArray variable\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n        // Rest of the code remains the same\n        this.bgtForm.patchValue({\n          itemName: item.itemName,\n          itemQuantity: item.itemQuantity,\n          itemDescription: item.itemDescription,\n          unitOfMeasure: item.unitOfMeasure,\n          needByDate: item.needByDate,\n        });\n\n        // Rest of the code remains the same\n\n        this.dataSource.data.push(this.bgtForm.value);\n        this.dataSource.data = this.dataSource.data.slice();\n        this.bgtForm.reset();\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  addImportsToArray() { }\n  clearImports() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.patchItems();\n  }\n\n  private readonly templateFilename = \"requisitionItemsTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  //***********************************************************************************************************************************8 */\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1; // Track the index of the selected row\n\n  generateDisabledNeedForm() {\n    this.bgtForm = this.fb.group({\n      itemName: [{ value: \"\", disabled: true }, [Validators.required]],\n      estimatedPrice: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n      itemQuantity: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemDescription: [{ value: \"\", disabled: true }, [Validators.required]],\n      unitOfMeasure: [{ value: \"\", disabled: true }, [Validators.required]],\n      needByDate: [{ value: \"\", disabled: true }, [Validators.required]],\n\n      // costCenterCode: [{ value: \"\", disabled: true }, [Validators.required]],\n      // expenseCode: [{ value: \"\", disabled: true }, [Validators.required]],\n\n      // allowOverride: [\"\"],\n      // budgetFlag: [\"\"],\n    });\n  }\n\n  generateNeedForm() {\n    this.bgtForm = this.fb.group({\n      id: [\"\"],\n      itemCode: [\"\"],\n      itemName: [\"\", [Validators.required]],\n      estimatedPrice: [\"\", [Validators.required]],\n      itemQuantity: [\n        \"\",\n        [\n          Validators.required,\n          Validators.min(0.01),\n          Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$\"),\n        ],\n      ],\n      itemDescription: [\"\", [Validators.required, Validators.maxLength(300)]],\n      unitOfMeasure: [\"\", [Validators.required]],\n\n      needByDate: [\"\", [Validators.required, this.dateValidator]],\n    });\n\n    let event = { value: this.mngForm.value.requisitionCategory };\n    this.getSelectedPurchaseOrderCategory(event);\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n  showItemsForm: boolean = false;\n\n  addToArray() {\n    if (this.bgtForm.valid) {\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n      const newRecord = {\n        itemName: this.bgtForm.value.itemName,\n        itemCode: this.bgtForm.value.itemCode,\n        estimatedPrice: this.bgtForm.value.estimatedPrice,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        itemQuantity: this.bgtForm.value.itemQuantity,\n        needByDate: this.bgtForm.value.needByDate,\n        // costCenterCode: this.bgtForm.value.costCenterCode,\n        // expenseCode: this.bgtForm.value.expenseCode,\n\n        // allowOverride: this.bgtForm.value.allowOverride,\n        // budgetFlag: this.bgtForm.value.budgetFlag,\n      };\n\n      this.dataSource.data.push(newRecord);\n      this.dataSource.data = this.dataSource.data.slice();\n      this.bgtForm.reset();\n\n      this.showItemsForm = false;\n\n      this.patchItems();\n    }\n  }\n\n  updateNeedDetails() {\n    if (this.bgtForm.valid) {\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n\n      const updatedRecord = {\n        id: this.bgtForm.value.id,\n        itemName: this.bgtForm.value.itemName,\n        estimatedPrice: this.bgtForm.value.estimatedPrice,\n        itemCode: this.bgtForm.value.itemCode,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        itemQuantity: this.bgtForm.value.itemQuantity,\n        needByDate: this.bgtForm.value.needByDate,\n\n        // costCenterCode: this.bgtForm.value.costCenterCode,\n        // expenseCode: this.bgtForm.value.expenseCode,\n\n        // allowOverride: this.bgtForm.value.allowOverride,\n        // budgetFlag: this.bgtForm.value.budgetFlag,\n      };\n\n      this.dataSource.data[this.selectedRowIndex] = updatedRecord;\n      this.dataSource.data = this.dataSource.data.slice();\n      this.bgtForm.reset();\n      this.showItemsForm = false;\n\n      this.editButton = false;\n      this.addButton = true;\n      this.selectedRowIndex = -1; // Reset the selected row index\n    }\n  }\n\n  onEditNeedDetails(row: any) {\n    this.editButton = true;\n    this.addButton = false;\n    this.selectedRowIndex = this.dataSource.data.indexOf(row);\n\n    this.bgtForm.patchValue({\n      id: row.id,\n      itemName: row.itemName,\n      estimatedPrice: row.estimatedPrice,\n      itemCode: row.itemCode,\n      itemDescription: row.itemDescription,\n      unitOfMeasure: row.unitOfMeasure,\n      itemQuantity: row.itemQuantity,\n      needByDate: row.needByDate,\n\n      // costCenterCode: row.costCenterCode,\n      // expenseCode: row.expenseCode,\n\n      // allowOverride: row.allowOverride,\n      // budgetFlag: row.budgetFlag,\n    });\n\n    this.enterManually = true;\n    this.patchItems();\n  }\n\n  onDeleteNeedDetails(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.dataSource.data = this.dataSource.data.slice();\n  }\n\n  clearForm() {\n    this.bgtForm.reset();\n    this.editButton = false;\n    this.addButton = true;\n    this.selectedRowIndex = -1; // Reset the selected row index\n\n    this.showItemsForm = false;\n  }\n\n  patchItems() {\n    this.mngForm.patchValue({\n      needItems: this.dataSource.data,\n    });\n  }\n\n  // **************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"filename\",\n    \"filetype\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  // file: trerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrtysdfxzdgjr634racxzvcnfgerewrsa,\n  // filename: currFilename,\n  // filetype: currFiletype},\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      filetype: [\"\", Validators.required],\n      filename: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n\n    this.mngForm.patchValue({\n      needAttachments: this.documentsForm.value.filedetails,\n    });\n  }\n\n  // deleteCall(index){\n  //   this.dataSource.splice(index, 1);\n  // }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currFilename: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currFilename = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          filename: this.currFilename,\n          filetype: this.currType,\n        });\n        console.log(\n          \"this.documentsForm.value.filedetails: \",\n          this.selectedFiles\n        );\n\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let filename = row.value.filename;\n    let filetype = row.value.filetype;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${filename}.${filetype}`;\n    link.click();\n  }\n\n  // ****************************************************************************************************************************\n  //Expense Look Up\n\n  expenseIsSelected = false;\n  selectedExpense: [] = [];\n  expenseArray: [] = [];\n  expenseGlCode = \"\";\n\n  expenseLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpense,\n    };\n\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        expenseCode: result.data[0].expenseCode,\n      });\n    });\n  }\n\n  selectedCostCenter: any[] = [];\n  costCenterLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single CostCenter\",\n      selected: this.selectedCostCenter,\n    };\n\n    const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        costcentercode: result.data[0].costCenterCode,\n      });\n    });\n  }\n\n  getAccountNumberByExpAndCostCenter() {\n    const params = new HttpParams()\n      .set(\"costCenterCode\", this.mngForm.value.costcentercode)\n      .set(\"expenseCode\", this.mngForm.value.expenseCode);\n\n    console.log(\"params:: \", params);\n\n    this.accountService\n      .getGLAccountByExpAndCostCenter(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"resres:: \", res);\n\n          if (res.entity) {\n            this.mngForm.patchValue({\n              accountNumber: res.entity.glaccount,\n            });\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  // **********************************************************************************************************************************************************\n  //Budget Check:\n\n  //**************************************************************************************************** */\n\n  // performBudgetCheck() {\n  //   console.log(\"this.dataSource.data: \", this.dataSource.data);\n\n  //   if (this.dataSource.data.length > 0) {\n  //     // Transform the data to match the API format\n  //     const transformedData = this.dataSource.data.map((item) => ({\n  //       allowOverride: item.allowOverride,\n  //       amount: item.estimatedPrice,\n  //       budgetFlag: item.budgetFlag,\n  //       costCenterCode: item.costCenterCode,\n  //       expenseCode: item.expenseCode,\n  //     }));\n\n  //     this.budgetService\n  //       .budgetCheck(transformedData)\n  //       .pipe(takeUntil(this.destroy$))\n  //       .subscribe({\n  //         next: (res) => {\n  //           if (res.entity) {\n  //             this.dataSource.data.forEach((item, index) => {\n  //               // Assuming res.entity has the same structure as the sample response\n  //               if (res.entity[index]) {\n  //                 item.allowOverride = res.entity[index].allowOverride;\n  //                 item.budgetFlag = res.entity[index].budgetFlag;\n  //               }\n  //             });\n  //             this.dataSource.data = this.dataSource.data.slice();\n\n  //             this.snackbar.showNotification(\"snackbar-success\", res.message);\n  //           } else {\n  //             this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //           }\n  //         },\n  //         error: (err) => {\n  //           this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //         },\n  //         complete: () => {\n  //           this.updateOverallBudgetStatus();\n  //         },\n  //       });\n  //   } else {\n  //     this.snackbar.showNotification(\n  //       \"snackbar-danger\",\n  //       \"Please enter the required data to perform the budget check.\"\n  //     );\n  //   }\n  // }\n\n  // budgetPassed: boolean = false;\n  // updateOverallBudgetStatus() {\n  //   let budgetPassed = false;\n\n  //   for (const item of this.dataSource.data) {\n  //     if (item.budgetFlag === \"N\" && item.allowOverride === \"N\") {\n  //       budgetPassed = false;\n  //       this.snackbar.showNotification(\n  //         \"snackbar-danger\",\n  //         \"Some records do not meet budget allocation!\"\n  //       );\n  //       break;\n  //     }\n\n  //     if (item.budgetFlag === \"Y\" && item.allowOverride === \"Y\") {\n  //       budgetPassed = true;\n  //     }\n  //     if (item.budgetFlag === \"Y\" && item.allowOverride === \"N\") {\n  //       budgetPassed = true;\n  //     }\n  //     if (item.budgetFlag === \"N\" && item.allowOverride === \"Y\") {\n  //       budgetPassed = true;\n  //     }\n  //   }\n\n  //   this.budgetPassed = budgetPassed;\n\n  //   if (budgetPassed) {\n  //     this.snackbar.showNotification(\n  //       \"snackbar-success\",\n  //       \"Budget allocations met!\"\n  //     );\n  //   }\n  // }\n\n  // ****************************************************************************************************************************************\n\n  catalogueArray: [] = [];\n\n  selectedItem: any[] = [];\n  catalogueLookup() {\n    if (this.mngForm.value.requisitionCategory === \"Stock\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"880px\";\n      dialogConfig.data = {\n        action: \"single item\",\n        selected: this.selectedItem,\n      };\n\n      const dialogRef = this.dialog.open(\n        CatalogueLookupComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"Result:\", result);\n        if (result && result.data && result.data.length > 0) {\n          const firstItem = result.data[0];\n          console.log(\"Name:\", firstItem);\n\n          this.bgtForm.patchValue({\n            itemCode: firstItem.itemCode,\n            itemName: firstItem.name,\n            unitOfMeasure: firstItem.unit,\n            itemQuantity: firstItem.quantity,\n            itemDescription: firstItem.description,\n\n            // expenseCode: firstItem.expenseCode\n          });\n        }\n      });\n    } else if (this.mngForm.value.requisitionCategory === \"FixedAsset\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"880px\";\n      dialogConfig.data = {\n        action: \"single item\",\n        selected: this.selectedItem,\n      };\n\n      const dialogRef = this.dialog.open(\n        AssetCatalogLookupComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"Result:\", result);\n        if (result && result.data && result.data.length > 0) {\n          const firstItem = result.data[0];\n          console.log(\"Name:\", firstItem);\n\n          this.bgtForm.patchValue({\n            itemCode: firstItem.itemCode,\n            itemName: firstItem.name,\n            unitOfMeasure: firstItem.unit,\n            itemQuantity: firstItem.quantity,\n            itemDescription: firstItem.description,\n\n            // expenseCode: firstItem.expenseCode\n          });\n        }\n      });\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Catalogue can only be used for Stock and Fixed Asset Items!\"\n      );\n    }\n  }\n\n  //********************************************************************************************************************************** */\n  posting: boolean = false;\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (\n      this.mngForm.value.needItems &&\n      this.mngForm.value.needItems.length > 0\n    ) {\n      if (this.pageFunction == \"Add\") {\n        this.needService\n          .addNeeds(this.mngForm.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  \"Need added successfully\"\n                );\n                this.router.navigate([\"/erp-procurement/needs/all-needs\"]);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.posting = false;\n            },\n          }),\n          Subscription;\n      } else if (this.pageFunction == \"Update\") {\n        this.needService\n          .updateNeeds(this.mngForm.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  \"Need updated successfully\"\n                );\n                this.router.navigate([\"/erp-procurement/needs/all-needs\"]);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.posting = false;\n            },\n          }),\n          Subscription;\n      }\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Requisition Items cannot be null!!\"\n      );\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-procurement/needs/all-needs\"]);\n  }\n\n  // **********************************************************************************************\n  // onValidate(){\n\n  //   // \"HOD Need Validation\",\n  //   // \"Finance Need Validation\",\n  //   // \"Procurement Need Validation\"\n\n  // }\n\n  hasAccess: boolean;\n\n  onValidate(userType) {\n    let privilege = \"\";\n\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"HOD Need Validation\";\n        break;\n\n      case \"PROCUREMENT\":\n        privilege = \"Procurement Need Validation\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\n      \"ProcurementModule\",\n      [privilege]\n    );\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"650px\";\n      dialogConfig.data = {\n        data: this.formData,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(ValidateNeedComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-procurement/needs/all-needs\"]);\n      });\n    }\n  }\n\n  // Rfqapplication: {\n  //   \"supplierCode\": \"\",\n  //   \"supplierName\": \"\",\n  //   \"rfqCode\": \"\",\n  //   \"rfqName\": \"\",\n\n  //   \"itemSubTotalAmount\": 0,\n  //   \"itemVatTotalAmount\": 0,\n  //   \"itemGrantTotal\": 0,\n\n  //   \"items\": [\n  //     {\n  //       \"itemName\": \"\",\n  //       \"unitPricePerItem\": 0,\n  //       \"unitOfMeasure\": \"\",\n  //       \"taxName\": \"\",\n  //       \"taxRate\": 0,\n  //       \"quantity\": 0,\n  //       \"description\": \"\"\n\n  //       \"subTotalAmount\": 0,\n  //       \"vatTotalAmount\": 0,\n  //       \"grantTotal\": 0,\n  //     },\n  //     {\n  //       \"itemName\": \"\",\n  //       \"unitPricePerItem\": 0,\n  //       \"unitOfMeasure\": \"\",\n  //       \"taxName\": \"\",\n  //       \"taxRate\": 0,\n  //       \"quantity\": 0,\n  //       \"description\": \"\"\n\n  //       \"subTotalAmount\": 0,\n  //       \"vatTotalAmount\": 0,\n  //       \"grantTotal\": 0,\n  //     },\n  //     {\n  //       \"itemName\": \"\",\n  //       \"unitPricePerItem\": 0,\n  //       \"unitOfMeasure\": \"\",\n  //       \"taxName\": \"\",\n  //       \"taxRate\": 0,\n  //       \"quantity\": 0,\n  //       \"description\": \"\"\n\n  //       \"subTotalAmount\": 0,\n  //       \"vatTotalAmount\": 0,\n  //       \"grantTotal\": 0,\n  //     }\n  //   ],\n  //   \"financialAttachments\": [\n  //     {\n  //       \"file\": \"\",\n  //       \"filetype\": \"\",\n  //       \"filename\": \"\"\n  //     }\n  //   ],\n  //   \"technicalAttachments\": [\n  //     {\n  //       \"file\": \"\",\n  //       \"filetype\": \"\",\n  //       \"filename\": \"\"\n  //     }\n  //   ],\n\n  // }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Requisitions'\" [items]=\"['Requisitions']\" [active_item]=\"'Manage Requisitions'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"mb-3\" *ngIf=\"!showForm\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"header\">\n              <div class=\"row\">\n                <h2>{{ pageFunction }} Requisition</h2>\n              </div>\n            </div>\n\n            <div class=\"row mx-2\" *ngIf=\"pageFunction !== 'Add'\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-6\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod\">\n                                    {{ formData.hodStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod-approved\">\n                                    {{ formData.hodApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2 remarks-container\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>HOD Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-6\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">\n                                  Procurement Approval\n                                </div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement\">\n                                    {{ formData.procurementStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">\n                                  Procurement Approved By\n                                </div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement-approved\">\n                                    {{ formData.procurementApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2 remarks-container\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Procurement Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.procurementRemarks }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n\n            <form class=\"mx-4\" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>Requisition Type</mat-label>\n\n                    <mat-select formControlName=\"needType\">\n                      <mat-option *ngFor=\"let requisitionType of requisitionTypes\" [value]=\"requisitionType.name\"\n                        >{{ requisitionType.name\n                        }}</mat-option>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"mngForm.get('needType').hasError('required')\">Type is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>RequisitionCategory</mat-label>\n\n                    <mat-select formControlName=\"requisitionCategory\" (selectionChange)=\"getSelectedPurchaseOrderCategory($event)\">\n                      <mat-option *ngFor=\"let requisitionCategory of requisitionCategories\"\n                        [value]=\"requisitionCategory.name\" >{{ requisitionCategory.name\n                        }}</mat-option>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"mngForm.get('requisitionCategory').hasError('required')\">Category is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>RequisitionTitle</mat-label>\n                    <input matInput formControlName=\"needTitle\" required />\n                    <mat-error *ngIf=\"mngForm.get('needTitle').hasError('required')\">Requisition Title is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>CostCenterCode</mat-label>\n                    <input matInput formControlName=\"costcentercode\" />\n                    <mat-icon matSuffix (click)=\"costCenterLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('costcentercode').hasError('required')\">CostCenterCode is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>ExpenseCode</mat-label>\n                    <input matInput formControlName=\"expenseCode\" />\n                    <mat-icon matSuffix (click)=\"expenseLookUp()\">search</mat-icon>\n                    <mat-error *ngIf=\"mngForm.get('expenseCode').hasError('required')\">ExpenseCode is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                    <mat-label>RequisitionDescription</mat-label>\n\n                    <textarea matInput formControlName=\"needDescription\" required></textarea>\n\n                    <mat-error *ngIf=\"\n                        mngForm.get('needDescription').hasError('required')\n                      \">Requisition Description is required</mat-error>\n                    <mat-error *ngIf=\"\n                      mngForm.get('needDescription').hasError('maxlength')\n                    \">Description must not exceed 300 characters.</mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n            </form>\n\n            <mat-tab-group>\n              <mat-tab>\n                <ng-template mat-tab-label>\n                  <mat-icon>person</mat-icon> Requisition Items\n                </ng-template>\n                <div class=\"mt-3\">\n                  <!-- Content for the first tab -->\n\n                  <div class=\"header\">\n                    <div class=\"row\">\n                      <h2>Requisition Items</h2>\n                    </div>\n                  </div>\n\n                  <!-- *ngIf=\"enterManually\" -->\n\n                  <form class=\"mx-4\" [formGroup]=\"bgtForm\" *ngIf=\"showItemsForm\">\n                    <div class=\"row\">\n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\" [hidden]=\"!isCatalogueItemsReadOnly\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>ItemName</mat-label>\n                            <input matInput formControlName=\"itemName\" readonly />\n                            <mat-icon matSuffix (click)=\"catalogueLookup()\">search</mat-icon>\n                            <mat-error *ngIf=\"bgtForm.get('itemName').hasError('required')\">ItemName is\n                              required</mat-error>\n                          </mat-form-field>\n                        </div>\n  \n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\" [hidden]=\"!isCatalogueItemsReadOnly\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>UnitOfMeasure</mat-label>\n                            <input matInput formControlName=\"unitOfMeasure\" readonly/>\n                            <mat-error *ngIf=\"\n                                bgtForm.get('unitOfMeasure').hasError('required')\n                              \">UnitOfMeasure is required</mat-error>\n                          </mat-form-field>\n                        </div>\n                                \n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\" [hidden]=\"isCatalogueItemsReadOnly\" >\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>ItemName</mat-label>\n                            <input matInput formControlName=\"itemName\"  />\n                            <mat-icon matSuffix (click)=\"catalogueLookup()\">search</mat-icon>\n                            <mat-error *ngIf=\"bgtForm.get('itemName').hasError('required')\">ItemName is\n                              required</mat-error>\n                          </mat-form-field>\n                        </div>\n  \n                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\" [hidden]=\"isCatalogueItemsReadOnly\">\n                          <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                            <mat-label>UnitOfMeasure</mat-label>\n                            <input matInput formControlName=\"unitOfMeasure\"/>\n                            <mat-error *ngIf=\"\n                                bgtForm.get('unitOfMeasure').hasError('required')\n                              \">UnitOfMeasure is required</mat-error>\n                          </mat-form-field>\n                        </div>\n\n                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label>ItemQuantity</mat-label>\n                          <input matInput formControlName=\"itemQuantity\" />\n                          <mat-error *ngIf=\"\n                              bgtForm.get('itemQuantity').hasError('required')\n                            \">ItemQuantity is required</mat-error>\n\n                          <mat-error *ngIf=\"\n                              bgtForm.get('itemQuantity').hasError('min')\n                            \">ItemQuantity cannot be 0</mat-error>\n\n                          <mat-error *ngIf=\"\n                            bgtForm.get('itemQuantity').hasError('pattern')\n                          \">ItemQuantity allows numbers only</mat-error>\n\n                        </mat-form-field>\n                      </div>\n\n                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                          <mat-label>Estimated Unit Price</mat-label>\n                          <input matInput formControlName=\"estimatedPrice\" mask=\"separator\" thousandSeparator=\",\" />\n\n                          <mat-error *ngIf=\"\n                              bgtForm.get('estimatedPrice').hasError('required') &&\n                              bgtForm.get('estimatedPrice').touched\n                            \">\n                            Please enter unit amount!\n                          </mat-error>\n                          <mat-error *ngIf=\"\n                              bgtForm.get('estimatedPrice').hasError('pattern') &&\n                              bgtForm.get('estimatedPrice').touched\n                            \">\n                            Please ensure amount does not exceed 2 decimal values!\n                          </mat-error>\n                          <mat-error *ngIf=\"\n                              bgtForm.get('estimatedPrice').hasError('max') &&\n                              bgtForm.get('estimatedPrice').touched\n                            \">\n                            Please ensure amount does not exceed 1 billion!\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n\n                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label>ItemDescription</mat-label>\n                          <input matInput formControlName=\"itemDescription\" />\n                          <mat-error *ngIf=\"\n                              bgtForm\n                                .get('itemDescription')\n                                .hasError('required')\n                            \">ItemDescription is required</mat-error>\n\n                          <mat-error *ngIf=\"\n                            bgtForm.get('itemDescription').hasError('maxlength')\n                          \">ItemDescription must not exceed 300 characters.</mat-error>\n\n                        </mat-form-field>\n                      </div>\n\n\n                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                          <mat-label>Need By Date</mat-label>\n                          <input matInput [matDatepicker]=\"picker\" formControlName=\"needByDate\" required />\n                          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                          <mat-datepicker #picker></mat-datepicker>\n                          <mat-error *ngIf=\"\n                              bgtForm.get('needByDate').hasError('required')\n                            \">\n                            Need by Date is required\n                          </mat-error>\n                          <mat-error *ngIf=\"\n                              bgtForm.get('needByDate').hasError('pastDate')\n                            \">\n                            Enter a Valid Need by Date\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n\n                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                        <div class=\"float-right\">\n                          <button *ngIf=\"addButton\" [disabled]=\"bgtForm.invalid\" (click)=\"addToArray()\"\n                            class=\"btn-space\" mat-raised-button color=\"primary\">\n                            + Add Need details\n                          </button>\n                          <button *ngIf=\"editButton\" [disabled]=\"bgtForm.invalid\" class=\"btn-space\"\n                            (click)=\"updateNeedDetails()\" mat-raised-button color=\"primary\">\n                            + Update Need details\n                          </button>\n                          <button type=\"button\" (click)=\"clearForm()\" mat-raised-button color=\"warn\">\n                            Clear\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n\n                  <div class=\"row mx-2\" *ngIf=\"!enterManually\">\n                    <div class=\"my-3\">\n                      <button class=\"download-button\" (click)=\"downloadTemplate()\">\n                        <i class=\"fa fa-download\"></i> Download Excel Template\n                      </button>\n                    </div>\n                    <!-- <div class=\"col-12\">\n                      <div style=\"\n                          display: flex;\n                          flex-wrap: wrap;\n                          margin-right: 10px;\n                          margin-bottom: 10px;\n                        \">\n                        <mat-chip-list aria-label=\"Fish selection\">\n                          <mat-chip color=\"accent\" selected *ngFor=\"let itemError of itemErrors; let i = index\">\n                            <span>{{ i + 1 }}. </span>\n                            {{ itemError.field }}: {{ itemError.message }}\n                            <mat-icon>error</mat-icon>\n                          </mat-chip>\n                        </mat-chip-list>\n                      </div>\n\n                      <table class=\"table\">\n                        <thead>\n                          <tr>\n                            <th>ItemName</th>\n                            <th>UnitOfMeasure</th>\n                            <th>ItemQuantity</th>\n                            <th>ItemDescription</th>\n                            <th>NeedByDate</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr *ngFor=\"let item of items\">\n                            <td>{{ item.itemName }}</td>\n                            <td>{{ item.unitOfMeasure }}</td>\n                            <td>{{ item.itemQuantity }}</td>\n                            <td>{{ item.itemDescription }}</td>\n                            <td>{{ item.needByDate }}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div> -->\n\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                      <div class=\"float-right\">\n                        <!-- <button (click)=\"addImportsToArray()\" class=\"btn-space\" mat-raised-button color=\"primary\"\n                          [disabled]=\"itemErrors.length>0\">\n                          + Add Need details\n                        </button> -->\n\n                        <button type=\"button\" (click)=\"clearImports()\" mat-raised-button color=\"warn\">\n                          Clear\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"mx-4 my-4\">\n                    <div class=\"materialTableHeader\">\n                      <div class=\"row\">\n                        <div class=\"col-8\">\n                          <ul class=\"header-buttons-left ms-0\">\n                            <li class=\"dropdown\">\n                              <h2>Requisition Records</h2>\n                            </li>\n                            <li class=\"dropdown m-l-20\">\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                              <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                class=\"browser-default search-field\" aria-label=\"Search box\" />\n                            </li>\n\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"manualItemsEntry()\">\n                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n\n                            <!-- <li>\n                              <div class=\"m-l-10\" matTooltip=\"IMPORT\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"importExcel()\">\n                                  <mat-icon class=\"col-white\">cloud_upload</mat-icon>\n                                </button>\n                                <input type=\"file\" accept=\".xlsx, .xls\" style=\"display: none\" #fileInput (change)=\"\n                                    handleFileInput($event.target.files)\n                                  \" />\n                              </div>\n                            </li> -->\n\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                <button mat-mini-fab color=\"primary\">\n                                  <mat-icon class=\"col-white\">refresh</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                        <div class=\"col-4\">\n                          <ul class=\"header-buttons\">\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                    exporter.exportTable('xlsx', {\n                                      fileName: 'Requisition-items-list',\n                                      sheet: 'sheet1'\n                                    })\n                                  \" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                      #exporter=\"matTableExporter\">\n                      <ng-container matColumnDef=\"id\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-2\">#\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"psl-3 tbl-col-width-per-2\"><span *ngIf=\"row.id\"> #</span>\n                        </mat-cell>\n                      </ng-container>\n\n\n                      <ng-container matColumnDef=\"itemCode\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">ItemCode\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.itemCode\"> {{ row.itemCode }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"itemName\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">ItemName\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.itemName\"> {{ row.itemName }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <!-- <ng-container matColumnDef=\"category\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">Category\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.category\"> {{ row.category }}</span>\n                        </mat-cell>\n                      </ng-container> -->\n\n                      <ng-container matColumnDef=\"itemQuantity\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-28\">ItemQuantity\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.itemQuantity\">\n                            {{ row.itemQuantity }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"unitOfMeasure\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-28\">UnitOfMeasure\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.unitOfMeasure\">\n                            {{ row.unitOfMeasure }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n\n                      <ng-container matColumnDef=\"estimatedPrice\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-28\">EstimatedPrice\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.estimatedPrice\">\n                            {{\n                            row.estimatedPrice | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}\n                          </span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"needByDate\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">NeedByDate\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.needByDate\">\n                            {{ row.needByDate | date : \"short\" }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"itemDescription\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-28\">ItemDescription\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.itemDescription\">\n                            {{ row.itemDescription }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"budgetFlag\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"column-nowrap psl-3 tbl-col-width-per-10\">BudgetCheck</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                          (click)=\"$event.stopPropagation()\">\n                          <ng-container [ngSwitch]=\"row.budgetFlag\">\n\n                            <button *ngSwitchCase=\"'N'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                              <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                              Fail\n                            </button>\n                            <button *ngSwitchCase=\"'Y'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                              <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                              Pass\n                            </button>\n                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                              <i class=\"fas fa-question-circle\"></i>&nbsp;\n                              {{ \"-\" }}\n                            </button>\n                          </ng-container>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"allowOverride\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"column-nowrap psl-3 tbl-col-width-per-10\">OverrideBgt</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                          (click)=\"$event.stopPropagation()\">\n                          <ng-container [ngSwitch]=\"row.allowOverride\">\n                            <button *ngSwitchCase=\"'Y'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                              <i class=\"fas fa-check-circle\"></i>&nbsp;\n                              Yes\n                            </button>\n                            <button *ngSwitchCase=\"'N'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                              <i class=\"fas fa-times-circle\"></i>&nbsp;\n                              No\n                            </button>\n\n                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                              <i class=\"fas fa-question-circle\"></i>&nbsp;\n                              {{ \"-\" }}\n                            </button>\n                          </ng-container>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row; let i = index\" class=\"pr-0\">\n                          <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                            (click)=\"onEditNeedDetails(row)\" class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                          </button>\n                          <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                            (click)=\"onDeleteNeedDetails(i)\" class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                          </button>\n                        </mat-cell>\n                      </ng-container>\n\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                      <mat-row *matRowDef=\"\n                          let row;\n                          let i = index;\n                          columns: displayedColumns\n                        \" (click)=\"onEditNeedDetails(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                      </mat-row>\n                    </mat-table>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                      </mat-progress-spinner>\n                    </div>\n                    <!-- <mat-paginator [pageSize]=\"100\" [pageSizeOptions]=\"[2, 6, 10, 20, 30, 40, 50, 100]\"\n                      aria-label=\"Select page of users\"></mat-paginator> -->\n                  </div>\n                </div>\n              </mat-tab>\n\n              <mat-tab>\n                <ng-template mat-tab-label>\n                  <mat-icon>attach_file</mat-icon> Upload Requisition\n                  Attachments\n                </ng-template>\n                <div class=\"mt-3\">\n                  <!-- Content for the second tab -->\n                  <form [formGroup]=\"documentsForm\">\n                    <!-- <form [formGroup]=\"form\"> -->\n\n                    <div style=\"margin: 20px\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                          <div class=\"row\">\n                            <div class=\"col-8\">\n                              <ul class=\"header-buttons-left ms-0\">\n                                <li class=\"dropdown\">\n                                  <h2>Upload Documents</h2>\n                                </li>\n                                <li class=\"dropdown m-l-20\">\n                                  <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                  <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                    class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                </li>\n\n                                <li>\n                                  <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                    <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                      <mat-icon class=\"col-white\">add</mat-icon>\n                                    </button>\n                                  </div>\n                                </li>\n                              </ul>\n                            </div>\n                            <div class=\"col-4\"></div>\n                          </div>\n                        </div>\n\n                        <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                        <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                          formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n\n                          <ng-container matColumnDef=\"id\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                              {{ index + 1 }}\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"filename\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filename</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Filename</mat-label>\n                                <input matInput type=\"text\" formControlName=\"filename\" placeholder=\"Filename\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"filetype\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filetype</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Filetype</mat-label>\n                                <input matInput type=\"text\" formControlName=\"filetype\" placeholder=\"Filetype\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"selectFile\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                              File</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                              <input #file type=\"file\" [disabled]=\"isLoading | async\"\n                                (change)=\"onSelectFile(file.files, row, index)\" [multiple]=\"'multiple'\" />\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"download\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Download</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"action\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Action</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n                          <!-- Row definitions -->\n                          <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                          <mat-row *matRowDef=\"\n                              let row;\n                              let i = index;\n                              columns: displayColumns\n                            \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                          <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                            input.value\n                            }}\"</mat-cell>\n                        </mat-table>\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                          <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                          </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                          aria-label=\"Select page of users\"></mat-paginator>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </mat-tab>\n            </mat-tab-group>\n\n            <div class=\"row m-t-25\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                <div class=\"example-button-row\" align=\"end\">\n                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                    <mat-icon>cancel</mat-icon>\n                    Cancel\n                  </button>\n\n                  <ng-container *ngIf=\"!hideApprovals\">\n                    <button class=\"btn-space\" [disabled]=\"formData.approvedByHOD\" (click)=\"onValidate('HOD')\"\n                      mat-raised-button color=\"primary\">\n                      <mat-icon>done_outline</mat-icon>\n                      HOD Approval\n                    </button>\n\n                    <button class=\"btn-space\" [disabled]=\"\n                        !formData.approvedByHOD ||\n                        formData.approvedByProcurement\n                      \" (click)=\"onValidate('PROCUREMENT')\" mat-raised-button color=\"primary\">\n                      <mat-icon>shopping_cart</mat-icon>\n                      Procurement Approval\n                    </button>\n                  </ng-container>\n\n                  <!-- <button class=\"btn-space\" *ngIf=\"pageFunction === 'Add'\" [disabled]=\"!mngForm.valid || dataSource.data.length === 0\"\n                    [hidden]=\"hideSubmit\" mat-raised-button color=\"primary\" (click)=\"performBudgetCheck()\">\n                    <mat-icon>compare_arrows</mat-icon>\n                    Compare With Budget\n                  </button> -->\n\n                  <!-- || !budgetPassed -->\n                  <button class=\"btn-space\" [class.auth-spinner]=\"posting\"\n                    [disabled]=\"!mngForm.valid || dataSource.data.length === 0\" [hidden]=\"hideSubmit\"\n                    (click)=\"onSubmit()\" mat-raised-button color=\"primary\">\n                    <mat-icon>file_download</mat-icon>\n                    {{ pageFunction }} Requisition\n                  </button>\n\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}