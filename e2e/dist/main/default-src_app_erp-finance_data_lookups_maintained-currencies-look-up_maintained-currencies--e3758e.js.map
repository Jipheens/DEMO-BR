{"version":3,"file":"default-src_app_erp-finance_data_lookups_maintained-currencies-look-up_maintained-currencies--e3758e.js","mappings":"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","sources":["./src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component.ts","./src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component.html","./src/app/erp-finance/data/services/currency.service.ts","./src/app/erp-finance/data/types/countries.ts"],"sourcesContent":["import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { CurrencyService } from \"src/app/erp-finance/data/services/currency.service\";\nimport { CurrencyManagementService } from \"src/app/erp-procurement/data/services/currency-management.service\";\nimport { ManageRfqsComponent } from \"src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-maintained-currencies-look-up\",\n  templateUrl: \"./maintained-currencies-look-up.component.html\",\n  styleUrls: [\"./maintained-currencies-look-up.component.sass\"],\n})\nexport class MaintainedCurrenciesLookUpComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"currency\",\n    \"country\",\n    \"currencyCode\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private CurrencyManService: CurrencyService\n  ) {}\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  getData() {\n    let params = {\n      status: \"APPROVED\",\n    };\n\n    this.CurrencyManService.getCurrenciesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"Status:\", res);\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select currency</div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let index = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"><span>{{ index+1 }}</span></mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"country\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    country\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n                    {{ row.country }}\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"currency\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    currency\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.currency }}\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"currencyCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    currencyCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.currencyCode }}\n                  </mat-cell>\n                </ng-container>\n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\nimport { countryCurrencies } from \"../types/countries\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CurrencyService {\n  constructor(private http: HttpClient) {}\n\n  getCurrencies(): Observable<any> {\n    const currencyManagementUrl = `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/all`;\n    return this.http.get<any[]>(currencyManagementUrl);\n  }\n  getCurrenciesByStatus(params): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/fetchbyStatus`;\n    return this.http.get<any[]>(GLAccountManagementUrl, { params });\n  }\n\n  // getCountry(): Observable<any> {\n  //   const currencyManagementUrl = `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/countries\n  //   `;\n  //   return this.http.get<any[]>(currencyManagementUrl);\n  // }\n\n  getCurrenciesById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/find/by/id`,\n      { params }\n    );\n  }\n\n  addCurrencies(data: any): Observable<any> {\n    const currencyManagementUrl = `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/create`;\n    return this.http.post<any>(currencyManagementUrl, data);\n  }\n\n  updateCurrencies(currencyDetails: any): Observable<any> {\n    const updateCurrencyUrl = `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/update`;\n    return this.http.put<any>(updateCurrencyUrl, currencyDetails);\n  }\n\n  deleteCurrencyTemporarily(params: any): Observable<any> {\n    const currencyManagementUrl = `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/delete`;\n    return this.http.delete<any>(currencyManagementUrl, { params });\n  }\n\n  validateCurrencies(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n\n  //upload batch cost centres\n  uploadBatchCurrrency(data: any): Observable<any> {\n    const currencyUrl = `${environment.baseUrlFinance}/api/v1/CurrencyMaintenance/create/bulk`;\n    return this.http.post<any>(currencyUrl, data);\n  }\n\n  // ********************************************************************************************************************\n\n  private countries = countryCurrencies;\n\n  getCountry(): Observable<any[]> {\n    return of(this.countries);\n  }\n}\n","export const countryCurrencies = [\n    { country: \"Afghanistan\", currency: \"Afghan Afghani\", currencyCode: \"AFN\" },\n    { country: \"Albania\", currency: \"Albanian Lek\", currencyCode: \"ALL\" },\n    { country: \"Algeria\", currency: \"Algerian Dinar\", currencyCode: \"DZD\" },\n    { country: \"Andorra\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Angola\", currency: \"Angolan Kwanza\", currencyCode: \"AOA\" },\n    {\n        country: \"Antigua and Barbuda\",\n        currency: \"East Caribbean Dollar\",\n        currencyCode: \"XCD\",\n    },\n    { country: \"Argentina\", currency: \"Argentine Peso\", currencyCode: \"ARS\" },\n    { country: \"Armenia\", currency: \"Armenian Dram\", currencyCode: \"AMD\" },\n    { country: \"Australia\", currency: \"Australian Dollar\", currencyCode: \"AUD\" },\n    { country: \"Austria\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Azerbaijan\", currency: \"Azerbaijani Manat\", currencyCode: \"AZN\" },\n    { country: \"Bahamas\", currency: \"Bahamian Dollar\", currencyCode: \"BSD\" },\n    { country: \"Bahrain\", currency: \"Bahraini Dinar\", currencyCode: \"BHD\" },\n    { country: \"Bangladesh\", currency: \"Bangladeshi Taka\", currencyCode: \"BDT\" },\n    { country: \"Barbados\", currency: \"Barbadian Dollar\", currencyCode: \"BBD\" },\n    { country: \"Belarus\", currency: \"Belarusian Ruble\", currencyCode: \"BYN\" },\n    { country: \"Belgium\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Belize\", currency: \"Belizean Dollar\", currencyCode: \"BZD\" },\n    { country: \"Benin\", currency: \"West African CFA Franc\", currencyCode: \"XOF\" },\n    { country: \"Bhutan\", currency: \"Bhutanese Ngultrum\", currencyCode: \"BTN\" },\n    { country: \"Bolivia\", currency: \"Bolivian Boliviano\", currencyCode: \"BOB\" },\n    {\n        country: \"Bosnia and Herzegovina\",\n        currency: \"Bosnian and Herzegovinian Convertible Mark\",\n        currencyCode: \"BAM\",\n    },\n    { country: \"Botswana\", currency: \"Botswana Pula\", currencyCode: \"BWP\" },\n    { country: \"Brazil\", currency: \"Brazilian Real\", currencyCode: \"BRL\" },\n    { country: \"Brunei\", currency: \"Brunei Dollar\", currencyCode: \"BND\" },\n    { country: \"Bulgaria\", currency: \"Bulgarian Lev\", currencyCode: \"BGN\" },\n    {\n        country: \"Burkina Faso\",\n        currency: \"West African CFA Franc\",\n        currencyCode: \"XOF\",\n    },\n    { country: \"Burundi\", currency: \"Burundian Franc\", currencyCode: \"BIF\" },\n    {\n        country: \"Cabo Verde\",\n        currency: \"Cape Verdean Escudo\",\n        currencyCode: \"CVE\",\n    },\n    { country: \"Cambodia\", currency: \"Cambodian Riel\", currencyCode: \"KHR\" },\n    {\n        country: \"Cameroon\",\n        currency: \"Central African CFA Franc\",\n        currencyCode: \"XAF\",\n    },\n    { country: \"Canada\", currency: \"Canadian Dollar\", currencyCode: \"CAD\" },\n    {\n        country: \"Cape Verde\",\n        currency: \"Cape Verdean Escudo\",\n        currencyCode: \"CVE\",\n    },\n    {\n        country: \"Central African Republic\",\n        currency: \"Central African CFA Franc\",\n        currencyCode: \"XAF\",\n    },\n    {\n        country: \"Chad\",\n        currency: \"Central African CFA Franc\",\n        currencyCode: \"XAF\",\n    },\n    { country: \"Chile\", currency: \"Chilean Peso\", currencyCode: \"CLP\" },\n    { country: \"China\", currency: \"Chinese Yuan Renminbi\", currencyCode: \"CNY\" },\n    { country: \"Colombia\", currency: \"Colombian Peso\", currencyCode: \"COP\" },\n    { country: \"Comoros\", currency: \"Comorian Franc\", currencyCode: \"KMF\" },\n    {\n        country: \"Congo, Democratic Republic of the\",\n        currency: \"Congolese Franc\",\n        currencyCode: \"CDF\",\n    },\n    {\n        country: \"Congo, Republic of the\",\n        currency: \"Central African CFA Franc\",\n        currencyCode: \"XAF\",\n    },\n    { country: \"Costa Rica\", currency: \"Costa Rican Colon\", currencyCode: \"CRC\" },\n    { country: \"Croatia\", currency: \"Croatian Kuna\", currencyCode: \"HRK\" },\n    { country: \"Cuba\", currency: \"Cuban Peso\", currencyCode: \"CUP\" },\n    { country: \"Cyprus\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Czech Republic\", currency: \"Czech Koruna\", currencyCode: \"CZK\" },\n    { country: \"Denmark\", currency: \"Danish Krone\", currencyCode: \"DKK\" },\n    { country: \"Djibouti\", currency: \"Djiboutian Franc\", currencyCode: \"DJF\" },\n    {\n        country: \"Dominica\",\n        currency: \"East Caribbean Dollar\",\n        currencyCode: \"XCD\",\n    },\n    {\n        country: \"Dominican Republic\",\n        currency: \"Dominican Peso\",\n        currencyCode: \"DOP\",\n    },\n    {\n        country: \"East Timor\",\n        currency: \"United States Dollar\",\n        currencyCode: \"USD\",\n    },\n    { country: \"Ecuador\", currency: \"United States Dollar\", currencyCode: \"USD\" },\n    { country: \"Egypt\", currency: \"Egyptian Pound\", currencyCode: \"EGP\" },\n    {\n        country: \"El Salvador\",\n        currency: \"United States Dollar\",\n        currencyCode: \"USD\",\n    },\n    {\n        country: \"Equatorial Guinea\",\n        currency: \"Central African CFA Franc\",\n        currencyCode: \"XAF\",\n    },\n    { country: \"Eritrea\", currency: \"Eritrean Nakfa\", currencyCode: \"ERN\" },\n    { country: \"Estonia\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Eswatini\", currency: \"Swazi Lilangeni\", currencyCode: \"SZL\" },\n    { country: \"Ethiopia\", currency: \"Ethiopian Birr\", currencyCode: \"ETB\" },\n    { country: \"Fiji\", currency: \"Fijian Dollar\", currencyCode: \"FJD\" },\n    { country: \"Finland\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"France\", currency: \"Euro\", currencyCode: \"EUR\" },\n    {\n        country: \"Gabon\",\n        currency: \"Central African CFA Franc\",\n        currencyCode: \"XAF\",\n    },\n    { country: \"Gambia\", currency: \"Gambian Dalasi\", currencyCode: \"GMD\" },\n    { country: \"Georgia\", currency: \"Georgian Lari\", currencyCode: \"GEL\" },\n    { country: \"Germany\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Ghana\", currency: \"Ghanaian Cedi\", currencyCode: \"GHS\" },\n    { country: \"Greece\", currency: \"Euro\", currencyCode: \"EUR\" },\n    {\n        country: \"Grenada\",\n        currency: \"East Caribbean Dollar\",\n        currencyCode: \"XCD\",\n    },\n    { country: \"Guatemala\", currency: \"Guatemalan Quetzal\", currencyCode: \"GTQ\" },\n    { country: \"Guinea\", currency: \"Guinean Franc\", currencyCode: \"GNF\" },\n    {\n        country: \"Guinea-Bissau\",\n        currency: \"West African CFA Franc\",\n        currencyCode: \"XOF\",\n    },\n    { country: \"Guyana\", currency: \"Guyanese Dollar\", currencyCode: \"GYD\" },\n    { country: \"Haiti\", currency: \"Haitian Gourde\", currencyCode: \"HTG\" },\n    { country: \"Honduras\", currency: \"Honduran Lempira\", currencyCode: \"HNL\" },\n    { country: \"Hungary\", currency: \"Hungarian Forint\", currencyCode: \"HUF\" },\n    { country: \"Iceland\", currency: \"Icelandic Krona\", currencyCode: \"ISK\" },\n    { country: \"India\", currency: \"Indian Rupee\", currencyCode: \"INR\" },\n    { country: \"Indonesia\", currency: \"Indonesian Rupiah\", currencyCode: \"IDR\" },\n    { country: \"Iran\", currency: \"Iranian Rial\", currencyCode: \"IRR\" },\n    { country: \"Iraq\", currency: \"Iraqi Dinar\", currencyCode: \"IQD\" },\n    { country: \"Ireland\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Israel\", currency: \"Israeli New Shekel\", currencyCode: \"ILS\" },\n    { country: \"Italy\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Jamaica\", currency: \"Jamaican Dollar\", currencyCode: \"JMD\" },\n    { country: \"Japan\", currency: \"Japanese Yen\", currencyCode: \"JPY\" },\n    { country: \"Jordan\", currency: \"Jordanian Dinar\", currencyCode: \"JOD\" },\n    { country: \"Kazakhstan\", currency: \"Kazakhstani Tenge\", currencyCode: \"KZT\" },\n    { country: \"Kenya\", currency: \"Kenyan Shilling\", currencyCode: \"KES\" },\n    { country: \"Kiribati\", currency: \"Australian Dollar\", currencyCode: \"AUD\" },\n    { country: \"Kuwait\", currency: \"Kuwaiti Dinar\", currencyCode: \"KWD\" },\n    { country: \"Kyrgyzstan\", currency: \"Kyrgyzstani Som\", currencyCode: \"KGS\" },\n    { country: \"Laos\", currency: \"Lao Kip\", currencyCode: \"LAK\" },\n    { country: \"Latvia\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Lebanon\", currency: \"Lebanese Pound\", currencyCode: \"LBP\" },\n    { country: \"Lesotho\", currency: \"Lesotho Loti\", currencyCode: \"LSL\" },\n    { country: \"Liberia\", currency: \"Liberian Dollar\", currencyCode: \"LRD\" },\n    { country: \"Libya\", currency: \"Libyan Dinar\", currencyCode: \"LYD\" },\n    { country: \"Liechtenstein\", currency: \"Swiss Franc\", currencyCode: \"CHF\" },\n    { country: \"Lithuania\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Luxembourg\", currency: \"Euro\", currencyCode: \"EUR\" },\n    {\n        country: \"Macedonia (North Macedonia)\",\n        currency: \"Macedonian Denar\",\n        currencyCode: \"MKD\",\n    },\n    { country: \"Madagascar\", currency: \"Malagasy Ariary\", currencyCode: \"MGA\" },\n    { country: \"Malawi\", currency: \"Malawian Kwacha\", currencyCode: \"MWK\" },\n    { country: \"Malaysia\", currency: \"Malaysian Ringgit\", currencyCode: \"MYR\" },\n    { country: \"Maldives\", currency: \"Maldivian Rufiyaa\", currencyCode: \"MVR\" },\n    { country: \"Mali\", currency: \"West African CFA Franc\", currencyCode: \"XOF\" },\n    { country: \"Malta\", currency: \"Euro\", currencyCode: \"EUR\" },\n    {\n        country: \"Marshall Islands\",\n        currency: \"United States Dollar\",\n        currencyCode: \"USD\",\n    },\n    {\n        country: \"Mauritania\",\n        currency: \"Mauritanian Ouguiya\",\n        currencyCode: \"MRU\",\n    },\n    { country: \"Mauritius\", currency: \"Mauritian Rupee\", currencyCode: \"MUR\" },\n    { country: \"Mexico\", currency: \"Mexican Peso\", currencyCode: \"MXN\" },\n    {\n        country: \"Micronesia\",\n        currency: \"United States Dollar\",\n        currencyCode: \"USD\",\n    },\n    { country: \"Moldova\", currency: \"Moldovan Leu\", currencyCode: \"MDL\" },\n    { country: \"Monaco\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Mongolia\", currency: \"Mongolian Tugrik\", currencyCode: \"MNT\" },\n    { country: \"Montenegro\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Morocco\", currency: \"Moroccan Dirham\", currencyCode: \"MAD\" },\n    {\n        country: \"Mozambique\",\n        currency: \"Mozambican Metical\",\n        currencyCode: \"MZN\",\n    },\n    { country: \"Myanmar (Burma)\", currency: \"Burmese Kyat\", currencyCode: \"MMK\" },\n    { country: \"Namibia\", currency: \"Namibian Dollar\", currencyCode: \"NAD\" },\n    { country: \"Nauru\", currency: \"Australian Dollar\", currencyCode: \"AUD\" },\n    { country: \"Nepal\", currency: \"Nepalese Rupee\", currencyCode: \"NPR\" },\n    { country: \"Netherlands\", currency: \"Euro\", currencyCode: \"EUR\" },\n    {\n        country: \"New Zealand\",\n        currency: \"New Zealand Dollar\",\n        currencyCode: \"NZD\",\n    },\n    { country: \"Nicaragua\", currency: \"Nicaraguan Cordoba\", currencyCode: \"NIO\" },\n    { country: \"Niger\", currency: \"West African CFA Franc\", currencyCode: \"XOF\" },\n    { country: \"Nigeria\", currency: \"Nigerian Naira\", currencyCode: \"NGN\" },\n    { country: \"North Korea\", currency: \"North Korean Won\", currencyCode: \"KPW\" },\n    { country: \"Norway\", currency: \"Norwegian Krone\", currencyCode: \"NOK\" },\n    { country: \"Oman\", currency: \"Omani Rial\", currencyCode: \"OMR\" },\n    { country: \"Pakistan\", currency: \"Pakistani Rupee\", currencyCode: \"PKR\" },\n    { country: \"Palau\", currency: \"United States Dollar\", currencyCode: \"USD\" },\n    { country: \"Panama\", currency: \"United States Dollar\", currencyCode: \"USD\" },\n    {\n        country: \"Papua New Guinea\",\n        currency: \"Papua New Guinean Kina\",\n        currencyCode: \"PGK\",\n    },\n    { country: \"Paraguay\", currency: \"Paraguayan Guarani\", currencyCode: \"PYG\" },\n    { country: \"Peru\", currency: \"Peruvian Nuevo Sol\", currencyCode: \"PEN\" },\n    { country: \"Philippines\", currency: \"Philippine Peso\", currencyCode: \"PHP\" },\n    { country: \"Poland\", currency: \"Polish Zloty\", currencyCode: \"PLN\" },\n    { country: \"Portugal\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Qatar\", currency: \"Qatari Rial\", currencyCode: \"QAR\" },\n    { country: \"Romania\", currency: \"Romanian Leu\", currencyCode: \"RON\" },\n    { country: \"Russia\", currency: \"Russian Ruble\", currencyCode: \"RUB\" },\n    { country: \"Rwanda\", currency: \"Rwandan Franc\", currencyCode: \"RWF\" },\n    {\n        country: \"Saint Kitts and Nevis\",\n        currency: \"East Caribbean Dollar\",\n        currencyCode: \"XCD\",\n    },\n    {\n        country: \"Saint Lucia\",\n        currency: \"East Caribbean Dollar\",\n        currencyCode: \"XCD\",\n    },\n    {\n        country: \"Saint Vincent and the Grenadines\",\n        currency: \"East Caribbean Dollar\",\n        currencyCode: \"XCD\",\n    },\n    { country: \"Samoa\", currency: \"Samoan Tala\", currencyCode: \"WST\" },\n    { country: \"San Marino\", currency: \"Euro\", currencyCode: \"EUR\" },\n    {\n        country: \"Sao Tome and Principe\",\n        currency: \"Sao Tome and Principe Dobra\",\n        currencyCode: \"STN\",\n    },\n    { country: \"Saudi Arabia\", currency: \"Saudi Riyal\", currencyCode: \"SAR\" },\n    {\n        country: \"Senegal\",\n        currency: \"West African CFA Franc\",\n        currencyCode: \"XOF\",\n    },\n    { country: \"Serbia\", currency: \"Serbian Dinar\", currencyCode: \"RSD\" },\n    { country: \"Seychelles\", currency: \"Seychellois Rupee\", currencyCode: \"SCR\" },\n    {\n        country: \"Sierra Leone\",\n        currency: \"Sierra Leonean Leone\",\n        currencyCode: \"SLL\",\n    },\n    { country: \"Singapore\", currency: \"Singapore Dollar\", currencyCode: \"SGD\" },\n    { country: \"Slovakia\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Slovenia\", currency: \"Euro\", currencyCode: \"EUR\" },\n    {\n        country: \"Solomon Islands\",\n        currency: \"Solomon Islands Dollar\",\n        currencyCode: \"SBD\",\n    },\n    { country: \"Somalia\", currency: \"Somali Shilling\", currencyCode: \"SOS\" },\n    {\n        country: \"South Africa\",\n        currency: \"South African Rand\",\n        currencyCode: \"ZAR\",\n    },\n    { country: \"South Korea\", currency: \"South Korean Won\", currencyCode: \"KRW\" },\n    {\n        country: \"South Sudan\",\n        currency: \"South Sudanese Pound\",\n        currencyCode: \"SSP\",\n    },\n    { country: \"Spain\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Sri Lanka\", currency: \"Sri Lankan Rupee\", currencyCode: \"LKR\" },\n    { country: \"Sudan\", currency: \"Sudanese Pound\", currencyCode: \"SDG\" },\n    { country: \"Suriname\", currency: \"Surinamese Dollar\", currencyCode: \"SRD\" },\n    { country: \"Sweden\", currency: \"Swedish Krona\", currencyCode: \"SEK\" },\n    { country: \"Switzerland\", currency: \"Swiss Franc\", currencyCode: \"CHF\" },\n\n    { country: \"Syria\", currency: \"Syrian Pound\", currencyCode: \"SYP\" },\n    {\n        country: \"Tajikistan\",\n        currency: \"Tajikistani Somoni\",\n        currencyCode: \"TJS\",\n    },\n    { country: \"Tanzania\", currency: \"Tanzanian Shilling\", currencyCode: \"TZS\" },\n    { country: \"Thailand\", currency: \"Thai Baht\", currencyCode: \"THB\" },\n    {\n        country: \"Timor-Leste\",\n        currency: \"United States Dollar\",\n        currencyCode: \"USD\",\n    },\n    { country: \"Togo\", currency: \"West African CFA Franc\", currencyCode: \"XOF\" },\n    { country: \"Tonga\", currency: \"Tongan Pa'anga\", currencyCode: \"TOP\" },\n    {\n        country: \"Trinidad and Tobago\",\n        currency: \"Trinidad and Tobago Dollar\",\n        currencyCode: \"TTD\",\n    },\n    { country: \"Tunisia\", currency: \"Tunisian Dinar\", currencyCode: \"TND\" },\n    { country: \"Turkey\", currency: \"Turkish Lira\", currencyCode: \"TRY\" },\n    {\n        country: \"Turkmenistan\",\n        currency: \"Turkmenistan Manat\",\n        currencyCode: \"TMT\",\n    },\n    { country: \"Tuvalu\", currency: \"Australian Dollar\", currencyCode: \"AUD\" },\n    { country: \"Uganda\", currency: \"Ugandan Shilling\", currencyCode: \"UGX\" },\n    { country: \"Ukraine\", currency: \"Ukrainian Hryvnia\", currencyCode: \"UAH\" },\n    {\n        country: \"United Arab Emirates\",\n        currency: \"United Arab Emirates Dirham\",\n        currencyCode: \"AED\",\n    },\n    {\n        country: \"United Kingdom\",\n        currency: \"British Pound Sterling\",\n        currencyCode: \"GBP\",\n    },\n    {\n        country: \"United States\",\n        currency: \"United States Dollar\",\n        currencyCode: \"USD\",\n    },\n    { country: \"Uruguay\", currency: \"Uruguayan Peso\", currencyCode: \"UYU\" },\n    { country: \"Uzbekistan\", currency: \"Uzbekistani Som\", currencyCode: \"UZS\" },\n    { country: \"Vanuatu\", currency: \"Vanuatu Vatu\", currencyCode: \"VUV\" },\n\n    { country: \"Vatican City\", currency: \"Euro\", currencyCode: \"EUR\" },\n    { country: \"Venezuela\", currency: \"Venezuelan Bolivar\", currencyCode: \"VES\" },\n    { country: \"Vietnam\", currency: \"Vietnamese Dong\", currencyCode: \"VND\" },\n    { country: \"Yemen\", currency: \"Yemeni Rial\", currencyCode: \"YER\" },\n    { country: \"Zambia\", currency: \"Zambian Kwacha\", currencyCode: \"ZMW\" },\n    { country: \"Zimbabwe\", currency: \"Zimbabwean Dollar\", currencyCode: \"ZWL\" },\n];\n"],"names":[],"sourceRoot":"webpack:///"}