{"version":3,"file":"default-src_app_erp-inventory_modules_inventory-management_pages_Inventory-management_module_ts.js","mappings":"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","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-inventory/data/services/direct-main-store.service.ts","./src/app/erp-inventory/modules/inventory-management/pages/Inventory-management-routing.module.ts","./src/app/erp-inventory/modules/inventory-management/pages/Inventory-management.module.ts","./src/app/erp-inventory/modules/inventory-management/pages/Stock-Management/Pages/mainstore-items/all-stock/all-stock.component.ts","./src/app/erp-inventory/modules/inventory-management/pages/Stock-Management/Pages/mainstore-items/all-stock/all-stock.component.html","./src/app/erp-inventory/modules/inventory-management/pages/Stock-Management/Pages/mainstore-items/manage-stock/manage-stock.component.ts","./src/app/erp-inventory/modules/inventory-management/pages/Stock-Management/Pages/mainstore-items/manage-stock/manage-stock.component.html","./src/app/erp-inventory/modules/inventory-management/pages/place-requisitions/direct-main-store-requisition/direct-main-store-requisition.component.ts","./src/app/erp-inventory/modules/inventory-management/pages/place-requisitions/direct-main-store-requisition/direct-main-store-requisition.component.html","./src/app/erp-inventory/modules/inventory-management/pages/view-requisitions/view-direct-mainstore-requisitions/view-direct-mainstore-requisitions.component.ts","./src/app/erp-inventory/modules/inventory-management/pages/view-requisitions/view-direct-mainstore-requisitions/view-direct-mainstore-requisitions.component.html","./src/app/erp-inventory/modules/inventory-management/pages/view-requisitions/view-req-items-dialog/view-req-items-dialog.component.ts","./src/app/erp-inventory/modules/inventory-management/pages/view-requisitions/view-req-items-dialog/view-req-items-dialog.component.html","./src/app/erp-procurement/data/services/requisition.service.ts","./src/app/erp-procurement/data/services/rfps.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectMainStoreService {\n\n  constructor(private http: HttpClient) { }\n\n  getInternalRequisitions(): Observable<any> {\n    const InternalRequisitionManagementUrl = `${environment.baseUrlProcurement}/api/v1/internal/requisitions/all`;\n    return this.http.get<any[]>(InternalRequisitionManagementUrl);\n  }\n  getInternalRequisitionsByStatus(params): Observable<any> {\n    const InternalRequisitionManagementUrl = `${environment.baseUrlProcurement}/api/v1/internal/requisitions/fetchbyStatus`;\n    return this.http.get<any[]>(InternalRequisitionManagementUrl, { params });\n  }\n\n  getInternalRequisitionsByStatusAndPfNo(params): Observable<any> {\n    const InternalRequisitionManagementUrl = `${environment.baseUrlProcurement}/api/v1/internal/requisitions/find/by/emppfno`;\n    return this.http.get<any[]>(InternalRequisitionManagementUrl, { params });\n  }\n\n\n\n\n  getInternalRequisitionsById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlProcurement}/api/v1/internal/requisitions/find/by/id`, {params}\n    );\n  }\n\n  addInternalRequisition(data: any): Observable<any> {\n    const InternalRequisitionManagementUrl = `${environment.baseUrlProcurement}/api/v1/internal/requisitions/create`;\n    return this.http.post<any>(InternalRequisitionManagementUrl, data);\n  }\n\n  addInternalRequisitions(data: any): Observable<any> {\n    const InternalRequisitionManagementUrl = `${environment.baseUrlProcurement}/api/v1/internal/requisitions/create/bulk`;\n    return this.http.post<any>(InternalRequisitionManagementUrl, data);\n  }\n\n  updateInternalRequisitions(InternalRequisitionDetails: any): Observable<any> {\n    const updateInternalRequisitionUrl = `${environment.baseUrlProcurement}/api/v1/internal/requisitions/update`;\n    return this.http.put<any>(updateInternalRequisitionUrl, InternalRequisitionDetails);\n  }\n\n  deleteInternalRequisitionTemporarily(params: any): Observable<any> {\n    const InternalRequisitionManagementUrl = `${environment.baseUrlProcurement}/api/v1/internal/requisitions/delete`;\n    return this.http.delete<any>(InternalRequisitionManagementUrl, {params});\n  }\n\n  validateInternalRequisitions(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlProcurement}/api/v1/internal/requisitions/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ManageStockComponent } from './Stock-Management/Pages/mainstore-items/manage-stock/manage-stock.component';\nimport { AllStockComponent } from './Stock-Management/Pages/mainstore-items/all-stock/all-stock.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\n\nimport { DirectMainStoreRequisitionComponent } from './place-requisitions/direct-main-store-requisition/direct-main-store-requisition.component';\nimport { ViewDirectMainstoreRequisitionsComponent } from './view-requisitions/view-direct-mainstore-requisitions/view-direct-mainstore-requisitions.component';\n\n\nconst routes: Routes =\n  [\n    {\n      path: \"all-stock\",\n      component: AllStockComponent,\n      canActivate: [RoutePrivilegeGuard],\n      data: { clientName: 'InventoryModule', requiredPrivilege: [\"All Stock\"] },\n    },\n    {\n      path: \"manage-stock\",\n      component: ManageStockComponent,\n      canActivate: [RoutePrivilegeGuard],\n      data: { clientName: 'InventoryModule', requiredPrivilege: [\"Manage Stock\"] },\n    },\n\n    {\n      path: \"request-stock-directly\",\n      component: DirectMainStoreRequisitionComponent,\n      canActivate: [RoutePrivilegeGuard],\n      data: { clientName: 'InventoryModule', requiredPrivilege: [\"Request Stock Main\"] },\n    },\n\n    {\n      path: \"view-user-direct-requisition\",\n      component: ViewDirectMainstoreRequisitionsComponent,\n      canActivate: [RoutePrivilegeGuard],\n      data: { clientName: 'InventoryModule', requiredPrivilege: [\"View User Requisitions\"] },\n    },\n    \n\n\n\n\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StockManagementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { StockManagementRoutingModule } from './Inventory-management-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../../dashboard/dashboard.module';\nimport { ManageStockComponent } from './Stock-Management/Pages/mainstore-items/manage-stock/manage-stock.component';\nimport { AllStockComponent } from './Stock-Management/Pages/mainstore-items/all-stock/all-stock.component';\n\nimport { ViewDirectMainstoreRequisitionsComponent } from './view-requisitions/view-direct-mainstore-requisitions/view-direct-mainstore-requisitions.component';\nimport { DirectMainStoreRequisitionComponent } from './place-requisitions/direct-main-store-requisition/direct-main-store-requisition.component';\nimport { ViewReqItemsDialogComponent } from './view-requisitions/view-req-items-dialog/view-req-items-dialog.component';\n\n@NgModule({\n  declarations: [\n\n    AllStockComponent,\n    ManageStockComponent,\n    // StockStatsComponent,\n    // TransferStockComponent,\n    // MainStoreRequsitionComponent,\n    // BranchStoreRequsitionComponent,\n    // ViewMainStoreRequisitionsComponent,\n    // ViewBranchRequisitionsComponent,\n    // OnboardingPOItemsComponent,\n    // BranchStoreReservationComponent,\n    // AllBranchItemsComponent,\n    // ManageBranchItemsComponent,\n    // BranchStatisticsComponent,\n    DirectMainStoreRequisitionComponent,\n    ViewDirectMainstoreRequisitionsComponent,\n    ViewReqItemsDialogComponent,\n  ],\n\n  imports: [\n    CommonModule,\n    StockManagementRoutingModule,\n\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n\n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n\n    MatFormFieldModule,\n\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n\n    MatSnackBarModule,\n    MatToolbarModule,\n\n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule\n  ],\n  providers: [DatePipe],\n  exports: [\n\n  ],\n\n\n})\nexport class InventoryManagementModule { }\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { StockManagementService } from \"src/app/erp-inventory/data/services/stock-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-stock\",\n  templateUrl: \"./all-stock.component.html\",\n  styleUrls: [\"./all-stock.component.scss\"],\n})\nexport class AllStockComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"id\",\n    \"itemCode\",\n    \"name\",\n    \"itemCategory\",\n    \"quantity\",\n    \"unitCost\",\n    \"action\",\n  ];\n\n  totalCost: number = 0;\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n\n  //************************************************************* */\n  displayedColumnsSecond: string[] = [\n    \"select\",\n    \"id\",\n    \"itemCode\",\n    \"name\",\n    \"itemCategory\",\n    \"quantity\",\n\n    \"unitCost\",\n    \"status\",\n    \"action\",\n  ];\n  dataSourceSecond!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginatorSecond!: MatPaginator;\n  @ViewChild(MatSort) sortSecond!: MatSort;\n  //************************************************************* */\n\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form!: FormGroup;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private stockManService: StockManagementService,\n    private accessControlService: AccessControlService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n    this.getDataFromProcurement();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getData() {\n    this.isLoading = true;\n\n    this.stockManService\n      .getStock()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"status:\", res);\n          if (res.statusCode == 200) {\n            // this.data = res.entity;\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            // this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          // this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.isLoading = false;\n          this.selection = new SelectionModel<any>(true, []);\n        },\n      }),\n      Subscription;\n  }\n\n  applyFilterSecond(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceSecond.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourceSecond.paginator) {\n      this.dataSourceSecond.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [{ name: \"PENDING\" }, { name: \"RECEIVED\" }];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getDataFromProcurement();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getDataFromProcurement();\n  }\n\n\n\n  dataSecond: any;\n  isLoadingSecond: boolean = true;\n  getDataFromProcurement() {\n    this.dataSourceSecond = new MatTableDataSource([]);\n    this.dataSourceSecond.paginator = this.paginatorSecond;\n    this.dataSourceSecond.sort = this.sortSecond;\n    this.isLoadingSecond = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.stockManService\n      .getStockFromProcurementByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.dataSecond = res;\n            this.isLoadingSecond = false;\n            this.dataSourceSecond = new MatTableDataSource(this.dataSecond.entity);\n            this.dataSourceSecond.paginator = this.paginatorSecond;\n            this.dataSourceSecond.sort = this.sortSecond;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  refreshSecond() {\n    this.getDataFromProcurement();\n  }\n\n  // ****************************************************************************************************************************\n\n  // getDataFromProcurement() {\n  //   this.stockManService\n  //     .getStocksFromProcurement()\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"status:\", res);\n  //         if (res.statusCode == 200) {\n  //           // this.data = res.entity;\n  //           this.dataSecond = res.entity;\n  //           this.isLoadingSecond = false;\n  //           this.dataSourceSecond = new MatTableDataSource(this.dataSecond);\n  //           this.dataSourceSecond.paginator = this.paginatorSecond;\n  //           this.dataSourceSecond.sort = this.sortSecond;\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {},\n  //     }),\n  //     Subscription;\n  // }\n\n  addStockCall() {\n    this.router.navigate([\"/erp-inventory/inventory/manage-stock\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  editStock(data: any, stockType: any) {\n    console.log(\"mm\", data);\n\n    let route = \"/erp-inventory/inventory/manage-stock\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n        stockType: stockType,\n      },\n    });\n  }\n  viewStock(data: any, stockType: any) {\n    let route = \"/erp-inventory/inventory/manage-stock\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n        stockType: stockType,\n      },\n    });\n  }\n\n  transferStock() {\n    let route = \"/erp-inventory/inventory/transfer-stock\";\n    this.router.navigate([route], { queryParams: { action: \"Transfer\" } });\n  }\n\n  deleteStock(itemCode: number) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This item will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Item\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"itemCode\", itemCode);\n        this.stockManService\n          .deleteStockPemanently(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //**********************************************************************************************************\n\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSourceSecond.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSourceSecond.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  //**********************************************************************************************************\n\n  processMultipleRows() {\n    Swal.fire({\n      title: \"Confirmation\",\n      text: \"Do you want to push the items to the main table?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"No\",\n    }).then((confirmationResult) => {\n      if (confirmationResult.isConfirmed) {\n        console.log(\"LOG: \", this.selectedRows);\n\n        // Extracting IDs from each array item in selectedRows\n        let processedData = this.selectedRows.map((item) => item.id);\n\n        // let processedData = this.selectedRows.map((item) => ({ id: item.id }));\n\n        console.log(\"processedData: \", processedData);\n\n        this.stockManService\n          .validateStocksFromProcurement(processedData)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              console.log(\"res: \", res);\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n\n                this.selection = new SelectionModel<any>(true, []);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n              this.getDataFromProcurement();\n            },\n          });\n      } else {\n        this.selection = new SelectionModel<any>(true, []);\n      }\n    });\n  }\n\n  //********************************************************************************************************************** */\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header body\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Item in Stock'\" [items]=\"['Stock Items']\" [active_item]=\"'All I tems'\"\n        class=\"bg-table-header\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"card\">\n      <div class=\"header\">\n        <h2>Main Stock Items</h2>\n      </div>\n\n      <div class=\"body\">\n        <mat-tab-group>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <mat-icon>inventory</mat-icon>\n              Items in Stock\n            </ng-template>\n\n            <div class=\"row mx-2\">\n              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"body\">\n                  <div class=\"table-responsive\">\n                    <div class=\"materialTableHeader bg-table-header font\">\n                      <div class=\"row\">\n                        <div class=\"col-8\">\n                          <ul class=\"header-buttons-left ms-0\">\n                            <li class=\"dropdown\">\n                              <h2>Items in Stock</h2>\n                            </li>\n                            <li class=\"dropdown m-l-20\">\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                              <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                class=\"browser-default search-field\" aria-label=\"Search box\" />\n                            </li>\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"addStockCall()\">\n                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                  <mat-icon class=\"col-white\">refresh</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n                           \n                          </ul>\n                        </div>\n                        <div class=\"col-4\">\n                          <ul class=\"header-buttons\">\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                    exporter.exportTable('xlsx', {\n                                      fileName: 'assets-list',\n                                      sheet: 'sheet1'\n                                    })\n                                  \" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                    <!-- <hr> -->\n                    <div class=\"table-style mat-elevation-z0\">\n                      <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                        class=\"mat-cell my-class-with-custom-shadow\" #exporter=\"matTableExporter\"\n                        class=\"font-table mat-cell\">\n                        <!-- <ng-container matColumnDef=\"id\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header class=\"mid-col\" class=\"table-img tbl-col-width-per-9\">Id</mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">{{row.id}}</mat-cell>\n                        </ng-container> -->\n\n                        <!-- id-->\n                        <ng-container matColumnDef=\"id\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0\">\n                            ID\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"mat-column\">\n                            {{ row.id }}</mat-cell>\n                        </ng-container>\n\n                        <!-- itemCode-->\n                        <ng-container matColumnDef=\"itemCode\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header class=\"start-col mat-elevation-z0\">\n                            Item Code\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"mat-column\">\n                            {{ row.itemCode }}</mat-cell>\n                        </ng-container>\n\n                        <!-- name -->\n                        <ng-container matColumnDef=\"name\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Name\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.name }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- itemCategory -->\n                        <ng-container matColumnDef=\"itemCategory\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Category\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.itemCategory }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- quantity -->\n                        <ng-container matColumnDef=\"quantity\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Quantity\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.quantity }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- unit -->\n                        <ng-container matColumnDef=\"unit\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Units\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.unit }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- unitCost -->\n                        <ng-container matColumnDef=\"unitCost\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Unit Cost\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.unitCost }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"action\">\n                          <mat-header-cell class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\" *matHeaderCellDef\n                            class=\"end-col mat-elevation-z0\">Action</mat-header-cell>\n                          <mat-cell *matCellDef=\"let row; let i = index\"\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"editStock(row, 'Main')\" class=\"tbl-action-btn\">\n                              <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                            </button>\n\n                            <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"viewStock(row, 'Main')\" class=\"tbl-action-btn\">\n                              <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                            </button>\n\n                            <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"deleteStock(row.itemCode)\" class=\"tbl-action-btn\">\n                              <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                            </button>\n                          </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewStock(row, 'Main')\"\n                          [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n                        <mat-cell *matNoDataRow colspan=\"4\">\n                          No data matching the filter \"{{\n                          input.value\n                          }}\"</mat-cell>\n                      </mat-table>\n                    </div>\n\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                      </mat-progress-spinner>\n                    </div>\n                    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                      aria-label=\"Select page of users\"></mat-paginator>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <mat-icon>shopping_cart</mat-icon>\n              Items from Procurement\n            </ng-template>\n\n            <div class=\"row mx-2\">\n              <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"body\">\n                  <div class=\"table-responsive\">\n                    <div class=\"materialTableHeader\">\n                      <div class=\"row\">\n                        <div class=\"col-8\">\n                          <ul class=\"header-buttons-left ms-0\">\n                            <li class=\"dropdown\">\n                              <h2>Items pushed from Procurement</h2>\n                            </li>\n                            <li class=\"dropdown m-l-20\">\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                              <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                class=\"browser-default search-field\" aria-label=\"Search box\" />\n                            </li>\n                            <!-- <li>\n                              <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"addStockCall()\">\n                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                </button>\n                              </div>\n                            </li> -->\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"refreshSecond()\">\n                                  <mat-icon class=\"col-white\">refresh</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n                            <li *ngIf=\"selection.selected.length > 0\">\n                              <div class=\"m-l-10\" matTooltip=\"Push To Main Table\">\n                                <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows()\">\n                                  <i class=\"material-icons\">emoji_transportation</i>\n                                </button>\n                              </div>\n                            </li>\n                            <li></li>\n                          </ul>\n                        </div>\n                        <div class=\"col-4\">\n                          <ul class=\"header-buttons\">\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                    exporter.exportTable('xlsx', {\n                                      fileName: 'assets-list',\n                                      sheet: 'sheet1'\n                                    })\n                                  \" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"materialTableHeader mt-2\">\n                      <div class=\"row\">\n                        <div class=\"col-2\">\n                          <form [formGroup]=\"Form\">\n                            <!-- <div class=\"row\">\n                                <div class=\"col-4\"> -->\n                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                              <mat-label>Status</mat-label>\n      \n                              <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                                <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                                  }}\n                                </mat-option>\n                              </mat-select>\n      \n                              <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                Please select Status\n                              </mat-error>\n                            </mat-form-field>\n                            <!-- </div>\n        \n                              </div> -->\n                          </form>\n                        </div>\n                        <div class=\"col-10\">\n                          <div class=\"button-container mt-1\">\n                            <!-- Button for PENDING status -->\n                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                              (click)=\"getSelectedStatus('PENDING')\">\n                              <mat-icon>pending</mat-icon>\n                              PENDING\n                            </button>\n      \n                            <!-- Button for VERIFIED status -->\n                            <button mat-raised-button [class.active]=\"selectedStatus === 'RECEIVED'\"\n                                class=\"mat-button verified\" (click)=\"getSelectedStatus('RECEIVED')\">\n                                <mat-icon>check_circle</mat-icon>\n                                RECEIVED\n                              </button>\n      \n                            <!-- Button for APPROVED status -->\n                            <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                              class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                              <mat-icon>thumb_up</mat-icon>\n                              APPROVED\n                            </button> -->\n                            <!-- Button for RETURNED status -->\n                            <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                              class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                              <mat-icon>reply</mat-icon>\n                              RETURNED\n                            </button> -->\n      \n                            <!-- Button for REJECTED status -->\n                            <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                              class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                              <mat-icon>cancel</mat-icon>\n                              REJECTED\n                            </button> -->\n\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <!-- <hr> -->\n                    <div class=\"table-style mat-elevation-z0\">\n                      <mat-table #table matTableExporter [dataSource]=\"dataSourceSecond\" matSort\n                        class=\"mat-cell my-class-with-custom-shadow\" #exporter=\"matTableExporter\"\n                        class=\"font-table mat-cell\">\n                         <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                        <!-- id-->\n                        <ng-container matColumnDef=\"id\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-5 pr-0\">\n                            ID\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-5 pr-0\">\n                            {{ row.id }}</mat-cell>\n                        </ng-container>\n\n                        <!-- itemCode-->\n                        <ng-container matColumnDef=\"itemCode\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                            Item Code\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                            {{ row.itemCode }}</mat-cell>\n                        </ng-container>\n\n                        <!-- name -->\n                        <ng-container matColumnDef=\"name\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Name\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.name }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- itemCategory -->\n                        <ng-container matColumnDef=\"itemCategory\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Category\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.itemCategory }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- quantity -->\n                        <ng-container matColumnDef=\"quantity\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Quantity\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.quantity }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- unit -->\n                        <ng-container matColumnDef=\"unit\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Units\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.unit }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <!-- unitCost -->\n                        <ng-container matColumnDef=\"unitCost\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            Unit Cost\n                          </mat-header-cell>\n                          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            {{ row.unitCost }}\n                          </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"status\">\n                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                            class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                            Status\n                          </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                              (click)=\"$event.stopPropagation()\">\n                              <ng-container [ngSwitch]=\"row.status\">\n                                <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                  <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                  {{ row.status }}\n                                </button>\n                                <button *ngSwitchCase=\"'RECEIVED'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                  <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                  {{ row.status }}\n                                </button>\n                                <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                  <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                  {{ row.status }}\n                                </button>\n                                <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                  <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                  {{ row.status }}\n                                </button>\n                               \n                                <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                  <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                  {{ row.status }}\n                                </button>\n                              </ng-container>\n                            </mat-cell>\n                        </ng-container>\n      \n\n                        <ng-container matColumnDef=\"action\">\n                          <mat-header-cell class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\"\n                            *matHeaderCellDef>Action</mat-header-cell>\n                          <mat-cell *matCellDef=\"let row; let i = index\"\n                            class=\"column-nowrap psl-0 tbl-col-width-per-15 pr-0\">\n                            <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"editStock(row, 'Procurement')\" class=\"tbl-action-btn\">\n                              <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                            </button>\n\n                            <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"viewStock(row, 'Procurement')\" class=\"tbl-action-btn\">\n                              <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                            </button>\n\n                            <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                              (click)=\"deleteStock(row.itemCode)\" class=\"tbl-action-btn\">\n                              <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                            </button>\n                          </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumnsSecond\"></mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumnsSecond\" (click)=\"viewStock(row)\"\n                          [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n                        <mat-cell *matNoDataRow colspan=\"4\">\n                          No data matching the filter \"{{\n                          input.value\n                          }}\"</mat-cell>\n                      </mat-table>\n                    </div>\n\n                    <div *ngIf=\"isLoadingSecond\" class=\"tbl-spinner\">\n                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                      </mat-progress-spinner>\n                    </div>\n                    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                      aria-label=\"Select page of users\"></mat-paginator>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </mat-tab>\n        </mat-tab-group>\n      </div>\n    </div>\n  </div>\n</section>","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CatalogueLookupComponent } from \"src/app/erp-inventory/data/lookups/catalogue-lookup/catalogue-lookup.component\";\nimport { CategoryLookupComponent } from \"src/app/erp-inventory/data/lookups/category-lookup/category-lookup.component\";\nimport { MainstoreLookupComponent } from \"src/app/erp-inventory/data/lookups/mainstore-lookup/mainstore-lookup.component\";\nimport { BrancstoresManagementService } from \"src/app/erp-inventory/data/services/brancstores-management.service\";\nimport { ItemCategoryService } from \"src/app/erp-inventory/data/services/item-category.service\";\nimport { MainstoreService } from \"src/app/erp-inventory/data/services/mainstore.service\";\nimport { StockManagementService } from \"src/app/erp-inventory/data/services/stock-management.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-manage-stock\",\n  templateUrl: \"./manage-stock.component.html\",\n  styleUrls: [\"./manage-stock.component.scss\"],\n})\nexport class ManageStockComponent implements OnInit {\n  displayedColumn: string[] = [\"itemId\", \"itemCategory\", \"itemName\"];\n\n  dataSourceTransfer = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) transferpaginator!: MatPaginator;\n  @ViewChild(MatSort) transferSort!: MatSort;\n\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  transferForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  stockId: any;\n  stockType: any\n  hideSubmit = false;\n\n  units: string[] = [\"Kilograms\", \"Boxes\", \"Grams\", \"Litres\", \"Metres\"];\n  categories: any;\n  ageClasses: string[] = [\"New\", \"Old\", \"obsolete\", \"refurbished\"];\n  statuses: string[] = [\"Available\", \"Out of stock\"];\n  data: any;\n  isLoading: boolean;\n  dataSource: any;\n  paginator: any;\n  sort: any;\n\n  totalCost: number = 0;\n\n  mainstores: any;\n  itemCategories: any;\n  branchstores: any;\n  items: any;\n  exporter: any;\n  itemsArray: [] = [];\n\n  //this.formData.totalCost = (this.formData.unit* this.formData.unitCost)\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n\n    private MainStoreService: MainstoreService,\n    private ItemCatManService: ItemCategoryService,\n    private BranchStoreService: BrancstoresManagementService,\n    private stockManService: StockManagementService,\n    private dialog: MatDialog\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  ngOnInit(): void {\n    this.getMainStoreData();\n    this.getPage();\n    this.getItemCat();\n    this.generateTransferForm();\n    this.getBranchStores();\n    // this.getData();\n    this.showForm = true;\n\n    console.log(\"this.formData: \", this.formData);\n\n    this.route.queryParams.subscribe((params) => {\n      console.log(\"res\", params);\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action == \"Transfer\") {\n          this.pageFunction = \"Transfer\";\n        }\n\n        this.stockId = params[\"id\"];\n        this.stockType = params[\"stockType\"];\n\n        if (this.stockType === \"Main\") {\n          this.getDataById();\n        } else if (this.stockType === \"Procurement\") {\n          this.getProcurementDataById();\n        }\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.stockId);\n    this.stockManService\n      .getStockById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  getProcurementDataById() {\n    const params = new HttpParams().set(\"id\", this.stockId);\n    this.stockManService\n      .getStockFromProcurementById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  // ****************************************************************************************************************************\n\n  getItemCat() {\n    this.ItemCatManService.getItemCategories()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (res) => {\n          if (res.statusCode == 200) {\n            this.itemCategories = res.entity;\n          }\n        },\n        (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.calculateTotalCost();\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.calculateTotalCost();\n    } else if (this.pageFunction === \"Transfer\") {\n      this.generateTransferForm();\n    }\n  }\n\n  getMainStoreData() {\n    this.MainStoreService.getMainStore()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (res) => {\n          console.log(\"status:\", res);\n          if (res.statusCode == 200) {\n            this.mainstores = res.entity;\n\n            console.log(\"ER\", res);\n          }\n        },\n        (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        }\n      );\n  }\n\n  // ****************************************************************************************************************************\n  // gets the branchstores for transfer\n\n  getBranchStores() {\n    this.BranchStoreService.getbranchStore()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (res) => {\n          console.log(\"status:\", res);\n          if (res.statusCode == 200) {\n            this.branchstores = res.entity;\n            console.log(\"Branchstores: \", this.branchstores);\n          }\n        },\n        (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        }\n      );\n  }\n\n  // //get the items for transfer\n  // getData() {\n  //   this.stockManService\n  //     .getStock()\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"status:\", res);\n  //         if (res.statusCode == 200) {\n  //           // this.data = res.entity;\n  //           this.items = res.entity;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => { },\n  //     }),\n  //     Subscription;\n  // }\n\n  //***************************************************************************************************************************\n\n  catalogueArray: [] = [];\n  itemCode = \"\";\n\n  selectedItem: any[] = [];\n  catalogueLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"880px\";\n    dialogConfig.data = {\n      action: \"view catalogue\",\n      selected: this.selectedItem,\n    };\n\n    const dialogRef = this.dialog.open(CatalogueLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      result.data.forEach((element) => {\n        this.itemCode = element.itemCode;\n        this.mngForm.patchValue({\n          name: element.name,\n          itemCode: element.itemCode,\n          description: element.description,\n          minimumStockLevel: element.minimumStockLevel,\n          automatedReorderPoint: element.automatedReorderPoint,\n          quantity: element.quantity,\n          itemCategory: element.itemCategory,\n          unit: element.unit,\n          sku: element.sku,\n          // statusType: element.statusType,\n        });\n      });\n    });\n  }\n\n  //***************************************************************************************************************************\n\n  // Category Look up\n  categoryArray: [] = [];\n  categoryId = \"\";\n\n  selectedCategory: any[] = [];\n  categoryLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"500px\";\n    dialogConfig.data = {\n      // action: \"view catalogue\",\n      selected: this.selectedCategory,\n    };\n\n    const dialogRef = this.dialog.open(CategoryLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      result.data.forEach((element) => {\n        this.categoryId = element.categoryId;\n        this.mngForm.patchValue({\n          itemCategory: element.categoryName,\n        });\n      });\n    });\n  }\n\n  // Main Store Look up\n  mainstoreArray: [] = [];\n  storeId = \"\";\n\n  selectedStore: any[] = [];\n  mainStoreLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"500px\";\n    dialogConfig.data = {\n      selected: this.selectedStore,\n    };\n\n    const dialogRef = this.dialog.open(MainstoreLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      result.data.forEach((element) => {\n        this.storeId = element.storeId;\n        this.mngForm.patchValue({\n          storeId: element.storeId,\n        });\n      });\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //filtering on the items selected table\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  generateTransferForm(): void {\n    this.transferForm = this.fb.group({\n      mainstoreId: [\"\"],\n      branchstoreId: [\"\", [Validators.required]],\n      itemId: [\"\"],\n      itemName: [\"\", [Validators.required]],\n      itemCategory: [\"\", [Validators.required]],\n      quantity: [\"\", [Validators.required]],\n    });\n  }\n\n  // ****************************************************************************************************************************\n  // array of items selected\n\n  addToArray() {\n    if (this.transferForm.valid) {\n      console.log(\"transferForm: \", this.transferForm.value);\n      const newRecord = {\n        itemId: this.transferForm.value.itemId,\n        itemName: this.transferForm.value.itemName,\n        itemCategory: this.transferForm.value.itemCategory,\n        itemDescription: this.transferForm.value.itemDescription,\n        quantity: this.transferForm.value.quantity,\n      };\n      this.dataSourceTransfer.data.push(newRecord);\n      this.dataSourceTransfer.data = this.dataSource.data.slice();\n      this.transferForm.reset();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      storeId: [\"\", [Validators.required]],\n      name: [\"\", [Validators.required]],\n      quantity: [\"\", [Validators.required]],\n      itemCategory: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required]],\n      unit: [\"\", [Validators.required]],\n      unitCost: [\"\", [Validators.required]],\n      minimumStockLevel: [\"\"],\n      automatedReorderPoint: [\"\"],\n      barcodeValue: [\"\"],\n      rfidTagValue: [\"\"],\n      sku: [\"\", [Validators.required]],\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  // useless\n\n  calculateTotalCost() {\n    this.totalCost = 0;\n    if (\n      this.mngForm.value.quantity != null &&\n      this.mngForm.value.unitCost != null\n    ) {\n      this.totalCost =\n        this.mngForm.value.quantity * this.mngForm.value.unitCost;\n    }\n  }\n\n  // unitCost = this.mngForm.value.unitCost;\n  // quantity = this.mngForm.value.quantity;\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      itemCode: [this.formData.itemCode],\n      storeId: [this.formData.storeId],\n      name: [this.formData.name, [Validators.required]],\n      quantity: [this.formData.quantity, [Validators.required]],\n      itemCategory: [this.formData.itemCategory, [Validators.required]],\n      description: [this.formData.description, [Validators.required]],\n      // statusType: [this.formData.statusType, [Validators.required]],\n      unit: [this.formData.unit, [Validators.required]],\n      unitCost: [this.formData.unitCost, [Validators.required]],\n      //totalCost: [this.formData.totalCost, [Validators.required]],\n      automatedReorderPoint: [\n        this.formData.automatedReorderPoint,\n        [Validators.required],\n      ],\n      minimumStockLevel: [\n        this.formData.minimumStockLevel,\n        [Validators.required],\n      ],\n      barcodeValue: [this.formData.barcodeValue],\n      rfidTagValue: [this.formData.rfidTagValue],\n      sku: [this.formData.sku, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      itemCode: [this.formData.itemCode],\n      storeId: [{ value: this.formData.storeId, disabled: true }],\n      // itemId: [{ value: this.formData.itemId, disabled: true }],\n      name: [{ value: this.formData.name, disabled: true }],\n      quantity: [{ value: this.formData.quantity, disabled: true }],\n      itemCategory: [{ value: this.formData.itemCategory, disabled: true }],\n      description: [{ value: this.formData.description, disabled: true }],\n      //    statusType: [{ value: this.formData.statusType, disabled: true }],\n      unit: [{ value: this.formData.unit, disabled: true }],\n      unitCost: [{ value: this.formData.unitCost, disabled: true }],\n      //totalCost: [{ value: this.formData.totalCost, disabled: true }],\n      automatedReorderPoint: [\n        { value: this.formData.automatedReorderPoint, disabled: true },\n      ],\n      minimumStockLevel: [\n        { value: this.formData.minimumStockLevel, disabled: true },\n      ],\n      barcodeValue: [{ value: this.formData.barcodeValue, disabled: true }],\n      rfidTagValue: [{ value: this.formData.rfidTagValue, disabled: true }],\n      sku: [{ value: this.formData.sku, disabled: true }],\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/erp-inventory/inventory/all-stock\"]);\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate <= today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      const params = new HttpParams().set(\n        \"storeId\",\n        this.mngForm.value.storeId\n      );\n      this.stockManService\n        .addStock(params, this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\"/erp-inventory/inventory/all-stock\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n\n\n      if (this.stockType === \"Main\") {\n        this.stockManService\n          .updateStock(this.mngForm.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n                this.router.navigate([\"/erp-inventory/inventory/all-stock\"]);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => { },\n          }),\n          Subscription;\n      } else if (this.stockType === \"Procurement\") {\n        this.stockManService\n          .updateStockFromProcurement(this.mngForm.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n                this.router.navigate([\"/erp-inventory/inventory/all-stock\"]);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => { },\n          }),\n          Subscription;\n      }\n\n\n    }\n  }\n}\n","<section class=\"content font\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Inventory Items'\" [items]=\"['Inventory Items']\"\n        [active_item]=\"'Manage Inventory Items'\">\n      </app-breadcrumb>\n\n      <!-- mat-align-tabs=\"center\" -->\n\n      <div class=\"row clearfix mt-4 mx-4\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n          <div class=\"card\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                          <div class=\"chat-with remarks\">\n                            <strong>Approvers Remarks:</strong>\n                            <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                          </div>\n                        </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"header\">\n              <div class=\"row\">\n                <h2>{{ pageFunction }} Inventory</h2>\n              </div>\n            </div>\n\n            <div class=\"body\">\n              <form class=\"mx-4\" [formGroup]=\"mngForm\">\n                <div class=\"row\">\n                  <!-- storeId -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label>Main Store ID</mat-label>\n                      <input class=\"font\" matInput formControlName=\"storeId\" readonly />\n                      <mat-icon matSuffix (click)=\"mainStoreLookUp()\">search</mat-icon>\n                      <mat-error *ngIf=\"mngForm.get('storeId').hasError('required')\">The Main Store ID is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  name -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label> Item Name</mat-label>\n                      <input class=\"font\" matInput formControlName=\"name\" readonly />\n                      <mat-icon matSuffix (click)=\"catalogueLookUp()\">search</mat-icon>\n                      <mat-error *ngIf=\"mngForm.get('name').hasError('required')\">The name of the item is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  description -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label> Item Description </mat-label>\n                      <input class=\"font\" matInput formControlName=\"description\" />\n                      <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">The Item Description is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  quantity -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label> Item Quantity</mat-label>\n                      <input class=\"font\" type=\"number\" matInput formControlName=\"quantity\" />\n                      <mat-error *ngIf=\"mngForm.get('quantity').hasError('required')\">The Item Quantity is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  minimumStockLevel -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label>Minimum Stock Level</mat-label>\n                      <input class=\"font\" type=\"number\" matInput formControlName=\"minimumStockLevel\" />\n                      <mat-error *ngIf=\"\n                          mngForm.get('minimumStockLevel').hasError('required')\n                        \">The Minimum Stock Level is required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!-- automatedReorderPoint -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label>Automate Re-Order Point</mat-label>\n                      <input class=\"font\" type=\"number\" matInput formControlName=\"automatedReorderPoint\" />\n                      <mat-error *ngIf=\"\n                          mngForm\n                            .get('automatedReorderPoint')\n                            .hasError('required')\n                        \">The Automated Reorder Point is required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!-- itemCategory -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label> Item Category </mat-label>\n                      <input class=\"font\" matInput formControlName=\"itemCategory\" />\n                      <mat-error *ngIf=\"mngForm.get('itemCategory').hasError('required')\">The Item Category is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!-- sku -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label>Stock Keeping Unit</mat-label>\n                      <input class=\"font\" matInput formControlName=\"sku\" />\n                      <mat-error *ngIf=\"mngForm.get('sku').hasError('required')\">The stock keeping unit is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  unit -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label> Unit of Measure </mat-label>\n                      <input class=\"font\" matInput formControlName=\"unit\" />\n                      <mat-error *ngIf=\"mngForm.get('unit').hasError('required')\">The Unit of Measure is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  rfidTagValue -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label> RFID Tag Value </mat-label>\n                      <input class=\"font\" matInput formControlName=\"rfidTagValue\" />\n                      <mat-error *ngIf=\"mngForm.get('rfidTagValue').hasError('required')\">The RFID tag value is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  barcodeValue -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label> Bar Code Value</mat-label>\n                      <input class=\"font\" matInput formControlName=\"barcodeValue\" />\n                      <mat-error *ngIf=\"mngForm.get('barcodeValue').hasError('required')\">The Barcode value is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  unitCost -->\n                  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                      <mat-label> Unit Cost </mat-label>\n                      <input class=\"font\" type=\"number\" matInput formControlName=\"unitCost\" />\n                      <mat-error *ngIf=\"mngForm.get('unitCost').hasError('required')\">The Unit cost is\n                        required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <!--  totalCost -->\n                  <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                        <p>Total Cost:\n                          <span>\n                            {{ totalCost | currency: \"KSH \" : \"symbol\" : \"1.2-2\" }}\n                          </span>\n                        </p>\n                      </div> -->\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                    <div mat-dialog-action [align]=\"'end'\">\n                      <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                        (click)=\"cancel()\">\n                        Cancel\n                      </button>\n                      <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"\n                        (click)=\"submit()\">\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { DateAdapter } from \"@angular/material/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BehaviorSubject, Subject, Subscription, takeUntil } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { ValidateStoreRequisitionComponent } from \"src/app/erp-inventory/data/lookups/dialogs/validate-store-requisition/validate-store-requisition.component\";\nimport { InvenItemsLookupComponent } from \"src/app/erp-inventory/data/lookups/inven-items-lookup/inven-items-lookup.component\";\nimport { DirectMainStoreService } from \"src/app/erp-inventory/data/services/direct-main-store.service\";\nimport { MainstoreService } from \"src/app/erp-inventory/data/services/mainstore.service\";\nimport { StockManagementService } from \"src/app/erp-inventory/data/services/stock-management.service\";\nimport { StoreRequisitionsServiceService } from \"src/app/erp-inventory/data/services/store-requisitions-service.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport * as XLSX from \"xlsx\";\n\n@Component({\n  selector: \"app-direct-main-store-requisition\",\n  templateUrl: \"./direct-main-store-requisition.component.html\",\n  styleUrls: [\"./direct-main-store-requisition.component.sass\"],\n})\nexport class DirectMainStoreRequisitionComponent implements OnInit {\n  showForm = false;\n  isLoading = true;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n  minDate: Date;\n\n  bgtForm: FormGroup;\n\n  displayedColumns: string[] = [\n    \"id\",\n    \"itemCode\",\n    \"itemName\",\n    \"itemDescription\",\n    \"unitOfMeasure\",\n    \"quantity\",\n    \"needByDate\",\n    \"available\",\n    \"action\",\n  ];\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  hideDispatch: boolean = true;\n  hideReceive: boolean = true;\n  hideBgtButtons: boolean = false;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  id: any;\n  currentBranch: any;\n\n  currentUserCode: \"\";\n\n  constructor(\n    private fb: FormBuilder,\n    private filesService: FilesService,\n    private directMainStoreService: DirectMainStoreService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private tokenCookieService: TokenCookieService,\n    private mainStoreManService: MainstoreService,\n    private dateAdapter: DateAdapter<Date>,\n    private stockManagementService: StockManagementService,\n    private tokenStorageService: TokenStorageService\n  ) {\n    this.minDate = this.dateAdapter.today();\n\n    this.currentUserCode = this.tokenStorageService.getUser().empPfNo;\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.minDate.setDate(this.minDate.getDate() + 1);\n\n    this.getPage();\n    // this.getcostCenter();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n\n        this.id = params[\"id\"];\n\n\n        this.getDataById();\n      }\n    });\n  }\n\n  pageAction = \"Add\";\n\n\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.directMainStoreService\n      .getInternalRequisitionsById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n\n            if (this.formData.requisitionAttachments > 0) {\n              this.isFileDataLoading = false;\n              this.formData.requisitionAttachments.forEach((element) => {\n                const newRow = this.fb.group({\n                  file: [element.file],\n                  fileName: [element.filename],\n                  fileType: [element.filetype],\n                });\n                this.rows.push(newRow);\n              });\n              this.updateView();\n            }\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n      this.generateNeedForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.generateNeedForm();\n\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.generateDisabledNeedForm();\n\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n  }\n\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      empPf: [this.currentUserCode],\n      branchCode: [\"\"],\n      requisitionTitle: [\"\", [Validators.required]],\n      requisitionDescription: [\n        \"\",\n        [Validators.required, Validators.maxLength(300)],\n      ],\n      items: [[]],\n      requisitionAttachments: [[]],\n    });\n  }\n\n  generateFormWithData() {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      empPf: [this.formData.empPf],\n      requisitionCode: [this.formData.requisitionCode],\n      requisitionTitle: [this.formData.requisitionTitle, [Validators.required]],\n      requisitionDescription: [\n        this.formData.requisitionDescription,\n        [Validators.required, Validators.maxLength(300)],\n      ],\n      items: [this.formData.items],\n      requisitionAttachments: [this.formData.requisitionAttachments],\n    });\n\n    this.dataSource.data = this.formData.items;\n  }\n\n  generateDisabledFormWithData() {\n    this.mngForm = this.fb.group({\n      requisitionCode: [this.formData.requisitionCode, [Validators.required]],\n      requisitionTitle: [this.formData.requisitionTitle, [Validators.required]],\n      requisitionDescription: [\n        this.formData.requisitionDescription,\n        [Validators.required],\n      ],\n      items: [this.formData.items],\n      requisitionAttachments: [this.formData.requisitionAttachments],\n    });\n  }\n\n  generateDisabledNeedForm() {\n    this.bgtForm = this.fb.group({\n      itemName: [{ value: \"\", disabled: true }, [Validators.required]],\n      quantity: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemDescription: [{ value: \"\", disabled: true }, [Validators.required]],\n      unitOfMeasure: [{ value: \"\", disabled: true }, [Validators.required]],\n      needByDate: [{ value: \"\", disabled: true }, [Validators.required]],\n    });\n  }\n\n  getNeedPeriod(event: any) {\n    console.log(\"event: \", event.value);\n  }\n\n  enterManually: boolean = true;\n  manualItemsEntry() {\n    this.enterManually = true;\n  }\n\n  // *************************************************************************************************************************************\n  //Import requsitions from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n  importExcel() {\n    this.enterManually = false;\n    this.fileInput.nativeElement.click();\n  }\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = []; // Clear previous errors\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray; // Create a separate FormArray variable\n\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        itemName: [{ value: item.itemName }, [Validators.required]],\n        quantity: [{ value: item.quantity }, [Validators.required]],\n        itemDescription: [\n          { value: item.itemDescription },\n          [Validators.required],\n        ],\n        unitOfMeasure: [{ value: item.unitOfMeasure }, [Validators.required]],\n        // automatedReorderPoint: [{ value: item.automatedReorderPoint }],\n        // minimumStockLevel: [{ value: item.minimumStockLevel }],\n        needByDate: [{ value: item.needByDate }, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup); // Use push method on the FormArray variable\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n        // Rest of the code remains the same\n        this.bgtForm.patchValue({\n          itemName: item.itemName,\n          quantity: item.quantity,\n          itemDescription: item.itemDescription,\n          unitOfMeasure: item.unitOfMeasure,\n          // automatedReorderPoint: item.automatedReorderPoint,\n          // minimumStockLevel: item.minimumStockLevel,\n          needByDate: item.needByDate,\n        });\n\n        // Rest of the code remains the same\n\n        this.dataSource.data.push(this.bgtForm.value);\n        this.dataSource.data = this.dataSource.data.slice();\n        this.bgtForm.reset();\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  addImportsToArray() { }\n  clearImports() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.patchItems();\n  }\n\n  private readonly templateFilename = \"requisitionItemsTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  //************************************************************************************************************************************ */\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1; // Track the index of the selected row\n\n  generateNeedForm() {\n    this.bgtForm = this.fb.group({\n      id: [\"\"],\n      itemCode: [\"\"],\n      itemName: [\"\", [Validators.required]],\n      quantity: [\n        \"\",\n        [\n          Validators.required,\n          Validators.min(0.01),\n          Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$\"),\n        ],\n      ],\n      itemDescription: [\"\", [Validators.required, Validators.maxLength(300)]],\n      unitOfMeasure: [\"\", [Validators.required]],\n      // automatedReorderPoint: [\"\", [Validators.required, Validators.min(1), Validators.pattern('^[0-9]+(\\\\.[0-9]{1,2})?$')]],\n      // minimumStockLevel: [\"\", [Validators.required, Validators.min(1), Validators.pattern('^[0-9]+(\\\\.[0-9]{1,2})?$')]],\n      needByDate: [\"\", [Validators.required, this.dateValidator]],\n\n      available: [\"\"],\n    });\n    console.log(\"asked for me: \", this.itemQuantity);\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n  //*************************************************************************************************************************************** */\n\n  //inventory items look up\n\n  inventItemArray: [] = [];\n  itemCode = \"\";\n  itemQuantity: number;\n\n  selectedInventItems: any[] = [];\n  inventItemLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      selected: this.selectedInventItems,\n    };\n\n    const dialogRef = this.dialog.open(InvenItemsLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"InventItems: \", this.selectedInventItems);\n      result.data.forEach((element) => {\n        this.itemCode = element.itemCode;\n        this.itemQuantity = element.quantity;\n        this.bgtForm.patchValue({\n          // id: element.id,\n          itemCode: element.itemCode,\n          itemName: element.name,\n          itemDescription: element.description,\n          unitOfMeasure: element.unit,\n        });\n      });\n    });\n  }\n\n  //*************************************************************************************************************************************** */\n\n  addToArray() {\n    if (this.bgtForm.value.quantity > this.itemQuantity) {\n      this.snackbar.showNotification(\n        \"snack-danger\",\n        \"The requested quantity is more than the available quantity (\" +\n        this.itemQuantity +\n        \")\"\n      );\n    } else {\n      if (this.bgtForm.valid) {\n        console.log(\"this.bgtForm: \", this.bgtForm.value);\n        const newRecord = {\n          itemCode: this.bgtForm.value.itemCode,\n          itemName: this.bgtForm.value.itemName,\n          itemDescription: this.bgtForm.value.itemDescription,\n          unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n          quantity: this.bgtForm.value.quantity,\n          // automatedReorderPoint: this.bgtForm.value.automatedReorderPoint,\n          // minimumStockLevel: this.bgtForm.value.minimumStockLevel,\n          needByDate: this.bgtForm.value.needByDate,\n\n          available: this.bgtForm.value.available,\n        };\n\n        this.dataSource.data.push(newRecord);\n        this.dataSource.data = this.dataSource.data.slice();\n        this.bgtForm.reset();\n\n        this.patchItems();\n      }\n    }\n  }\n\n  updateNeedDetails() {\n    if (this.bgtForm.valid) {\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n\n      const updatedRecord = {\n        id: this.bgtForm.value.id,\n        itemName: this.bgtForm.value.itemName,\n        itemCode: this.bgtForm.value.itemCode,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        quantity: this.bgtForm.value.quantity,\n        // automatedReorderPoint: this.bgtForm.value.automatedReorderPoint,\n        // minimumStockLevel: this.bgtForm.value.minimumStockLevel,\n        needByDate: this.bgtForm.value.needByDate,\n\n        available: this.bgtForm.value.available,\n      };\n\n      this.dataSource.data[this.selectedRowIndex] = updatedRecord;\n      this.dataSource.data = this.dataSource.data.slice();\n      this.bgtForm.reset();\n\n      this.editButton = false;\n      this.addButton = true;\n      this.selectedRowIndex = -1; // Reset the selected row index\n    }\n  }\n\n  onEditNeedDetails(row: any) {\n    this.editButton = true;\n    this.addButton = false;\n    this.selectedRowIndex = this.dataSource.data.indexOf(row);\n\n    this.bgtForm.patchValue({\n      id: row.id,\n      itemName: row.itemName,\n      itemCode: row.itemCode,\n      itemDescription: row.itemDescription,\n      unitOfMeasure: row.unitOfMeasure,\n      quantity: row.quantity,\n      // automatedReorderPoint: row.quantity,\n      // minimumStockLevel: row.quantity,\n      needByDate: row.needByDate,\n\n      available: row.available,\n    });\n\n    this.enterManually = true;\n    this.patchItems();\n  }\n\n  onDeleteNeedDetails(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.dataSource.data = this.dataSource.data.slice();\n  }\n\n  clearForm() {\n    this.bgtForm.reset();\n    this.editButton = false;\n    this.addButton = true;\n    this.selectedRowIndex = -1; // Reset the selected row index\n  }\n\n  patchItems() {\n    this.mngForm.patchValue({\n      items: this.dataSource.data,\n    });\n    console.log(\"this.mngForm.items.value\", this.mngForm.value);\n  }\n\n  // **************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"filename\",\n    \"filetype\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n\n    this.addFileRow();\n  }\n\n  // file: trerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrtysdfxzdgjr634racxzvcnfgerewrsa,\n  // filename: currFilename,\n  // filetype: currFiletype},\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      filetype: [\"\", Validators.required],\n      filename: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n\n    this.mngForm.patchValue({\n      requisitionAttachments: this.documentsForm.value.filedetails,\n    });\n  }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currFilename: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currFilename = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          filename: this.currFilename,\n          filetype: this.currType,\n        });\n        console.log(\n          \"this.documentsForm.value.filedetails: \",\n          this.selectedFiles\n        );\n\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let filename = row.value.filename;\n    let filetype = row.value.filetype;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${filename}.${filetype}`;\n    link.click();\n  }\n  // **************************************************************************************************\n  //Showing the submit button\n  placeRequestValid = true;\n  length: any;\n  sizeValidation() {\n    this.length = this.mngForm.value.needItems.length;\n    if (this.length >= 1) {\n      this.placeRequestValid = false;\n    }\n  }\n\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    console.log(\"branchCode: \", this.currentBranch);\n\n    // if (\n    //   this.mngForm.value.items &&\n    //   this.mngForm.value.items.length > 0\n    // ) {\n    //   if (this.pageFunction == \"Add\") {\n    //     console.log(\"Req: \", this.currentBranch);\n    //     this.directMainStoreService\n    //       .addInternalRequisition(this.mngForm.value)\n    //       .pipe(takeUntil(this.destroy$))\n    //       .subscribe({\n    //         next: (res) => {\n    //           console.log(\"res: \", res);\n\n    //           if (res.statusCode == 201) {\n    //             this.snackbar.showNotification(\"snackbar-success\", res.message);\n    //             this.router.navigate([\n    //               \"/erp-inventory/inventory/view-user-direct-requisition\",\n    //             ]);\n    //           } else {\n    //             this.snackbar.showNotification(\"snackbar-danger\", res.message);\n    //           }\n    //         },\n    //         error: (err) => {\n    //           this.snackbar.showNotification(\"snackbar-danger\", err.message);\n    //         },\n    //         complete: () => { },\n    //       }),\n    //       Subscription;\n    //   } else if (this.pageFunction == \"Update\") {\n    //     console.log(\"Update Value: \", this.mngForm.value);\n    //     this.directMainStoreService\n    //       .updateInternalRequisitions(this.mngForm.value)\n    //       .pipe(takeUntil(this.destroy$))\n    //       .subscribe({\n    //         next: (res) => {\n    //           if (res.statusCode == 200) {\n    //             this.snackbar.showNotification(\"snackbar-success\", res.message);\n    //             this.router.navigate([\n    //               \"/erp-inventory/inventory/view-user-direct-requisition\",\n    //             ]);\n    //           } else {\n    //             this.snackbar.showNotification(\"snackbar-danger\", res.message);\n    //           }\n    //         },\n    //         error: (err) => {\n    //           this.snackbar.showNotification(\"snackbar-danger\", err.message);\n    //         },\n    //         complete: () => { },\n    //       }),\n    //       Subscription;\n    //   }\n    // } else {\n    //   this.snackbar.showNotification(\n    //     \"snackbar-danger\",\n    //     \"Requisition Items cannot be null!!\"\n    //   );\n    // }\n  }\n\n  cancel() {\n    this.router.navigate([\n      \"/erp-inventory/inventory/view-user-direct-requisition\",\n    ]);\n  }\n\n  // **********************************************************************************************************************************************************\n  // Stock Availability Check:\n  // **************************************************************************************************** */\n\n  performStockAvailabilityCheck() {\n    console.log(\"this.dataSource.data: \", this.dataSource.data);\n\n    if (this.dataSource.data.length > 0) {\n      // Transform the data to match the API format\n      const transformedData = this.dataSource.data.map((item) => ({\n        available: item.available,\n        itemCode: item.itemCode,\n        quantity: item.quantity,\n      }));\n\n      console.log(\"transformedData:: \", transformedData);\n\n      this.stockManagementService\n        .checkStockAvailability(transformedData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.entity) {\n              this.dataSource.data.forEach((item, index) => {\n                // Assuming res.entity has the same structure as the sample response\n                if (res.entity[index]) {\n                  item.available = res.entity[index].available;\n                }\n              });\n              this.dataSource.data = this.dataSource.data.slice();\n\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.updateOverallStockAvailabilityStatus();\n          },\n        });\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Please enter the required data to perform the Stock Availability check.\"\n      );\n    }\n  }\n\n  stockAvailabilityPassed: boolean = false;\n  updateOverallStockAvailabilityStatus() {\n    let stockAvailabilityPassed = false;\n\n    for (const item of this.dataSource.data) {\n      if (item.available === \"N\") {\n        stockAvailabilityPassed = false;\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Some records do not meet Stock Availability!\"\n        );\n        break;\n      }\n\n      if (item.available === \"Y\") {\n        stockAvailabilityPassed = true;\n      }\n    }\n\n    this.stockAvailabilityPassed = stockAvailabilityPassed;\n\n    if (stockAvailabilityPassed) {\n      this.snackbar.showNotification(\n        \"snackbar-success\",\n        \"Stock Availability allocations met!\"\n      );\n    }\n  }\n  // **************************************************************************************************\n}\n","<section class=\"content font\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Main Store Requisition'\" [items]=\"['Requisitions']\"\n                [active_item]=\"'Manage Requisitions'\">\n            </app-breadcrumb>\n        </div>\n        <div class=\"row clearfix\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card mat-elevation-x5\">\n                    <div class=\"mb-3\">\n                        <!-- <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar> -->\n                    </div>\n                    <div class=\"body\">\n                        <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                <div class=\"card bg-color\">\n                                    <div class=\"chat\">\n                                        <div class=\"chat-header clearfix\">\n                                            <div class=\"row\">\n                                                <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Posted By</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-blue\"\n                                                                style=\"color: #fff; background-color: #007bff\">\n                                                                {{ formData.postedBy }}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Posted Date</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-pink\"\n                                                                style=\"color: #fff; background-color: #e81c62\">\n                                                                {{ formData.postedTime | date : \"medium\" }}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Verified By</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-blue\"\n                                                                style=\"color: #fff; background-color: #28a745\">\n                                                                {{ formData.verifiedBy }}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Verification Date</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-pink\"\n                                                                style=\"color: #fff; background-color: #d35400\">\n                                                                {{ formData.verifiedTime | date : \"medium\" }}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                    <div class=\"chat-about mt-2 remarks-container\">\n                                                        <div class=\"chat-with\">Verifier Remarks</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-green\"\n                                                                style=\"color: #fff; background-color: #004840\">\n                                                                {{ formData.verifierRemarks }}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <!-- <div class=\"chat-about mt-2 remarks-container\">\n                                          <div class=\"chat-with remarks\">\n                                            <strong>Approvers Remarks:</strong>\n                                            <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                                          </div>\n                                        </div> -->\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"header\">\n                            <div class=\"row\">\n                                <h2>{{ pageFunction }} Requisition</h2>\n                            </div>\n                        </div>\n\n                        <form class=\"mx-4\" [formGroup]=\"mngForm\">\n                            <div class=\"row\">\n                                <!-- requisitionTitle -->\n                                <div class=\"col-xl-3 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Main Store Requisition Title</mat-label>\n                                        <input matInput formControlName=\"requisitionTitle\" required />\n                                        <mat-error *ngIf=\"\n                        mngForm.get('requisitionTitle').hasError('required')\n                      \">\n                                            Requisition Title is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n\n                                <!-- requisitionDescription -->\n                                <div class=\"col-xl-9 col-lg-8 col-md-12 col-sm-12 mb-1\">\n                                    <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Main Store Requisition Description</mat-label>\n                                        <textarea matInput formControlName=\"requisitionDescription\" required></textarea>\n                                        <mat-error *ngIf=\"\n                        mngForm\n                          .get('requisitionDescription')\n                          .hasError('required')\n                      \">\n                                            Requisition Description is required\n                                        </mat-error>\n                                        <mat-error *ngIf=\"\n                        mngForm\n                          .get('requisitionDescription')\n                          .hasError('maxlength')\n                      \">\n                                            Description must not exceed 300 characters.\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </form>\n\n                        <ng-container>\n                            <mat-tab-group>\n                                <!-- First tab -->\n                                <mat-tab>\n                                    <ng-template mat-tab-label>\n                                        <mat-icon>person</mat-icon> Requisition Items\n                                    </ng-template>\n                                    <div class=\"mt-3\">\n                                        <!-- Content for the first tab -->\n\n                                        <div class=\"header\">\n                                            <div class=\"row\">\n                                                <h2>Requisition Items</h2>\n                                            </div>\n                                        </div>\n\n                                        <ng-container *ngIf=\"!hideBgtButtons\">\n                                            <form class=\"mx-4\" [formGroup]=\"bgtForm\" *ngIf=\"enterManually\">\n                                                <div class=\"row\">\n                                                    <!-- ItemName -->\n                                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                                        <mat-form-field class=\"example-full-width mb-0\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Item Name</mat-label>\n                                                            <input matInput formControlName=\"itemName\" readonly />\n                                                            <mat-icon matSuffix\n                                                                (click)=\"inventItemLookUp()\">search</mat-icon>\n                                                            <mat-error *ngIf=\"\n                                  bgtForm.get('itemName').hasError('required')\n                                \">Item Name is required</mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <!-- UnitOfMeasure -->\n                                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-\">\n                                                        <mat-form-field class=\"example-full-width mb-0\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Unit Of Measure</mat-label>\n                                                            <input matInput formControlName=\"unitOfMeasure\" />\n                                                            <mat-error *ngIf=\"\n                                  bgtForm\n                                    .get('unitOfMeasure')\n                                    .hasError('required')\n                                \">\n                                                                Unit Of Measure is required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <!-- Quantity -->\n                                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                                        <mat-form-field class=\"example-full-width mb-0\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Quantity</mat-label>\n                                                            <input matInput formControlName=\"quantity\" />\n                                                            <mat-error *ngIf=\"\n                                  bgtForm.get('quantity').hasError('required')\n                                \">\n                                                                Item Quantity is required\n                                                            </mat-error>\n\n                                                            <mat-error *ngIf=\"bgtForm.get('quantity').hasError('min')\">\n                                                                Item Quantity cannot be 0\n                                                            </mat-error>\n\n                                                            <mat-error *ngIf=\"\n                                  bgtForm.get('quantity').hasError('pattern')\n                                \">Item Quantity allows numbers only\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <!-- Need By Date -->\n                                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                                        <mat-form-field class=\"example-full-width mb-0\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Need By Date</mat-label>\n                                                            <input matInput [matDatepicker]=\"picker\"\n                                                                formControlName=\"needByDate\" [min]=\"minDate\" required />\n                                                            <mat-datepicker-toggle matSuffix\n                                                                [for]=\"picker\"></mat-datepicker-toggle>\n                                                            <mat-datepicker #picker></mat-datepicker>\n                                                            <mat-error *ngIf=\"\n                                  bgtForm.get('needByDate').hasError('required')\n                                \">\n                                                                Need by Date is required\n                                                            </mat-error>\n                                                            <mat-error *ngIf=\"\n                                  bgtForm\n                                    .get('needByDate')\n                                    .hasError('pastDate') &&\n                                  !bgtForm\n                                    .get('needByDate')\n                                    .hasError('required')\n                                \">\n                                                                Enter a Valid Need by Date\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <!-- itemDescription -->\n                                                    <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                        <mat-form-field class=\"example-full-width mb-0\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Item Description</mat-label>\n                                                            <!-- <input matInput formControlName=\"itemDescription\" /> -->\n                                                            <textarea matInput\n                                                                formControlName=\"itemDescription\"></textarea>\n                                                            <mat-error *ngIf=\"\n                                  bgtForm\n                                    .get('itemDescription')\n                                    .hasError('required')\n                                \">\n                                                                Item Description is required\n                                                            </mat-error>\n\n                                                            <mat-error *ngIf=\"\n                                  bgtForm\n                                    .get('itemDescription')\n                                    .hasError('maxlength')\n                                \">\n                                                                Item Description must not exceed 300 characters.\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <!-- Buttons -->\n                                                    <div\n                                                        class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                                                        <ng-container>\n                                                            <div class=\"float-right\">\n                                                                <button *ngIf=\"addButton\" [disabled]=\"bgtForm.invalid\"\n                                                                    (click)=\"addToArray()\" class=\"btn-space\"\n                                                                    mat-raised-button color=\"primary\">\n                                                                    + Add Item details\n                                                                </button>\n                                                                <button *ngIf=\"editButton\" [disabled]=\"bgtForm.invalid\"\n                                                                    class=\"btn-space\" (click)=\"updateNeedDetails()\"\n                                                                    mat-raised-button color=\"primary\">\n                                                                    + Update Item details\n                                                                </button>\n                                                                <button type=\"button\" (click)=\"clearForm()\"\n                                                                    mat-raised-button color=\"warn\">\n                                                                    Clear\n                                                                </button>\n                                                            </div>\n                                                        </ng-container>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </ng-container>\n\n                                        <div class=\"row mx-2\" *ngIf=\"!enterManually\">\n                                            <div class=\"my-3\">\n                                                <button class=\"download-button\" (click)=\"downloadTemplate()\">\n                                                    <i class=\"fa fa-download\"></i> Download Excel Template\n                                                </button>\n                                            </div>\n\n                                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                                                <div class=\"float-right\">\n                                                    <button type=\"button\" (click)=\"clearImports()\" mat-raised-button\n                                                        color=\"warn\">\n                                                        Clear\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <hr />\n                                        <!-- <div class=\"card bg-card\"> -->\n                                        <div class=\"mx-4 my-4\">\n                                            <div class=\"materialTableHeader bg-table-header font\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-8\">\n                                                        <ul class=\"header-buttons-left ms-0\">\n                                                            <li class=\"dropdown\">\n                                                                <h2>Requisition Records</h2>\n                                                            </li>\n                                                            <li class=\"dropdown m-l-20\">\n                                                                <label for=\"search-input\"><i\n                                                                        class=\"material-icons search-icon\">search</i></label>\n                                                                <input placeholder=\"Filter...\" type=\"text\"\n                                                                    (keyup)=\"applyFilter($event)\" #filter\n                                                                    class=\"browser-default search-field\"\n                                                                    aria-label=\"Search box\" />\n                                                            </li>\n\n                                                            <!-- <li>\n                                                                    <div class=\"m-l-10\" matTooltip=\"IMPORT\">\n                                                                        <button mat-mini-fab color=\"primary\"\n                                                                            (click)=\"importExcel()\">\n                                                                            <mat-icon\n                                                                                class=\"col-white\">cloud_upload</mat-icon>\n                                                                        </button>\n                                                                        <input type=\"file\" accept=\".xlsx, .xls\"\n                                                                            style=\"display: none\" #fileInput (change)=\"\n                                                              handleFileInput($event.target.files)\n                                                            \" />\n                                                                    </div>\n                                                                </li> -->\n\n                                                            <li>\n                                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                                    <button mat-mini-fab color=\"primary\">\n                                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                                    </button>\n                                                                </div>\n                                                            </li>\n                                                        </ul>\n                                                    </div>\n                                                    <div class=\"col-4\">\n                                                        <ul class=\"header-buttons\">\n                                                            <li>\n                                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                                        (click)=\"\n                                      exporter.exportTable('xlsx', {\n                                        fileName: 'Requisition-items-list',\n                                        sheet: 'sheet1'\n                                      })\n                                    \" />\n                                                                </div>\n                                                            </li>\n                                                            <li>\n                                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                                </div>\n                                                            </li>\n                                                            <li>\n                                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                                        (click)=\"exporter.exportTable('json')\" />\n                                                                </div>\n                                                            </li>\n                                                            <li>\n                                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                                </div>\n                                                            </li>\n                                                        </ul>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <!-- <hr> -->\n\n                                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                                                class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                                <!-- id -->\n                                                <ng-container matColumnDef=\"id\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"psl-3 tbl-col-width-per-28 start-col mat-elevation-z0\">\n                                                        #\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row; let index = index\"\n                                                        class=\"psl-3 tbl-col-width-per-28\">\n                                                        <span> {{ index + 1 }}</span>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <!-- itemCode -->\n                                                <ng-container matColumnDef=\"itemCode\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"psl-3 tbl-col-width-per-28 mid-col mat-elevation-z0\">\n                                                        Item Code\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                                                        <span *ngIf=\"row.itemCode\">\n                                                            {{ row.itemCode }}</span>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <!-- itemName -->\n                                                <ng-container matColumnDef=\"itemName\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"psl-3 tbl-col-width-per-28 mid-col mat-elevation-z0\">\n                                                        Item Name\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                                                        <span *ngIf=\"row.itemName\">\n                                                            {{ row.itemName }}</span>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <!-- quantity -->\n                                                <ng-container matColumnDef=\"quantity\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"psl-3 tbl-col-width-per-28 mid-col mat-elevation-z0\">\n                                                        Quantity\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                                                        <span *ngIf=\"row.quantity\">\n                                                            {{ row.quantity }}</span>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <!-- unitOfMeasure -->\n                                                <ng-container matColumnDef=\"unitOfMeasure\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"psl-3 tbl-col-width-per-28 mid-col mat-elevation-z0\">\n                                                        Unit Of Measure\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                                                        <span *ngIf=\"row.unitOfMeasure\">\n                                                            {{ row.unitOfMeasure }}</span>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <!-- needByDate -->\n                                                <ng-container matColumnDef=\"needByDate\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"psl-3 tbl-col-width-per-28 mid-col mat-elevation-z0\">\n                                                        Need By Date\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                                                        <span *ngIf=\"row.needByDate\">\n                                                            {{ row.needByDate | date : \"short\" }}</span>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <!-- itemDescription -->\n                                                <ng-container matColumnDef=\"itemDescription\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"psl-3 tbl-col-width-per-28 mid-col mat-elevation-z0\">\n                                                        Item Description\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                                                        <span *ngIf=\"row.itemDescription\">\n                                                            {{ row.itemDescription }}</span>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <ng-container matColumnDef=\"available\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">Available</mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                                        (click)=\"$event.stopPropagation()\">\n                                                        <ng-container [ngSwitch]=\"row.available\">\n                                                            <button *ngSwitchCase=\"'Y'\"\n                                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                                <i class=\"fas fa-check-circle\"></i>&nbsp; Yes\n                                                            </button>\n                                                            <button *ngSwitchCase=\"'N'\"\n                                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                                <i class=\"fas fa-times-circle\"></i>&nbsp; No\n                                                            </button>\n\n                                                            <button *ngSwitchDefault\n                                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                                {{ \"-\" }}\n                                                            </button>\n                                                        </ng-container>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <ng-container matColumnDef=\"action\">\n                                                    <mat-header-cell class=\"pr-0 end-col mat-elevation-z0\"\n                                                        *matHeaderCellDef>Action</mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"pr-0\">\n                                                        <button mat-icon-button color=\"accent\"\n                                                            [disabled]=\"disableActions\" [hidden]=\"hideSubmit\"\n                                                            (click)=\"onEditNeedDetails(row)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'edit'\"\n                                                                [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                                        </button>\n                                                        <button mat-icon-button color=\"accent\"\n                                                            [disabled]=\"disableActions\" [hidden]=\"hideSubmit\"\n                                                            (click)=\"onDeleteNeedDetails(i)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                                        </button>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                                <mat-row *matRowDef=\"\n                            let row;\n                            let i = index;\n                            columns: displayedColumns\n                          \" (click)=\"onEditNeedDetails(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                                </mat-row>\n                                            </mat-table>\n                                            <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\"\n                                                    mode=\"indeterminate\">\n                                                </mat-progress-spinner>\n                                            </div>\n                                            <!-- <mat-paginator [pageSize]=\"100\" [pageSizeOptions]=\"[2, 6, 10, 20, 30, 40, 50, 100]\"\n                                                aria-label=\"Select page of users\"></mat-paginator> -->\n                                        </div>\n                                        <!-- </div> -->\n                                    </div>\n                                </mat-tab>\n\n                                <!-- Second tab -->\n                                <mat-tab>\n                                    <ng-template mat-tab-label>\n                                        <mat-icon>attach_file</mat-icon>\n                                        Upload Requisition Attachments\n                                    </ng-template>\n                                    <div class=\"mt-3\">\n                                        <!-- Content for the second tab -->\n                                        <ng-container *ngIf=\"!hideBgtButtons\">\n                                            <form [formGroup]=\"documentsForm\">\n                                                <!-- <form [formGroup]=\"form\"> -->\n\n                                                <!-- <div class=\"card bg-card\"> -->\n                                                <div style=\"margin: 20px\">\n                                                    <div class=\"table-responsive\">\n                                                        <div class=\"materialTableHeader bg-table-header font\">\n                                                            <div class=\"row\">\n                                                                <div class=\"col-8\">\n                                                                    <ul class=\"header-buttons-left ms-0\">\n                                                                        <li class=\"dropdown\">\n                                                                            <h2>Upload Documents</h2>\n                                                                        </li>\n                                                                        <li class=\"dropdown m-l-20\">\n                                                                            <label for=\"search-input\"><i\n                                                                                    class=\"material-icons search-icon\">search</i></label>\n                                                                            <input placeholder=\"Filter...\" type=\"text\"\n                                                                                (keyup)=\"applyFilter($event)\" #filter\n                                                                                class=\"browser-default search-field\"\n                                                                                aria-label=\"Search box\" />\n                                                                        </li>\n\n                                                                        <li>\n                                                                            <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                                                <button mat-mini-fab color=\"primary\"\n                                                                                    (click)=\"addFileRow()\">\n                                                                                    <mat-icon\n                                                                                        class=\"col-white\">add</mat-icon>\n                                                                                </button>\n                                                                            </div>\n                                                                        </li>\n                                                                    </ul>\n                                                                </div>\n                                                                <div class=\"col-4\"></div>\n                                                            </div>\n                                                        </div>\n                                                        <hr />\n\n                                                        <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                                                        <mat-table #table matTableExporter\n                                                            [dataSource]=\"attachementsDataSource\"\n                                                            formArrayName=\"filedetails\" matSort class=\"mat-cell\"\n                                                            #exporter=\"matTableExporter\">\n                                                            <!-- ID Column -->\n                                                            <ng-container matColumnDef=\"id\">\n                                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-6 start-col mat-elevation-z0\">Id</mat-header-cell>\n                                                                <mat-cell *matCellDef=\"let row; let index = index\"\n                                                                    [formGroupName]=\"index\"\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                                                    {{ index + 1 }}\n                                                                </mat-cell>\n                                                            </ng-container>\n\n                                                            <ng-container matColumnDef=\"filename\">\n                                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell mid-col mat-elevation-z0\">File\n                                                                    Name</mat-header-cell>\n                                                                <mat-cell *matCellDef=\"let row; let index = index\"\n                                                                    [formGroupName]=\"index\"\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                                                    <mat-form-field class=\"example-full-width mt-2 mr-5\"\n                                                                        appearance=\"fill\">\n                                                                        <mat-label>File Name</mat-label>\n                                                                        <input matInput type=\"text\"\n                                                                            formControlName=\"filename\"\n                                                                            placeholder=\"File name\" maxlength=\"50\" />\n                                                                    </mat-form-field>\n                                                                </mat-cell>\n                                                            </ng-container>\n                                                            <ng-container matColumnDef=\"filetype\">\n                                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell mid-col mat-elevation-z0\">File\n                                                                    Type</mat-header-cell>\n                                                                <mat-cell *matCellDef=\"let row; let index = index\"\n                                                                    [formGroupName]=\"index\"\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                                                    <mat-form-field class=\"example-full-width mt-2 mr-5\"\n                                                                        appearance=\"fill\">\n                                                                        <mat-label>File Type</mat-label>\n                                                                        <input matInput type=\"text\"\n                                                                            formControlName=\"filetype\"\n                                                                            placeholder=\"File type\" maxlength=\"50\" />\n                                                                    </mat-form-field>\n                                                                </mat-cell>\n                                                            </ng-container>\n\n                                                            <ng-container matColumnDef=\"selectFile\">\n                                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell mid-col mat-elevation-z0\">Select\n                                                                    File</mat-header-cell>\n                                                                <mat-cell *matCellDef=\"let row; let index = index\"\n                                                                    [formGroupName]=\"index\"\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                                                                    <input #file type=\"file\"\n                                                                        [disabled]=\"isLoading | async\" (change)=\"\n                                      onSelectFile(file.files, row, index)\n                                    \" [multiple]=\"'multiple'\" />\n                                                                </mat-cell>\n                                                            </ng-container>\n\n                                                            <ng-container matColumnDef=\"download\">\n                                                                <mat-header-cell\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-30 mid-col mat-elevation-z0\"\n                                                                    *matHeaderCellDef>Download</mat-header-cell>\n                                                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                                                    <button mat-icon-button color=\"primary\"\n                                                                        (click)=\"$event.stopPropagation()\"\n                                                                        (click)=\"downloadDocument(row)\"\n                                                                        class=\"tbl-action-btn\">\n                                                                        <mat-icon\n                                                                            aria-label=\"Download\">file_download</mat-icon>\n                                                                    </button>\n                                                                </mat-cell>\n                                                            </ng-container>\n\n                                                            <ng-container matColumnDef=\"action\">\n                                                                <mat-header-cell\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-30 end-col mat-elevation-z0\"\n                                                                    *matHeaderCellDef>Action</mat-header-cell>\n                                                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                                                    class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                                                    <button mat-icon-button color=\"accent\"\n                                                                        (click)=\"$event.stopPropagation()\"\n                                                                        (click)=\"deleteCall(row)\"\n                                                                        class=\"tbl-action-btn\">\n                                                                        <app-feather-icons [icon]=\"'trash-2'\"\n                                                                            [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                                                    </button>\n                                                                </mat-cell>\n                                                            </ng-container>\n\n                                                            <!-- Row definitions -->\n                                                            <mat-header-row\n                                                                *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                                                            <mat-row *matRowDef=\"\n                                  let row;\n                                  let i = index;\n                                  columns: displayColumns\n                                \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                                                            <mat-cell *matNoDataRow colspan=\"4\">No data matching the\n                                                                filter \"{{\n                                                                input.value\n                                                                }}\"</mat-cell>\n                                                        </mat-table>\n\n                                                        <!-- Loading spinner -->\n                                                        <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                                                            <mat-progress-spinner color=\"primary\" [diameter]=\"40\"\n                                                                mode=\"indeterminate\">\n                                                            </mat-progress-spinner>\n                                                        </div>\n                                                        <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[\n                                2, 5, 10, 20, 30, 40, 50, 100\n                              ]\" aria-label=\"Select page of users\"></mat-paginator>\n                                                    </div>\n                                                </div>\n                                                <!-- </div> -->\n                                            </form>\n                                        </ng-container>\n                                    </div>\n                                </mat-tab>\n                            </mat-tab-group>\n                        </ng-container>\n\n                        <div class=\"row m-t-25\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                <div class=\"example-button-row\" align=\"end\">\n                                    <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                        (click)=\"cancel()\">\n                                        <mat-icon>cancel</mat-icon>\n                                        Cancel\n                                    </button>\n\n                                    <ng-container *ngIf=\"!hideApprovals\">\n                                        <button class=\"btn-space\" [disabled]=\"formData.approvedByHOD\"\n                                            (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                                            <mat-icon>done_outline</mat-icon>\n                                            HOD Approval\n                                        </button>\n                                    </ng-container>\n\n                                    <ng-container *ngIf=\"!hideDispatch\">\n                                        <button class=\"btn-space\"\n                                            (click)=\"onDispatch(this.mngForm.value.requisitionCode)\" mat-raised-button\n                                            color=\"primary\">\n                                            <i class=\"material-icons\">emoji_transportation</i>\n                                            {{ pageFunction }} Requisition\n                                        </button>\n                                        <ng-container *ngIf=\"!hideReceive\">\n                                            <button class=\"btn-space\" (click)=\"onReceive()\" mat-raised-button\n                                                color=\"primary\">\n                                                <i class=\"material-icons\"></i>\n                                                {{ pageFunction }} Requisition\n                                            </button>\n                                        </ng-container>\n                                    </ng-container>\n\n                                    <button class=\"btn-space\" *ngIf=\"pageFunction === 'Add'\"\n                                        [disabled]=\"!mngForm.valid || dataSource.data.length === 0\"\n                                        [hidden]=\"hideSubmit\" mat-raised-button color=\"primary\"\n                                        (click)=\"performStockAvailabilityCheck()\">\n                                        <mat-icon>compare_arrows</mat-icon>\n                                        Check Stock Availability\n                                    </button>\n\n                                    <button class=\"btn-space\" [disabled]=\"\n                      !mngForm.valid ||\n                      dataSource.data.length === 0 ||\n                      !stockAvailabilityPassed\n                    \" [hidden]=\"hideSubmit\" (click)=\"onSubmit()\" mat-raised-button color=\"primary\">\n                                        <mat-icon>file_download</mat-icon>\n                                        {{ pageFunction }} Requisition\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams, HttpStatusCode } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { StockManagementService } from \"src/app/erp-inventory/data/services/stock-management.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { DatePipe } from \"@angular/common\";\n\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { RFPsService } from \"src/app/erp-procurement/data/services/rfps.service\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { BranchstoreLookupComponent } from \"src/app/erp-inventory/data/lookups/branchstore-lookup/branchstore-lookup.component\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { InventoryModule } from \"src/app/layout/sidebar/sidebar-items\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { DirectMainStoreService } from \"src/app/erp-inventory/data/services/direct-main-store.service\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\nimport { ViewReqItemsDialogComponent } from \"../view-req-items-dialog/view-req-items-dialog.component\";\nimport { AccountingJournalTransactionsComponent } from \"src/app/erp-finance/modules/finance-management/transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\n@Component({\n  selector: \"app-view-direct-mainstore-requisitions\",\n  templateUrl: \"./view-direct-mainstore-requisitions.component.html\",\n  styleUrls: [\"./view-direct-mainstore-requisitions.component.scss\"],\n})\nexport class ViewDirectMainstoreRequisitionsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"requisitionCode\",\n    \"empPf\",\n    \"requisitionTitle\",\n    \"requisitionDescription\",\n\n    // \"tranCode\",\n    // \"transactionStatus\",\n    // \"tranDate\",\n\n    \"status\",\n    \"action\",\n  ];\n  dataSource: MatTableDataSource<any> = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n\n  //*************************************************************************************** */\n  selection = new SelectionModel<any>(true, []);\n\n  displayedColumnsSecond: string[] = [\n    \"requisitionCode\",\n    \"requisitionTitle\",\n    \"requisitionDescription\",\n\n    // \"tranCode\",\n    // \"transactionStatus\",\n    // \"tranDate\",\n\n    \"status\",\n    \"action\",\n  ];\n  dataSourceSecond: MatTableDataSource<any> = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorSecond!: MatPaginator;\n  @ViewChild(MatSort) sortSecond!: MatSort;\n  //****************************************************************************************** */\n\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  Form: FormGroup;\n  currentDate: Date = new Date();\n  dateTomorrow: Date = new Date(\n    this.currentDate.getTime() + 1 * 24 * 60 * 60 * 1000\n  );\n  oneWeekAgo: Date = new Date(\n    this.currentDate.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n\n  currentUser: any;\n  currentBranch: any;\n  mngForm: FormGroup;\n  currentUserRole: any;\n  // hideBranchFilter: boolean = true;\n  hideReceive: boolean = true;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private rFPsService: RFPsService,\n    private StockManService: StockManagementService,\n    private fb: FormBuilder,\n    private datepipe: DatePipe,\n    private accessControlService: AccessControlService,\n    private tokenStorageService: TokenStorageService,\n    private tokenCookieService: TokenCookieService,\n    private dialog: MatDialog,\n    private directMainStoreService: DirectMainStoreService,\n    private transactionService: TransactionsService,\n    private requisitionService: RequisitionService\n  ) { }\n\n  // *************************************************************************************************************************************************\n  //On page initialiazation\n  ngOnInit(): void {\n    this.currentUser = this.tokenStorageService.getUser(); //fetches the current user\n\n    this.Form = this.fb.group({\n      myRequisitionsStatus: [\"PENDING\", Validators.required],\n      allRequisitionsStatus: [\"PENDING\", Validators.required],\n    });\n    this.getAllData();\n    this.getMyData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // *************************************************************************************************************************************************\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  //**********************************************************************************************************\n  // Find by status\n  //**********************************************************************************************************\n\n\n\n  selectedMyRequisitionsStatus: string = \"PENDING\";\n  selectedAllRequisitionsStatus: string = \"PENDING\";\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n\n\n\n  getAllRequisitionsSelectSelectedStatus() {\n    this.getAllData();\n  }\n  getAllRequisitionsSelectedStatus(allRequisitionsStatus: any) {\n\n    console.log(\"allRequisitionsStatus:: \", allRequisitionsStatus)\n    this.Form.patchValue({\n      allRequisitionsStatus: allRequisitionsStatus,\n    });\n\n    this.getAllData();\n  }\n  isAllLoading: boolean = true;\n  getAllData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedAllRequisitionsStatus = this.Form.value.allRequisitionsStatus;\n\n    let params = {\n      status: this.Form.value.allRequisitionsStatus,\n    };\n\n    this.directMainStoreService\n      .getInternalRequisitionsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res;\n            this.isAllLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  dataSecond: any;\n  isMyLoading: boolean = true;\n\n  getMyRequisitionsSelectSelectedStatus() {\n    this.getMyData();\n    \n  }\n  getMyRequisitionsSelectedStatus(myRequisitionsStatus: any) {\n    this.Form.patchValue({\n      myRequisitionsStatus: myRequisitionsStatus,\n    });\n\n    this.getMyData();\n  }\n  getMyData() {\n    this.dataSourceSecond = new MatTableDataSource([]);\n    this.dataSourceSecond.paginator = this.paginatorSecond;\n    this.dataSourceSecond.sort = this.sortSecond;\n    this.isMyLoading = true;\n    this.selectedMyRequisitionsStatus = this.Form.value.myRequisitionsStatus;\n\n    let params = {\n      status: this.Form.value.myRequisitionsStatus,\n      empPf: this.currentUser.empPfNo\n    };\n\n    console.log(\"params :\", params)\n\n    this.directMainStoreService\n      .getInternalRequisitionsByStatusAndPfNo(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.dataSecond = res;\n            this.isLoading = false;\n            this.dataSourceSecond = new MatTableDataSource(this.dataSecond.entity);\n            this.dataSourceSecond.paginator = this.paginatorSecond;\n            this.dataSourceSecond.sort = this.sortSecond;\n\n            console.log(\"this.dataSecond :\", this.dataSecond);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getAllData();\n  }\n  // ****************************************************************************************************************************\n\n  //branchstore lookup\n  branchStoreCode = \"\";\n\n  selectedBranchStore: any[] = [];\n  branchStoreLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      selected: this.selectedBranchStore,\n    };\n    console.log(\"Branch: \", this.selectedBranchStore);\n    const dialogRef = this.dialog.open(\n      BranchstoreLookupComponent,\n      dialogConfig\n    );\n\n    dialogRef.afterClosed().subscribe((result) => {\n      result.data.forEach((element) => {\n        this.branchStoreCode = element.branchStoreCode;\n        this.mngForm.patchValue({\n          branchCode: element.branchCode,\n        });\n      });\n    });\n  }\n\n  selectedItem: any;\n  checkRequisition(row: any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"\",\n      selected: this.selectedItem,\n      data: row\n    };\n    const dialogRef = this.dialog.open(ViewReqItemsDialogComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        \n      });\n    });\n  }\n\n//************************************************************************************************************************** */\n\n  //getting requisitions by status\n  getRequisitionsByStatus() {\n    const params = new HttpParams()\n      .set(\"branchCode\", this.currentBranch)\n      .set(\"status\", this.Form.value.status);\n    console.log(\"params: \", params);\n\n    this.directMainStoreService\n      .getInternalRequisitionsByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode == 200) {\n            this.data = res.entity;\n            // this.data = this.getAllData();\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  //add requisition\n  addRequisition() {\n    this.router.navigate([\"/erp-inventory/inventory/request-stock-directly\"]);\n  }\n\n  // edit requisition\n  editRequisition(data: any) {\n    let route = \"/erp-inventory/inventory/request-stock-directly\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n\n        action: \"Update\",\n      },\n    });\n  }\n\n  // view requisition\n  viewRequisition(data: any) {\n    let route = \"/erp-inventory/inventory/request-stock-directly\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n\n        action: \"View\",\n      },\n    });\n  }\n\n\n  // Receive Requisition\n  receiveRequisition(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = \"/erp-inventory/inventory/request-stock-directly\";\n    this.router.navigate([route], {\n      queryParams: {\n        requisitionCode: data.requisitionCode,\n        additionalData: serializedData,\n        action: \"Receive\",\n      },\n    });\n  }\n\n  deleteRequisition(requisitionCode: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Requisition?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Requisition!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams()\n          .set(\"requisitionCode\", requisitionCode)\n          .set(\"username\", this.currentUserRole);\n        this.directMainStoreService\n          .deleteInternalRequisitionTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getAllData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Internal Requisitions\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"InventoryModule\", [\n      privilege,\n    ]);\n\n    this.hasAccess = true;\n\n    if (this.hasAccess) {\n      Swal.fire({\n        title: \"Confirmation\",\n        text: \"Do you want to release these items?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n      }).then((confirmationResult) => {\n        if (confirmationResult.isConfirmed) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selectedRows.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              this.directMainStoreService\n                .validateInternalRequisitions(processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getAllData();\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n\n\n  //********************************************************************************************************************** */\n  //accounting Select\n  //********************************************************************************************************************** */\n\n  // New selection for a different MatTable\n  // accountingTableSelection = new SelectionModel<any>(false, []);\n  // accountingSelectItemsSelected: boolean = false;\n  // accountingCheckboxSelectedRows: any;\n\n  // isAllaccountingTableSelected() {\n  //   const numSelected = this.accountingTableSelection.selected.length;\n  //   const numRows = this.dataSource.data.length;\n  //   return numSelected === numRows;\n  // }\n\n  // masteraccountingTableToggle() {\n  //   if (this.isAllaccountingTableSelected()) {\n  //     this.accountingTableSelection.clear();\n  //     return;\n  //   }\n\n  //   this.accountingTableSelection.select(...this.dataSource.data);\n  // }\n\n  // checkboxaccountingTableLabel(row?: any): string {\n  //   if (!row) {\n  //     return `${this.isAllaccountingTableSelected() ? \"deselect\" : \"select\"\n  //       } all`;\n  //   }\n  //   return `${this.accountingTableSelection.isSelected(row) ? \"deselect\" : \"select\"\n  //     } row ${row.position + 1}`;\n  // }\n\n  // checkaccountingTableSelection() {\n  //   const numSelected = this.accountingTableSelection.selected.length;\n  //   const numRows = this.dataSource.data.length;\n  //   if (numSelected === numRows) {\n  //     this.accountingSelectItemsSelected = true;\n  //   } else if (numSelected !== numRows) {\n  //     this.accountingSelectItemsSelected = false;\n  //   }\n\n  //   console.log(\n  //     \"accountingSelectItemsSelected: \",\n  //     this.accountingSelectItemsSelected\n  //   );\n  // }\n\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n    //this.accountingCheckboxSelectedRows = this.accountingTableSelection.selected;\n\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.selection.selected[0].id\n    );\n\n    // if (\n    //   this.selection.selected[0].transactionStatus === \"PENDING\"\n    // ) {\n    //   this.snackbar.showNotification(\n    //     \"snackbar-danger\",\n    //     \"This record must be saved first\"\n    //   );\n    //   return;\n    // }\n\n    if (\n      this.transactionAction === \"Add\" &&\n      this.selection.selected[0]?.tranCode\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Transaction already exists for this record\"\n      );\n    } else if (\n      this.transactionAction !== \"Add\" &&\n      (this.selection.selected[0]?.tranCode === null ||\n        this.selection.selected[0]?.tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    } else {\n      this.transactionLookUp();\n    }\n\n\n  }\n\n  // ****************************************************************************************************************************\n  transactionType: string = \"Inventory\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\n      \"this.selection:: \",\n      this.selection.selected[0]\n    );\n\n    let addBody = {};\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n        referenceCode: this.selection.selected[0].requisitionCode,\n        itemCode: \"\",\n        parttrans: [\n          {\n            accountNo: \"\",\n            amount: this.selection.selected[0].invoiceAmount,\n            partTranstype: \"Debit\",\n          },\n        ],\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.selection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.selection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n        this.updateInventoryTransactionStatus();\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  updateInventoryTransactionStatus() {\n    let params = {\n      transactionType: this.transactionResponse.transactionType,\n      tranCode: this.transactionResponse.tranCode,\n      tranDate: this.transactionResponse.tranDate,\n      referenceCode: this.transactionResponse.referenceCode,\n    };\n    this.requisitionService\n      .updateReceivedItemsTransactionStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n            this.getAllData();\n            // this.router.navigate([\n            //   \"/erp-procurement/requisitions/all-requisitions\",\n            // ]);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  // ****************************************************************************************************************************\n}\n\n\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Direct Main Store Requisitions'\" [items]=\"['Requisitions']\"\n                [active_item]=\"'All Requisitions'\">\n            </app-breadcrumb>\n        </div>\n        <app-gen-widgets></app-gen-widgets>\n\n\n        <div class=\"card\">\n            <div class=\"header\">\n                <h2>Internal Requisitions</h2>\n            </div>\n\n            <div class=\"body\">\n                <mat-tab-group>\n                    <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>list_alt</mat-icon>\n                            All Internal Requisitions\n                        </ng-template>\n\n                        <div class=\"row mx-1\">\n                            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n\n                                <div class=\"body\">\n                                    <div class=\"table-responsive\">\n                                        <div class=\"materialTableHeader\">\n                                            <div class=\"row\">\n                                                <div class=\"col-8\">\n\n                                                    <!-- Table Functions -->\n                                                    <ul class=\"header-buttons-left ms-0\">\n                                                        <li class=\"dropdown\">\n                                                            <h2>Internal Requisitions</h2>\n                                                        </li>\n\n                                                        <!-- Search Functions -->\n                                                        <li class=\"dropdown m-l-20\">\n                                                            <label for=\"search-input\">\n                                                                <i class=\"material-icons search-icon\">\n                                                                    search\n                                                                </i>\n                                                            </label>\n                                                            <input placeholder=\"Filter...\" type=\"text\"\n                                                                (keyup)=\"applyFilter($event)\" #filter\n                                                                class=\"browser-default search-field\"\n                                                                aria-label=\"Search box\">\n                                                        </li>\n\n                                                        <!-- Add Function -->\n                                                        <li>\n                                                            <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                                <button mat-mini-fab color=\"primary\"\n                                                                    (click)=\"addRequisition()\">\n                                                                    <mat-icon class=\"col-white\">add</mat-icon>\n                                                                </button>\n                                                            </div>\n                                                        </li>\n\n                                                        <!-- Refresh Function -->\n                                                        <li>\n                                                            <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                                <button mat-mini-fab color=\"primary\"\n                                                                    (click)=\"refresh()\">\n                                                                    <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                                </button>\n                                                            </div>\n                                                        </li>\n\n                                                        <!-- Container element with *ngIf condition -->\n                                                        <li *ngIf=\"this.selectedRows.length > 0\">\n                                                            <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                                <button mat-mini-fab color=\"primary\"\n                                                                    (click)=\"processMultipleRows('APPROVED')\"\n                                                                    class=\"mat-button-custom\">\n                                                                    <mat-icon class=\"col-white\">check</mat-icon>\n                                                                </button>\n                                                            </div>\n                                                        </li>\n                                                        <li *ngIf=\"this.selectedRows.length > 0\">\n                                                            <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                                <button mat-mini-fab color=\"warn\"\n                                                                    (click)=\"processMultipleRows('REJECTED')\"\n                                                                    class=\"mat-button-custom\">\n                                                                    <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                                </button>\n                                                            </div>\n                                                        </li>\n                                                        <li *ngIf=\"this.selectedRows.length > 0\">\n                                                            <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                                <button mat-mini-fab color=\"accent\"\n                                                                    (click)=\"processMultipleRows('RETURNED')\"\n                                                                    class=\"mat-button-custom\">\n                                                                    <mat-icon class=\"col-white\">undo</mat-icon>\n                                                                </button>\n                                                            </div>\n                                                        </li>\n                                                    </ul>\n\n\n\n                                                    <!-- Export Functions -->\n                                                </div>\n                                                <div class=\"col-4\">\n                                                    <ul class=\"header-buttons\">\n                                                        <!-- XLSX export -->\n                                                        <li>\n                                                            <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                                <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                                    (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                            </div>\n                                                        </li>\n\n                                                        <!-- CSV Export -->\n                                                        <li>\n                                                            <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                                <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                                    (click)=\"exporter.exportTable('csv')\" />\n                                                            </div>\n                                                        </li>\n                                                        <li>\n                                                            <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                                <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                                    (click)=\"exporter.exportTable('json')\" />\n                                                            </div>\n                                                        </li>\n\n                                                        <!-- TXT Export -->\n                                                        <li>\n                                                            <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                                <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                                    (click)=\"exporter.exportTable('txt')\" />\n                                                            </div>\n                                                        </li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"materialTableHeader mt-2\">\n                                            <div class=\"row\">\n\n\n                                                <div class=\"col-2\">\n                                                    <h2>Req Status:</h2>\n                                                </div>\n                                                <div class=\"col-10\">\n                                                    <div class=\"button-container mt-1\">\n                                                        <!-- Button for PENDING status -->\n                                                        <button mat-raised-button\n                                                            [class.active]=\"selectedAllRequisitionsStatus === 'PENDING'\"\n                                                            class=\"mat-button pending\"\n                                                            (click)=\"getAllRequisitionsSelectedStatus('PENDING')\">\n                                                            <mat-icon>pending</mat-icon>\n                                                            PENDING\n                                                        </button>\n\n                                                        <!-- Button for APPROVED status -->\n                                                        <button mat-raised-button\n                                                            [class.active]=\"selectedAllRequisitionsStatus === 'APPROVED'\"\n                                                            class=\"mat-button approved\"\n                                                            (click)=\"getAllRequisitionsSelectedStatus('APPROVED')\">\n                                                            <mat-icon>thumb_up</mat-icon>\n                                                            APPROVED\n                                                        </button>\n                                                        <!-- Button for RETURNED status -->\n                                                        <button mat-raised-button\n                                                            [class.active]=\"selectedAllRequisitionsStatus === 'RETURNED'\"\n                                                            class=\"mat-button returned\"\n                                                            (click)=\"getAllRequisitionsSelectedStatus('RETURNED')\">\n                                                            <mat-icon>reply</mat-icon>\n                                                            RETURNED\n                                                        </button>\n\n                                                        <!-- Button for REJECTED status -->\n                                                        <button mat-raised-button\n                                                            [class.active]=\"selectedAllRequisitionsStatus === 'REJECTED'\"\n                                                            class=\"mat-button rejected\"\n                                                            (click)=\"getAllRequisitionsSelectedStatus('REJECTED')\">\n                                                            <mat-icon>cancel</mat-icon>\n                                                            REJECTED\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"materialTableHeader mt-2\" *ngIf=\"selection.selected.length > 0\">\n                                            <div class=\"row\">\n                                              <div class=\"col-12\">\n                                                <ul class=\"header-buttons-left ms-0\">\n                                                  <li class=\"dropdown\">\n                                                    <h2>Accounting Actions: </h2>\n                                                  </li>\n                            \n                                                  <!-- Accounting Actions Buttons -->\n                                                  <ng-container>\n                                                    <li *ngIf=\"selection.selected.length > 0\">\n                                                      <div class=\"m-l-10\" matTooltip=\"Add Accounting Details\">\n                                                        <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Add')\">\n                                                          <mat-icon class=\"col-white\">add_circle</mat-icon>\n                                                        </button>\n                                                      </div>\n                                                    </li>\n                            \n                                                    <li *ngIf=\"selection.selected.length > 0\">\n                                                      <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                                                        <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Update')\">\n                                                          <mat-icon class=\"col-white\">edit</mat-icon>\n                                                        </button>\n                                                      </div>\n                                                    </li>\n                            \n                                                    <li *ngIf=\"selection.selected.length > 0\">\n                                                      <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                                                        <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('View')\">\n                                                          <mat-icon class=\"col-white\">visibility</mat-icon>\n                                                        </button>\n                                                      </div>\n                                                    </li>\n                                                  </ng-container>\n                                                </ul>\n                                              </div>\n                                            </div>\n                                          </div>\n\n\n                                        <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                                            class=\"mat-cell my-class-with-custom-shadow\" #exporter=\"matTableExporter\"\n                                            class=\"font-table mat-cell\">\n\n                                            <!-- Select Column -->\n                                            <ng-container matColumnDef=\"select\">\n                                                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                                        [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                                    </mat-checkbox>\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                                    <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                                        [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                                    </mat-checkbox>\n                                                </mat-cell>\n                                            </ng-container>\n\n                                            <!-- requisitionCode-->\n                                            <ng-container matColumnDef=\"requisitionCode\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"> Requisition Code\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    {{row.requisitionCode}}</mat-cell>\n                                            </ng-container>\n\n\n                                            <ng-container matColumnDef=\"empPf\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"> Employee PF Code\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    {{row.empPf}}</mat-cell>\n                                            </ng-container>\n\n\n                                            <!-- requisitionTitle-->\n                                            <ng-container matColumnDef=\"requisitionTitle\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"> Requisition Title\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    {{row.requisitionTitle}}</mat-cell>\n                                            </ng-container>\n\n\n                                            <!-- requisitionDescription-->\n                                            <ng-container matColumnDef=\"requisitionDescription\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"> Items Requested\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    {{row.requisitionDescription}}</mat-cell>\n                                            </ng-container>\n\n<!-- \n                                            <ng-container matColumnDef=\"tranCode\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                    TranCode\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                    {{ row.tranCode || \"-\" }}\n                                                </mat-cell>\n                                            </ng-container> -->\n\n                                            <!-- <ng-container matColumnDef=\"transactionStatus\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                                    TranStatus\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                                                        <button *ngSwitchCase=\"'PENDING'\"\n                                                            class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-check-circle\"></i>&nbsp; {{\n                                                            row.transactionStatus }}\n                                                        </button>\n\n                                                        <button *ngSwitchCase=\"'POSTED'\"\n                                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-undo-alt\"></i>&nbsp; {{\n                                                            row.transactionStatus }}\n                                                        </button>\n\n                                                        <ng-container *ngSwitchDefault>\n                                                            N.A\n                                                        </ng-container>\n                                                    </ng-container>\n                                                </mat-cell>\n                                            </ng-container> -->\n\n\n                                            <!-- <ng-container matColumnDef=\"tranDate\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                    Tran Date\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                    {{row.tranDate ? (row.tranDate | date : \"short\") : 'N.A'}}\n                                                </mat-cell>\n                                            </ng-container> -->\n\n                                            <!-- Status -->\n                                            <ng-container matColumnDef=\"status\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    Status\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"\n                                                    (click)=\"$event.stopPropagation()\">\n                                                    <ng-container [ngSwitch]=\"row.status\">\n                                                        <button *ngSwitchCase=\"'APPROVED'\"\n                                                            class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                        <button *ngSwitchCase=\"'REJECTED'\"\n                                                            class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                        <button *ngSwitchCase=\"'RETURNED'\"\n                                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                        <button *ngSwitchCase=\"'PENDING'\"\n                                                            class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                        <button *ngSwitchDefault\n                                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                    </ng-container>\n                                                </mat-cell>\n                                            </ng-container>\n\n\n\n                                            <ng-container matColumnDef=\"action\">\n                                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\"\n                                                    *matHeaderCellDef>Action</mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\">\n\n                                                    <!-- View Button -->\n                                                    <ng-container>\n                                                        <button matTooltip=\"View\" mat-icon-button color=\"primary\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"viewRequisition(row)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'eye'\"\n                                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                                        </button>\n                                                    </ng-container>\n\n                                                    <!-- Edit Button -->\n                                                    <ng-container>\n                                                        <button matTooltip=\"Edit\" mat-icon-button color=\"accent\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"editRequisition(row)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'edit'\"\n                                                                [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                                        </button>\n                                                    </ng-container>\n\n                                                    <!-- Delete Button -->\n                                                    <ng-container>\n                                                        <button matTooltip=\"Delete\" mat-icon-button color=\"accent\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"deleteRequisition(row.requisitionCode)\"\n                                                            class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                                        </button>\n                                                    </ng-container>\n\n                                                    <!--Receive Button  -->\n                                                    <ng-container>\n                                                        <button [hidden]=\"row.status!='InTransit' \" matTooltip=\"Receive\"\n                                                            mat-icon-button color=\"primary\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"receiveRequisition(row)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'package'\"\n                                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                                        </button>\n                                                    </ng-container>\n\n                                                </mat-cell>\n                                            </ng-container>\n                                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                                                (click)=\"checkRequisition(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                            </mat-row>\n                                            <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter\n                                                \"{{input.value}}\"</mat-cell>\n                                        </mat-table>\n                                        <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                            <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                            </mat-progress-spinner>\n                                        </div>\n                                        <mat-paginator [pageSize]=\"10\"\n                                            [pageSizeOptions]=\"[1,2,5,10,20, 30, 40, 50, 100]\"\n                                            aria-label=\"Select page of users\"></mat-paginator>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </mat-tab>\n\n                    <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>shopping_cart</mat-icon>\n                            My Internal Requisitions\n                        </ng-template>\n\n                        <div class=\"row mx-1\">\n                            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n\n                                <div class=\"body\">\n                                    <div class=\"table-responsive\">\n                                        <div class=\"materialTableHeader\">\n                                            <div class=\"row\">\n                                                <div class=\"col-8\">\n\n                                                    <!-- Table Functions -->\n                                                    <ul class=\"header-buttons-left ms-0\">\n                                                        <li class=\"dropdown\">\n                                                            <h2>Internal Requisitions</h2>\n                                                        </li>\n\n                                                        <!-- Search Functions -->\n                                                        <li class=\"dropdown m-l-20\">\n                                                            <label for=\"search-input\">\n                                                                <i class=\"material-icons search-icon\">\n                                                                    search\n                                                                </i>\n                                                            </label>\n                                                            <input placeholder=\"Filter...\" type=\"text\"\n                                                                (keyup)=\"applyFilter($event)\" #filter\n                                                                class=\"browser-default search-field\"\n                                                                aria-label=\"Search box\">\n                                                        </li>\n\n                                                        <!-- Add Function -->\n                                                        <li>\n                                                            <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                                <button mat-mini-fab color=\"primary\"\n                                                                    (click)=\"addRequisition()\">\n                                                                    <mat-icon class=\"col-white\">add</mat-icon>\n                                                                </button>\n                                                            </div>\n                                                        </li>\n\n                                                        <!-- Refresh Function -->\n                                                        <li>\n                                                            <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                                <button mat-mini-fab color=\"primary\"\n                                                                    (click)=\"refresh()\">\n                                                                    <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                                </button>\n                                                            </div>\n                                                        </li>\n\n                                                    </ul>\n\n\n\n                                                    <!-- Export Functions -->\n                                                </div>\n                                                <div class=\"col-4\">\n                                                    <ul class=\"header-buttons\">\n                                                        <!-- XLSX export -->\n                                                        <li>\n                                                            <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                                <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                                    (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                            </div>\n                                                        </li>\n\n                                                        <!-- CSV Export -->\n                                                        <li>\n                                                            <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                                <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                                    (click)=\"exporter.exportTable('csv')\" />\n                                                            </div>\n                                                        </li>\n                                                        <li>\n                                                            <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                                <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                                    (click)=\"exporter.exportTable('json')\" />\n                                                            </div>\n                                                        </li>\n\n                                                        <!-- TXT Export -->\n                                                        <li>\n                                                            <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                                <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                                    (click)=\"exporter.exportTable('txt')\" />\n                                                            </div>\n                                                        </li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"materialTableHeader mt-2\">\n                                            <div class=\"row\">\n                                                <div class=\"col-2\">\n                                                    <h2>My Requisitions Status:</h2>\n                                                </div>\n                                                <div class=\"col-10\">\n                                                    <div class=\"button-container mt-1\">\n                                                        <!-- Button for PENDING status -->\n                                                        <button mat-raised-button\n                                                            [class.active]=\"selectedMyRequisitionsStatus === 'PENDING'\"\n                                                            class=\"mat-button pending\"\n                                                            (click)=\"getMyRequisitionsSelectedStatus('PENDING')\">\n                                                            <mat-icon>pending</mat-icon>\n                                                            PENDING\n                                                        </button>\n\n                                                        <!-- Button for APPROVED status -->\n                                                        <button mat-raised-button\n                                                            [class.active]=\"selectedMyRequisitionsStatus === 'APPROVED'\"\n                                                            class=\"mat-button approved\"\n                                                            (click)=\"getMyRequisitionsSelectedStatus('APPROVED')\">\n                                                            <mat-icon>thumb_up</mat-icon>\n                                                            APPROVED\n                                                        </button>\n                                                        <!-- Button for RETURNED status -->\n                                                        <button mat-raised-button\n                                                            [class.active]=\"selectedMyRequisitionsStatus === 'RETURNED'\"\n                                                            class=\"mat-button returned\"\n                                                            (click)=\"getMyRequisitionsSelectedStatus('RETURNED')\">\n                                                            <mat-icon>reply</mat-icon>\n                                                            RETURNED\n                                                        </button>\n\n                                                        <!-- Button for REJECTED status -->\n                                                        <button mat-raised-button\n                                                            [class.active]=\"selectedMyRequisitionsStatus === 'REJECTED'\"\n                                                            class=\"mat-button rejected\"\n                                                            (click)=\"getMyRequisitionsSelectedStatus('REJECTED')\">\n                                                            <mat-icon>cancel</mat-icon>\n                                                            REJECTED\n                                                        </button>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n\n                                        <mat-table #table matTableExporter [dataSource]=\"dataSourceSecond\" matSort\n                                            class=\"mat-cell my-class-with-custom-shadow\" #exporter=\"matTableExporter\"\n                                            class=\"font-table mat-cell\">\n\n                                            <!-- requisitionCode-->\n                                            <ng-container matColumnDef=\"requisitionCode\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"> Requisition Code\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    {{row.requisitionCode}}</mat-cell>\n                                            </ng-container>\n\n                                            <!-- requisitionTitle-->\n                                            <ng-container matColumnDef=\"requisitionTitle\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"> Requisition Title\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    {{row.requisitionTitle}}</mat-cell>\n                                            </ng-container>\n\n\n                                            <!-- requisitionDescription-->\n                                            <ng-container matColumnDef=\"requisitionDescription\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"> Items Requested\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    {{row.requisitionDescription}}</mat-cell>\n                                            </ng-container>\n\n                                            <!-- Status -->\n                                            <ng-container matColumnDef=\"status\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                    Status\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-15\"\n                                                    (click)=\"$event.stopPropagation()\">\n                                                    <ng-container [ngSwitch]=\"row.status\">\n                                                        <button *ngSwitchCase=\"'APPROVED'\"\n                                                            class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                        <button *ngSwitchCase=\"'REJECTED'\"\n                                                            class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                        <button *ngSwitchCase=\"'RETURNED'\"\n                                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                        <button *ngSwitchCase=\"'PENDING'\"\n                                                            class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                        <button *ngSwitchDefault\n                                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                            {{ row.status }}\n                                                        </button>\n                                                    </ng-container>\n                                                </mat-cell>\n                                            </ng-container>\n\n                                            <!-- <ng-container matColumnDef=\"tranCode\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                                  matTooltip=\"QuantityCancelled\">\n                                                  TranCode\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                  {{ row.tranCode || \"-\" }}\n                                                </mat-cell>\n                                              </ng-container>\n                                               -->\n                                              <!-- <ng-container matColumnDef=\"transactionStatus\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                                    TranStatus\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                                                        <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-check-circle\"></i>&nbsp; {{ row.transactionStatus }}\n                                                        </button>\n                                            \n                                                        <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                            <i class=\"fas fa-undo-alt\"></i>&nbsp; {{ row.transactionStatus }}\n                                                        </button>\n                                            \n                                                        <ng-container *ngSwitchDefault>\n                                                            N.A\n                                                        </ng-container>\n                                                    </ng-container>\n                                                </mat-cell>\n                                            </ng-container> -->\n            \n<!--                                             \n                                              <ng-container matColumnDef=\"tranDate\">\n                                                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                    Tran Date\n                                                </mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                    {{row.tranDate ? (row.tranDate | date : \"short\") : 'N.A'}}\n                                                </mat-cell>\n                                            </ng-container> -->\n\n                                            <ng-container matColumnDef=\"action\">\n                                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\"\n                                                    *matHeaderCellDef>Action</mat-header-cell>\n                                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                                    class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\">\n\n                                                    <!-- View Button -->\n                                                    <ng-container>\n                                                        <button matTooltip=\"View\" mat-icon-button color=\"primary\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"viewRequisition(row)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'eye'\"\n                                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                                        </button>\n                                                    </ng-container>\n\n                                                    <!-- Edit Button -->\n                                                    <ng-container>\n                                                        <button matTooltip=\"Edit\" mat-icon-button color=\"accent\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"editRequisition(row)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'edit'\"\n                                                                [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                                        </button>\n                                                    </ng-container>\n\n                                                    <!-- Delete Button -->\n                                                    <ng-container>\n                                                        <button matTooltip=\"Delete\" mat-icon-button color=\"accent\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"deleteRequisition(row.requisitionCode)\"\n                                                            class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                                        </button>\n                                                    </ng-container>\n\n                                                    <!--Receive Button  -->\n                                                    <ng-container>\n                                                        <button [hidden]=\"row.status!='InTransit' \" matTooltip=\"Receive\"\n                                                            mat-icon-button color=\"primary\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"receiveRequisition(row)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'package'\"\n                                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                                        </button>\n                                                    </ng-container>\n\n                                                </mat-cell>\n                                            </ng-container>\n                                            <mat-header-row *matHeaderRowDef=\"displayedColumnsSecond\"></mat-header-row>\n                                            <mat-row *matRowDef=\"let row; columns: displayedColumnsSecond;\"\n                                                (click)=\"checkRequisition(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                            </mat-row>\n                                            <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter\n                                                \"{{input.value}}\"</mat-cell>\n                                        </mat-table>\n                                        <div *ngIf=\"dataSourceSecond.data.length === 0\" class=\"tbl-spinner\">\n                                            <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                            </mat-progress-spinner>\n                                        </div>\n                                        <mat-paginator [pageSize]=\"10\"\n                                            [pageSizeOptions]=\"[1,2,5,10,20, 30, 40, 50, 100]\"\n                                            aria-label=\"Select page of users\"></mat-paginator>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </div>\n        </div>\n\n\n    </div>\n</section>","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { ViewDirectMainstoreRequisitionsComponent } from '../view-direct-mainstore-requisitions/view-direct-mainstore-requisitions.component';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-view-req-items-dialog',\n  templateUrl: './view-req-items-dialog.component.html',\n  styleUrls: ['./view-req-items-dialog.component.scss']\n})\nexport class ViewReqItemsDialogComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"itemCode\",\n    \"quantity\",\n   // \"unitOfMeasure\",\n    \"tranCode\",\n    \"transactionStatus\",\n   // \"tranDate\",\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource: MatTableDataSource<any> = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n\n  selection = new SelectionModel<any>(true, []);\n\n    //*************************************************************************************** */\n\n\n  requisitionData: any;\n  dataToDisplay: any;\n\n  constructor(public dialogRef: MatDialogRef<ViewDirectMainstoreRequisitionsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,) { }\n\n  ngOnInit(): void {\n    this.requisitionData = {\n      \"departmentcode\": null,\n      \"branchcode\": null,\n      \"costcentercode\": null,\n      \"membercode\": null,\n      \"postedFlag\": \"Y\",\n      \"postedBy\": \"Superuser\",\n      \"postedTime\": \"2023-12-11T13:33:19.623591\",\n      \"modifiedFlag\": \"N\",\n      \"modifiedBy\": null,\n      \"modifiedTime\": null,\n      \"verifiedFlag\": \"N\",\n      \"verifiedBy\": null,\n      \"verifiedTime\": null,\n      \"deletedFlag\": \"N\",\n      \"deletedBy\": null,\n      \"deletedTime\": null,\n      \"id\": 6,\n      \"requisitionCode\": \"INC#17023015996066\",\n      \"requisitionTitle\": \"Test\",\n      \"requisitionDescription\": \"Main\",\n      \"storeId\": null,\n      \"status\": \"PENDING\",\n      \"empPf\": \"SU123\",\n      \"transactionType\": null,\n      \"tranCode\": null,\n      \"tranDate\": null,\n      \"transactionStatus\": \"PENDING\",\n      \"attachments\": null,\n      \"items\": [\n        {\n          \"id\": 16,\n          \"itemCode\": \"CI#1700033036732\",\n          \"name\": null,\n          \"quantity\": 24,\n          \"issuedQuantity\": 0,\n          \"purpose\": null,\n          \"unitOfMeasure\": \"Pcks\",\n          \"available\": \"Y\",\n          \"automatedReorderPoint\": 0,\n          \"minimumStockLevel\": 0,\n          \"needByDate\": \"2023-12-30T21:00:00\"\n        },\n        {\n          \"id\": 17,\n          \"itemCode\": \"CI#1700033036732\",\n          \"name\": null,\n          \"quantity\": 2,\n          \"issuedQuantity\": 0,\n          \"purpose\": null,\n          \"unitOfMeasure\": \"Pcks\",\n          \"available\": \"Y\",\n          \"automatedReorderPoint\": 0,\n          \"minimumStockLevel\": 0,\n          \"needByDate\": \"2023-12-30T21:00:00\"\n        }\n      ]\n    }\n\n\n  this.dataToDisplay = this.requisitionData.items;\n  this.dataSource = new MatTableDataSource(this.dataToDisplay);\n  this.dataSource.paginator = this.paginator;\n  this.dataSource.sort = this.sort;\n  }\n\n\n \n}\n","<!-- your-dialog.component.html -->\n\n<div class=\"addContainer\">\n    <div *ngIf=\"requisitionData\" class=\"contact-details\">\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">\n          <strong>Approved Direct Transaction - Details - {{ requisitionData.requisitionTitle }}</strong>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div class=\"row mt-1\" style=\"width: 98%; margin-left: 20px\">\n            <!-- Left Column -->\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\n              <div class=\"row justify-content-center\">\n                <!-- ... (existing code remains unchanged) ... -->\n                <div class=\"col-7 pro-left m-b-10\">{{ requisitionData.requisitionDescription }}</div>\n                <div class=\"col-5 m-b-10\">Status:</div>\n                <div class=\"col-7 pro-left m-b-10\">{{ requisitionData.status }}</div>\n                <div class=\"col-5 m-b-10\">Employee PF:</div>\n                <div class=\"col-7 pro-left m-b-10\">{{ requisitionData.empPf }}</div>\n                <div class=\"col-5 m-b-10\">Transaction Status:</div>\n                <div class=\"col-7 pro-left m-b-10\">{{ requisitionData.transactionStatus }}</div>\n               \n              </div>\n            </div>\n            \n          </div>\n          <hr />\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <h6><strong>Report details captured</strong></h6>\n            </div>\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n\n                <div class=\"table-responsiv\">\n                    <div class=\"materialTableHeader\">\n                        <div class=\"row\">\n                            <div class=\"col-12\">\n                                <!-- Table Functions -->\n                                <ul class=\"header-buttons-left ms-0\">\n                                    <li class=\"dropdown\">\n                                        <h2>Requisition Items</h2>\n                                    </li>\n                \n                                    <!-- Search Functions -->\n                                    <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\">\n                                            <i class=\"material-icons search-icon\"> search </i>\n                                        </label>\n                                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                            class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                    </li>\n                                </ul>\n                \n                                <!-- Export Functions -->\n                            </div>\n                           \n                        </div>\n                    </div>\n                \n                    <div class=\"materialTableHeader mt-2\" *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"row\">\n                            <div class=\"col-12\">\n                                <ul class=\"header-buttons-left ms-0\">\n                                    <li class=\"dropdown\">\n                                        <h2>Accounting Actions:</h2>\n                                    </li>\n                \n                                    <!-- Accounting Actions Buttons -->\n                                    <ng-container *ngIf=\"selection.selected.length > 0\">\n                                        <li>\n                                            <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Update')\">\n                                                    <mat-icon class=\"col-white\">edit</mat-icon>\n                                                </button>\n                                            </div>\n                                        </li>\n                \n                                        <li>\n                                            <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('View')\">\n                                                    <mat-icon class=\"col-white\">visibility</mat-icon>\n                                                </button>\n                                            </div>\n                                        </li>\n                                    </ng-container>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                \n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\" class=\"font-table mat-cell\">\n                        <!-- Select Column -->\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                                    (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                                    (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n                \n                \n                        <!-- Update the existing code to display item information -->\n                        <ng-container matColumnDef=\"itemCode\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                Item Code\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                {{ row.itemCode }}\n                            </mat-cell>\n                        </ng-container>\n                \n                        <ng-container matColumnDef=\"quantity\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                Quantity\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                {{ row.quantity }}\n                            </mat-cell>\n                        </ng-container>\n\n                        \n                \n                        <!-- <ng-container matColumnDef=\"unitOfMeasure\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                Unit of Measure\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                {{ row.unitOfMeasure }}\n                            </mat-cell>\n                        </ng-container> -->\n                \n                \n                \n                        <ng-container matColumnDef=\"tranCode\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                TranCode\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                {{ row.tranCode || \"-\" }}\n                            </mat-cell>\n                        </ng-container>\n                \n                        <ng-container matColumnDef=\"transactionStatus\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                TranStatus\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                <ng-container [ngSwitch]=\"row.transactionStatus\">\n                                    <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                        <i class=\"fas fa-check-circle\"></i>&nbsp; {{\n                                        row.transactionStatus }}\n                                    </button>\n                \n                                    <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                        <i class=\"fas fa-undo-alt\"></i>&nbsp; {{\n                                        row.transactionStatus }}\n                                    </button>\n                \n                                    <ng-container *ngSwitchDefault>\n                                        N.A\n                                    </ng-container>\n                                </ng-container>\n                            </mat-cell>\n                        </ng-container>\n                \n                        <ng-container matColumnDef=\"tranDate\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                Tran Date\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                {{row.tranDate ? (row.tranDate | date : \"short\") : 'N.A'}}\n                            </mat-cell>\n                        </ng-container>\n                \n                        <!-- Status -->\n                        <ng-container matColumnDef=\"status\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                Status\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15\"\n                                (click)=\"$event.stopPropagation()\">\n                                <ng-container [ngSwitch]=\"row.status\">\n                                    <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                        <i class=\"fas fa-check-circle\"></i>&nbsp; {{ row.status }}\n                                    </button>\n                                    <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                        <i class=\"fas fa-times-circle\"></i>&nbsp; {{ row.status }}\n                                    </button>\n                                    <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                        <i class=\"fas fa-undo-alt\"></i>&nbsp; {{ row.status }}\n                                    </button>\n                                    <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp; {{ row.status }}\n                                    </button>\n                                    <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                        <i class=\"fas fa-question-circle\"></i>&nbsp; {{ row.status }}\n                                    </button>\n                                </ng-container>\n                            </mat-cell>\n                        </ng-container>\n                \n                        <ng-container matColumnDef=\"action\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\"\n                                *matHeaderCellDef>Action</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\">\n                                <!-- View Button -->\n                                <ng-container>\n                                    <button matTooltip=\"View\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"viewRequisition(row)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                    </button>\n                                </ng-container>\n                \n                                <!-- Edit Button -->\n                                <ng-container>\n                                    <button matTooltip=\"Edit\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"editRequisition(row)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                    </button>\n                                </ng-container>\n                \n                                <!-- Delete Button -->\n                                <ng-container>\n                                    <button matTooltip=\"Delete\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"deleteRequisition(row.requisitionCode)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                    </button>\n                                </ng-container>\n                \n                                <!--Receive Button  -->\n                                <ng-container>\n                                    <button [hidden]=\"row.status!='InTransit' \" matTooltip=\"Receive\" mat-icon-button color=\"primary\"\n                                        (click)=\"$event.stopPropagation()\" (click)=\"receiveRequisition(row)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'package'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                    </button>\n                                </ng-container>\n                            </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"checkRequisition(row)\"\n                            [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n                        <mat-cell *matNoDataRow colspan=\"4\">\n                            No data matching the filter \"{{input.value}}\"</mat-cell>\n                    </mat-table>\n                    <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n                    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[1,2,5,10,20, 30, 40, 50, 100]\"\n                        aria-label=\"Select page of users\"></mat-paginator>\n                </div>\n            \n            </div>\n           \n          </div>\n          <!-- ... (existing code remains unchanged) ... -->\n        </mat-card-content>\n      </div>\n    </div>\n  </div>\n  ","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RequisitionService {\n  constructor(private http: HttpClient) {}\n\n  // http://localhost:9090/api/v1/purchaseRequisition/view\n\n  getRequisitions(): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/view`;\n    return this.http.get<any[]>(RequisitionssUrl);\n  }\n\n  getRequisitionsByStatus(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/all/by/approval/status`;\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  getRequisitionsById(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/by/id`;\n\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  getRequisitionsByCode(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/by/code`;\n\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  addRequisitions(data: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/add`;\n    return this.http.post<any>(RequisitionssUrl, data);\n  }\n\n  updateRequisitions(RequisitionsDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update`;\n    return this.http.put<any>(updateBillUrl, RequisitionsDetails);\n  }\n\n  deleteRequisitionsTemporarily(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/delete`;\n    return this.http.delete<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  validateRequisition(params: any): Observable<any> {\n    const API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/approveOrRejectOrReturn`;\n    return this.http.put(\n      API_URL,\n      {},\n      {\n        params: params,\n      }\n    );\n  }\n\n  // ********************************************************************************************************************\n\n  sendPurchaseOrder(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/send/po`;\n    return this.http.post<any>(RequisitionssUrl, {}, { params });\n  }\n\n  donwloadPurchaseOrder(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/download/po`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download PO\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  //*********************************************************************************************************************** */\n\n  receivePurchaseOrderItems(data: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive`;\n    return this.http.post<any>(ReceiveUrl, data);\n  }\n  getReceivedPurchaseOrderItems(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/delivery/by/prCode`;\n\n    return this.http.get<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  getReceivedItemsByStatus(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/delivery/by/pr_category`;\n    return this.http.get<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  deleteReceivedItemsTemporarily(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/delete`;\n    return this.http.delete<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  validateReceivedItemsAllocation(data: any, params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/post/delivery/to/allocations`;\n\n    return this.http.put<any>(ReceiveUrl, data, { params });\n  }\n\n  // donwloadGoodsReceivedNote(params: any): Observable<any> {\n  //   let headers = new HttpHeaders();\n  //   headers.append(\"Accept\", \"application/pdf\");\n  //   let requestOptions: any = {\n  //     params: params,\n  //     headers: headers,\n  //     responseType: \"blob\",\n  //     withCredentials: false,\n  //   };\n  //   let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive/download/receiptnote`;\n  //   return this.http.get(API_URL, requestOptions).pipe(\n  //     map((response: BlobPart) => {\n  //       console.log(\"Hey this is download GRN\", response);\n  //       return {\n  //         filename: \"Report\",\n  //         data: new Blob([response], { type: \"application/pdf\" }),\n  //       };\n  //     })\n  //   );\n  // }\n\n\n  donwloadSingleGoodsReceivedNote(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive/download/receiptnote/single`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download GRN\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  updateReceivedItemsTransactionStatus(params): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update/record/on/transaction`;\n    return this.http.put<any>(updateBillUrl, {}, {params});\n  }\n  \n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, map } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RFPsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRFP(): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/all`;\r\n    return this.http.get<any[]>(RFPUrl);\r\n  }\r\n  // getRFPById(params: any): Observable<any> {\r\n  //   const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/fetchBy/id`;\r\n  //   return this.http.post<any>(RFPUrl, {params});\r\n  // }\r\n\r\n  getRFPById(params: any): Observable<any> {\r\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/rfp/fetchBy/id`,{params});\r\n  }\r\n\r\n  addRFP(data: any): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/create`;\r\n    return this.http.post<any>(RFPUrl, data);\r\n  }\r\n\r\n  updateRFP(RFPDetails: any): Observable<any> {\r\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/rfp/update`;\r\n    return this.http.put<any>(updateBillUrl, RFPDetails)\r\n  }\r\n\r\n  updateRFPCommetteeApproval(params: any, approvalAttachments: any): Observable<any> {\r\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/rfp/commetteeApproval`;\r\n    return this.http.put<any>(updateBillUrl, approvalAttachments, { params })\r\n  }\r\n\r\n\r\n  deleteRFPsTemporarily(params: any): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/delete`;\r\n    return this.http.delete<any>(RFPUrl, {params});\r\n  } \r\n\r\n  cancelOrReactivateRFP(params: any): Observable<any> {\r\n    const RfqUrl = `${environment.baseUrlProcurement}/api/v1/rfp/cancel`;\r\n    return this.http.post<any>(RfqUrl,{}, {params});\r\n  } \r\n\r\n\r\n  getRFPByStatus(params: any): Observable<any> {\r\n    const RFPssUrl = `${environment.baseUrlProcurement}/api/v1/rfp/rfp/status`;\r\n    return this.http.get<any>(RFPssUrl, { params: params, });\r\n  }\r\n\r\n \r\n\r\n  validateRFP(statusDetails: any): Observable<any> {\r\n    const API_URL = `${environment.baseUrlProcurement}/api/v1/rfp/verify`;\r\n    return this.http.put(\r\n      API_URL,\r\n      statusDetails\r\n    );\r\n  }\r\n\r\n\r\n  processSupplierAwardLetter(params: any): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/send/award`;\r\n    return this.http.post<any>(RFPUrl, {},{params});\r\n  }\r\n\r\n  // /api/v1/rfp/send/award/notification\r\n  \r\n  processEmailForNomination(params: any): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/send/award/notification`;\r\n    return this.http.post<any>(RFPUrl, {},{params});\r\n  }\r\n  \r\n  getRFPPendingCommitee(): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/find/rfp/pending/commitee/approval`;\r\n    return this.http.get<any[]>(RFPUrl);\r\n  }\r\n\r\n    // ********************************************************************************************************************\r\n\r\n  donwloadRFPRecipientsReport(params: any): Observable<any> {\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"Accept\", \"application/pdf\");\r\n    let requestOptions: any = {\r\n      params: params,\r\n      headers: headers,\r\n      responseType: \"blob\",\r\n      withCredentials: false,\r\n    };\r\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/report/download/rfp/suppliers`;\r\n    return this.http.get(API_URL, requestOptions).pipe(\r\n      map((response: BlobPart) => {\r\n        console.log(\"Hey this is download RFP recipients Report\", response);\r\n        return {\r\n          filename: \"Report\",\r\n          data: new Blob([response], { type: \"application/pdf\" }),\r\n        };\r\n      })\r\n    );\r\n  }\r\n  donwloadRFPItemsReport(params: any): Observable<any> {\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"Accept\", \"application/pdf\");\r\n    let requestOptions: any = {\r\n      params: params,\r\n      headers: headers,\r\n      responseType: \"blob\",\r\n      withCredentials: false,\r\n    };\r\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/report/download/rfp/items`;\r\n    return this.http.get(API_URL, requestOptions).pipe(\r\n      map((response: BlobPart) => {\r\n        console.log(\"Hey this is download RFP Items Report\", response);\r\n        return {\r\n          filename: \"Report\",\r\n          data: new Blob([response], { type: \"application/pdf\" }),\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}