{"version":3,"file":"src_app_erp-hr_modules_employee-activities_employee-activities_module_ts.js","mappings":"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","sources":["./src/app/erp-hr/data/employee-activities/employee-demotions.service.ts","./src/app/erp-hr/data/employee-activities/employee-promotions.service.ts","./src/app/erp-hr/data/employee-activities/employee-transfers.service.ts","./src/app/erp-hr/modules/employee-activities/demotion/all-employee-demotions/all-employee-demotions.component.ts","./src/app/erp-hr/modules/employee-activities/demotion/all-employee-demotions/all-employee-demotions.component.html","./src/app/erp-hr/modules/employee-activities/demotion/manage-employee-demotions/manage-employee-demotions.component.ts","./src/app/erp-hr/modules/employee-activities/demotion/manage-employee-demotions/manage-employee-demotions.component.html","./src/app/erp-hr/modules/employee-activities/employee-activities-routing.module.ts","./src/app/erp-hr/modules/employee-activities/employee-activities.module.ts","./src/app/erp-hr/modules/employee-activities/promotion/all-employee-promotions/all-employee-promotions.component.ts","./src/app/erp-hr/modules/employee-activities/promotion/all-employee-promotions/all-employee-promotions.component.html","./src/app/erp-hr/modules/employee-activities/promotion/manage-employee-promotions/manage-employee-promotions.component.ts","./src/app/erp-hr/modules/employee-activities/promotion/manage-employee-promotions/manage-employee-promotions.component.html","./src/app/erp-hr/modules/employee-activities/transfer/all-employee-transfers/all-employee-transfers.component.ts","./src/app/erp-hr/modules/employee-activities/transfer/all-employee-transfers/all-employee-transfers.component.html","./src/app/erp-hr/modules/employee-activities/transfer/manage-employee-transfers/manage-employee-transfers.component.ts","./src/app/erp-hr/modules/employee-activities/transfer/manage-employee-transfers/manage-employee-transfers.component.html","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, Observable, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EmployeeDemotionService {\n    headers = new HttpHeaders().set('Content-Type', 'application/json');\n    baseURL = `${environment.baseUrlHR}/api/v1/employee/demotions`;\n\n    constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/create`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, Observable, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeePromotionService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/employee/promotions`;\n\n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/create`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeTransferService {\n\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/employee/transfer`;\n\n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/create`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/all/by-status`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\nimport { EmployeeDemotionService } from 'src/app/erp-hr/data/employee-activities/employee-demotions.service';\nimport { ManageEmployeeDemotionsComponent } from '../manage-employee-demotions/manage-employee-demotions.component';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-all-employee-demotions',\n  templateUrl: './all-employee-demotions.component.html',\n  styleUrls: ['./all-employee-demotions.component.sass']\n})\nexport class AllEmployeeDemotionsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"empNo\",\n    \"employeeName\",\n    \"prev_basic_pay\",\n    \"new_basic_pay\",\n    \"prev_position\",\n    \"new_position\",\n    \"posted_time\",\n    \"status\",\n    \"verifiedFlag\",\n    \"deletedFlag\",\n    \"action\",\n  ];\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n  Form: FormGroup\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private employeeDemotionService: EmployeeDemotionService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n\n    this.Form = this.fb.group({\n      status: ['ALL']\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //****************************************************************************************** */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"ALL\";\n  getSelectSelectedStatus() {\n    // this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    // this.getData();\n  }\n\n\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n    let params = {\n      status: this.Form.value.status,\n    };\n    this.employeeDemotionService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"Eres\", res);\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Employee Demotions displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n            this.notificationAPI.alertWarning(\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\n            \"Server Error:  \" + err.message\n          );\n        },\n        complete: () => { },\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: action,\n      record: record,\n    };\n    const dialogRef = this.dialog.open(ManageEmployeeDemotionsComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      this.getData();\n    });\n  }\n  deleteRecord(id: number) {\n    let params = { id: id }\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"THIS RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.employeeDemotionService\n          .delete(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => { },\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    // this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n    //   privilege,\n    // ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.employeeDemotionService\n            .verify(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                  this.selection.clear();\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Employee Demotions'\" [items]=\"['Employee Demotions']\" [active_item]=\"'All Employee Demotions'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Employee Demotions</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add','')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Status</mat-label>\n\n                                                <mat-select formControlName=\"status\"\n                                                    >\n                                                    <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                        [value]=\"reqStatus.name\">{{ reqStatus.name\n                                                        }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                    Please select Status\n                                                </mat-error>\n                                            </mat-form-field>\n\n                                        </form>\n                                    </div>\n                                    <div class=\"col-10\">\n                                        <div class=\"button-container mt-1\">\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                ALL\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                            #exporter=\"matTableExporter\">\n\n                            <ng-container matColumnDef=\"select\">\n                                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                        [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                    </mat-checkbox>\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                        [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                    </mat-checkbox>\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"empNo\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                    Emp No\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                    {{ row.empNo }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"employeeName\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    Employee Name\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    {{ row.employeeName}}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"prev_basic_pay\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    Previous Basic Pay\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    {{ row.prevBasicPay }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"new_basic_pay\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    New Basic Pay\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    {{ row.newBasicPay }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"prev_position\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    Previous Position\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    {{ row.prevPosition }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"new_position\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    New Position\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    {{ row.newPosition }}\n                                </mat-cell>\n                            </ng-container>\n\n\n                            <ng-container matColumnDef=\"promotionReason\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    Reason\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    {{ row.promotionReason }}\n                                </mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"posted_time\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    Posted Time\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    {{ row.postedTime | date:'short' }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    Status\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                    (click)=\"$event.stopPropagation()\">\n                                    <ng-container [ngSwitch]=\"row.status\">\n                                        <button *ngSwitchCase=\"'APPROVED'\"\n                                            class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                            {{ row.status }}\n                                        </button>\n                                        <button *ngSwitchCase=\"'REJECTED'\"\n                                            class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                            {{ row.status }}\n                                        </button>\n                                        <button *ngSwitchCase=\"'RETURNED'\"\n                                            class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                            {{ row.status }}\n                                        </button>\n                                        <button *ngSwitchCase=\"'PENDING'\"\n                                            class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                            {{ row.status }}\n                                        </button>\n                                        <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                            {{ row.status }}\n                                        </button>\n                                    </ng-container>\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"verifiedFlag\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    Verified\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    <ng-container *ngIf=\"row.verifiedFlag === 'Y'; else notVerified\">\n                                        <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-check\"></i>&nbsp; Verified\n                                        </button>\n                                    </ng-container>\n                                    <ng-template #notVerified>\n                                        <button class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-times\"></i>&nbsp; Not Verified\n                                        </button>\n                                    </ng-template>\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"deletedFlag\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    Deleted\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    <ng-container *ngIf=\"row.deletedFlag === 'Y'; else notDeleted\">\n                                        <button class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-trash\"></i>&nbsp; Deleted\n                                        </button>\n                                    </ng-container>\n                                    <ng-template #notDeleted>\n                                        <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-check\"></i>&nbsp; Active\n                                        </button>\n                                    </ng-template>\n                                </mat-cell>\n                            </ng-container>\n\n\n\n\n\n\n\n                            <ng-container matColumnDef=\"action\">\n                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                    *matHeaderCellDef>\n                                    Action\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"mngRecord('Update',row)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                        </app-feather-icons>\n                                    </button>\n\n                                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"mngRecord('View',row)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                        </app-feather-icons>\n                                    </button>\n                                    <!-- \n                                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"lockOrUnlockAccount(row)\" class=\"tbl-action-btn\">\n                                        <mat-icon>{{ row.isAcctActive === 'Y' ? 'lock' : 'lock_open' }}</mat-icon>\n                                    </button> -->\n\n                                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                        (click)=\"deleteRecord(row.id)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                        </app-feather-icons>\n                                    </button>\n                                </mat-cell>\n                            </ng-container>\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                            </mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"  \n                                [style.cursor]=\"'pointer'\" matRipple>\n                            </mat-row>\n\n\n                            <tr *matNoDataRow>\n                                <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                    }}\"</td>\n                            </tr>\n                        </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                            aria-label=\"Select page of users\">\n                          </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { BranchesLookupComponent } from 'src/app/erp-finance/data/lookups/branches-lookup/branches-lookup.component';\nimport { DepartmentsLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/departments-lookup/departments-lookup.component';\nimport { EmployeesLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component';\nimport { FilesService } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { AllEmployeesComponent } from '../../../employees/all-employees/all-employees.component';\nimport { EmployeeDemotionService } from 'src/app/erp-hr/data/employee-activities/employee-demotions.service';\nimport { JobRolesLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/job-roles-lookup/job-roles-lookup.component';\n\n@Component({\n  selector: 'app-manage-employee-demotions',\n  templateUrl: './manage-employee-demotions.component.html',\n  styleUrls: ['./manage-employee-demotions.component.sass']\n})\nexport class ManageEmployeeDemotionsComponent implements OnInit {\n\n  mngForm: FormGroup;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AllEmployeesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private employeeDemotionService: EmployeeDemotionService,\n    private dialog: MatDialog,\n    private filesService: FilesService\n  ) {}\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.formData = this.data.record;\n    this.generateForm(this.formData);\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n    console.log(\"this.data.action :\", this.data.action);\n    if (this.data.action === \"Add\") {\n      this.isLoading = false;\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"Update\") {\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"View\") {\n      this.generateForm(this.data.record);\n      this.activateViewMode();\n    }\n    this.isLoading = false;\n  }\n\n  formData: any;\n\n  generateForm(formData?): void {\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? ''],\n      empNo: [formData?.empNo ?? '', Validators.required],\n      employeeName: [formData?.employeeName ?? '', Validators.required],\n      newPosition: [formData?.newPosition ?? '', Validators.required],\n      prevPosition: [formData?.prevPosition ?? '', Validators.required],\n      newBasicPay: [formData?.newBasicPay ?? '', Validators.required],\n      prevBasicPay: [formData?.prevBasicPay ?? '', Validators.required],\n     \n      demotionReason: [formData?.demotionReason ?? '', Validators.required],\n      effectiveDate: [formData?.effectiveDate ?? new Date(), Validators.required]\n    });\n  }\n  \n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  posting: boolean = false;\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.employeeDemotionService\n        .create(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"res: \", res);\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.employeeDemotionService\n        .update(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n\n  //********************************************************************************************************************** */\n  // Lookup\n  //********************************************************************************************************************** */\n  jobRoleLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleJobRole\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(JobRolesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          newBasicPay: res.data[0].minSalary,\n          newPosition: res.data[0].roleName,\n        });\n      }\n    });\n  }\n\n\n\n  selectedItem: any;\n  employeeLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(EmployeesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          empNo: res.data[0].empNo,\n          employeeName: res.data[0].firstName + \" \" + res.data[0].lastName,\n          departmentName: res.data[0].departmentname,\n          departmentId: res.data[0].departmentId,\n          initialBranchName: res.data[0].branchName,\n\n          prevPosition: res.data[0].organizationRole,\n          prevBasicPay: res.data[0].basicSalary\n        });\n      }\n    });\n  }\n  branchLookup(type: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleBranch\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(BranchesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        if (type === \"Initial\") {\n          this.mngForm.patchValue({\n            initialBranchName: res.data[0].branchName,\n          });\n        } else if (type === \"New\") {\n          this.mngForm.patchValue({\n            newBranchName: res.data[0].branchName,\n          });\n        }\n      }\n    });\n  }\n  departmentLookup(type: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleDepartment\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      DepartmentsLookupComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        if (type === \"Initial\") {\n          this.mngForm.patchValue({\n            departmentId: res.data[0].id,\n            departmentName: res.data[0].departmentName,\n          });\n        } else if (type === \"New\") {\n          this.mngForm.patchValue({\n            newDepartmentId: res.data[0].id,\n            newDepartmentName: res.data[0].departmentName,\n          });\n        }\n      }\n    });\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n      <div class=\"editRowModal\">\n        <div class=\"modalHeader clearfix\">\n          <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n          <div class=\"modal-about\">\n            <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n              <strong>{{ pageFunction }} Demotion</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button\n        mat-icon-button\n        (click)=\"dialogRef.close()\"\n        aria-label=\"Close dialog\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <div class=\"m-2\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n  \n      <ng-container>\n        <h6 class=\"mx-2\">Demotion Details</h6>\n        <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n          <div class=\"row\">\n            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Employee Name</mat-label>\n                <input matInput formControlName=\"employeeName\" required />\n                <mat-icon matSuffix (click)=\"employeeLookup()\">search</mat-icon>\n                <mat-error *ngIf=\"mngForm.get('employeeName').hasError('required')\">\n                  Employee Name is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n        \n            \n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Employee PF</mat-label>\n              <input matInput formControlName=\"empNo\" required />\n              <mat-icon matSuffix (click)=\"employeeLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('empNo').hasError('required')\">\n                Employee PF is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Previous Position</mat-label>\n                <input matInput formControlName=\"prevPosition\" required />\n                <mat-error *ngIf=\"mngForm.get('prevPosition').hasError('required')\">\n                  Previous Position is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>New Position</mat-label>\n                <input matInput formControlName=\"newPosition\" required />\n                <mat-icon matSuffix (click)=\"jobRoleLookup()\">search</mat-icon>\n                <mat-error *ngIf=\"mngForm.get('newPosition').hasError('required')\">\n                  New Position is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n        \n            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Previous Basic Pay</mat-label>\n                <input matInput formControlName=\"prevBasicPay\" required />\n                <mat-error *ngIf=\"mngForm.get('prevBasicPay').hasError('required')\">\n                  Previous Basic Pay is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n        \n            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>New Basic Pay</mat-label>\n                <input matInput formControlName=\"newBasicPay\" required />\n                <mat-error *ngIf=\"mngForm.get('newBasicPay').hasError('required')\">\n                  New Basic Pay is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n        \n           \n        \n            \n        \n            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Effective Date</mat-label>\n                <input matInput [matDatepicker]=\"picker\" formControlName=\"effectiveDate\" />\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n            </div>\n  \n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Demotion Reason</mat-label>\n                <textarea matInput formControlName=\"demotionReason\" required></textarea>\n                <mat-icon matSuffix>compare_arrows</mat-icon>\n                <mat-error *ngIf=\"mngForm.get('demotionReason').hasError('required')\">\n                  Demotion Reason is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </form>\n        \n  \n        <div class=\"row\" *ngIf=\"!viewMode\">\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n            <div class=\"example-button-row\" align=\"end\">\n              <button\n                class=\"btn-space\"\n                mat-raised-button\n                color=\"primary\"\n                [class.auth-spinner]=\"posting\"\n                [disabled]=\"!mngForm.valid || posting\"\n                (click)=\"submit()\"\n              >\n                {{ pageFunction }} Demotion\n              </button>\n              <button\n                mat-raised-button\n                color=\"warn\"\n                (click)=\"onNoClick()\"\n                tabindex=\"-1\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllEmployeePromotionsComponent } from './promotion/all-employee-promotions/all-employee-promotions.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { AllEmployeeDemotionsComponent } from './demotion/all-employee-demotions/all-employee-demotions.component';\nimport { AllEmployeeTransfersComponent } from './transfer/all-employee-transfers/all-employee-transfers.component';\n\nconst routes: Routes = [\n  {\n    path: \"all-employee-promotions\",\n    component: AllEmployeePromotionsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"all-employee-demotions\",\n    component: AllEmployeeDemotionsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"all-employee-transfers\",\n    component: AllEmployeeTransfersComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeActivitiesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeActivitiesRoutingModule } from './employee-activities-routing.module';\n\nimport { AllEmployeeDemotionsComponent } from './demotion/all-employee-demotions/all-employee-demotions.component';\nimport { ManageEmployeeDemotionsComponent } from './demotion/manage-employee-demotions/manage-employee-demotions.component';\nimport { ManageEmployeePromotionsComponent } from './promotion/manage-employee-promotions/manage-employee-promotions.component';\nimport { AllEmployeePromotionsComponent } from './promotion/all-employee-promotions/all-employee-promotions.component';\nimport { AllEmployeeTransfersComponent } from './transfer/all-employee-transfers/all-employee-transfers.component';\nimport { ManageEmployeeTransfersComponent } from './transfer/manage-employee-transfers/manage-employee-transfers.component';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\n\n\n@NgModule({\n  declarations: [\n    AllEmployeePromotionsComponent,\n    AllEmployeeDemotionsComponent,\n    AllEmployeeDemotionsComponent,\n    ManageEmployeeDemotionsComponent,\n    ManageEmployeePromotionsComponent,\n    AllEmployeePromotionsComponent,\n    AllEmployeeTransfersComponent,\n    ManageEmployeeTransfersComponent\n  ],\n  imports: [\n    CommonModule,\n    EmployeeActivitiesRoutingModule,\n\n    DashboardModule,\n    ComponentsModule,\n    SharedModule,\n  ]\n})\nexport class EmployeeActivitiesModule { }\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { BranchService } from 'src/app/erp-hr/data/configuration-services/branch.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\nimport { ManageEmployeePromotionsComponent } from '../manage-employee-promotions/manage-employee-promotions.component';\nimport { EmployeePromotionService } from 'src/app/erp-hr/data/employee-activities/employee-promotions.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-all-employee-promotions',\n  templateUrl: './all-employee-promotions.component.html',\n  styleUrls: ['./all-employee-promotions.component.sass']\n})\nexport class AllEmployeePromotionsComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"empNo\",\n    \"employeeName\",\n    \"prev_basic_pay\",\n    \"new_basic_pay\",\n    \"prev_position\",\n    \"new_position\",\n    \"posted_time\",\n    \"status\",\n    \"verifiedFlag\",\n    \"deletedFlag\",\n    \"action\",\n  ];\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n  Form: FormGroup\n  \n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private employeePromotionService: EmployeePromotionService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n   \n    this.Form = this.fb.group({\n      status: ['ALL']\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n   //****************************************************************************************** */\n   reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"ALL\";\n  getSelectSelectedStatus() {\n   // this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n  //  this.getData();\n  }\n\n\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n    let params = {\n      status: this.Form.value.status,\n    };\n    this.employeePromotionService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Employee Promotions displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n            this.notificationAPI.alertWarning(\n              res.message\n           );\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\n            \"Server Error:  \" + err.message\n          );\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: action,\n      record: record,\n    };\n    const dialogRef = this.dialog.open(ManageEmployeePromotionsComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      this.getData();\n    });\n  }\n  deleteRecord(id: number) {\nlet params = {id: id}\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"THIS RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.employeePromotionService\n          .delete(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    // this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n    //   privilege,\n    // ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.employeePromotionService\n            .verify(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                  this.selection.clear();\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Employee Promotions'\" [items]=\"['Employee Promotions']\"\n                [active_item]=\"'All Employee Promotions'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Employee Promotions</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add','')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Status</mat-label>\n\n                                                <mat-select formControlName=\"status\">\n                                                    <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                        [value]=\"reqStatus.name\">{{ reqStatus.name\n                                                        }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                    Please select Status\n                                                </mat-error>\n                                            </mat-form-field>\n\n                                        </form>\n                                    </div>\n                                    <div class=\"col-10\">\n                                        <div class=\"button-container mt-1\">\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                ALL\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"empNo\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Emp No\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.empNo }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"employeeName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Employee Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.employeeName}}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"prev_basic_pay\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Previous Basic Pay\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.prevBasicPay }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"new_basic_pay\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        New Basic Pay\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.newBasicPay }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"prev_position\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Previous Position\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.prevPosition }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"new_position\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        New Position\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.newPosition }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"promotionReason\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Reason\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.promotionReason }}\n                                    </mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"posted_time\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Posted Time\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.postedTime | date:'short' }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"verifiedFlag\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Verified\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container *ngIf=\"row.verifiedFlag === 'Y'; else notVerified\">\n                                            <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check\"></i>&nbsp; Verified\n                                            </button>\n                                        </ng-container>\n                                        <ng-template #notVerified>\n                                            <button class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times\"></i>&nbsp; Not Verified\n                                            </button>\n                                        </ng-template>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"deletedFlag\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Deleted\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container *ngIf=\"row.deletedFlag === 'Y'; else notDeleted\">\n                                            <button class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-trash\"></i>&nbsp; Deleted\n                                            </button>\n                                        </ng-container>\n                                        <ng-template #notDeleted>\n                                            <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check\"></i>&nbsp; Active\n                                            </button>\n                                        </ng-template>\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n\n\n\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Update',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('View',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n                                        <!-- \n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"lockOrUnlockAccount(row)\" class=\"tbl-action-btn\">\n                                            <mat-icon>{{ row.isAcctActive === 'Y' ? 'lock' : 'lock_open' }}</mat-icon>\n                                        </button> -->\n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"  \n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogConfig,\n} from \"@angular/material/dialog\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { BranchService } from \"src/app/erp-hr/data/configuration-services/branch.service\";\nimport { EmployeesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component\";\nimport { FilesService } from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { AllEmployeesComponent } from \"../../../employees/all-employees/all-employees.component\";\nimport { EmployeePromotionService } from \"src/app/erp-hr/data/employee-activities/employee-promotions.service\";\nimport { BranchesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/branches-lookup/branches-lookup.component\";\nimport { DepartmentsLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/departments-lookup/departments-lookup.component\";\nimport { JobRolesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/job-roles-lookup/job-roles-lookup.component\";\n\n@Component({\n  selector: \"app-manage-employee-promotions\",\n  templateUrl: \"./manage-employee-promotions.component.html\",\n  styleUrls: [\"./manage-employee-promotions.component.sass\"],\n})\nexport class ManageEmployeePromotionsComponent implements OnInit {\n  mngForm: FormGroup;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AllEmployeesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private employeePromotionService: EmployeePromotionService,\n    private dialog: MatDialog,\n    private filesService: FilesService\n  ) {}\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.formData = this.data.record;\n    this.generateForm(this.formData);\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n    console.log(\"this.data.action :\", this.data.action);\n    if (this.data.action === \"Add\") {\n      this.isLoading = false;\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"Update\") {\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"View\") {\n      this.generateForm(this.data.record);\n      this.activateViewMode();\n    }\n    this.isLoading = false;\n  }\n\n  formData: any;\n\n  generateForm(formData?): void {\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? ''],\n      empNo: [formData?.empNo ?? '', Validators.required],\n      employeeName: [formData?.employeeName ?? '', Validators.required],\n      newPosition: [formData?.newPosition ?? '', Validators.required],\n      prevPosition: [formData?.prevPosition ?? '', Validators.required],\n      newBasicPay: [formData?.newBasicPay ?? '', Validators.required],\n      prevBasicPay: [formData?.prevBasicPay ?? '', Validators.required],\n     \n      promotionReason: [formData?.promotionReason ?? '', Validators.required],\n      effectiveDate: [formData?.effectiveDate ?? new Date(), Validators.required]\n    });\n  }\n  \n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  posting: boolean = false;\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.employeePromotionService\n        .create(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"res: \", res);\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.employeePromotionService\n        .update(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n\n  //********************************************************************************************************************** */\n  // Lookup\n  //********************************************************************************************************************** */\n  jobRoleLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleJobRole\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(JobRolesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          newBasicPay: res.data[0].minSalary,\n          newPosition: res.data[0].roleName,\n        });\n      }\n    });\n  }\n\n  selectedItem: any;\n  employeeLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(EmployeesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          empNo: res.data[0].empNo,\n          employeeName: res.data[0].firstName + \" \" + res.data[0].lastName,\n          departmentName: res.data[0].departmentname,\n          departmentId: res.data[0].departmentId,\n          initialBranchName: res.data[0].branchName,\n\n          prevPosition: res.data[0].organizationRole,\n          prevBasicPay: res.data[0].basicSalary\n        });\n      }\n    });\n  }\n  branchLookup(type: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleBranch\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(BranchesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        if (type === \"Initial\") {\n          this.mngForm.patchValue({\n            initialBranchName: res.data[0].branchName,\n          });\n        } else if (type === \"New\") {\n          this.mngForm.patchValue({\n            newBranchName: res.data[0].branchName,\n          });\n        }\n      }\n    });\n  }\n  departmentLookup(type: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleDepartment\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      DepartmentsLookupComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        if (type === \"Initial\") {\n          this.mngForm.patchValue({\n            departmentId: res.data[0].id,\n            departmentName: res.data[0].departmentName,\n          });\n        } else if (type === \"New\") {\n          this.mngForm.patchValue({\n            newDepartmentId: res.data[0].id,\n            newDepartmentName: res.data[0].departmentName,\n          });\n        }\n      }\n    });\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n            <strong>{{ pageFunction }} Promotion</strong>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button\n      mat-icon-button\n      (click)=\"dialogRef.close()\"\n      aria-label=\"Close dialog\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <div class=\"m-2\" *ngIf=\"isLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div>\n\n    <ng-container>\n      <h6 class=\"mx-2\">Promotion Details</h6>\n      <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n        <div class=\"row\">\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Employee Name</mat-label>\n              <input matInput formControlName=\"employeeName\" required />\n              <mat-icon matSuffix (click)=\"employeeLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('employeeName').hasError('required')\">\n                Employee Name is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Employee PF</mat-label>\n              <input matInput formControlName=\"empNo\" required />\n              <mat-icon matSuffix (click)=\"employeeLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('empNo').hasError('required')\">\n                Employee PF is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Previous Position</mat-label>\n              <input matInput formControlName=\"prevPosition\" required />\n              <mat-error *ngIf=\"mngForm.get('prevPosition').hasError('required')\">\n                Previous Position is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n          \n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>New Position</mat-label>\n              <input matInput formControlName=\"newPosition\" required />\n              <mat-icon matSuffix (click)=\"jobRoleLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('newPosition').hasError('required')\">\n                New Position is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Previous Basic Pay</mat-label>\n              <input matInput formControlName=\"prevBasicPay\" required />\n              <mat-error *ngIf=\"mngForm.get('prevBasicPay').hasError('required')\">\n                Previous Basic Pay is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n      \n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>New Basic Pay</mat-label>\n              <input matInput formControlName=\"newBasicPay\" required />\n              <mat-error *ngIf=\"mngForm.get('newBasicPay').hasError('required')\">\n                New Basic Pay is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n      \n         \n      \n          \n      \n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Effective Date</mat-label>\n              <input matInput [matDatepicker]=\"picker\" formControlName=\"effectiveDate\" />\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Promotion Reason</mat-label>\n              <textarea matInput formControlName=\"promotionReason\" required></textarea>\n              <mat-icon matSuffix>compare_arrows</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('promotionReason').hasError('required')\">\n                Promotion Reason is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </form>\n      \n\n      <div class=\"row\" *ngIf=\"!viewMode\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n          <div class=\"example-button-row\" align=\"end\">\n            <button\n              class=\"btn-space\"\n              mat-raised-button\n              color=\"primary\"\n              [class.auth-spinner]=\"posting\"\n              [disabled]=\"!mngForm.valid || posting\"\n              (click)=\"submit()\"\n            >\n              {{ pageFunction }} Promotion\n            </button>\n            <button\n              mat-raised-button\n              color=\"warn\"\n              (click)=\"onNoClick()\"\n              tabindex=\"-1\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { EmployeeTransferService } from \"src/app/erp-hr/data/employee-activities/employee-transfers.service\";\nimport { ManageEmployeeTransfersComponent } from \"../manage-employee-transfers/manage-employee-transfers.component\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-all-employee-transfers\",\n  templateUrl: \"./all-employee-transfers.component.html\",\n  styleUrls: [\"./all-employee-transfers.component.sass\"],\n})\nexport class AllEmployeeTransfersComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"empNo\",\n    // \"currentDepartmentFk\",\n    \"currentDepartmentName\",\n    // \"newDepartmentFk\",\n    \"newDepartmentName\",\n\n    //  \"currentBranchFk\",\n    \"currentBranchName\",\n    // \"newBranchFk\",\n    \"newBranchName\",\n\n    \"reason\",\n    \"postedTime\",\n    \"status\",\n    \"verifiedFlag\",\n    \"deletedFlag\",\n    \"action\",\n  ];\n\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n  Form: FormGroup;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private employeeTransferService: EmployeeTransferService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"ALL\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //****************************************************************************************** */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"ALL\";\n  getSelectSelectedStatus() {\n   // this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n  //  this.getData();\n  }\n\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n    let params = {\n      status: this.Form.value.status,\n    };\n    this.employeeTransferService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Employee Transfers displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n            this.notificationAPI.alertWarning(res.message);\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error: \" + err.message);\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: action,\n      record: record,\n    };\n    const dialogRef = this.dialog.open(\n      ManageEmployeeTransfersComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      this.getData();\n    });\n  }\n  deleteRecord(id: number) {\n    let params = { id: id };\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"THIS RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.employeeTransferService\n          .delete(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    // this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n    //   privilege,\n    // ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.employeeTransferService\n            .verify(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                  this.selection.clear();\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Employee Transfers'\" [items]=\"['Employee Transfers']\"\n                [active_item]=\"'All Employee Transfers'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Employee Transfers</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add','')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Status</mat-label>\n\n                                                <mat-select formControlName=\"status\">\n                                                    <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                        [value]=\"reqStatus.name\">{{ reqStatus.name\n                                                        }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                    Please select Status\n                                                </mat-error>\n                                            </mat-form-field>\n\n                                        </form>\n                                    </div>\n                                    <div class=\"col-10\">\n                                        <div class=\"button-container mt-1\">\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                ALL\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"empNo\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Emp No\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.empNo }}\n                                    </mat-cell>\n                                </ng-container>\n                               \n                                <ng-container matColumnDef=\"currentDepartmentFk\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Current DepartmentFk\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.currentBranchFk }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"currentDepartmentName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Current Department \n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.currentDepartmentName }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"newDepartmentFk\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        New DepartmentFk\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.newDepartmentFk }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"newDepartmentName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        New Department \n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.newDepartmentName }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"currentBranchFk\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Current BranchFk\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.currentBranchFk }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"currentBranchName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Current Branch \n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.currentBranchName }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"newBranchFk\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        New BranchFk\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.newBranchFk }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"newBranchName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        New Branch \n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.newBranchName }}\n                                    </mat-cell>\n                                </ng-container>\n                                \n\n                                <ng-container matColumnDef=\"reason\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Reason\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.reason }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"postedTime\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Posted Time\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.postedTime | date:'short' }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"verifiedFlag\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Verified\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container *ngIf=\"row.verifiedFlag === 'Y'; else notVerified\">\n                                            <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check\"></i>&nbsp; Verified\n                                            </button>\n                                        </ng-container>\n                                        <ng-template #notVerified>\n                                            <button class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times\"></i>&nbsp; Not Verified\n                                            </button>\n                                        </ng-template>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"deletedFlag\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Deleted\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container *ngIf=\"row.deletedFlag === 'Y'; else notDeleted\">\n                                            <button class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-trash\"></i>&nbsp; Deleted\n                                            </button>\n                                        </ng-container>\n                                        <ng-template #notDeleted>\n                                            <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check\"></i>&nbsp; Active\n                                            </button>\n                                        </ng-template>\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n\n\n\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Update',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('View',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n                                        <!-- \n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"lockOrUnlockAccount(row)\" class=\"tbl-action-btn\">\n                                            <mat-icon>{{ row.isAcctActive === 'Y' ? 'lock' : 'lock_open' }}</mat-icon>\n                                        </button> -->\n\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"  \n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { DepartmentsLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/departments-lookup/departments-lookup.component';\nimport { EmployeesLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component';\nimport { FilesService } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { AllEmployeesComponent } from '../../../employees/all-employees/all-employees.component';\nimport { EmployeeTransferService } from 'src/app/erp-hr/data/employee-activities/employee-transfers.service';\nimport { BranchesLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/branches-lookup/branches-lookup.component';\n\n@Component({\n  selector: 'app-manage-employee-transfers',\n  templateUrl: './manage-employee-transfers.component.html',\n  styleUrls: ['./manage-employee-transfers.component.sass']\n})\nexport class ManageEmployeeTransfersComponent implements OnInit {\n\n  mngForm: FormGroup;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AllEmployeesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private employeeTransferService: EmployeeTransferService, private dialog: MatDialog,\n    private filesService: FilesService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.formData = this.data.record;\n    this.generateForm(this.formData);\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n    console.log(\"this.data.action :\", this.data.action);\n    if (this.data.action === \"Add\") {\n      this.isLoading = false;\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"Update\") {\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"View\") {\n      this.generateForm(this.data.record);\n      this.activateViewMode();\n    }\n    this.isLoading = false;\n  }\n\n  formData: any;\n  // {\n  //   \"empPf\": \"string\",\n  //   \"id\": 0,\n  //   \"newBranchFk\": 0,\n  //   \"newBranchName\": \"string\",\n  //   \"newDepartmentFk\": 0,\n  //   \"newDepartmentName\": \"string\",\n  //   \"reason\": \"string\"\n  // }\n  generateForm(formData?): void {\n    console.log(\"generateForm formData :: \", formData);\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      newBranchName: [formData?.newBranchName ?? \"\", Validators.required],\n      newDepartmentFk: [formData?.newDepartmentFk ?? \"\"],\n      newDepartmentName: [formData?.newDepartmentName ?? \"\"],\n      newBranchFk: [formData?.newBranchFk ?? \"\"],\n      empPf: [formData?.empPf ?? \"\", Validators.required],\n      reason: [formData?.reason ?? \"\", Validators.required],\n     \n    });\n  }\n\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  posting: boolean = false;\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.employeeTransferService\n        .create(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"res: \", res);\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.employeeTransferService\n        .update(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n\n  //********************************************************************************************************************** */\n  // Lookup\n  //********************************************************************************************************************** */\n\n  selectedItem: any;\n  employeeLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(EmployeesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          empPf: res.data[0].empNo,\n\n          newBranchFk: res.data[0].branchId,\n          newBranchName:  res.data[0].branchName,\n          newDepartmentFk: res.data[0].departmentId,\n          newDepartmentName: res.data[0].departmentName\n          \n        });\n      }\n    });\n  }\n  branchLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleBranch\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(BranchesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n          this.mngForm.patchValue({\n            newBranchName: res.data[0].branchName,\n            newBranchFk: res.data[0].id,\n          });\n        \n      }\n    });\n  }\n  departmentLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleDepartment\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      DepartmentsLookupComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n          this.mngForm.patchValue({\n            newDepartmentFk: res.data[0].id,\n            newDepartmentName: res.data[0].departmentName,\n          });\n       \n      }\n    });\n  }\n}\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n            <strong>{{ pageFunction }} Transfer</strong>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <div class=\"m-2\" *ngIf=\"isLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div>\n\n    <ng-container>\n      <h6 class=\"mx-2\">Transfer Details</h6>\n      <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n        <div class=\"row\">\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Emp Pf</mat-label>\n              <input matInput formControlName=\"empPf\" required readonly/>\n              <mat-icon matSuffix (click)=\"employeeLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('empPf').hasError('required')\">\n                Employee PF is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n          \n\n\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>New Branch Name</mat-label>\n              <input matInput formControlName=\"newBranchName\" required readonly/>\n              <mat-icon matSuffix (click)=\"branchLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('newBranchName').hasError('required')\">\n                New Branch Name is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>New Branch Fk</mat-label>\n              <input matInput formControlName=\"newBranchFk\" required readonly/>\n              <mat-icon matSuffix (click)=\"branchLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('newBranchFk').hasError('required')\">\n                New Branch Fk is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>New Department Name</mat-label>\n              <input matInput formControlName=\"newDepartmentName\" required readonly/>\n              <mat-icon matSuffix (click)=\"departmentLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('newDepartmentName').hasError('required')\">\n                New Department Name is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>New Department Fk</mat-label>\n              <input matInput formControlName=\"newDepartmentFk\" required readonly/>\n              <mat-icon matSuffix (click)=\"departmentLookup()\">search</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('newDepartmentFk').hasError('required')\">\n                New Department Fk is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Reason</mat-label>\n              <textarea matInput formControlName=\"reason\" required></textarea>\n              <mat-icon matSuffix>compare_arrows</mat-icon>\n              <mat-error *ngIf=\"mngForm.get('reason').hasError('required')\">\n                Reason is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </form>\n\n      <div class=\"row\" *ngIf=\"!viewMode\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n          <div class=\"example-button-row\" align=\"end\">\n            <button class=\"btn-space\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n              [disabled]=\"!mngForm.valid || posting\" (click)=\"submit()\">\n              {{ pageFunction }} Transfer\n            </button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}