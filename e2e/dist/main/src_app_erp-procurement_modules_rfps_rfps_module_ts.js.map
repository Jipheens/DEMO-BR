{"version":3,"file":"src_app_erp-procurement_modules_rfps_rfps_module_ts.js","mappings":"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","sources":["./src/app/erp-procurement/data/services/rfps.service.ts","./src/app/erp-procurement/modules/rfps/dialogs/manage-rfp-item/manage-rfp-item.component.ts","./src/app/erp-procurement/modules/rfps/dialogs/manage-rfp-item/manage-rfp-item.component.html","./src/app/erp-procurement/modules/rfps/dialogs/validate-rfp/validate-rfp.component.ts","./src/app/erp-procurement/modules/rfps/dialogs/validate-rfp/validate-rfp.component.html","./src/app/erp-procurement/modules/rfps/pages/all-rfps/all-rfps.component.ts","./src/app/erp-procurement/modules/rfps/pages/all-rfps/all-rfps.component.html","./src/app/erp-procurement/modules/rfps/pages/manage-rfp/manage-rfp.component.ts","./src/app/erp-procurement/modules/rfps/pages/manage-rfp/manage-rfp.component.html","./src/app/erp-procurement/modules/rfps/rfps-routing.module.ts","./src/app/erp-procurement/modules/rfps/rfps.module.ts","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, map } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RFPsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRFP(): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/all`;\r\n    return this.http.get<any[]>(RFPUrl);\r\n  }\r\n  // getRFPById(params: any): Observable<any> {\r\n  //   const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/fetchBy/id`;\r\n  //   return this.http.post<any>(RFPUrl, {params});\r\n  // }\r\n\r\n  getRFPById(params: any): Observable<any> {\r\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/rfp/fetchBy/id`,{params});\r\n  }\r\n\r\n  addRFP(data: any): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/create`;\r\n    return this.http.post<any>(RFPUrl, data);\r\n  }\r\n\r\n  updateRFP(RFPDetails: any): Observable<any> {\r\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/rfp/update`;\r\n    return this.http.put<any>(updateBillUrl, RFPDetails)\r\n  }\r\n\r\n  updateRFPCommetteeApproval(params: any, approvalAttachments: any): Observable<any> {\r\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/rfp/commetteeApproval`;\r\n    return this.http.put<any>(updateBillUrl, approvalAttachments, { params })\r\n  }\r\n\r\n\r\n  deleteRFPsTemporarily(params: any): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/delete`;\r\n    return this.http.delete<any>(RFPUrl, {params});\r\n  } \r\n\r\n  cancelOrReactivateRFP(params: any): Observable<any> {\r\n    const RfqUrl = `${environment.baseUrlProcurement}/api/v1/rfp/cancel`;\r\n    return this.http.post<any>(RfqUrl,{}, {params});\r\n  } \r\n\r\n\r\n  getRFPByStatus(params: any): Observable<any> {\r\n    const RFPssUrl = `${environment.baseUrlProcurement}/api/v1/rfp/rfp/status`;\r\n    return this.http.get<any>(RFPssUrl, { params: params, });\r\n  }\r\n\r\n \r\n\r\n  validateRFP(statusDetails: any): Observable<any> {\r\n    const API_URL = `${environment.baseUrlProcurement}/api/v1/rfp/verify`;\r\n    return this.http.put(\r\n      API_URL,\r\n      statusDetails\r\n    );\r\n  }\r\n\r\n\r\n  processSupplierAwardLetter(params: any): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/send/award`;\r\n    return this.http.post<any>(RFPUrl, {},{params});\r\n  }\r\n\r\n  // /api/v1/rfp/send/award/notification\r\n  \r\n  processEmailForNomination(params: any): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/send/award/notification`;\r\n    return this.http.post<any>(RFPUrl, {},{params});\r\n  }\r\n  \r\n  getRFPPendingCommitee(): Observable<any> {\r\n    const RFPUrl = `${environment.baseUrlProcurement}/api/v1/rfp/find/rfp/pending/commitee/approval`;\r\n    return this.http.get<any[]>(RFPUrl);\r\n  }\r\n\r\n    // ********************************************************************************************************************\r\n\r\n  donwloadRFPRecipientsReport(params: any): Observable<any> {\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"Accept\", \"application/pdf\");\r\n    let requestOptions: any = {\r\n      params: params,\r\n      headers: headers,\r\n      responseType: \"blob\",\r\n      withCredentials: false,\r\n    };\r\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/report/download/rfp/suppliers`;\r\n    return this.http.get(API_URL, requestOptions).pipe(\r\n      map((response: BlobPart) => {\r\n        console.log(\"Hey this is download RFP recipients Report\", response);\r\n        return {\r\n          filename: \"Report\",\r\n          data: new Blob([response], { type: \"application/pdf\" }),\r\n        };\r\n      })\r\n    );\r\n  }\r\n  donwloadRFPItemsReport(params: any): Observable<any> {\r\n    let headers = new HttpHeaders();\r\n    headers.append(\"Accept\", \"application/pdf\");\r\n    let requestOptions: any = {\r\n      params: params,\r\n      headers: headers,\r\n      responseType: \"blob\",\r\n      withCredentials: false,\r\n    };\r\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/report/download/rfp/items`;\r\n    return this.http.get(API_URL, requestOptions).pipe(\r\n      map((response: BlobPart) => {\r\n        console.log(\"Hey this is download RFP Items Report\", response);\r\n        return {\r\n          filename: \"Report\",\r\n          data: new Blob([response], { type: \"application/pdf\" }),\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { TaxLookupComponent } from 'src/app/erp-finance/data/lookups/tax-lookup/tax-lookup.component';\nimport { CalculationService } from 'src/app/erp-procurement/data/services/_procurement-calculations.service';\nimport { ManageProcurementCommitteesComponent } from '../../../parameters/pages/procurement-committee/manage-procurement-committees/manage-procurement-committees.component';\n\n@Component({\n  selector: 'app-manage-rfp-item',\n  templateUrl: './manage-rfp-item.component.html',\n  styleUrls: ['./manage-rfp-item.component.sass']\n})\nexport class ManageRfpItemComponent implements OnInit {\n\n  selection = new SelectionModel<any>(true, []);\n\n  loading = false;\n  members: any;\n  bgtForm: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageProcurementCommitteesComponent>,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialog: MatDialog,\n    private calculationService: CalculationService\n  ) {}\n  subscription!: Subscription;\n\n  pageAction = \"Add\";\n\n  ngOnInit(): void {\n    this.pageAction = this.data.action;\n    this.generateRfpItemForm(this.data?.data);\n    this.calculateTax();\n  }\n\n  generateRfpItemForm(data?: any) {\n    this.bgtForm = this.fb.group({\n      id: [data?.id || \"\"],\n      itemName: [data?.itemName || \"\", [Validators.required]],\n      itemCode: [data?.itemCode || \"\"],\n      description: [data?.description || \"\", [Validators.maxLength(300)]],\n      unitOfMeasure: [data?.unitOfMeasure || \"\", [Validators.required]],\n      quantity: [\n        data?.quantity || 0,\n        [\n          Validators.required,\n          Validators.min(0.01),\n          //Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$\"),\n          Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$|^$\"),\n        ],\n      ],\n      unitPricePerItem: [\n        data?.unitPricePerItem || 0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n      negotiatedPrice: [\n        data?.negotiatedPrice || 0,\n        [Validators.max(1000000000), Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      finalPrice: [\n        data?.finalPrice || 0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n      needByDate: [\n        data?.needByDate || \"\",\n        [Validators.required, this.dateValidator],\n      ],\n      taxRate: [\n        data?.taxRate || 0,\n        [\n          Validators.required,\n          Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$|^$\"),\n        ],\n      ],\n      taxName: [data?.taxName || \"\", [Validators.required]],\n      subTotal: [data?.subTotal || 0],\n      taxAmount: [data?.taxAmount || 0],\n      totalAmount: [data?.totalAmount || 0],\n    });\n\n    // Subscribe to value changes for unitPricePerItem\n    this.bgtForm.get(\"unitPricePerItem\").valueChanges.subscribe((unitPricePerItem) => {\n      this.bgtForm.get(\"finalPrice\").setValue(unitPricePerItem, { emitEvent: false });\n      this.calculateTax();\n    });\n\n    // Subscribe to value changes for negotiatedPrice\n    this.bgtForm\n      .get(\"negotiatedPrice\")\n      .valueChanges.subscribe((negotiatedPrice) => {\n        this.bgtForm\n          .get(\"finalPrice\")\n          .setValue(negotiatedPrice, { emitEvent: false });\n        this.calculateTax();\n      });\n  }\n\n  doCalculation(event: Event) {\n    this.calculateTax();\n  }\n\n  taxDetails = { subTotal: 0, taxAmount: 0, totalAmount: 0 };\n\n  calculateTax() {\n    this.taxDetails = { subTotal: 0, taxAmount: 0, totalAmount: 0 };\n    const quantity = Number(this.bgtForm.value.quantity);\n    const finalPrice = Number(this.bgtForm.value.finalPrice);\n    const taxRate = Number(this.bgtForm.value.taxRate);\n\n    console.log(\"quantity: \", quantity);\n    console.log(\"taxRate: \", taxRate);\n    console.log(\"finalPrice: \", finalPrice);\n\n    console.log(\"*************************************\");\n\n    this.taxDetails = this.calculationService.calculateTax(\n      quantity,\n      finalPrice,\n      taxRate\n    );\n\n    this.bgtForm.patchValue({\n      subTotal: this.taxDetails.subTotal.toFixed(2),\n      taxAmount: this.taxDetails.taxAmount.toFixed(2),\n      totalAmount: this.taxDetails.totalAmount.toFixed(2),\n    });\n\n    console.log(\"subTotal: \", this.bgtForm.value.subTotal);\n    console.log(\"taxAmount: \", this.bgtForm.value.taxAmount);\n    console.log(\"totalAmount: \", this.bgtForm.value.totalAmount);\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n  taxIsSelected = false;\n  selectedTaxes: any[] = [];\n  taxesLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"single tax\",\n      selected: this.selectedTaxes,\n    };\n\n    const dialogRef = this.dialog.open(TaxLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.bgtForm.patchValue({\n          // taxRate: result.data[0].,\n          // taxName: result.data[0].,\n        });\n      }\n    });\n  }\n\n  onSubmit() {\n    console.log(\"this.bgtForm.value: \", this.bgtForm.value);\n\n    this.dialogRef.close({ event: \"close\", item: this.bgtForm.value });\n  }\n  onClose() {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modalHeader clearfix\">\n                    <div class=\"modal-about\">\n                        <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                            {{ pageAction }} Rfp Item\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"mx-4\" [formGroup]=\"bgtForm\">\n            <div class=\"row\">\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Item Code</mat-label>\n                        <input matInput formControlName=\"itemCode\" />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Item Name</mat-label>\n                        <input matInput formControlName=\"itemName\" />\n                        <mat-error *ngIf=\"bgtForm.get('itemName').hasError('required')\">Item Name is\n                            required</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Unit of Measure</mat-label>\n                        <input matInput formControlName=\"unitOfMeasure\" />\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Quantity</mat-label>\n                        <input matInput formControlName=\"quantity\" (keyup)=\"doCalculation($event)\" />\n                        <mat-error *ngIf=\"bgtForm.get('quantity').hasError('required')\">Quantity is required</mat-error>\n                        <mat-error *ngIf=\"bgtForm.get('quantity').hasError('min')\">Quantity cannot be 0</mat-error>\n                        <mat-error *ngIf=\"bgtForm.get('quantity').hasError('pattern')\">Quantity allows numbers\n                            only</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Unit Price</mat-label>\n                        <input matInput formControlName=\"unitPricePerItem\" mask=\"separator\" thousandSeparator=\",\" />\n                        <mat-error *ngIf=\"\n                bgtForm.get('unitPricePerItem').hasError('required') &&\n                bgtForm.get('unitPricePerItem').touched\n              \">\n                            Please enter unit amount!\n                        </mat-error>\n                        <mat-error *ngIf=\"\n                bgtForm.get('unitPricePerItem').hasError('pattern') &&\n                bgtForm.get('unitPricePerItem').touched\n              \">\n                            Please ensure amount does not exceed 2 decimal values!\n                        </mat-error>\n                        <mat-error *ngIf=\"\n                bgtForm.get('unitPricePerItem').hasError('max') &&\n                bgtForm.get('unitPricePerItem').touched\n              \">\n                            Please ensure amount does not exceed 1 billion!\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Negotiated Price</mat-label>\n                        <input matInput formControlName=\"negotiatedPrice\" mask=\"separator\" thousandSeparator=\",\" />\n                        <mat-error *ngIf=\"\n                bgtForm.get('negotiatedPrice').hasError('pattern') &&\n                bgtForm.get('negotiatedPrice').touched\n              \">\n                            Please ensure amount does not exceed 2 decimal values!\n                        </mat-error>\n                        <mat-error *ngIf=\"\n                bgtForm.get('negotiatedPrice').hasError('max') &&\n                bgtForm.get('negotiatedPrice').touched\n              \">\n                            Please ensure amount does not exceed 1 billion!\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Final Price</mat-label>\n                        <input matInput formControlName=\"finalPrice\" mask=\"separator\" thousandSeparator=\",\" readonly />\n                        <mat-error *ngIf=\"\n                bgtForm.get('finalPrice').hasError('required') &&\n                bgtForm.get('finalPrice').touched\n              \">\n                            Please enter final amount!\n                        </mat-error>\n                        <mat-error *ngIf=\"\n                bgtForm.get('finalPrice').hasError('pattern') &&\n                bgtForm.get('finalPrice').touched\n              \">\n                            Please ensure amount does not exceed 2 decimal values!\n                        </mat-error>\n                        <mat-error *ngIf=\"\n                bgtForm.get('finalPrice').hasError('max') &&\n                bgtForm.get('finalPrice').touched\n              \">\n                            Please ensure amount does not exceed 1 billion!\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Need By Date</mat-label>\n                        <input matInput [matDatepicker]=\"picker\" formControlName=\"needByDate\" required />\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                        <mat-error *ngIf=\"bgtForm.get('needByDate').hasError('required')\">Need by Date is\n                            required</mat-error>\n                        <mat-error *ngIf=\"bgtForm.get('needByDate').hasError('pastDate')\">Enter a Valid Need by\n                            Date</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Tax Name</mat-label>\n                        <input matInput formControlName=\"taxName\" />\n                        <mat-icon matSuffix (click)=\"taxesLookup()\">search</mat-icon>\n                        <mat-error *ngIf=\"bgtForm.get('taxName').hasError('required')\">Tax Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Tax Rate</mat-label>\n                        <input matInput formControlName=\"taxRate\" (keyup)=\"doCalculation($event)\" />\n                        <mat-icon matSuffix (click)=\"taxesLookup()\">search</mat-icon>\n                        <mat-error *ngIf=\"bgtForm.get('taxRate').hasError('required')\">Tax Rate is required</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                        <mat-label>Description</mat-label>\n                        <!-- <input matInput formControlName=\"description\" /> -->\n                        <textarea matInput formControlName=\"description\" required></textarea>\n                        <mat-error *ngIf=\"bgtForm.get('description').hasError('required')\">Description is\n                            required</mat-error>\n                        <mat-error *ngIf=\"bgtForm.get('description').hasError('maxlength')\">Description must not exceed\n                            300 characters.</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-md-12\">\n                    <div class=\"float-end m-t-30 text-end\">\n                        <p>\n                            Sub - Total amount:\n                            <span>{{\n                                taxDetails.subTotal | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                }}</span>\n                        </p>\n                        <p>\n                            Vat:\n                            <span>{{\n                                taxDetails.taxAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                }}</span>\n                        </p>\n                        <hr />\n                        <h3>\n                            <b>Total:</b>\n                            <span>{{\n                                taxDetails.totalAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                }}</span>\n                        </h3>\n                    </div>\n                </div>\n\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                    <div class=\"float-right\">\n                        <button [disabled]=\"bgtForm.invalid\" (click)=\"onSubmit()\" class=\"btn-space\" mat-raised-button\n                            color=\"primary\">\n                            {{ this.pageAction }} Requisition Item\n                        </button>\n                        <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"onClose()\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { DatePipe } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ManageRfpComponent } from '../../pages/manage-rfp/manage-rfp.component';\nimport { RFPsService } from 'src/app/erp-procurement/data/services/rfps.service';\n\n@Component({\n  selector: 'app-validate-rfp',\n  templateUrl: './validate-rfp.component.html',\n  styleUrls: ['./validate-rfp.component.sass']\n})\nexport class ValidateRfpComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  status!: string;\n\n  resData: any;\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfpComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private rFPsService: RFPsService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n  }\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    this.canVerify = true;\n\n    // if (this.postedBy === this.currentUser) {\n\n    //   this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this record!\");\n\n    //   this.canVerify = false;\n\n    // } else {\n    //   this.canVerify = true;\n    // }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.status = \"VERIFIED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n \n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n\n    const params = {\n      id: this.Data.id,\n      role: this.data.userType,\n      status: this.status,\n      remarks: this.statusForm.value.reason,\n      approvedBy: this.currentUser,\n      validatedDate: todayDate\n    };\n\n  \n    console.log(\"Form = \", params);\n  \n    this.rFPsService\n      .validateRFP(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              \"RFP validated successfully\"\n            );\n            \n          }\n\n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: \" + err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-procurement/rfps/all-rfps\"]);\n        }\n      });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n  <div class=\"contact-details\">\n    <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\"><strong>Validate RFP</strong></div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n\n        <div class=\"row\">\n          <!--Gift Icon-->\n          <div class=\"col text-center my-2\">\n            <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n          </div>\n          <!--Modal Text-->\n\n\n         \n          \n          <div class=\"col-8 my-2\">\n            <dl class=\"dl-horizontal\">\n              <dt class=\"pull-left me-2\">RFP Number:</dt>\n              <dd>{{Data.rfpNumber}}</dd>\n              <dt class=\"pull-left me-2\">RFP Title:</dt>\n              <dd> {{ Data.rfpTitle }}</dd>\n              <dt class=\"pull-left me-2\">RFP Description:</dt>\n              <dd> {{ Data.rfpDescription }}</dd>\n            </dl>\n          </div>\n\n         \n        </div>\n\n        <div class=\"\">\n          <hr />\n\n          <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Verify</button>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Return</button>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Reject</button>\n              </div>\n            </div>\n          </div>\n          <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n            <div class=\"row\" *ngIf=\"rejected\">\n              <div class=\"col-10 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Reason for rejection</mat-label>\n                  <textarea formControlName=\"reason\" matInput></textarea>\n                  <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                </mat-form-field>\n              </div>\n              <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                  (click)=\"changeStatus()\">Submit</button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { RFPsService } from 'src/app/erp-procurement/data/services/rfps.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-all-rfps',\n  templateUrl: './all-rfps.component.html',\n  styleUrls: ['./all-rfps.component.scss']\n})\nexport class AllRfpsComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"id\",\n    \"rfpNumber\",\n    \"rfpTitle\",\n    \"needNumber\",\n    \"startDate\",\n    \"endDate\",\n    \"postedBy\",\n    \"postedTime\",\n    \"status\",\n    \"resendNominationLetter\",\n    \"recipientsReport\",\n    \"itemsReport\",\n    \"action\",\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  currentDate: Date = new Date();\n  dateTomorrow: Date = new Date(\n    this.currentDate.getTime() + 1 * 24 * 60 * 60 * 1000\n  );\n  oneWeekAgo: Date = new Date(\n    this.currentDate.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    { name: \"VERIFIED\" },\n    { name: \"APPLICATION\" },\n    { name: \"EVALUATION\" },\n    // { name: \"APPROVED\" },\n    { name: \"PENDING-COMMITTEE\" },\n    // { name: \"AWARDING\" },\n    { name: \"COMPLETED\" },\n    { name: \"CANCELED\" },\n\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  currentUser: any;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private rFPsService: RFPsService,\n    private fb: FormBuilder,\n    private datepipe: DatePipe,\n    private accessControlService: AccessControlService,\n    private tokenStorageService: TokenStorageService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.tokenStorageService.getUser().username;\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    \n      this.getData(this.currentPage, this.pageSize);\n    \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n  // getData() {\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   const params = new HttpParams().set(\"status\", this.Form.value.status);\n  //   this.rFPsService\n  //     .getRFPByStatus(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.res :\", res);\n  //         if (res.statusCode == 302) {\n  //           this.data = res.entity;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\n  //           \"snackbar-danger\",\n  //           \"No RFPs Matching these parameters!\"\n  //         );\n  //       },\n  //       complete: () => { },\n  //     }),\n  //     Subscription;\n  // }\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n      status: this.Form.value.status,\n    };\n\n    this.rFPsService\n      .getRFPByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  addRFP() {\n    this.router.navigate([\"/erp-procurement/rfps/manage-rfp\"]);\n  }\n\n\n  editRFP(data: any) {\n    // const additionalData = data;\n    // const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-procurement/rfps/manage-rfp\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        //additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n  viewRFP(data: any) {\n    // const additionalData = data;\n    // const serializedData = JSON.stringify(additionalData);\n    let route = \"/erp-procurement/rfps/manage-rfp\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        //additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n  // validateRFP(data: any) {\n  //   const additionalData = data;\n  //   const serializedData = JSON.stringify(additionalData);\n  //   let route = '/erp-procurement/rfps/manage-rfp';\n  //   this.router.navigate([route], { queryParams: { id: data.id, additionalData: serializedData, action: 'Validate' } });\n  // }\n\n  hasAccess: boolean;\n  validateRFP(data: any) {\n    let privilege = \"Validate RFP\";\n    this.hasAccess = this.accessControlService.hasPrivilege('ProcurementModule', [privilege]);\n    if (this.hasAccess) {\n      // const additionalData = data;\n      // const serializedData = JSON.stringify(additionalData);\n      let route = \"/erp-procurement/rfps/manage-rfp\";\n      this.router.navigate([route], {\n        queryParams: {\n          id: data.id,\n          //additionalData: serializedData,\n          action: \"Validate\",\n        },\n      });\n    }\n  }\n  committeeApproval(data: any) {\n    let privilege = \"RFPs Committee Approval\";\n    this.hasAccess = this.accessControlService.hasPrivilege('ProcurementModule', [privilege]);\n    if (this.hasAccess) {\n      // const additionalData = data;\n      // const serializedData = JSON.stringify(additionalData);\n      let route = \"/erp-procurement/rfps/manage-rfp\";\n      this.router.navigate([route], {\n        queryParams: {\n          id: data.id,\n          //additionalData: serializedData,\n          action: \"CommitteeApproval\",\n        },\n      });\n    }\n  }\n\n  deleteRFP(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this RFP?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete RFP!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams()\n          .set(\"id\", id)\n          .set(\"username\", this.currentUser)\n        this.rFPsService\n          .deleteRFPsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"RFP Deleted Successfully\"\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n\n  cancelReactivateRFP(rfpCode: any, action: any) {\n    let confirmationTitle = \"Are you sure?\";\n    let confirmationText = \"Do you really want to \";\n    let confirmationButtonText = \"Yes, \";\n\n    if (action === 'CANCELED') {\n      confirmationText += \"cancel this RFP?\";\n      confirmationButtonText += \"Cancel RFP!\";\n    } else if (action === 'PENDING') {\n      confirmationText += \"reactivate this RFP?\";\n      confirmationButtonText += \"Reactivate RFP!\";\n    }\n\n    Swal.fire({\n      title: confirmationTitle,\n      text: confirmationText,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: confirmationButtonText,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams()\n          .set(\"rfpCode\", rfpCode)\n          .set(\"status\", action);\n\n        this.rFPsService\n          .cancelOrReactivateRFP(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (action === 'CANCELED') {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  \"RFP Canceled Successfully\"\n                );\n              } else if (action === 'PENDING') {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  \"RFP Reactivated Successfully\"\n                );\n              }\n              this.getData(this.currentPage, this.pageSize);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                \"Server Error: \" + err.message\n              );\n            },\n          });\n      }\n    });\n  }\n\n\n  processAwardLetterLoading: boolean = false;\n  processAwardLetter(row: any) {\n    this.processAwardLetterLoading = true;\n    const params = new HttpParams()\n      .set(\"rfpApplicationCode\", row.rfpNumber)\n      .set(\"rfpCode\", row.rfpNumber);\n\n    this.rFPsService\n      .processSupplierAwardLetter(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.RFPAppres: \", res);\n          // res = this.sampleData\n          if (res.statusCode === 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n          this.processAwardLetterLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Error Processing Request!\"\n          );\n\n        },\n        complete: () => { this.processAwardLetterLoading = false; },\n      }),\n      Subscription;\n  }\n\n  processEmailLoading: boolean = false;\n  processNominationEmail(row: any) {\n    console.log(\"row.row: \", row);\n\n    this.processAwardLetterLoading = true;\n    const params = new HttpParams()\n      .set(\"rfpCode\", row.rfpNumber);\n\n    this.rFPsService\n      .processEmailForNomination(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.RFPAppres: \", res);\n          // res = this.sampleData\n          if (res.statusCode === 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n          this.processAwardLetterLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Error Processing Request!\"\n          );\n\n        },\n        complete: () => { this.processAwardLetterLoading = false; },\n      }),\n      Subscription;\n  }\n\n\n  downloadRFPReport(row: any, type: any) {\n    this.downloadLoading = true;\n\n    const params = new HttpParams().set(\"rfpCode\", row.RFPNumber);\n\n    if (type === 'recipients') {\n      this.rFPsService\n        .donwloadRFPRecipientsReport(params)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res :\", res);\n            let url = window.URL.createObjectURL(res.data);\n\n            // if you want to open PDF in new tab\n            window.open(url);\n\n            let a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.setAttribute(\"style\", \"display: none\");\n            a.setAttribute(\"target\", \"blank\");\n            a.href = url;\n            // a.download = \".pdf\";\n            a.download = `RFPRecipientsReport_${row.rfpNumber}.pdf`;\n            a.click();\n            window.URL.revokeObjectURL(url);\n            a.remove();\n\n            this.downloadLoading = false;\n\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              \"Report generated successfully\"\n            );\n            // if (res.statusCode === 200) {\n            // } else {\n            //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            // }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              \"Error doanloading Report!\"\n            );\n            this.downloadLoading = false;\n          },\n          complete: () => {\n            this.downloadLoading = false;\n          },\n        }),\n        Subscription;\n\n    } else if (type === 'items') {\n      this.rFPsService\n        .donwloadRFPItemsReport(params)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res :\", res);\n            let url = window.URL.createObjectURL(res.data);\n\n            // if you want to open PDF in new tab\n            window.open(url);\n\n            let a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.setAttribute(\"style\", \"display: none\");\n            a.setAttribute(\"target\", \"blank\");\n            a.href = url;\n            // a.download = \".pdf\";\n            a.download = `rfpItemsReport_${row.rfpNumber}.pdf`;\n            a.click();\n            window.URL.revokeObjectURL(url);\n            a.remove();\n\n            this.downloadLoading = false;\n\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              \"Report generated successfully\"\n            );\n            // if (res.statusCode === 200) {\n            // } else {\n            //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            // }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              \"Error doanloading Report!\"\n            );\n            this.downloadLoading = false;\n          },\n          complete: () => {\n            this.downloadLoading = false;\n          },\n        }),\n        Subscription;\n\n    }\n\n\n  }\n\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All RFPs'\" [items]=\"['RFPs']\" [active_item]=\"'All RFPs'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading || processEmailLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>RFPs</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addRFP()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'RFPs-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                        <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{\n                            reqStatus.name }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"\n                                Form.get('status').hasError('required')\n                              \">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n\n                      </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                        class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                        <mat-icon>check_circle</mat-icon>\n                        VERIFIED\n                      </button>\n\n                      <!-- Button for APPLICATION status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPLICATION'\"\n                        class=\"mat-button application\" (click)=\"getSelectedStatus('APPLICATION')\">\n                        <mat-icon>assignment</mat-icon>\n                        APPLICATION\n                      </button>\n\n                      <!-- Button for EVALUATION status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'EVALUATION'\"\n                        class=\"mat-button evaluation\" (click)=\"getSelectedStatus('EVALUATION')\">\n                        <mat-icon>description</mat-icon>\n                        EVALUATION\n                      </button>\n\n\n\n                      <!-- Button for PENDING-COMMITTEE status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING-COMMITTEE'\"\n                        class=\"mat-button pending-committee\" (click)=\"getSelectedStatus('PENDING-COMMITTEE')\">\n                        <mat-icon>group</mat-icon>\n                        PENDING-COMMITTEE\n                      </button>\n\n                      <!-- Button for APPROVED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button> -->\n\n                      <!-- Button for AWARDING status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'AWARDING'\"\n                        class=\"mat-button awarding\" (click)=\"getSelectedStatus('AWARDING')\">\n                        <mat-icon>star</mat-icon>\n                        AWARDING\n                      </button> -->\n\n                      <!-- Button for COMPLETED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'COMPLETED'\"\n                        class=\"mat-button completed\" (click)=\"getSelectedStatus('COMPLETED')\">\n                        <mat-icon>done_all</mat-icon>\n                        COMPLETED\n                      </button>\n\n                      <!-- Button for CANCELED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'CANCELED'\"\n                        class=\"mat-button canceled\" (click)=\"getSelectedStatus('CANCELED')\">\n                        <mat-icon>cancel</mat-icon>\n                        CANCELED\n                      </button>\n\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n\n\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-4\">Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-4\">{{row.id}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"rfpNumber\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-6\">RFPNumber</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                    {{row.rfpNumber}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"rfpTitle\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">RFPTitle</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"> {{row.rfpTitle}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"needNumber\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-6\">ReqNumber</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                    {{row.needNumber}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"startDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-7\">startDate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\"> {{row.startDate |\n                    date: 'short'}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"endDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-7\">endDate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\"> {{row.endDate | date:\n                    'short'}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"postedBy\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-7\">postedBy</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                    {{row.postedBy}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"postedTime\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-7\">postedTime</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\"> {{row.postedTime |\n                    date: 'short'}}</mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"  > {{row.status}}</mat-cell>\n                </ng-container> -->\n\n\n\n                <ng-container matColumnDef=\"recipientsReport\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-7\">RecipientsReport</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-7\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-blue btn btn btn-sm m-1\"\n                      (click)=\"downloadRFPReport(row,'recipients')\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"itemsReport\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-7\">ItemsReport</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-7\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"downloadLoading\" class=\"badge badge-solid-green btn btn btn-sm m-1\"\n                      (click)=\"downloadRFPReport(row, 'items')\">\n                      <i class=\"fas fa-download\"></i>&nbsp; Download..\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-12\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-12\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'VERIFIED'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'APPLICATION'\" class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                        <i class=\"fas fa-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'EVALUATION'\" class=\"badge badge-solid-cyan btn btn btn-sm m-1\">\n                        <i class=\"fas fa-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING-COMMITTEE'\" class=\"badge badge-solid-pink btn btn btn-sm m-1\">\n                        <i class=\"fas fa-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'AWARDING'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'COMPLETED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'CANCELED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;{{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n                <!-- <ng-container matColumnDef=\"sendAwardLetter\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-9\">SendAwardLetter</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-9\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"row.status !== 'APPROVED' || processAwardLetterLoading\"\n                      class=\"badge badge-solid-purple btn btn btn-sm m-1\" (click)=\"processAwardLetter(row)\">\n                      <i class=\"fas fa-check-square\"></i>&nbsp; Process Award\n                    </button>\n\n                  </mat-cell>\n                </ng-container> -->\n\n                <ng-container matColumnDef=\"resendNominationLetter\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-9\">Nomination Email</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-9\"\n                    (click)=\"$event.stopPropagation()\">\n                    <button [disabled]=\"row.status !== 'COMPLETED' || processEmailLoading\"\n                      class=\"badge badge-solid-purple btn btn btn-sm m-1\" (click)=\"processNominationEmail(row)\">\n                      <i class=\"fas fa-check-square\"></i>&nbsp; Process Email\n                    </button>\n\n                  </mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"RFPDescription\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">RFPDescription</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"  class=\"column-nowrap psl-3 tbl-col-width-per-15\"> {{row.RFPDescription}}</mat-cell>\n                </ng-container> -->\n\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-25 pr-0\">\n                    <button matTooltip=\"Edit\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editRFP(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button matTooltip=\"Validate\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"validateRFP(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button matTooltip=\"Committee Approval\" mat-icon-button color=\"primary\"\n                      (click)=\"$event.stopPropagation()\" (click)=\"committeeApproval(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-square'\" [class]=\"'tbl-fav-committee'\"></app-feather-icons>\n                    </button>\n\n                    <button matTooltip=\"View\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewRFP(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n                    <ng-container *ngIf=\"Form.value.status !== 'CANCELED'\">\n                      <button matTooltip=\"Cancel\" mat-icon-button color=\"warn\" (click)=\"$event.stopPropagation()\" (click)=\"cancelReactivateRFP(row.rfpNumber, 'CANCELED')\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'x'\" [class]=\"'tbl-fav-cancel'\"></app-feather-icons>\n                      </button>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"Form.value.status === 'CANCELED'\">\n                      <button matTooltip=\"Reactivate\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"cancelReactivateRFP(row.rfpNumber, 'PENDING')\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'refresh-ccw'\" [class]=\"'tbl-fav-reactivate'\"></app-feather-icons>\n                      </button>\n                    </ng-container>\n\n                    <button matTooltip=\"Delete\" mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteRFP(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewRFP(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                \n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                      }}\"</td>\n              </tr>\n\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              \n              \n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n          \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n/","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription, BehaviorSubject } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NeedService } from \"src/app/erp-procurement/data/services/need.service\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { NeedsLookupComponent } from \"../../../parameters/pages/lookups/needs-lookup/needs-lookup.component\";\nimport { ProcCommitteesLookupComponent } from \"../../../parameters/pages/lookups/proc-committees-lookup/proc-committees-lookup.component\";\nimport { SuppliersLookupComponent } from \"../../../parameters/pages/lookups/suppliers-lookup/suppliers-lookup.component\";\nimport { RFPsService } from \"src/app/erp-procurement/data/services/rfps.service\";\nimport { ValidateRfpComponent } from \"../../dialogs/validate-rfp/validate-rfp.component\";\nimport { CalculationService } from \"src/app/erp-procurement/data/services/_procurement-calculations.service\";\nimport { ManageRfpItemComponent } from \"../../dialogs/manage-rfp-item/manage-rfp-item.component\";\n\n@Component({\n  selector: \"app-manage-rfp\",\n  templateUrl: \"./manage-rfp.component.html\",\n  styleUrls: [\"./manage-rfp.component.scss\"],\n})\nexport class ManageRfpComponent implements OnInit {\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  hideSubmit = false;\n  showVerificationDet = false;\n\n  // ***************************************************************\n  displayedItemColumns: string[] = [\n    \"id\",\n    \"itemCode\",\n    \"itemName\",\n    \"description\",\n    \"quantity\",\n    \"actions\",\n  ];\n\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(\"paginatorItems\") paginatorItems: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n\n  // ***************************************************************\n\n  displayedSupplierColumns: string[] = [\n    \"id\",\n    \"supplierCode\",\n    \"companyName\",\n    \"phoneNumber\",\n    \"emailAddress\",\n    \"actions\",\n  ];\n\n  dataSourceSuppliers = new MatTableDataSource<any>([]);\n  @ViewChild(\"paginatorSuppliers\") paginatorSuppliers: MatPaginator;\n  @ViewChild(MatSort) sortSuppliers!: MatSort;\n\n  // ***************************************************************\n\n  hideApprovals: boolean = true;\n\n  requestCategories: any[] = [{ name: \"Open\" }, { name: \"Closed\" }];\n  disableActions: boolean = false;\n\n  isTabDisabled: boolean = true;\n\n  itemsArray: any[] = [];\n  suppliersArray: any[] = [];\n\n  committeeForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private rFPsService: RFPsService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private needService: NeedService,\n    private filesService: FilesService,\n    private calculationService: CalculationService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  rfpId: any;\n  ngOnInit(): void {\n    this.getPage();\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.id) {\n          this.rfpId = params.id;\n          console.log(\"ID:\", this.rfpId);\n          this.getDataById();\n          this.pageAction = params.action;\n          this.pageFunction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n  pageAction = \"Add\";\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngAfterViewInit() {\n    // Connect the paginators and sorters to their respective data sources\n    // this.dataSourceItems.paginator = this.paginatorItems;\n    // this.dataSourceItems.sort = this.sortItems;\n    // this.dataSourceSuppliers.paginator = this.paginatorSuppliers;\n    // this.dataSourceSuppliers.sort = this.sortSuppliers;\n  }\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.rfpId);\n    this.rFPsService\n      .getRFPById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.getPage();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n  getNeedDataById() {\n    const params = new HttpParams().set(\"id\", this.formNeedData.id);\n    this.needService\n      .getNeedsById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formNeedData = res.entity;\n\n            console.log(\"this.formNeedData: \", this.formNeedData);\n\n            const newArray = this.formNeedData.needItems.map((element) => {\n              return {\n                itemName: element.itemName,\n                itemCode: element.itemCode,\n                description: element.itemDescription,\n                quantity: element.itemQuantity,\n                needByDate: element.needByDate,\n                unitOfMeasure: element.unitOfMeasure,\n              };\n            });\n\n            console.log(\"newArray: \", newArray);\n\n            this.dataSourceItems = new MatTableDataSource(newArray);\n            this.dataSourceItems.paginator = this.paginatorItems;\n            this.dataSourceItems.sort = this.sortItems;\n\n            this.mngForm.patchValue({\n              rfpItems: this.dataSourceItems.data,\n              needNumber: this.formNeedData.needCode,\n            });\n\n            this.requsitionIsSelected = true;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n\n      this.hideApprovals = true;\n\n      if (this.formData && this.formData.needItems.length > 0) {\n        console.log(\"formData: \", this.formData.needItems);\n\n        const newArray = this.formData.needItems.map((element) => {\n          return {\n            itemName: element.itemName,\n            itemCode: element.itemCode,\n            description: element.description,\n            quantity: element.quantity,\n          };\n        });\n\n        console.log(\"newArray: \", newArray);\n\n        this.dataSourceItems = new MatTableDataSource(newArray);\n        this.dataSourceItems.paginator = this.paginatorItems;\n        this.dataSourceItems.sort = this.sortItems;\n\n        this.mngForm.patchValue({\n          rfpItems: this.dataSourceItems.data,\n          needNumber: this.formData.needCode,\n        });\n      }\n    } else if (this.pageFunction === \"Update\") {\n      this.displayedItemColumns = [\n        \"id\",\n        \"itemCode\",\n        \"itemName\",\n        \"description\",\n        \"quantity\",\n        \"unitPricePerItem\",\n        \"negotiatedPrice\",\n        \"subTotal\",\n        \"taxAmount\",\n        \"totalAmount\",\n        \"actions\",\n      ];\n\n      this.generateFormWithData();\n      this.hideApprovals = true;\n      this.showVerificationDet = true;\n\n      if (this.formData && this.formData.rfpItems.length > 0) {\n        console.log(\"formData: \", this.formData.rfpItems);\n\n        this.dataSourceItems = new MatTableDataSource(this.formData.rfpItems);\n        this.dataSourceItems.paginator = this.paginatorItems;\n        this.dataSourceItems.sort = this.sortItems;\n      }\n\n      if (this.formData && this.formData.rfpRecipients.length > 0) {\n        console.log(\"formData: \", this.formData.rfpRecipients);\n\n        this.dataSourceSuppliers = new MatTableDataSource(\n          this.formData.rfpRecipients\n        );\n        this.dataSourceSuppliers.paginator = this.paginatorSuppliers;\n        this.dataSourceSuppliers.sort = this.sortSuppliers;\n      }\n\n      if (this.formData.rfpDocumentations.length > 0) {\n        this.isFileRFPAttachmentsDataLoading = false;\n        this.formData.rfpDocumentations.forEach((element) => {\n          const newRow = this.fb.group({\n            file: [element.file],\n            fileName: [element.fileName],\n            fileType: [element.fileType],\n          });\n          this.rowsRFPAttachments.push(newRow);\n        });\n\n        this.updateRFPAttachmentsView();\n      }\n      this.calculateTotals();\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledRFPForm();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n\n      if (this.formData && this.formData.rfpItems.length > 0) {\n        console.log(\"formData: \", this.formData.rfpItems);\n\n        this.dataSourceItems = new MatTableDataSource(this.formData.rfpItems);\n        this.dataSourceItems.paginator = this.paginatorItems;\n        this.dataSourceItems.sort = this.sortItems;\n      }\n\n      if (this.formData && this.formData.rfpRecipients.length > 0) {\n        console.log(\"formData: \", this.formData.rfpRecipients);\n\n        this.dataSourceSuppliers = new MatTableDataSource(\n          this.formData.rfpRecipients\n        );\n        this.dataSourceSuppliers.paginator = this.paginatorSuppliers;\n        this.dataSourceSuppliers.sort = this.sortSuppliers;\n      }\n\n      if (this.formData.rfpDocumentations.length > 0) {\n        this.isFileRFPAttachmentsDataLoading = false;\n        this.formData.rfpDocumentations.forEach((element) => {\n          const newRow = this.fb.group({\n            file: [element.file],\n            fileName: [element.fileName],\n            fileType: [element.fileType],\n          });\n          this.rowsRFPAttachments.push(newRow);\n        });\n\n        this.updateRFPAttachmentsView();\n      }\n      this.calculateTotals();\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n      this.showVerificationDet = true;\n\n      if (this.formData && this.formData.rfpItems.length > 0) {\n        console.log(\"formData: \", this.formData.rfpItems);\n\n        this.dataSourceItems = new MatTableDataSource(this.formData.rfpItems);\n        this.dataSourceItems.paginator = this.paginatorItems;\n        this.dataSourceItems.sort = this.sortItems;\n      }\n\n      if (this.formData && this.formData.rfpRecipients.length > 0) {\n        console.log(\"formData: \", this.formData.rfpRecipients);\n\n        this.dataSourceSuppliers = new MatTableDataSource(\n          this.formData.rfpRecipients\n        );\n        this.dataSourceSuppliers.paginator = this.paginatorSuppliers;\n        this.dataSourceSuppliers.sort = this.sortSuppliers;\n      }\n      if (this.formData.rfpDocumentations.length > 0) {\n        this.isFileRFPAttachmentsDataLoading = false;\n        this.formData.rfpDocumentations.forEach((element) => {\n          const newRow = this.fb.group({\n            file: [element.file],\n            fileName: [element.fileName],\n            fileType: [element.fileType],\n          });\n          this.rowsRFPAttachments.push(newRow);\n        });\n\n        this.updateRFPAttachmentsView();\n      }\n      this.calculateTotals();\n    } else if (this.pageFunction === \"CommitteeApproval\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n      this.showVerificationDet = true;\n\n      if (this.formData && this.formData.rfpItems.length > 0) {\n        console.log(\"formData: \", this.formData.rfpItems);\n\n        this.dataSourceItems = new MatTableDataSource(this.formData.rfpItems);\n        this.dataSourceItems.paginator = this.paginatorItems;\n        this.dataSourceItems.sort = this.sortItems;\n      }\n\n      if (this.formData && this.formData.rfpRecipients.length > 0) {\n        console.log(\"formData: \", this.formData.rfpRecipients);\n\n        this.dataSourceSuppliers = new MatTableDataSource(\n          this.formData.rfpRecipients\n        );\n        this.dataSourceSuppliers.paginator = this.paginatorSuppliers;\n        this.dataSourceSuppliers.sort = this.sortSuppliers;\n      }\n      if (this.formData.rfpDocumentations.length > 0) {\n        this.isFileRFPAttachmentsDataLoading = false;\n        this.formData.rfpDocumentations.forEach((element) => {\n          const newRow = this.fb.group({\n            file: [element.file],\n            fileName: [element.fileName],\n            fileType: [element.fileType],\n          });\n          this.rowsRFPAttachments.push(newRow);\n        });\n\n        this.updateRFPAttachmentsView();\n      }\n      if (this.formData.reqCommApproval === \"Y\") {\n        this.isTabDisabled = false;\n      }\n\n      this.calculateTotals();\n    }\n  }\n\n  // {\n  //   \"endDate\": \"2023-08-08T13:45:20.814Z\",\n  //   \"financialPercentage\": 0,\n  //   \"id\": 0,\n  //   \"isRfpBidComplete\": \"string\",\n  //   \"isRfpClosed\": \"string\",\n  //   \"isRfpEvaluated\": \"string\",\n  //   \"needNumber\": \"string\",\n  //   \"numberOfSuppliers\": 0,\n  //   \"remarks\": \"string\",\n  //   \"reqCommApproval\": \"string\",\n  //   \"rfpApplicationCode\": \"string\",\n  //   \"rfpDescription\": \"string\",\n  //   \"rfpDocumentations\": [\n  //     {\n  //       \"file\": \"string\",\n  //       \"fileName\": \"string\",\n  //       \"fileType\": \"string\",\n  //       \"id\": 0\n  //     }\n  //   ],\n  //   \"rfpItems\": [\n  //     {\n  //       \"description\": \"string\",\n  //       \"id\": 0,\n  //       \"itemCode\": \"string\",\n  //       \"itemName\": \"string\",\n  //       \"needByDate\": \"2023-08-08T13:45:20.814Z\",\n  //       \"quantity\": 0,\n  //       \"quoteDescription\": \"string\",\n  //       \"subTotal\": 0,\n  //       \"taxAmount\": 0,\n  //       \"taxName\": \"string\",\n  //       \"taxRate\": 0,\n  //       \"totalAmount\": 0,\n  //       \"unitOfMeasure\": \"string\",\n  //       \"unitPricePerItem\": 0\n  //     }\n  //   ],\n  //   \"rfpNumber\": \"string\",\n  //   \"rfpTitle\": \"string\",\n  //   \"rfpCommitteeApprovals\": [\n  //     {\n  //       \"committeeId\": \"string\",\n  //       \"committeeName\": \"string\",\n  //       \"file\": \"string\",\n  //       \"filename\": \"string\",\n  //       \"filetype\": \"string\",\n  //       \"id\": 0,\n  //       \"status\": \"string\"\n  //     }\n  //   ],\n  //   \"rfprecipients\": [\n  //     {\n  //       \"companyName\": \"string\",\n  //       \"emailAddress\": \"string\",\n  //       \"id\": 0,\n  //       \"phoneNumber\": \"string\",\n  //       \"supplierCode\": \"string\"\n  //     }\n  //   ],\n  //   \"requestCategory\": \"string\",\n  //   \"startDate\": \"2023-08-08T13:45:20.814Z\",\n  //   \"status\": \"string\",\n  //   \"supplierCode\": \"string\",\n  //   \"supplierName\": \"string\",\n  //   \"supplierQuotation\": 0,\n  //   \"technicalPercentage\": 0\n  // }\n\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      numberOfSuppliers: [\"\"],\n      needNumber: [\"\"],\n      rfpDescription: [\"\", [Validators.required, Validators.maxLength(300)]],\n      suppliersJustification: [\"\", [Validators.maxLength(300)]],\n      rfpNumber: \"\",\n      rfpTitle: [\"\", [Validators.required]],\n      requestCategory: [\"\"],\n\n      status: [\"PENDING\", [Validators.required]],\n\n      startDate: [\"\", [Validators.required]],\n      endDate: [\"\", [Validators.required]],\n\n      technicalPercentage: [\n        \"\",\n        [Validators.required, Validators.pattern(/^[0-9]*$/)],\n      ],\n      financialPercentage: [\n        \"\",\n        [Validators.required, Validators.pattern(/^[0-9]*$/)],\n      ],\n\n      rfpRecipients: [[]],\n      rfpItems: [[]],\n      rfpDocumentations: [[]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      numberOfSuppliers: [this.formData.numberOfSuppliers],\n      needNumber: [this.formData.needNumber],\n      rfpDescription: [\n        this.formData.rfpDescription,\n        [Validators.required, Validators.maxLength(300)],\n      ],\n      suppliersJustification: [\n        this.formData.suppliersJustification,\n        [Validators.maxLength(300)],\n      ],\n      rfpNumber: [this.formData.rfpNumber],\n      rfpTitle: [this.formData.rfpTitle, [Validators.required]],\n\n      requestCategory: [this.formData.requestCategory],\n\n      status: [this.formData.status],\n      startDate: [this.formData.startDate, [Validators.required]],\n      endDate: [this.formData.endDate, [Validators.required]],\n\n      technicalPercentage: [\n        this.formData.technicalPercentage,\n        [Validators.required, Validators.pattern(/^[0-9]*$/)],\n      ],\n      financialPercentage: [\n        this.formData.financialPercentage,\n        [Validators.required, Validators.pattern(/^[0-9]*$/)],\n      ],\n\n      rfpRecipients: [this.formData.rfpRecipients],\n      rfpItems: [this.formData.rfpItems],\n      rfpDocumentations: [this.formData.rfpDocumentations],\n      rfpCommitteeApprovals: [this.formData.rfpCommitteeApprovals],\n    });\n  }\n\n  generateDisabledRFPForm(): void {\n    this.mngForm = this.fb.group({\n      id: { value: this.formData.id, disabled: true },\n      numberOfSuppliers: {\n        value: this.formData.numberOfSuppliers,\n        disabled: true,\n      },\n      needNumber: {\n        value: this.formData.needNumber,\n        disabled: true,\n      },\n      rfpDescription: [\n        { value: this.formData.rfpDescription, disabled: true },\n        [Validators.required],\n      ],\n      suppliersJustification: [\n        { value: this.formData.suppliersJustification, disabled: true },\n        [Validators.required],\n      ],\n      rfpNumber: { value: this.formData.rfpNumber, disabled: true },\n      rfpTitle: [\n        { value: this.formData.rfpTitle, disabled: true },\n        [Validators.required],\n      ],\n      requestCategory: [\n        { value: this.formData.requestCategory, disabled: true },\n      ],\n      status: { value: this.formData.status, disabled: true },\n      startDate: [\n        { value: this.formData.startDate, disabled: true },\n        [Validators.required],\n      ],\n      endDate: [\n        { value: this.formData.endDate, disabled: true },\n        [Validators.required],\n      ],\n      approvedBy: { value: this.formData.approvedBy, disabled: true },\n      approvedOn: { value: this.formData.approvedOn, disabled: true },\n      createdBy: { value: this.formData.createdBy, disabled: true },\n      createdOn: { value: this.formData.createdOn, disabled: true },\n      rfpRecipients: { value: this.formData.rfpRecipients, disabled: true },\n      rfpItems: { value: this.formData.rfpItems, disabled: true },\n\n      technicalPercentage: {\n        value: this.formData.technicalPercentage,\n        disabled: true,\n      },\n      financialPercentage: {\n        value: this.formData.financialPercentage,\n        disabled: true,\n      },\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  supplierIsSelected = false;\n  selectedSuppliers: any[] = [];\n  suppliersLookup() {\n    if (\n      this.mngForm.value.requestCategory !== null &&\n      this.mngForm.value.requestCategory !== \"\" &&\n      this.mngForm.value.requestCategory !== undefined\n    ) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"view suppliers\",\n        selected: this.selectedSuppliers,\n        category: this.mngForm.value.requestCategory,\n      };\n\n      const dialogRef = this.dialog.open(\n        SuppliersLookupComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        if (result && result.data.length != 0) {\n          console.log(\"result: \", result.data);\n\n          const newArray = result.data.map((element) => {\n            return {\n              supplierCode: element.supplierCode,\n              companyName: element.companyName,\n              phoneNumber: element.phone,\n              emailAddress: element.email,\n            };\n          });\n\n          console.log(\"newArray: \", newArray);\n\n          this.dataSourceSuppliers = new MatTableDataSource(newArray);\n          this.dataSourceSuppliers.paginator = this.paginatorSuppliers;\n          this.dataSourceSuppliers.sort = this.sortSuppliers;\n\n          this.supplierIsSelected = true;\n\n          this.mngForm.patchValue({\n            rfpRecipients: this.dataSourceSuppliers.data,\n            numberOfSuppliers: this.dataSourceSuppliers.data.length,\n          });\n        }\n      });\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Kindly select supplier request category to proceed!\"\n      );\n    }\n  }\n\n  onDeleteSupplier(index: number) {\n    this.dataSourceSuppliers.data.splice(index, 1);\n    this.dataSourceSuppliers.data = this.dataSourceSuppliers.data.slice();\n  }\n\n  //*************************************************************************************************************************** */\n\n  requsitionIsSelected = false;\n  selectedRequsitions: any[] = [];\n\n  formNeedData: any;\n\n  needsLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"900px\";\n    dialogConfig.data = {\n      action: \"view requsitions\",\n      selected: this.selectedRequsitions,\n      needType: \"RFP\",\n    };\n\n    const dialogRef = this.dialog.open(NeedsLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.formNeedData = result.data[0];\n        this.getNeedDataById();\n      }\n    });\n  }\n\n  procurementCommitteeIsSelected = false;\n  committeesLookup(index) {\n    console.log(\"index: \", index);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      action: \"single committee\",\n    };\n\n    const dialogRef = this.dialog.open(\n      ProcCommitteesLookupComponent,\n      dialogConfig\n    );\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.procurementCommitteeIsSelected = true;\n\n        this.rows.at(index).patchValue({\n          committeeId: result.data[0].id,\n          committeeName: result.data[0].committeeName,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  // committeesLookup() {\n\n  //   // committeeId: [\"\", Validators.required],\n  //   // committeeName: [\"\", Validators.required],\n  // }\n  //******************************************************************************************************************************** */\n\n  onDeleteNeedDetails(index: number) {\n    this.dataSourceItems.data.splice(index, 1);\n    this.dataSourceItems.data = this.dataSourceItems.data.slice();\n  }\n\n  manageRfpItem(row, action) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      data: row,\n      action: action,\n    };\n    const dialogRef = this.dialog.open(ManageRfpItemComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        console.log(\"result.item: \", result.item);\n\n        const index = this.dataSourceItems.data.findIndex(\n          (item) => item.id === result.item.id\n        );\n\n        this.dataSourceItems.data.splice(index, 1, result.item);\n\n        // Refresh the data source\n        this.dataSourceItems.data = [...this.dataSourceItems.data];\n\n        this.calculateTotals();\n      }\n    });\n  }\n\n  totals = {\n    totalTax: 0,\n    subTotalAmount: 0,\n    totalAmount: 0,\n  };\n\n  calculateTotals() {\n    const dataArray = this.dataSourceItems.data;\n    console.log(\"dataArray: \", dataArray);\n    this.totals = this.calculationService.calculateTotals(dataArray);\n    console.log(\"totals: \", this.totals);\n  }\n\n  // ****************************************************************************************************************************\n\n  // **************************************************************************************************\n  //UploadRFPDocuments\n\n  attachementsRFPAttachmentsDataSource = new BehaviorSubject<AbstractControl[]>(\n    []\n  );\n  displayRFPAttachmentsColumns = [\n    \"id\",\n    \"fileName\",\n    \"fileType\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rowsRFPAttachments: FormArray = this.fb.array([]);\n  documentsRFPAttachmentsForm: FormGroup = this.fb.group({\n    filedetails: this.rowsRFPAttachments,\n  });\n\n  isFileRFPAttachmentsDataLoading: boolean = true;\n\n  fileFormRFPAttachments: FormGroup;\n  fileInputsRFPAttachments: FormArray;\n\n  createRFPAttachmentsFileForm() {\n    this.fileFormRFPAttachments = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addRFPAttachmentsFileRow();\n  }\n\n  addRFPAttachmentsFileRow() {\n    this.isFileRFPAttachmentsDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rowsRFPAttachments.push(row);\n    this.attachementsRFPAttachmentsDataSource.next(\n      this.rowsRFPAttachments.controls\n    );\n  }\n\n  updateRFPAttachmentsView() {\n    this.attachementsRFPAttachmentsDataSource.next(\n      this.rowsRFPAttachments.controls\n    );\n\n    this.mngForm.patchValue({\n      rfpDocumentations: this.documentsRFPAttachmentsForm.value.filedetails,\n    });\n  }\n\n  // deleteCall(index){\n  //   this.dataSource.splice(index, 1);\n  // }\n\n  deleteRFPAttachmentsCall(row: AbstractControl) {\n    const dataArray = this.attachementsRFPAttachmentsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsRFPAttachmentsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFilesRFPAttachments: SelectedFiles[] = [];\n  public isFileLoadingRFPAttachments = new BehaviorSubject(false);\n\n  currFileRFPAttachments: string;\n  currFilenameRFPAttachments: any;\n  currTypeRFPAttachments: any;\n\n  onSelectRFPAttachmentsFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoadingRFPAttachments.next(true);\n    this.selectedFilesRFPAttachments = [];\n    this.filesService\n      .toBase64(files, this.selectedFilesRFPAttachments)\n      .subscribe((res) => {\n        if (res) {\n          this.isFileLoadingRFPAttachments.next(false);\n\n          this.selectedFilesRFPAttachments = res;\n          console.log(\"selectedFiles: \", this.selectedFilesRFPAttachments);\n\n          console.log(\n            \"this.selectedFiles[0].name: \",\n            this.selectedFilesRFPAttachments[0].name\n          );\n\n          this.currFileRFPAttachments =\n            this.selectedFilesRFPAttachments[0].base64;\n\n          const fileName = this.selectedFilesRFPAttachments[0].name;\n          const fileParts = fileName.split(\".\");\n          const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n          const extension = fileParts[fileParts.length - 1];\n\n          console.log(\"Name:\", name); // Output: Lease Armotization (3)\n          console.log(\"Extension:\", extension); // Output: xlsx\n\n          this.currFilenameRFPAttachments = name;\n          this.currTypeRFPAttachments = extension;\n\n          // committeeId: [\"\", Validators.required],\n          // committeeName: [\"\", Validators.required],\n\n          this.rowsRFPAttachments.at(index).patchValue({\n            file: this.currFileRFPAttachments,\n            fileName: this.currFilenameRFPAttachments,\n            fileType: this.currTypeRFPAttachments,\n          });\n          this.updateRFPAttachmentsView();\n        }\n      });\n  }\n\n  downloadRFPAttachmentsDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  //*************************************************************************************************** */\n\n  // **************************************************************************************************\n  //UploadDocuments\n\n  rfpCommitteeStatuses: any[] = [{ name: \"Approved\" }, { name: \"Returned\" }];\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"committeeName\",\n    \"status\",\n    \"filename\",\n    \"filetype\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  // \"rfpCommitteeApprovals\": [\n  //   {\n  //     \"committeeId\": \"string\",\n  //     \"committeeName\": \"string\",\n  //     \"file\": \"string\",\n  //     \"filename\": \"string\",\n  //     \"filetype\": \"string\",\n  //     \"id\": 0,\n  //     \"status\": \"string\"\n  //   }\n  // ],\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      committeeId: [\"\", Validators.required],\n      committeeName: [\"\", Validators.required],\n      file: [\"\", Validators.required],\n      filetype: [\"\", Validators.required],\n      filename: [\"\", Validators.required],\n      status: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  // deleteCall(index){\n  //   this.dataSource.splice(index, 1);\n  // }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currFilename: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currFilename = name;\n        this.currType = extension;\n\n        // committeeId: [\"\", Validators.required],\n        // committeeName: [\"\", Validators.required],\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          filename: this.currFilename,\n          filetype: this.currType,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let filename = row.value.filename;\n    let filetype = row.value.filetype;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${filename}.${filetype}`;\n    link.click();\n  }\n\n  //*************************************************************************************************** */\n\n  hasAccess: boolean;\n\n  onValidate(userType) {\n    let privilege = \"Validate RFP\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\n      \"ProcurementModule\",\n      [privilege]\n    );\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"650px\";\n      dialogConfig.data = {\n        data: this.formData,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(ValidateRfpComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-procurement/rfps/all-rfps\"]);\n      });\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  cancel(): void {\n    this.router.navigate([\"/erp-procurement/rfps/all-rfps\"]);\n  }\n  isLoading: boolean = false;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.isLoading = true\n    if (this.pageFunction === \"Add\") {\n      this.rFPsService\n        .addRFP(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res : \", res);\n\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"RFP Added Successfully\"\n              );\n              this.router.navigate([\"/erp-procurement/rfps/all-rfps\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            console.log(\"err : \", err);\n\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {    this.isLoading = false\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      console.log(\"this.mngForm.value : \", this.mngForm.value);\n\n      this.rFPsService\n        .updateRFP(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"RFP Updated Successfully\"\n              );\n              this.router.navigate([\"/erp-procurement/rfps/all-rfps\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {this.isLoading = false},\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"CommitteeApproval\") {\n      if (this.formData.reqCommApproval === \"Y\") {\n        this.mngForm.patchValue({\n          rfpCommitteeApprovals: this.documentsForm.value.filedetails,\n        });\n      }\n\n      console.log(\"this.mngForm.value : \", this.mngForm.value);\n\n      let params = { rfpCode: this.mngForm.value.rfpNumber };\n      let approvalAttachments = this.documentsForm.value.filedetails;\n\n      this.rFPsService\n        .updateRFPCommetteeApproval(params, approvalAttachments)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"RFP Updated Successfully\"\n              );\n              this.router.navigate([\"/erp-procurement/rfps/all-rfps\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {this.isLoading = false},\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage RFPs'\" [items]=\"['RFPs']\" [active_item]=\"'Manage RFPs'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\" *ngIf=\"showForm\">\n\n            <div class=\"row mx-2\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-sm-6\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Created By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData?.postedBy ? formData.postedBy : '-' }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-sm-6\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Created Time</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData?.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n              \n                        <div class=\"col-lg-3 col-sm-6\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData?.verifiedBy ? formData.verifiedBy : '-' }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-sm-6\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified Time</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData?.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n\n\n            </div>\n\n            <div class=\"header\">\n              <div class=\"row\">\n                <h2>{{ pageFunction }} RFP</h2>\n              </div>\n            </div>\n\n            <form class=\"mx-4\" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>RFP Title</mat-label>\n                    <input matInput formControlName=\"rfpTitle\" />\n                    <mat-error *ngIf=\"mngForm.get('rfpTitle').hasError('required')\">RFP Title is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-3\">\n\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Start Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"startDate\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error *ngIf=\"mngForm.get('startDate').hasError('required')\">Start Date is required</mat-error>\n                    <mat-error *ngIf=\"mngForm.get('startDate').hasError('pastDate')\">Enter a valid start\n                      date</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>End Date</mat-label>\n                    <input matInput [matDatepicker]=\"picker2\" formControlName=\"endDate\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker2></mat-datepicker>\n                    <mat-error *ngIf=\"mngForm.get('endDate').hasError('required')\">End Date is required</mat-error>\n                    <mat-error *ngIf=\"mngForm.get('endDate').hasError('periodStart')\">Enter a valid end date</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>RequestCategory</mat-label>\n\n                    <mat-select formControlName=\"requestCategory\">\n                      <mat-option *ngFor=\"let requestCategory of requestCategories\" [value]=\"requestCategory.name\">{{ requestCategory.name\n                        }}</mat-option>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"mngForm.get('requestCategory').hasError('required')\">Category is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>financialPercentage</mat-label>\n\n                    <input matInput formControlName=\"financialPercentage\" />\n\n                    <mat-error *ngIf=\"mngForm.get('financialPercentage').hasError('required')\">Finance Percentage is\n                      required</mat-error>\n                      \n                <mat-error *ngIf=\"mngForm.get('financialPercentage').hasError('pattern')\">Finance Percentage must be a number</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>TechnicalPercentage</mat-label>\n\n                    <input matInput formControlName=\"technicalPercentage\" />\n\n                    <mat-error *ngIf=\"mngForm.get('technicalPercentage').hasError('required')\">Technical Percentage is\n                      required</mat-error>\n                      <mat-error *ngIf=\"mngForm.get('technicalPercentage').hasError('pattern')\">Technical Percentage must be a number</mat-error>\n\n                  </mat-form-field>\n                </div>\n\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>RFP Description</mat-label>\n                    <textarea matInput formControlName=\"rfpDescription\" required></textarea>\n                    <mat-error *ngIf=\"mngForm.get('rfpDescription').hasError('required')\">RFPDescription is\n                      required</mat-error>\n                    <mat-error *ngIf=\"\n                      mngForm.get('rfpDescription').hasError('maxlength')\n                    \">RFPDescription must not exceed 300 characters.</mat-error>\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                    <mat-label>Supplier Selection Justification</mat-label>\n                    <textarea matInput formControlName=\"suppliersJustification\"></textarea>\n                    <mat-error *ngIf=\"mngForm.get('suppliersJustification').hasError('required')\">Suppliers Justification is\n                      required</mat-error>\n                    <mat-error *ngIf=\"\n                      mngForm.get('suppliersJustification').hasError('maxlength')\n                    \">SuppliersJustification must not exceed 300 characters.</mat-error>\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n\n            </form>\n\n\n\n\n            <mat-tab-group>\n              <mat-tab>\n                <ng-template mat-tab-label>\n                  <mat-icon>shopping_cart</mat-icon> Requisition Items\n                </ng-template>\n\n                <div class=\"mt-3\">\n                  <!-- Content for the first tab -->\n\n                  <div class=\"header\">\n                    <div class=\"row\">\n                      <h2>Requisition Items</h2>\n                    </div>\n                  </div>\n\n\n                  <div class=\"mx-4 my-4\">\n                    <div class=\"materialTableHeader\">\n                      <div class=\"row\">\n                        <div class=\"col-8\">\n                          <ul class=\"header-buttons-left ms-0\">\n                            <li class=\"dropdown\">\n                              <h2>Requisition Records</h2>\n                            </li>\n                            <li class=\"dropdown m-l-20\">\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                              <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                class=\"browser-default search-field\" aria-label=\"Search box\" />\n                            </li>\n\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"needsLookup()\">\n                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                <button mat-mini-fab color=\"primary\">\n                                  <mat-icon class=\"col-white\">refresh</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n\n\n                          </ul>\n                        </div>\n                        <div class=\"col-4\">\n                          <ul class=\"header-buttons\">\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                    exporter.exportTable('xlsx', {\n                                      fileName: 'assets-list',\n                                      sheet: 'sheet1'\n                                    })\n                                  \" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n\n\n                    </div>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSourceItems\" matSort class=\"mat-cell\"\n                      #exporter=\"matTableExporter\">\n                      <ng-container matColumnDef=\"id\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-6\">#\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row;\" class=\"psl-3 tbl-col-width-per-6\"><span *ngIf=\"row.id\">\n                            #</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"itemCode\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-35\">itemCode\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.itemCode\">\n                            {{ row.itemCode }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"itemName\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-35\">itemName\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.itemName\">\n                            {{ row.itemName }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"description\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-35\">description\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.description\"> {{ row.description }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n\n                      <ng-container matColumnDef=\"quantity\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-35\">Quantity\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.quantity\"> {{ row.quantity }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"unitPricePerItem\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">UnitPrice\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.unitPricePerItem\">\n                            {{\n                            row.unitPricePerItem | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}\n                          </span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"negotiatedPrice\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">NegotiatedPrice\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.negotiatedPrice\">\n                            {{\n                            row.negotiatedPrice | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}\n                          </span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"subTotal\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">subTotal\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.subTotal\"> {{\n                            row.subTotal | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"taxAmount\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">TaxAmount\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.taxAmount\"> {{\n                            row.taxAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"totalAmount\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-28\">TotalAmount\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                          <span *ngIf=\"row.totalAmount\">{{\n                            row.totalAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                            }} </span>\n                        </mat-cell>\n                      </ng-container>\n\n\n                      <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell class=\"psl-3 tbl-col-width-per-35\" *matHeaderCellDef>Actions</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row; let i = index\" class=\"psl-3 tbl-col-width-per-35\">\n                          <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"manageRfpItem(row, 'Update')\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                        </button>\n                          <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                            (click)=\"onDeleteNeedDetails(i)\" class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                          </button>\n                        </mat-cell>\n                      </ng-container>\n\n                      <mat-header-row *matHeaderRowDef=\"displayedItemColumns\"></mat-header-row>\n                      <mat-row *matRowDef=\"let row; let i = index; columns: displayedItemColumns\"\n                      (click)=\"manageRfpItem(row, 'Update')\" [style.cursor]=\"'pointer'\" matRipple>\n                      </mat-row>\n                    </mat-table>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                      </mat-progress-spinner>\n                    </div>\n                    <!-- <mat-paginator #paginatorItems [pageSize]=\"5\" [pageSizeOptions]=\"[2, 6, 10, 20, 30, 40, 50, 100]\"\n                      aria-label=\"Select page of users\"></mat-paginator> -->\n                    <!-- <mat-paginator #paginatorItems [pageSize]=\"5\" [pageSizeOptions]=\"[2,5,10,20,30,40,50,100]\" aria-label=\"Select page of items\"></mat-paginator> -->\n\n                    <mat-paginator #paginatorItems=\"matPaginator\" [pageSize]=\"3\"\n                      [pageSizeOptions]=\"[3, 5, 10, 20, 30, 40, 50, 100]\" aria-label=\"Select page\">\n                    </mat-paginator>\n\n                    <!-- <mat-paginator #paginatorSuppliers=\"matPaginator\" [pageSize]=\"100\"\n                    [pageSizeOptions]=\"[3, 5, 10, 20, 30, 40, 50, 100]\" aria-label=\"Select page\">\n                  </mat-paginator> -->\n\n\n\n                  </div>\n                </div>\n              </mat-tab>\n\n              <mat-tab>\n\n                <ng-template mat-tab-label>\n                  <mat-icon>group</mat-icon> RFP Attachements\n                </ng-template>\n\n\n\n                <div class=\"mt-3\">\n                  <div class=\"header\">\n                    <div class=\"row\">\n                      <h2>Upload RFP Attachement Documents</h2>\n                    </div>\n                  </div>\n\n                  <!-- Content for the second tab -->\n                  <form [formGroup]=\"documentsRFPAttachmentsForm\">\n                    <!-- <form [formGroup]=\"form\"> -->\n\n                    <div style=\"margin: 20px\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                          <div class=\"row\">\n                            <div class=\"col-8\">\n                              <ul class=\"header-buttons-left ms-0\">\n                                <li class=\"dropdown\">\n                                  <h2>Documents</h2>\n                                </li>\n                                <li class=\"dropdown m-l-20\">\n                                  <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                  <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                    class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                </li>\n\n                                <li>\n                                  <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                    <button mat-mini-fab color=\"primary\" (click)=\"addRFPAttachmentsFileRow()\">\n                                      <mat-icon class=\"col-white\">add</mat-icon>\n                                    </button>\n                                  </div>\n                                </li>\n                              </ul>\n                            </div>\n                            <div class=\"col-4\"></div>\n                          </div>\n                        </div>\n\n                        <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                        <mat-table #table matTableExporter [dataSource]=\"attachementsRFPAttachmentsDataSource\"\n                          formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n                          <!-- ID Column -->\n                          <ng-container matColumnDef=\"id\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                              {{ index + 1 }}\n                            </mat-cell>\n                          </ng-container>\n\n\n                          <ng-container matColumnDef=\"fileName\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filename</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Filename</mat-label>\n                                <input matInput type=\"text\" formControlName=\"fileName\" placeholder=\"Filename\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"fileType\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filetype</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Filetype</mat-label>\n                                <input matInput type=\"text\" formControlName=\"fileType\" placeholder=\"Filetype\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"selectFile\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                              File</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                              <input #file type=\"file\" [disabled]=\"isLoading | async\"\n                                (change)=\"onSelectRFPAttachmentsFile(file.files, row, index)\" [multiple]=\"'multiple'\" />\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"download\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Download</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n\n                          <ng-container matColumnDef=\"action\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Action</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n\n\n                          <!-- Row definitions -->\n                          <mat-header-row *matHeaderRowDef=\"displayRFPAttachmentsColumns\"></mat-header-row>\n                          <mat-row *matRowDef=\"\n                              let row;\n                              let i = index;\n                              columns: displayRFPAttachmentsColumns\n                            \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                          <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                            input.value\n                            }}\"</mat-cell>\n                        </mat-table>\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isFileRFPAttachmentsDataLoading\" class=\"tbl-spinner\">\n                          <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                          </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                          aria-label=\"Select page of users\"></mat-paginator>\n                      </div>\n                    </div>\n\n\n                  </form>\n                </div>\n              </mat-tab>\n\n              <mat-tab>\n\n                <ng-template mat-tab-label>\n                  <mat-icon>group</mat-icon> Suppliers\n                </ng-template>\n\n                <div class=\"mt-3\">\n                  <!-- Content for the tab -->\n\n                  <div class=\"header\">\n                    <div class=\"row\">\n                      <h2>Suppliers</h2>\n                    </div>\n                  </div>\n\n\n                  <div class=\"mx-4 my-4\">\n                    <div class=\"materialTableHeader\">\n                      <div class=\"row\">\n                        <div class=\"col-8\">\n                          <ul class=\"header-buttons-left ms-0\">\n                            <li class=\"dropdown\">\n                              <h2>Suppliers to recieve RFPs</h2>\n                            </li>\n                            <li class=\"dropdown m-l-20\">\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                              <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                class=\"browser-default search-field\" aria-label=\"Search box\" />\n                            </li>\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                <button mat-mini-fab color=\"primary\" (click)=\"suppliersLookup()\">\n                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n\n                            <li>\n                              <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                <button mat-mini-fab color=\"primary\">\n                                  <mat-icon class=\"col-white\">refresh</mat-icon>\n                                </button>\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                        <div class=\"col-4\">\n                          <ul class=\"header-buttons\">\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                    exporter.exportTable('xlsx', {\n                                      fileName: 'RFP-Items-list',\n                                      sheet: 'sheet1'\n                                    })\n                                  \" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                              </div>\n                            </li>\n                            <li>\n                              <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                              </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n\n\n                    </div>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSourceSuppliers\" matSort class=\"mat-cell\"\n                      #exporter=\"matTableExporter\">\n                      <ng-container matColumnDef=\"id\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-6\">#\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row;\" class=\"psl-3 tbl-col-width-per-6\"><span *ngIf=\"row.id\">\n                            #</span>\n                        </mat-cell>\n                      </ng-container>\n\n\n                      <ng-container matColumnDef=\"supplierCode\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-35\">supplierCode\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.supplierCode\">\n                            {{ row.supplierCode }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n\n                      <ng-container matColumnDef=\"supplierCode\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-35\">supplierCode\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.supplierCode\">\n                            {{ row.supplierCode }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"companyName\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-35\">CompanyName\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.companyName\">\n                            {{ row.companyName }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"phoneNumber\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-35\">PhoneNumber\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.phoneNumber\"> {{ row.phoneNumber }}</span>\n                        </mat-cell>\n                      </ng-container>\n                      <ng-container matColumnDef=\"emailAddress\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                          class=\"psl-3 tbl-col-width-per-35\">EmailAddress\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-35\">\n                          <span *ngIf=\"row.emailAddress\"> {{ row.emailAddress }}</span>\n                        </mat-cell>\n                      </ng-container>\n\n                      <ng-container matColumnDef=\"actions\">\n                        <mat-header-cell class=\"psl-3 tbl-col-width-per-35\" *matHeaderCellDef>Actions</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row; let i = index\" class=\"psl-3 tbl-col-width-per-35\">\n\n                          <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                            (click)=\"onDeleteSupplier(i)\" class=\"tbl-action-btn\">\n                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                          </button>\n                        </mat-cell>\n                      </ng-container>\n\n                      <mat-header-row *matHeaderRowDef=\"displayedSupplierColumns\"></mat-header-row>\n                      <mat-row *matRowDef=\"let row; let i = index; columns: displayedSupplierColumns\"\n                        [style.cursor]=\"'pointer'\" matRipple>\n                      </mat-row>\n                    </mat-table>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                      </mat-progress-spinner>\n                    </div>\n                    <!-- <mat-paginator #paginatorSuppliers [pageSize]=\"5\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                      aria-label=\"Select page of users\"></mat-paginator> -->\n                    <!-- <mat-paginator #paginatorSuppliers [pageSize]=\"5\" [pageSizeOptions]=\"[2,5,10,20,30,40,50,100]\" aria-label=\"Select page of suppliers\"></mat-paginator> -->\n\n                    <mat-paginator #paginatorSuppliers=\"matPaginator\" [pageSize]=\"100\"\n                      [pageSizeOptions]=\"[3, 5, 10, 20, 30, 40, 50, 100]\" aria-label=\"Select page\">\n                    </mat-paginator>\n                  </div>\n                </div>\n              </mat-tab>\n              <mat-tab [disabled]=\"isTabDisabled\">\n\n                <ng-template mat-tab-label>\n                  <mat-icon>group</mat-icon> RFP Committee Approval\n                </ng-template>\n\n\n\n                <div class=\"mt-3\">\n                  <div class=\"header\">\n                    <div class=\"row\">\n                      <h2>Upload Commmittee Approval Details</h2>\n                    </div>\n                  </div>\n\n                  <!-- Content for the second tab -->\n                  <form [formGroup]=\"documentsForm\">\n                    <!-- <form [formGroup]=\"form\"> -->\n\n                    <div style=\"margin: 20px\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                          <div class=\"row\">\n                            <div class=\"col-8\">\n                              <ul class=\"header-buttons-left ms-0\">\n                                <li class=\"dropdown\">\n                                  <h2>Upload Details</h2>\n                                </li>\n                                <li class=\"dropdown m-l-20\">\n                                  <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                  <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                    class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                </li>\n\n                                <li>\n                                  <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                    <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                      <mat-icon class=\"col-white\">add</mat-icon>\n                                    </button>\n                                  </div>\n                                </li>\n                              </ul>\n                            </div>\n                            <div class=\"col-4\"></div>\n                          </div>\n                        </div>\n\n                        <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                        <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                          formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n                          <!-- ID Column -->\n                          <ng-container matColumnDef=\"id\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                              {{ index + 1 }}\n                            </mat-cell>\n                          </ng-container>\n\n                          <!-- committeeId: [\"\", Validators.required],\n                          committeeName: [\"\", Validators.required],\n                          file: [\"\", Validators.required],\n                          filetype: [\"\", Validators.required],\n                          filename: [\"\", Validators.required],\n                          status: [\"\", Validators.required], -->\n\n                          <ng-container matColumnDef=\"committeeName\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">CommitteeName</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>CommitteeName</mat-label>\n                                <input matInput type=\"text\" formControlName=\"committeeName\" placeholder=\"CommitteeName\"\n                                  maxlength=\"50\" />\n                                <mat-icon matSuffix (click)=\"committeesLookup(index)\">search</mat-icon>\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"status\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Status</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Status</mat-label>\n\n                                <mat-select formControlName=\"status\">\n                                  <mat-option *ngFor=\"let rfpCommitteeStatus of rfpCommitteeStatuses\"\n                                    [value]=\"rfpCommitteeStatus.name\">{{\n                                    rfpCommitteeStatus.name\n                                    }}</mat-option>\n                                </mat-select>\n\n                                <input matInput type=\"text\" formControlName=\"status\" placeholder=\"Status\"\n                                  maxlength=\"50\" />\n\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"filename\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filename</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Filename</mat-label>\n                                <input matInput type=\"text\" formControlName=\"filename\" placeholder=\"Filename\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"filetype\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filetype</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                <mat-label>Filetype</mat-label>\n                                <input matInput type=\"text\" formControlName=\"filetype\" placeholder=\"Filetype\"\n                                  maxlength=\"50\" />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"selectFile\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                              File</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                              <input #file type=\"file\" [disabled]=\"isLoading | async\"\n                                (change)=\"onSelectFile(file.files, row, index)\" [multiple]=\"'multiple'\" />\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"download\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Download</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n\n                          <ng-container matColumnDef=\"action\">\n                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef>Action</mat-header-cell>\n                            <mat-cell *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                              <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n\n\n\n                          <!-- Row definitions -->\n                          <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                          <mat-row *matRowDef=\"\n                              let row;\n                              let i = index;\n                              columns: displayColumns\n                            \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                          <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                            input.value\n                            }}\"</mat-cell>\n                        </mat-table>\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                          <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                          </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                          aria-label=\"Select page of users\"></mat-paginator>\n                      </div>\n                    </div>\n\n\n                  </form>\n                </div>\n              </mat-tab>\n            </mat-tab-group>\n\n\n\n\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 my-3\">\n              <div class=\"example-button-row\" align=\"end\">\n                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                  <mat-icon>cancel</mat-icon>\n                  Cancel\n                </button>\n\n\n\n                <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                  (click)=\"onValidate('Verifier')\" mat-raised-button color=\"primary\">\n                  <mat-icon>done_outline</mat-icon>\n                  Verifier Approval\n                </button>\n\n\n\n                <button  class=\"btn-space\" [class.auth-spinner]=\"isLoading\" [disabled]=\"!mngForm.valid || isLoading\" [hidden]=\"hideSubmit\" (click)=\"submit()\"\n                  mat-raised-button color=\"primary\">\n                  <mat-icon>file_download</mat-icon>\n                  RFP {{ pageFunction }}\n                </button>\n              </div>\n            </div>\n\n\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllRfpsComponent } from './pages/all-rfps/all-rfps.component';\nimport { ManageRfpComponent } from './pages/manage-rfp/manage-rfp.component';\nimport { RoutePrivilegeGuard } from '../../data/services/_AccessControlAuthGuard.service';\n\nconst routes: Routes = [\n\n\n  {\n    path: \"all-rfps\",\n    component: AllRfpsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'ProcurementModule', requiredPrivilege:[\"All RFPs\"] },\n  },\n\n  {\n    path: \"manage-rfp\",\n    component: ManageRfpComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'ProcurementModule', requiredPrivilege:[\"Manage RFPs\"] },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RfpsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { RfpsRoutingModule } from './rfps-routing.module';\nimport { AllRfpsComponent } from './pages/all-rfps/all-rfps.component';\nimport { ManageRfpComponent } from './pages/manage-rfp/manage-rfp.component';\nimport { ValidateRfpComponent } from './dialogs/validate-rfp/validate-rfp.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { ManageRfpItemComponent } from './dialogs/manage-rfp-item/manage-rfp-item.component';\n\n\n@NgModule({\n  declarations: [\n    AllRfpsComponent,\n    ManageRfpComponent,\n    ValidateRfpComponent,\n    ManageRfpItemComponent\n    \n  ],\n  imports: [\n    CommonModule,\n    RfpsRoutingModule,\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    \n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n    \n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n    \n    MatFormFieldModule,\n    \n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    \n    MatSnackBarModule,\n    MatToolbarModule,\n    \n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule\n  ],\n  providers: [DatePipe]\n})\nexport class RfpsModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}