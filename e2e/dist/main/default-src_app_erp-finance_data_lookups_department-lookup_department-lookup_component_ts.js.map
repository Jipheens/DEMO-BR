{"version":3,"file":"default-src_app_erp-finance_data_lookups_department-lookup_department-lookup_component_ts.js","mappings":"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","sources":["./src/app/erp-finance/data/lookups/department-lookup/department-lookup.component.ts","./src/app/erp-finance/data/lookups/department-lookup/department-lookup.component.html","./src/app/erp-finance/data/services/department.service.ts"],"sourcesContent":["import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { ManageBudgetsComponent } from 'src/app/erp-budget/modules/budget/pages/budget/manage-budgets/manage-budgets.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { DepartmentService } from '../../services/department.service';\n\n@Component({\n  selector: 'app-department-lookup',\n  templateUrl: './department-lookup.component.html',\n  styleUrls: ['./department-lookup.component.sass']\n})\nexport class DepartmentLookupComponent implements OnInit {\n\n  // {\n  //   \"id\": 11,\n  //   \"departmentCode\": \"De2Jy\",\n  //   \"departmentName\": \"SOFTWARE DEVELOPMENT\",\n  //   \"branchName\": \"HURLIGHAM\",\n  //   \"departmentMail\": \"softwaredev@gmail.com\",\n  //   \"status\": \"Active\",\n  //   \"headOfDepartmentId\": null,\n  //   \"headOfDepartmentName\": \"\",\n  //   \"headOfDepartmentEmail\": \"\",\n  //   \"headOfDepartmentPhoneNum\": \"\",\n  //   \"isMainDepartment\": true,\n  //   \"mainDepartmentId\": null,\n  //   \"postedBy\": \"SYSTEM\",\n  //   \"postedFlag\": \"Y\",\n  //   \"postedTime\": \"2023-09-29T08:09:22.000+00:00\",\n  //   \"modifiedBy\": null,\n  //   \"modifiedFlag\": \"N\",\n  //   \"modifiedTime\": null,\n  //   \"verifiedBy\": \"DIRECTOR\",\n  //   \"verifiedFlag\": \"Y\",\n  //   \"verifiedTime\": \"2023-09-29T08:09:28.000+00:00\",\n  //   \"deletedBy\": null,\n  //   \"deletedFlag\": \"N\",\n  //   \"deletedTime\": null\n  // },\n\n\n  // {\n  //   \"id\": 11,\n  //   \"departmentCode\": \"De2Jy\",\n  //   \"departmentName\": \"SOFTWARE DEVELOPMENT\",\n  //   \"branchName\": \"HURLIGHAM\",\n  //   \"departmentMail\": \"softwaredev@gmail.com\",\n  //   \"status\": \"Active\",\n  \n  // }\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"departmentCode\",\n    \"departmentName\",\n\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  selection = new SelectionModel<any>(false, []);\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  dataSourceFilteredList: any[] = [];\n  glsArray: any[] = [];\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageBudgetsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private departmentService: DepartmentService\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n\n  }\n\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    this.dataSource.data.forEach((element) => {\n      this.glsArray.forEach((item) => {\n        if (item === element.id) {\n          this.selection.select(element);\n        }\n      });\n    });\n    console.log(\"dataSourceFilteredList::\", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  //******************************************************************************************************\n  //Select stock items\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  glsSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n  }\n\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  tableDetails: any[] = [];\n\n  //******************************************************************************************************\n  getData(){\n    this.departmentService.getDepartments()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe({\n      next: (res) => {\n        console.log(\"this.data: \", res)\n        if (res.statusCode == 200 || 302){\n          this.data = res.entity;\n          console.log(\"this.data: \", this.data)\n          this.dataSource = new MatTableDataSource(this.data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          this.isLoading = false;\n        } else {\n          this.snackbar.showNotification(\n            \"snackbar-danger\", \n            res.message\n          );\n        }\n      }, \n      error: (err) => {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          err.message\n        );\n      }, \n      complete: ()=> {},\n    }), Subscription;\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n        <div class=\"mb-3\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n        <div class=\"modalHeader\">\n            <div class=\"contact-details-name mb-1\">Select Department</div>\n            <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <mat-card-content>\n                <div *ngIf=\"isLoading\">\n                    <div class=\"d-flex justify-content-center\">\n                        <img src=\"assets/images/loading.gif\"\n                            style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                    </div>\n                </div>\n                <div class=\"body\">\n                    <div class=\"table-responsi m-t-5\">\n                        <ng-container *ngIf=\"!isLoading\">\n                            <div class=\"table-header py-3\"\n                                style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                                <div class=\"row\">\n                                    <div class=\"col-6 px-4\">\n                                        <div class=\"mx-auto\">\n                                            <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                                placeholder=\"Filter...\" #input />\n                                        </div>\n                                    </div>\n                                    <div class=\"col-6 px-4\">\n                                        <div class=\"mx-auto\">\n                                            <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                    [class.auth-spinner]=\"multimodifyloading\"\n                                                    [disabled]=\"multimodifyloading\">\n                                                    <mat-icon class=\"col-white\">done_all </mat-icon>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-container>\n\n                        <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                            #exporter=\"matTableExporter\">\n                            <ng-container matColumnDef=\"select\">\n                                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                        [ngClass]=\"'tbl-checkbox'\" (change)=\"glsSelected()\">\n                                    </mat-checkbox>\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                        (change)=\"$event ? selection.toggle(row) : null\"\n                                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                        [aria-label]=\"checkboxLabel(row)\" (change)=\"glsSelected()\">\n                                    </mat-checkbox>\n                                </mat-cell>\n                            </ng-container>\n\n                            <!-- Department Id -->\n                            <ng-container matColumnDef=\"id\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                    #\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                    {{ row.id }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <!-- Department Code -->\n                            <ng-container matColumnDef=\"departmentCode\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                    Department Code\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                    {{ row.departmentCode }}\n                                </mat-cell>\n                            </ng-container>\n\n\n                            <!-- Department Name -->\n                            <ng-container matColumnDef=\"departmentName\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                    class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                    Department Name\n                                </mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                    {{ row.departmentName }}\n                                </mat-cell>\n                            </ng-container>\n\n\n\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\"\n                                matRipple>\n                            </mat-row>\n                            <mat-cell *matNoDataRow colspan=\"4\">\n                                No data matching the filter \"{{ input.value }}\"\n                            </mat-cell>\n                        </mat-table>\n\n                        <!-- Loading spinner -->\n                        <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                            <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                            </mat-progress-spinner>\n                        </div>\n                        <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1, 2, 5, 10, 20, 30, 40, 50, 100]\"\n                            aria-label=\"Select page of users\"></mat-paginator>\n                    </div>\n                </div>\n            </mat-card-content>\n        </div>\n    </div>\n</div>","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DepartmentService {\n  constructor(private http: HttpClient) {}\n\n  getDepartments(): Observable<any> {\n    const currencyManagementUrl = `${environment.baseUrlFinance}/api/v1/budgets/department/find/all`;\n    return this.http.get<any[]>(currencyManagementUrl);\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}