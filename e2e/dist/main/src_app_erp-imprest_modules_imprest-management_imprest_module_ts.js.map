{"version":3,"file":"src_app_erp-imprest_modules_imprest-management_imprest_module_ts.js","mappings":"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","sources":["./src/app/erp-finance/data/services/transactions.service.ts","./src/app/erp-imprest/modules/imprest-management/imprest-routing.module.ts","./src/app/erp-imprest/modules/imprest-management/imprest.module.ts","./src/app/erp-imprest/modules/imprest-management/pages/imprest-request/all-imprest/all-imprest.component.ts","./src/app/erp-imprest/modules/imprest-management/pages/imprest-request/all-imprest/all-imprest.component.html","./src/app/erp-imprest/modules/imprest-management/pages/imprest-request/manage-imprest/manage-imprest.component.ts","./src/app/erp-imprest/modules/imprest-management/pages/imprest-request/manage-imprest/manage-imprest.component.html","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TransactionsService {\n  constructor(private http: HttpClient) { }\n\n  getTransactions(): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/all`;\n    return this.http.get<any[]>(TransactionsUrl);\n  }\n  getTransactionsByStatus(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/all/by/fetchbyStatus`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n  getTransactionsByRefCodeAndTransactionType(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/find/by/refcodeandtransactiontype`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n  getTransactionsByTranCode(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/find/by/trancode`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n  getTransactionsByStatusTransactionType(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/find/by/statusandtransactiontype`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n  getTransactionsById(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/find/by/id`;\n\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n  addTransactions(data: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/add`;\n    return this.http.post<any>(TransactionsUrl, data);\n  }\n\n  updateTransactions(TransactionsDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlFinance}/api/v1/transactions/update`;\n    return this.http.put<any>(updateBillUrl, TransactionsDetails);\n  }\n\n  deleteTransactionsTemporarily(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/delete`;\n    return this.http.delete<any>(TransactionsUrl, { params });\n  }\n\n\n  validateTransactions(params: any, dataToValidate: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/update/state`;\n    return this.http.put<any>(TransactionsUrl, dataToValidate, {params});\n  }\n\n  // ********************************************************************************************************************\n\n  updateAccountingTransactionDetailsStatus(params): Observable<any> {\n    const Url = `${environment.baseUrlFinance}/api/v1/transactions/update/record/on/transaction`;\n    return this.http.put<any>(Url, {}, { params });\n  }\n\n  updateAccountingTransactionDetailsForImprestStatus(params): Observable<any> {\n    const Url = `${environment.baseUrlFinance}/api/v1/transactions/update/record/on/imprest/transaction`;\n    return this.http.put<any>(Url, {}, { params });\n  }\n\n  \n  //************************************************************************************************************************ */\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllImprestComponent } from './pages/imprest-request/all-imprest/all-imprest.component';\nimport { ManageImprestComponent } from './pages/imprest-request/manage-imprest/manage-imprest.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\n\nconst routes: Routes = [\n//Tax Parameters\n{\n  path: \"all-imprest\",\n  component: AllImprestComponent,\n  canActivate: [RoutePrivilegeGuard],\n  data: { clientName: 'ImprestModule', requiredPrivilege: [\"All Imprest\"] },\n},\n\n{\n  path: \"manage-imprest\",\n  component: ManageImprestComponent,\n  canActivate: [RoutePrivilegeGuard],\n  data: { clientName: 'ImprestModule', requiredPrivilege: [\"Manage Imprest\"] },\n},\n\n];\n\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ImprestRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ImprestRoutingModule } from './imprest-routing.module';\nimport { AllImprestComponent } from './pages/imprest-request/all-imprest/all-imprest.component';\nimport { ManageImprestComponent } from './pages/imprest-request/manage-imprest/manage-imprest.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\n\n\n@NgModule({\n  declarations: [\n    AllImprestComponent,\n    ManageImprestComponent\n  ],\n  imports: [\n    CommonModule,\n    ImprestRoutingModule, \n\n\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n\n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n\n    MatFormFieldModule,\n\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n\n    MatSnackBarModule,\n    MatToolbarModule,\n\n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule,\n    MatChipsModule,\n\n\n    FormsModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatListModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatSliderModule,\n    NgbModule,\n  ]\n})\nexport class ImprestModule { }\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { ImprestManagementService } from \"src/app/erp-imprest/data/services/imprest-management.service\";\nimport { BranchstoreLookupComponent } from \"src/app/erp-inventory/data/lookups/branchstore-lookup/branchstore-lookup.component\";\nimport { BrancstoresManagementService } from \"src/app/erp-inventory/data/services/brancstores-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-imprest\",\n  templateUrl: \"./all-imprest.component.html\",\n  styleUrls: [\"./all-imprest.component.scss\"],\n})\nexport class AllImprestComponent implements OnInit {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  displayedColumns: string[] = [\n    //\"select\",\n    \"id\",\n    \"requestCode\",\n    \"imprestTitle\",\n    \"description\",\n    \"amountRequested\",\n    \"submissionDate\",\n    \"imprestAccountingStatus\",\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    \"hodVerifierStatus\",\n    \"financeManagerVerifiedStatus\",\n    \"action\",\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  isLoading: boolean = true;\n  formData: any;\n\n  currentBranch: any;\n  currentUser: any;\n  currentUserCode: any;\n\n  mngForm: FormGroup;\n  Form: FormGroup;\n\n  hasAccess: boolean;\n\n  //employee Details\n  employeeName: any;\n  employeeCode: any;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private route: ActivatedRoute,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private imprestManService: ImprestManagementService,\n    private transactionService: TransactionsService\n  ) { }\n\n  ngOnInit(): void {\n    this.currentBranch = this.tokenCookieService.getUser().branchCode;\n    this.currentUserCode = this.tokenCookieService.getUser().empPfNo;\n    this.currentUser = this.tokenCookieService.getUser();\n\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      tranStatus: [\"%\", Validators.required],\n      approvalType: [\"AllImprests\", Validators.required],\n      costCenterCode: [\n        this.tokenCookieService.getUser().costCenterCode,\n        Validators.required,\n      ],\n      employeeCode: [\n        this.tokenCookieService.getUser().empPfNo,\n        Validators.required,\n      ],\n      imprestType: [\"Apply\", Validators.required],\n    });\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.status) {\n          this.selectedStatus = params.status;\n\n          this.Form.patchValue({\n            status: params.status,\n          });\n          this.getData(this.currentPage, this.pageSize);\n        }\n      });\n    }\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //filter through the items\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    \n      this.getData(this.currentPage, this.pageSize);\n    \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  viewImprest(data: any) {\n    let route = \"/erp-imprest/imprest-management/manage-imprest\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: data.requestCode,\n        //additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n\n  editImprest(data: any) {\n    let route = \"/erp-imprest/imprest-management/manage-imprest\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: data.requestCode,\n        //additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n\n  accountForImprest(data: any) {\n    let route = \"/erp-imprest/imprest-management/manage-imprest\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: data.requestCode,\n        //additionalData: serializedData,\n        action: \"Add\",\n      },\n    });\n  }\n\n  validateImprest(data: any) {\n    let route = \"/erp-imprest/imprest-management/manage-imprest\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: data.id,\n        //additionalData: serializedData,\n        action: \"Validate\",\n      },\n    });\n  }\n\n  addImprest() {\n    let route = \"/erp-imprest/imprest-management/manage-imprest\";\n    this.router.navigate([route]);\n  }\n\n  //**********************************************************************************************************\n\n  cCentreIsSelected = false;\n  selectedCostCentres: any[] = [];\n  costCentersLookUp(type: any) {\n    if (type === \"Search\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"view Cost Centres\",\n        selected: this.selectedCostCentres,\n      };\n\n      const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        if (result && result.data.length != 0) {\n          this.Form.patchValue({\n            costCenterCode: result.data[0].costCenterCode,\n          });\n\n          this.getData(this.currentPage, this.pageSize);\n        }\n      });\n    } else if (type === \"All\") {\n      this.Form.patchValue({\n        costCenterCode: \"All\",\n      });\n\n      this.getData(this.currentPage, this.pageSize);\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedApprovalType: string = \"AllImprests\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedImprestType: string = \"Apply\";\n  getSelectSelectedImprestType() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedImprestType(type: any) {\n    this.Form.patchValue({\n      imprestType: type,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // getData() {\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   this.selectedApprovalType = this.Form.value.approvalType;\n  //   this.selectedImprestType = this.Form.value.imprestType;\n\n  //   let params = {\n  //     status: this.Form.value.status,\n  //     tranStatus: this.Form.value.tranStatus,\n  //     approvalType: this.Form.value.approvalType,\n  //     costCenterCode: this.Form.value.costCenterCode,\n  //     employee_code: this.Form.value.employeeCode,\n  //     imprestType: this.Form.value.imprestType,\n  //   };\n  //   console.log(\"this.params :\", params);\n\n  //   // this.alignTableColumns();\n  //   this.imprestManService\n  //     .getImprestByStatus(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.data :\", res);\n  //         if (res.entity) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         console.log(\"this.err :\", err);\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {\n  //         this.selection = new SelectionModel<any>(true, []);\n  //       },\n  //     }),\n  //     Subscription;\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n    this.selectedImprestType = this.Form.value.imprestType;\n\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n      status: this.Form.value.status,\n\n      tranStatus: this.Form.value.tranStatus,\n      approvalType: this.Form.value.approvalType,\n      costCenterCode: this.Form.value.costCenterCode,\n      employee_code: this.Form.value.employeeCode,\n      imprestType: this.Form.value.imprestType,\n    };\n\n    this.imprestManService\n      .getImprestByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(\n              this.data.content.reverse()\n            );\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select Imprest\n\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  imprestSelected() {\n    this.atleastOneSelected = true;\n\n    console.log(\"this.selection.selected: \", this.selection.selected);\n  }\n\n  processMultiple(userType) {\n    let privilege = \"Imprest Validation\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"ImprestModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        id: this.selection.selected.map((element) => {\n          return {\n            id: element.id,\n          };\n        }),\n        // id: this.selection.selected.map((item)=> item.id),\n        data: this.selection.selected,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(\n        ExpenseValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        let route = \"/erp-imprest/imprest-management/all -imprest\";\n        this.refresh();\n      });\n    }\n  }\n\n  //**********************************************************************************************************\n  deleteImprest(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Imprest Item will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Imprest Item \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.imprestManService\n          .deleteImprest(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  \"Imprest Item Deleted Successfully\"\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        HOD: \"HOD\",\n        FINANCEVERIFIER: \"FINANCEVERIFIER\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        // HOD Imprest Validation\n        // Finance Imprest Validation\n\n        if (selectedUserType === \"FINANCEVERIFIER\") {\n          privilege = \"Validate Expenses\";\n        } else if (selectedUserType === \"HOD\") {\n          privilege = \"Validate Expenses\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selection.selected.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              let params = { approvalType: selectedUserType };\n\n              this.imprestManService\n                .validateImprest(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (res.statusCode == 200) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      console.log(\"res.entity : \", res.entity);\n                      // this.snackbar.showNotification(\n                      //   \"snackbar-danger\",\n                      //   res.message\n                      // );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData(this.currentPage, this.pageSize);\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All My Imprest'\" [items]=\"['Imprest Management']\"\n        [active_item]=\"'All Imprest Management'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeaderCustom mx-0\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Approval Type:</h2>\n                  </div>\n\n                  <div class=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- All Imprests -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'AllImprests'\"\n                        class=\"mat-button all-imprests mb-1\" (click)=\"getApprovalTypeSelectedStatus('AllImprests')\">\n                        <mat-icon>description</mat-icon>\n                        ALL IMPRESTS\n                      </button>\n\n                      <!-- HOD -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'HOD'\"\n                        class=\"mat-button hod mb-1\" (click)=\"getApprovalTypeSelectedStatus('HOD')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HOD VERIFIER\n                      </button>\n\n                      <!-- Finance Verifier -->\n                      <button mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'FinanceVerifier'\n                        \" class=\"mat-button finance-verifier mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('FinanceVerifier')\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        FINANCE VERIFIER\n                      </button>\n\n                    </div>\n                  </div>\n\n                  <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Imprest Type:</h2>\n                  </div>\n\n                  <div class=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- Button for APPLY -->\n                      <button mat-raised-button [class.active]=\"selectedImprestType === 'Apply'\"\n                        class=\"mat-button apply\" (click)=\"getSelectedImprestType('Apply')\">\n                        <mat-icon>add_circle</mat-icon>\n                        ADVANCE IMPRESTS\n                      </button>\n\n\n                      <button mat-raised-button [class.active]=\"selectedImprestType === 'Account'\"\n                        class=\"mat-button accounting\" (click)=\"getSelectedImprestType('Account')\">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        ACCOUNTED IMPRESTS\n                      </button>\n\n\n                      <!-- Button for CLAIM -->\n                      <button mat-raised-button [class.active]=\"selectedImprestType === 'Claim'\"\n                        class=\"mat-button claim\" (click)=\"getSelectedImprestType('Claim')\">\n                        <mat-icon>monetization_on</mat-icon>\n                        CLAIM IMPRESTS\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Status:</h2>\n                  </div>\n\n                  <div class=\"col-lg-9 col-md-9 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                 \n                </div>\n              </div> -->\n              <div class=\"materialTableHeader mt-1\">\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Imprests</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addImprest()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n\n                    </ul>\n                  </div>\n\n                  <div class=\"col-2 mb-0\">\n                    <!-- <form [formGroup]=\"Form\">\n                      <div class=\"row\">\n                        <div class=\"col-9\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>Cost Center Code</mat-label>\n\n                            <input matInput formControlName=\"costCenterCode\" readonly />\n\n                            <mat-error *ngIf=\"\n                                Form.get('costCenterCode').hasError('required')\n                              \">\n                              Please Enter Cost Center Code\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                        <div class=\"col-3 imp\">\n                          <div class=\"m-l-10\" matTooltip=\"Search Cost Center\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"costCentersLookUp('Search')\">\n                              <mat-icon class=\"col-white\">search</mat-icon>\n                            </button>\n                          </div>\n                          <div class=\"m-l-10\" matTooltip=\"From All Cost Centers\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"costCentersLookUp('All')\">\n                              <mat-icon class=\"col-white\">all_inclusive</mat-icon>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </form> -->\n                  </div>\n\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n              exporter.exportTable('xlsx', {\n                fileName: 'Suppliers-list',\n                sheet: 'sheet1'\n              })\n            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Table Definition -->\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let index = index\" class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    {{ index + 1 }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Request Code -->\n                <ng-container matColumnDef=\"requestCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Request Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.requestCode }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- imprestTitle -->\n                <ng-container matColumnDef=\"imprestTitle\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Imprest Title\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span class=\"mat-table-emboss\">\n                      {{ row.imprestTitle }}\n                    </span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- description   -->\n                <ng-container matColumnDef=\"description\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    Description\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    {{ row.description }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- amountRequested  -->\n                <ng-container matColumnDef=\"amountRequested\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                    Amount Requested\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                    <ng-container *ngIf=\"row.currency; else noCurrency\">\n                      {{\n                      row.amountRequested\n                      | currency : row.currency : \"symbol\" : \"1.2-2\"\n                      }}\n                    </ng-container>\n                    <ng-template #noCurrency>\n                      {{\n                      row.amountRequested\n                      | currency : \"Ksh\" : \"symbol\" : \"1.2-2\"\n                      }}\n                    </ng-template>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"imprestAccountingStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Accounting Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.imprestAccountingStatus\">\n\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PARTIAL'\" class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                        <i class=\"fas fa-adjust\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'FULL_ACCOUNTING'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-double\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'NON_ACCOUNTING'\" class=\"badge badge-solid-gray btn btn btn-sm m-1\">\n                        <i class=\"fas fa-ban\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"tranCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    TranCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranCode || \"-\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    TranStatus\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp; {{\n                        row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp; {{\n                        row.transactionStatus }}\n                      </button>\n\n                      <ng-container *ngSwitchDefault>\n                        N.A\n                      </ng-container>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"tranDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Tran Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.tranDate ? (row.tranDate | date : \"short\") : 'N.A'}}\n                  </mat-cell>\n                </ng-container>\n\n\n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n                <!-- Hod Verifier Status -->\n                <ng-container matColumnDef=\"hodVerifierStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    HOD Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.hodVerifierStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Finance Manager Verified Status -->\n                <ng-container matColumnDef=\"financeManagerVerifiedStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Finance Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.financeManagerVerifiedStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <!-- submissionDate -->\n                <ng-container matColumnDef=\"submissionDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Submission Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.submissionDate | date : \"medium\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <!--  Verify Button -->\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                          (click)=\"validateExpense(row)\" class=\"tbl-action-btn\">\n                          <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                          </app-feather-icons>\n                        </button> -->\n\n                    <!-- Edit Button -->\n                    <button matTooltip=\"Edit Record\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editImprest(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <!-- Edit Button with Material Icons -->\n                    <button *ngIf=\"row.imprestType === 'Apply'\" matTooltip=\"Account for Imprest\" mat-icon-button\n                      color=\"primary\" (click)=\"$event.stopPropagation()\" (click)=\"accountForImprest(row)\"\n                      class=\"tbl-action-btn\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n\n                    <!-- Account Button -->\n                    <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"accountForImprest(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'book'\" [class]=\"'tbl-fav-account'\"></app-feather-icons>\n                    </button> -->\n\n                    <!-- View Button -->\n                    <button matTooltip=\"View Record\" mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewImprest(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"warn\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteImprest(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                </mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewImprest(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n               \n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                      }}\"</td>\n              </tr>\n\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              \n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n          \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n  FormControl,\n} from \"@angular/forms\";\nimport { DateAdapter } from \"@angular/material/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { BehaviorSubject, Subject, Subscription, takeUntil } from \"rxjs\";\nimport { AccountService } from \"src/app/account/data/services/account.service\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { ExpCCentreLookupComponent } from \"src/app/erp-finance/data/lookups/exp-c-centre-lookup/exp-c-centre-lookup.component\";\nimport { ExpenseLookupComponent } from \"src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { MaintainedCurrenciesLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component\";\nimport { GlAccountsService } from \"src/app/erp-finance/data/services/gl-accounts.service\";\nimport { ImprestManagementService } from \"src/app/erp-imprest/data/services/imprest-management.service\";\nimport { ImprestValidationComponent } from \"src/app/erp-imprest/data/validation/imprest-validation/imprest-validation.component\";\nimport { ValidateStoreRequisitionComponent } from \"src/app/erp-inventory/data/lookups/dialogs/validate-store-requisition/validate-store-requisition.component\";\nimport { BrancstoresManagementService } from \"src/app/erp-inventory/data/services/brancstores-management.service\";\nimport { StoreRequisitionsServiceService } from \"src/app/erp-inventory/data/services/store-requisitions-service.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\nimport * as moment from \"moment\";\nimport { MatDatepickerInputEvent } from \"@angular/material/datepicker\";\n\n@Component({\n  selector: \"app-manage-imprest\",\n  templateUrl: \"./manage-imprest.component.html\",\n  styleUrls: [\"./manage-imprest.component.scss\"],\n})\nexport class ManageImprestComponent implements OnInit {\n  showForm = false;\n  isLoading = false;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n  currentUserCode: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  requestCode: any;\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  imprestAccountingStatuses: any[] = [\n    { name: \"Full\" },\n    { name: \"Partial\" },\n    { name: \"Return\" },\n  ];\n\n  imprestTypes: any[] = [{ name: \"Apply\" }, { name: \"Claim\" }];\n\n  minDate: Date;\n\n  constructor(\n    private fb: FormBuilder,\n    private filesService: FilesService,\n    private tokenStorageService: TokenStorageService,\n    private branchStoreManService: BrancstoresManagementService,\n    private imprestManService: ImprestManagementService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private dateAdapter: DateAdapter<Date>,\n    private accountService: GlAccountsService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser();\n    this.currentUserCode = this.tokenStorageService.getUser().empPfNo;\n\n    this.minDate = this.dateAdapter.today();\n\n    this.minDate.setDate(this.minDate.getDate() + 1);\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.getPage();\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.requestCode) {\n          this.requestCode = params.requestCode;\n          this.getDataById();\n          this.pageAction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n\n  pageAction = \"Add\";\n\n  getDataById() {\n    const params = new HttpParams().set(\"requestCode\", this.requestCode);\n    this.imprestManService\n      .getImprestByRequestCode(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.entity) {\n            //in thsi res, I cant access anything beyond res.entity. Why???\n            this.formData = res.entity;\n            console.log(\"this.formData: \", this.formData);\n            if (this.pageAction === \"Update\") {\n              this.pageFunction = \"Update\";\n            } else if (this.pageAction === \"Account\") {\n              this.pageFunction = \"Account\";\n            } else if (this.pageAction === \"View\") {\n              this.pageFunction = \"View\";\n              this.disableActions = true;\n              this.showForm = false;\n            } else if (this.pageAction === \"Validate\") {\n              this.pageFunction = \"Validate\";\n              this.disableActions = true;\n              this.approvalVisible = true;\n              this.showForm = false;\n            }\n\n            if (this.formData.imprestAttachments.length > 0) {\n              this.isFileDataLoading = false;\n              console.log(\n                \"this.formData.imprestAttachments: \",\n                this.formData.imprestAttachments\n              );\n              this.formData.imprestAttachments.forEach((element) => {\n                const newRow = this.fb.group({\n                  file: [element.file],\n                  fileName: [element.fileName],\n                  fileType: [element.fileType],\n                });\n                this.rows.push(newRow);\n              });\n              this.updateView();\n            }\n            this.showForm = true;\n            this.getPage();\n\n            if (this.pageFunction === \"Add\") {\n              this.imprestTypes = [\n                { name: \"Apply\" },\n                { name: \"Claim\" },\n                { name: \"Account\" },\n              ];\n\n              let event = { value: \"Account\" };\n              this.imprestTypeChange(event);\n              this.mngForm.patchValue({\n                amountRequested: this.formData.amountRequested,\n                imprestAttachments: this.formData.imprestAttachments,\n                refImprestCode: this.formData.requestCode,\n              });\n            }\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      });\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Account\") {\n      this.generateEmptyForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateDisabledFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  //   - accountByDate\n  // - expenseAc\n  // - expenseCode\n\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      imprestType: [\"\"],\n      imprestTitle: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required, Validators.maxLength(300)]],\n      amountRequested: [\n        \"\",\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      currency: [\"KES\"],\n      costcentercode: [this.currentUser.costCenterCode, [Validators.required]],\n      expenseAc: [\"\"],\n      expenseCode: [\"\"],\n      accountByDate: [\"\"],\n      employeeName: this.currentUser.username,\n      employeeCode: this.currentUserCode,\n      balance: [\"\"],\n      imprestAccountingStatus: [\"\"],\n      imprestAttachments: [[]],\n      refImprestCode: [\"\"],\n    });\n\n    // Subscribe to changes in imprestType control\n    this.subscribeToChangesInImprestType();\n  }\n\n  generateFormWithData() {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      imprestType: [this.formData.imprestType],\n      requestCode: [this.formData.requestCode],\n      imprestTitle: [this.formData.imprestTitle, [Validators.required]],\n      description: [\n        this.formData.description,\n        [Validators.required, Validators.maxLength(300)],\n      ],\n      amountRequested: [\n        this.formData.amountRequested,\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      currency: [this.formData.currency],\n\n      costcentercode: [this.formData.costcentercode, [Validators.required]],\n\n      expenseAc: [this.formData.expenseAc, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n      accountByDate: [this.formData.accountByDate, [Validators.required]],\n\n      imprestAttachments: [this.formData.imprestAttachments],\n\n      employeeCode: [this.formData.employeeCode],\n      employeeName: [this.formData.employeeName],\n\n      balance: [this.formData.balance],\n      imprestAccountingStatus: [this.formData.imprestAccountingStatus],\n      refImprestCode: [this.formData.refImprestCode],\n    });\n    this.subscribeToChangesInImprestType();\n\n    let event = { value: this.mngForm.value };\n    this.imprestTypeChange(event);\n  }\n\n  generateDisabledFormWithData() {\n    this.mngForm = this.fb.group({\n      imprestType: [this.formData.imprestType],\n      imprestTitle: [this.formData.imprestTitle, [Validators.required]],\n      description: [this.formData.description, [Validators.required]],\n      amountRequested: [\n        this.formData.amountRequested,\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      currency: [this.formData.currency, [Validators.required]],\n\n      costcentercode: [this.formData.costcentercode, [Validators.required]],\n\n      expenseAc: [this.formData.expenseAc, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n      accountByDate: [this.formData.accountByDate, [Validators.required]],\n\n      imprestAttachments: [this.formData.imprestAttachments],\n\n      employeeCode: [this.formData.employeeCode],\n      employeeName: [this.formData.employeeName],\n    });\n  }\n  selectedDate: any;\n  onDateChange(event: MatDatepickerInputEvent<Date>) {\n    const selectedDate = event.value;\n    const selectedDateUTC = selectedDate.toISOString();\n\n    console.log(\"event.value:: \", event.value);\n\n    console.log(\"selectedDateUTC:: \", selectedDateUTC);\n\n    // this.mngForm.patchValue({\n    //   accountByDate: selectedDateUTC\n    // })\n  }\n  imprestTypeChange(event: any) {\n    console.log(\"Event: \", event.value);\n    this.toggleValidators(event.value);\n\n    if (event.value === \"Apply\") {\n      this.mngForm.patchValue({\n        imprestType: event.value,\n        imprestTitle: \"Advance Request\",\n        expenseCode: \"EXP5\",\n        expenseAc: \"106201\",\n      });\n      this.hideNonAdvanceFields = false;\n    } else if (event.value === \"Claim\") {\n      this.mngForm.patchValue({\n        imprestType: event.value,\n        imprestTitle: \"Expense Request\",\n        expenseCode: \"\",\n        expenseAc: \"\",\n      });\n      this.hideNonAdvanceFields = true;\n    } else if (event.value === \"Account\") {\n      this.mngForm.patchValue({\n        imprestType: event.value,\n        imprestTitle: \"Account for imprest\",\n        expenseCode: \"\",\n        expenseAc: \"\",\n      });\n      this.hideNonAdvanceFields = true;\n    }\n  }\n\n  hideNonAdvanceFields: boolean = false;\n  subscribeToChangesInImprestType() {\n    this.mngForm.get(\"imprestType\").valueChanges.subscribe((imprestType) => {\n      if (imprestType === \"Apply\") {\n        // Set expenseAc, expenseCode, and accountByDate as required\n        this.mngForm.get(\"expenseAc\").setValidators([Validators.required]);\n        this.mngForm.get(\"expenseCode\").setValidators([Validators.required]);\n        this.mngForm.get(\"accountByDate\").setValidators([Validators.required]);\n        this.hideNonAdvanceFields = true;\n      } else {\n        // Clear validators if imprestType is not 'Claim'\n        this.mngForm.get(\"expenseAc\").clearValidators();\n        this.mngForm.get(\"expenseCode\").clearValidators();\n        this.mngForm.get(\"accountByDate\").clearValidators();\n      }\n      // Update the validity of the form controls after changing validators\n      this.mngForm.get(\"expenseAc\").updateValueAndValidity();\n      this.mngForm.get(\"expenseCode\").updateValueAndValidity();\n      this.mngForm.get(\"accountByDate\").updateValueAndValidity();\n\n      this.hideNonAdvanceFields = false;\n    });\n  }\n  toggleValidators(imprestType) {\n    if (imprestType === \"Apply\") {\n      // Set expenseAc, expenseCode, and accountByDate as required\n      this.mngForm.get(\"expenseAc\").setValidators([Validators.required]);\n      this.mngForm.get(\"expenseCode\").setValidators([Validators.required]);\n      this.mngForm.get(\"accountByDate\").setValidators([Validators.required]);\n      this.hideNonAdvanceFields = true;\n    } else {\n      // Clear validators if imprestType is not 'Claim'\n      this.mngForm.get(\"expenseAc\").clearValidators();\n      this.mngForm.get(\"expenseCode\").clearValidators();\n      this.mngForm.get(\"accountByDate\").clearValidators();\n    }\n    // Update the validity of the form controls after changing validators\n    this.mngForm.get(\"expenseAc\").updateValueAndValidity();\n    this.mngForm.get(\"expenseCode\").updateValueAndValidity();\n    this.mngForm.get(\"accountByDate\").updateValueAndValidity();\n\n    this.hideNonAdvanceFields = false;\n  }\n  //*************************************************************************************************************************************** */\n\n  //*************************************************************************************************************************************** */\n  //Currencies LookUP\n  selectedItem: any;\n  _currencyLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedCurrenciesLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode,\n        });\n      });\n    });\n  }\n\n  selectedCostCenter: any[] = [];\n  costCenterLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single CostCenter\",\n      selected: this.selectedCostCenter,\n    };\n\n    const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        costcentercode: result.data[0].costCenterCode,\n      });\n\n      if (this.mngForm.value.expenseCode) {\n        this.getAccountNumberByExpAndCostCenter();\n      }\n    });\n  }\n\n  glSelectedItem: any[] = [];\n  glsLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"Single GL Account\",\n      selected: this.glSelectedItem,\n      type: \"Expense\",\n    };\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        this.mngForm.patchValue({\n          expenseAc: element.accountID,\n        });\n      });\n    });\n  }\n\n  selectedExpense: any;\n  expenseLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpense,\n    };\n\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        expenseCode: result.data[0].expenseCode,\n        // expenseAc: result.data[0].expenseGlAccount,\n      });\n\n      if (this.mngForm.value.costcentercode) {\n        this.getAccountNumberByExpAndCostCenter();\n      }\n    });\n  }\n\n  // **************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"fileName\",\n    \"fileType\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n    this.mngForm.patchValue({\n      imprestAttachments: this.documentsForm.value.filedetails,\n    });\n  }\n\n  // deleteCall(index){\n  //   this.dataSource.splice(index, 1);\n  // }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currfileName: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currfileName = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          fileName: this.currfileName,\n          fileType: this.currType,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  // **************************************************************************************************\n  getAccountNumberByExpAndCostCenter() {\n    const params = new HttpParams()\n      .set(\"costCenterCode\", this.mngForm.value.costcentercode)\n      .set(\"expenseCode\", this.mngForm.value.expenseCode);\n\n    console.log(\"params:: \", params);\n\n    this.accountService\n      .getGLAccountByExpAndCostCenter(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"resres:: \", res);\n\n          if (res.entity) {\n            this.mngForm.patchValue({\n              expenseAc: res.entity.glaccount,\n            });\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  //************************************************************************************************* */\n  //Showing the submit button\n  posting: boolean = false;\n\n  onSubmit() {\n    this.posting = true;\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction == \"Add\") {\n      this.imprestManService\n        .addImprest(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-imprest/imprest-management/all-imprest\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Update\") {\n      this.imprestManService\n        .updateImprest(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-imprest/imprest-management/all-imprest\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Account\") {\n      this.imprestManService\n        .addImprest(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-imprest/imprest-management/all-imprest\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-imprest/imprest-management/all-imprest\"]);\n  }\n\n  // **********************************************************************************************\n  //validate branch requisition\n\n  hasAccess: boolean;\n\n  onValidate(userType) {\n    let privilege = \"\";\n\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"Imprest Validation\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"ImprestModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"650px\";\n      dialogConfig.data = {\n        data: this.formData,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(\n        ImprestValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-imprest/imprest-management/all-imprest\"]);\n      });\n    }\n  }\n\n  // *********************************************************************************************\n\n  // **********************************************************************************************\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Imprest'\" [items]=\"['Imprest']\" [active_item]=\"'Manage Imprest'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading || posting\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with remarks\">\n                              <strong>Approvers Remarks:</strong>\n                              <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                            </div>\n                          </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"\">\n                  <div class=\"header\">\n                    <div class=\"row\">\n                      <h2>{{ pageFunction }} Imprest</h2>\n                    </div>\n                  </div>\n                  <div class=\"row clearfix mx-2 mt-0\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                      <div>\n                        <form [formGroup]=\"mngForm\">\n                          <div class=\"row\">\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Imprest Type</mat-label>\n                                <mat-select formControlName=\"imprestType\" (selectionChange)=\"imprestTypeChange($event)\">\n                                  <mat-option *ngFor=\"let imprestType of imprestTypes\" [value]=\"imprestType.name\">{{\n                                    imprestType.name }}\n                                  </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('imprestType')\n                                      .hasError('required')\n                                  \">\n                                  Imprest Type is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--  Advance Type-->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Imprest Title </mat-label>\n                                <input matInput formControlName=\"imprestTitle\" readonly />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('imprestTitle')\n                                      .hasError('required')\n                                  \">\n                                  Imprest Title is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--Currency -->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Currency </mat-label>\n                                <input matInput formControlName=\"currency\" />\n                                <mat-icon matSuffix (click)=\"_currencyLookup()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm.get('currency').hasError('required')\n                                  \">\n                                  Currency is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- amountRequested  -->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Amount Requested </mat-label>\n                                <input matInput formControlName=\"amountRequested\" mask=\"separator\"\n                                  thousandSeparator=\",\" />\n                                <mat-icon matSuffix>attach_money</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('amountRequested')\n                                      .hasError('required')\n                                  \">\n                                  Amount Requested is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\" *ngIf=\"pageFunction === 'Account'\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Imprest Balance </mat-label>\n                                <input matInput formControlName=\"balance\" mask=\"separator\" thousandSeparator=\",\" />\n                                <mat-icon matSuffix>attach_money</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm.get('balance').hasError('required')\n                                  \">\n                                  Balance is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                             <!-- accountByDate -->\n                             <div [hidden]=\"hideNonAdvanceFields\" class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label>Account By Date </mat-label>\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"accountByDate\" [min]=\"minDate\"\n                                  required (dateChange)=\"onDateChange($event)\" />\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('accountByDate')\n                                      .hasError('required')\n                                  \">\n                                  Account By Date is required\n                                </mat-error>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('accountByDate')\n                                      .hasError('pastDate') &&\n                                    !mngForm\n                                      .get('accountByDate')\n                                      .hasError('required')\n                                  \">\n                                  Enter a Valid Account By Date\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>CostCenterCode</mat-label>\n                                <input matInput formControlName=\"costcentercode\" readonly />\n                                <!-- <mat-icon matSuffix (click)=\"costCenterLookUp()\">search</mat-icon> -->\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('costcentercode')\n                                      .hasError('required')\n                                  \">CostCenterCode is required</mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- expenseCode -->\n                            <div [hidden]=\"hideNonAdvanceFields\" class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Expense Code </mat-label>\n                                <input matInput formControlName=\"expenseCode\" />\n                                <mat-icon matSuffix (click)=\"expenseLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('expenseCode')\n                                      .hasError('required')\n                                  \">\n                                  Expense Code is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- expenseAc -->\n                            <div [hidden]=\"hideNonAdvanceFields\" class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Expense Account </mat-label>\n                                <input matInput formControlName=\"expenseAc\" />\n                                <mat-icon matSuffix (click)=\"glsLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('expenseAc')\n                                      .hasError('required')\n                                  \">\n                                  Expense Account is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                           \n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\" *ngIf=\"pageFunction === 'Account'\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label>\n                                  Imprest Accounting Status\n                                </mat-label>\n                                <mat-select formControlName=\"imprestAccountingStatus\">\n                                  <mat-option *ngFor=\"\n                                      let imprestAccountingStatus of imprestAccountingStatuses\n                                    \" [value]=\"imprestAccountingStatus.name\">{{ imprestAccountingStatus.name }}\n                                  </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('imprestAccountingStatus')\n                                      .hasError('required')\n                                  \">\n                                  Imprest Accounting Status is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--  Description -->\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Description </mat-label>\n                                <textarea matInput formControlName=\"description\"></textarea>\n\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('description')\n                                      .hasError('required')\n                                  \">\n                                  Description is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                  <ng-template mat-tab-label> Imprest Details </ng-template>\n                  <div class=\"mt-3\">\n                    <!-- Content for the second tab -->\n                    <ng-container *ngIf=\"!hideBgtButtons\">\n                      <form [formGroup]=\"documentsForm\">\n                        <!-- <form [formGroup]=\"form\"> -->\n\n                        <div style=\"margin: 20px\">\n                          <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                              <div class=\"row\">\n                                <div class=\"col-8\">\n                                  <ul class=\"header-buttons-left ms-0\">\n                                    <li class=\"dropdown\">\n                                      <h2>Upload Documents</h2>\n                                    </li>\n                                    <li class=\"dropdown m-l-20\">\n                                      <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                      <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                        class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                    </li>\n\n                                    <li>\n                                      <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                        <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                          <mat-icon class=\"col-white\">add</mat-icon>\n                                        </button>\n                                      </div>\n                                    </li>\n                                  </ul>\n                                </div>\n                                <div class=\"col-4\"></div>\n                              </div>\n                            </div>\n\n                            <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                            <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                              formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n                              <!-- ID Column -->\n                              <ng-container matColumnDef=\"id\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                  {{ index + 1 }}\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"fileName\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileName</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                  <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                    <mat-label>fileName</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"fileName\" placeholder=\"fileName\"\n                                      maxlength=\"50\" />\n                                  </mat-form-field>\n                                </mat-cell>\n                              </ng-container>\n                              <ng-container matColumnDef=\"fileType\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileType</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                  <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                    <mat-label>fileType</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"fileType\" placeholder=\"fileType\"\n                                      maxlength=\"50\" />\n                                  </mat-form-field>\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"selectFile\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                                  File</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                                  <input #file type=\"file\" (change)=\"\n                                      onSelectFile(file.files, row, index)\n                                    \" [multiple]=\"'multiple'\" />\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"download\">\n                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                  *matHeaderCellDef>Download</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                  <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                    <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                                  </button>\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"action\">\n                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                  *matHeaderCellDef>Action</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                  <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                    (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                    <app-feather-icons [icon]=\"'trash-2'\"\n                                      [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                  </button>\n                                </mat-cell>\n                              </ng-container>\n\n                              <!-- Row definitions -->\n                              <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                              <mat-row *matRowDef=\"\n                                  let row;\n                                  let i = index;\n                                  columns: displayColumns\n                                \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                              <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                                input.value\n                                }}\"</mat-cell>\n                            </mat-table>\n\n                            <!-- Loading spinner -->\n                            <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                              </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[\n                                2, 5, 10, 20, 30, 40, 50, 100\n                              ]\" aria-label=\"Select page of users\"></mat-paginator>\n                          </div>\n                        </div>\n\n                        <div class=\"row mx-4 mt-4\">\n                          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-12\">\n                            <div mat-dialog-action [align]=\"'end'\" class=\"mt-2\">\n                              <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                (click)=\"cancel()\">\n                                Cancel\n                              </button>\n                              <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                                [class.auth-spinner]=\"posting\" [disabled]=\" posting\" (click)=\"onSubmit()\">\n                                Submit Imprest\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </ng-container>\n                  </div>\n                  <!-- mngForm.invalid || -->\n                  <!-- Second Tab -->\n                </mat-tab>\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}