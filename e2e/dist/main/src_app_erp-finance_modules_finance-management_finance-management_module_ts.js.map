{"version":3,"file":"src_app_erp-finance_modules_finance-management_finance-management_module_ts.js","mappings":"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","sources":["./src/app/erp-finance/data/services/salaries.service.ts","./src/app/erp-finance/modules/finance-management/account-receivables/customerInvoices/all-customer-invoices/all-customer-invoices.component.ts","./src/app/erp-finance/modules/finance-management/account-receivables/customerInvoices/all-customer-invoices/all-customer-invoices.component.html","./src/app/erp-finance/modules/finance-management/account-receivables/customerInvoices/manage-customer-invoices/manage-customer-invoices.component.ts","./src/app/erp-finance/modules/finance-management/account-receivables/customerInvoices/manage-customer-invoices/manage-customer-invoices.component.html","./src/app/erp-finance/modules/finance-management/account-receivables/receivablePayments/all-receivable-payments/all-receivable-payments.component.ts","./src/app/erp-finance/modules/finance-management/account-receivables/receivablePayments/all-receivable-payments/all-receivable-payments.component.html","./src/app/erp-finance/modules/finance-management/account-receivables/receivablePayments/manage-receivable-payments/manage-receivable-payments.component.ts","./src/app/erp-finance/modules/finance-management/account-receivables/receivablePayments/manage-receivable-payments/manage-receivable-payments.component.html","./src/app/erp-finance/modules/finance-management/accounts-payable/payables/all-accounts-payable/all-accounts-payable.component.ts","./src/app/erp-finance/modules/finance-management/accounts-payable/payables/all-accounts-payable/all-accounts-payable.component.html","./src/app/erp-finance/modules/finance-management/accounts-payable/payables/manage-accounts-payable/manage-accounts-payable.component.ts","./src/app/erp-finance/modules/finance-management/accounts-payable/payables/manage-accounts-payable/manage-accounts-payable.component.html","./src/app/erp-finance/modules/finance-management/accounts-payable/supplierInvoice/all-supplier-invoices/all-supplier-invoices.component.ts","./src/app/erp-finance/modules/finance-management/accounts-payable/supplierInvoice/all-supplier-invoices/all-supplier-invoices.component.html","./src/app/erp-finance/modules/finance-management/accounts-payable/supplierInvoice/manage-supplier-invoices/manage-supplier-invoices.component.ts","./src/app/erp-finance/modules/finance-management/accounts-payable/supplierInvoice/manage-supplier-invoices/manage-supplier-invoices.component.html","./src/app/erp-finance/modules/finance-management/finance-management-routing.module.ts","./src/app/erp-finance/modules/finance-management/finance-management.module.ts","./src/app/erp-finance/modules/finance-management/imprests/all-imprests/all-imprests.component.ts","./src/app/erp-finance/modules/finance-management/imprests/all-imprests/all-imprests.component.html","./src/app/erp-finance/modules/finance-management/imprests/manage-imprests/manage-imprests.component.ts","./src/app/erp-finance/modules/finance-management/imprests/manage-imprests/manage-imprests.component.html","./src/app/erp-finance/modules/finance-management/salaries/all-salaries/all-salaries.component.ts","./src/app/erp-finance/modules/finance-management/salaries/all-salaries/all-salaries.component.html","./src/app/erp-finance/modules/finance-management/salaries/manage-salaries/manage-salaries.component.ts","./src/app/erp-finance/modules/finance-management/salaries/manage-salaries/manage-salaries.component.html","./src/app/erp-finance/modules/finance-management/salaries/salary-analytics/salary-analytics.component.ts","./src/app/erp-finance/modules/finance-management/salaries/salary-analytics/salary-analytics.component.html","./src/app/erp-finance/modules/finance-management/transactions/core-transactions/core-synchronization/core-synchronization.component.ts","./src/app/erp-finance/modules/finance-management/transactions/core-transactions/core-synchronization/core-synchronization.component.html","./src/app/erp-finance/modules/finance-management/transactions/system-transactions/all-system-transactions/all-system-transactions.component.ts","./src/app/erp-finance/modules/finance-management/transactions/system-transactions/all-system-transactions/all-system-transactions.component.html","./src/app/erp-finance/modules/finance-management/transactions/system-transactions/journals/journals.component.ts","./src/app/erp-finance/modules/finance-management/transactions/system-transactions/journals/journals.component.html","./src/app/erp-finance/modules/finance-management/transactions/system-transactions/third-party-transactions/third-party-transactions.component.ts","./src/app/erp-finance/modules/finance-management/transactions/system-transactions/third-party-transactions/third-party-transactions.component.html","./src/app/erp-finance/modules/finance-parameters/pages/customer-management/all-customers/all-customers.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/customer-management/all-customers/all-customers.component.html","./src/app/erp-finance/modules/finance-parameters/pages/customer-management/manage-customers/manage-customers.component.ts","./src/app/erp-finance/modules/finance-parameters/pages/customer-management/manage-customers/manage-customers.component.html","./src/app/erp-procurement/data/services/requisition.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SalariesService {\n  constructor(private http: HttpClient) {}\n\n  getSalaries(): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/all`;\n    return this.http.get<any[]>(SalaryManagementUrl);\n  }\n  getSalariesByStatus(params): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/fetchbyStatus`;\n    return this.http.get<any[]>(SalaryManagementUrl, { params });\n  }\n\n\n  getSalariesTransactionPreview(params): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/previewsalary`;\n    return this.http.get<any[]>(SalaryManagementUrl, { params });\n  }\n  getDisbursementSalariesTransactionPreview(params): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/disbursement/preview`;\n    return this.http.get<any[]>(SalaryManagementUrl, { params });\n  }\n\n\n  getSalariesByFilterParameters(params): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/findByFilter`;\n    return this.http.get<any[]>(SalaryManagementUrl, { params });\n  }\n\n  getSalariesById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/salaries/find/by/id`, {params}\n    );\n  }\n\n  getSalaryApprovalTranDetails(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/salaries/previewsalary`, {params}\n    );\n  }\n  addSalary(data: any): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/create`;\n    return this.http.post<any>(SalaryManagementUrl, data);\n  }\n\n  addSalaries(data: any): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/create/bulk`;\n    return this.http.post<any>(SalaryManagementUrl, data);\n  }\n\n  updateSalaries(SalaryDetails: any): Observable<any> {\n    const updateSalaryUrl = `${environment.baseUrlFinance}/api/v1/salaries/update`;\n    return this.http.put<any>(updateSalaryUrl, SalaryDetails);\n  }\n\n  deleteSalaryTemporarily(params: any): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/delete`;\n    return this.http.delete<any>(SalaryManagementUrl, {params});\n  }\n\n  validateSalaries(params: any, dataToValidate: any): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlFinance}/api/v1/salaries/update/state`;\n    return this.http.put<any>(SalaryManagementUrl, dataToValidate, {params});\n  }\n\n\n  // ********************************************************************************************************************\n\n\n  getSalaryAnalytics(params): Observable<any> {\n    const SalaryManagementUrl = `${environment.baseUrlHR}/api/v2/payroll/analysis/all`;\n    return this.http.get<any[]>(SalaryManagementUrl, { params });\n  }\n\n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { CustomerValidationComponent } from \"src/app/erp-finance/data/lookups/validation/customer-validation/customer-validation.component\";\nimport { CustomerInvoicesService } from \"src/app/erp-finance/data/services/customer-invoices.service\";\nimport { ReceivablePaymentsService } from \"src/app/erp-finance/data/services/receivable-payments.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { AccountingJournalTransactionsComponent } from \"../../../transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-all-customer-invoices\",\n  templateUrl: \"./all-customer-invoices.component.html\",\n  styleUrls: [\"./all-customer-invoices.component.scss\"],\n})\nexport class AllCustomerInvoicesComponent implements OnInit {\n  //table columns\n  displayedColumns: string[] = [\n    \"accountingSelect\",\n    \"id\",\n    \"invoiceCode\",\n    \"customerCode\",\n    \"customerName\",\n    \"invoiceDate\",\n    \"dueDate\",\n    \"invoiceAmount\",\n\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  validationIsLoading: any;\n  dialogRef: any;\n  hideValidation: any;\n\n  // ****************************************************************************************************************************\n  //dependency injection\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private customerInvoiceManService: CustomerInvoicesService,\n    public accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private transactionService: TransactionsService,\n    private fb: FormBuilder,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      approvalType: [\"AllInvoices\", Validators.required],\n    });\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  // ****************************************************************************************************************************\n  Form: FormGroup;\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  selectedApprovalType: string = \"HOD\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData();\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.selection = new SelectionModel<any>(true, []);\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n\n    let params = {\n      status: this.Form.value.status,\n      approvalType: this.Form.value.approvalType,\n    };\n    // this.alignTableColumns();\n    this.customerInvoiceManService\n      .getCustomerInvoicesByStatusAndApprovalType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n  //adding Customer Invoices\n  addCustomerInvoice() {\n    this.router.navigate([\n      \"/erp-finance/finance-management/manage-cusInvoices\",\n    ]);\n  }\n\n  //Updating the payments\n\n  updateCustomerInvoice(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"Stringfied: \", data); //checks the stringified JS value\n\n    let route = \"/erp-finance/finance-management/manage-cusInvoices\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the payments\n  viewCustomerInvoice(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-finance/finance-management/manage-cusInvoices\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n\n  //Validating a single customer\n  validateCustomerInvoice(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-finance/finance-management/manage-cusInvoices\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting Customer Invoices\n\n  deleteCustomerInvoice(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Customer Invoice will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Customer Invoice \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.customerInvoiceManService\n          .deleteCustomerInvoice(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //********************************************************************************************************************** */\n  //accounting Select\n  //********************************************************************************************************************** */\n\n  // New selection for a different MatTable\n  accountingTableSelection = new SelectionModel<any>(false, []);\n  accountingSelectItemsSelected: boolean = false;\n  accountingCheckboxSelectedRows: any;\n\n  isAllaccountingTableSelected() {\n    const numSelected = this.accountingTableSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masteraccountingTableToggle() {\n    if (this.isAllaccountingTableSelected()) {\n      this.accountingTableSelection.clear();\n      return;\n    }\n\n    this.accountingTableSelection.select(...this.dataSource.data);\n  }\n\n  checkboxaccountingTableLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllaccountingTableSelected() ? \"deselect\" : \"select\"\n        } all`;\n    }\n    return `${this.accountingTableSelection.isSelected(row) ? \"deselect\" : \"select\"\n      } row ${row.position + 1}`;\n  }\n\n  checkaccountingTableSelection() {\n    const numSelected = this.accountingTableSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    if (numSelected === numRows) {\n      this.accountingSelectItemsSelected = true;\n    } else if (numSelected !== numRows) {\n      this.accountingSelectItemsSelected = false;\n    }\n    this.selectedRows = [];\n\n    this.selectedRows = this.selection.selected;\n\n    console.log(\n      \"accountingSelectItemsSelected: \",\n      this.accountingSelectItemsSelected\n    );\n  }\n\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n    //this.accountingCheckboxSelectedRows = this.accountingTableSelection.selected;\n\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.accountingTableSelection.selected[0].tranCode\n    );\n\n    if (\n      this.transactionAction !== \"Add\" &&\n      (this.accountingTableSelection.selected[0].tranCode === null ||\n        this.accountingTableSelection.selected[0].tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    } else {\n      this.transactionLookUp();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  transactionType: string = \"CustomerInvoice\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\n      \"this.accountingTableSelection:: \",\n      this.accountingTableSelection.selected[0]\n    );\n\n    let addBody = {};\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n        prCode: this.accountingTableSelection.selected[0].prCode,\n        referenceCode: this.accountingTableSelection.selected[0].invoiceCode,\n        itemCode: \"\",\n        parttrans: [\n          {\n            accountNo: \"\",\n            amount: this.accountingTableSelection.selected[0].invoiceAmount,\n            partTranstype: \"Debit\",\n          },\n        ],\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.accountingTableSelection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.accountingTableSelection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n        this.updateReceivedTransactionStatus();\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  updateReceivedTransactionStatus() {\n    let params = {\n      transactionType: this.transactionResponse.transactionType,\n      tranCode: this.transactionResponse.tranCode,\n      tranDate: this.transactionResponse.tranDate,\n      referenceCode: this.transactionResponse.referenceCode,\n    };\n    this.transactionService\n      .updateAccountingTransactionDetailsStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n            this.getData();\n            // this.router.navigate([\n            //   \"/erp-procurement/requisitions/all-requisitions\",\n            // ]);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        //HOD: \"HOD\",\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.accountingTableSelection.selected.map(\n                (element) => {\n                  return {\n                    id: element.id,\n                    status: status,\n                    verifierRemarks: verifierRemarks,\n                  };\n                }\n              );\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              }\n              let params = { approvalType: newSelectedUserType };\n\n              this.customerInvoiceManService\n                .validateCustomerInvoices(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData();\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Customer Invoices'\" [items]=\"['Customer Invoices']\"\n        [active_item]=\"'All Customer Invoices'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n             \n\n              <div class=\"materialTableHeaderCustom mx-0 mt-0\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Approval Type:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- All Invoices -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'AllInvoices'\"\n                        class=\"mat-button all-invoices mb-1\" (click)=\"getApprovalTypeSelectedStatus('AllInvoices')\">\n                        <mat-icon>description</mat-icon>\n                        ALL INVOICES\n                      </button>\n\n                      <!-- HOD -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'HOD'\"\n                        class=\"mat-button hod mb-1\" (click)=\"getApprovalTypeSelectedStatus('HOD')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HOD VERIFIER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToFinanceManager()\"  mat-raised-button [class.active]=\"\n                      selectedApprovalType === 'Finance Manager'\n                    \" class=\"mat-button finance-manager mb-1\" (click)=\"\n                      getApprovalTypeSelectedStatus('Finance Manager')\n                    \">\n                    <mat-icon>account_balance_wallet</mat-icon>\n                    FINANCE MANAGER\n                  </button>\n\n                  <button *ngIf=\"accessControlService.hasAccessToSeniorFinanceManager()\" mat-raised-button [class.active]=\"\n                      selectedApprovalType === 'Senior Finance Manager'\n                    \" class=\"mat-button senior-finance-manager mb-1\" (click)=\"\n                      getApprovalTypeSelectedStatus(\n                        'Senior Finance Manager'\n                      )\n                    \">\n                    <mat-icon>account_balance_wallet</mat-icon>\n                    SENIOR MANAGER\n                  </button>\n\n                  <button *ngIf=\"accessControlService.hasAccessToHeadOfFinanceAndStrategy()\"  mat-raised-button [class.active]=\"selectedApprovalType === 'Head of Finance And Strategy'\"\n                    class=\"mat-button head-of-finance-strategy mb-1\"\n                    (click)=\"getApprovalTypeSelectedStatus('Head of Finance And Strategy')\">\n                    <mat-icon>supervisor_account</mat-icon>\n                    HEAD OF FINANCE\n                  </button>\n\n                  <button *ngIf=\"accessControlService.hasAccessToManagingDirectorAndCEO()\"  mat-raised-button [class.active]=\"selectedApprovalType === 'Managing Director And CEO'\"\n                    class=\"mat-button managing-director-ceo mb-1\"\n                    (click)=\"getApprovalTypeSelectedStatus('Managing Director And CEO')\">\n                    <mat-icon>person_pin</mat-icon>\n                    MANAGING DIRECTOR\n                  </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Status:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mx-0 mt-1\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Customer Invoices</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n\n                      <!-- <li>\n                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                          <button mat-mini-fab color=\"primary\" (click)=\"addSuplierInvoice()\">\n                                            <mat-icon class=\"col-white\">add</mat-icon>\n                                          </button>\n                                        </div>\n                                      </li> -->\n\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <ng-container *ngIf=\"accountingTableSelection.selected.length > 0\">\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">check</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                            <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">cancel</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">undo</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n\n\n                        <!-- <li>\n                                          <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Update')\">\n                                              <mat-icon class=\"col-white\">edit</mat-icon>\n                                            </button>\n                                          </div>\n                                        </li> -->\n\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"View Accounting Details\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('View')\">\n                              <mat-icon class=\"col-white\">visibility</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ng-container>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                              exporter.exportTable('xlsx', {\n                                                fileName: 'assets-list',\n                                                sheet: 'sheet1'\n                                              })\n                                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- Table Definition -->\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"accountingSelect\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\">\n                    <mat-checkbox (change)=\"$event ? masteraccountingTableToggle() : null\" [checked]=\"\n                                          accountingTableSelection.hasValue() &&\n                                          isAllaccountingTableSelected()\n                                        \" [indeterminate]=\"\n                                          accountingTableSelection.hasValue() &&\n                                          !isAllaccountingTableSelected()\n                                        \" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-5'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"\n                                          $event ? accountingTableSelection.toggle(row) : null\n                                        \" [checked]=\"accountingTableSelection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxaccountingTableLabel(row)\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n\n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-5\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\">\n                    {{row.id}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Invoice Code   -->\n                <ng-container matColumnDef=\"invoiceCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Invoice Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.invoiceCode}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Customer Code   -->\n                <ng-container matColumnDef=\"customerCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Customer Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.customerCode}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Customer Name  -->\n                <ng-container matColumnDef=\"customerName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Customer Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.customerName}}\n                  </mat-cell>\n                </ng-container>\n\n\n                <!--  Invoice Date   -->\n                <ng-container matColumnDef=\"invoiceDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Invoice Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.invoiceDate | date : 'short'}}\n                  </mat-cell>\n                </ng-container>\n\n                <!--  Due Date   -->\n                <ng-container matColumnDef=\"dueDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Due Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.dueDate | date : 'short'}}\n                  </mat-cell>\n                </ng-container>\n\n                <!--  Invoice Amount   -->\n                <ng-container matColumnDef=\"invoiceAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Invoice Amount\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.invoiceAmount}}\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <ng-container matColumnDef=\"tranCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    matTooltip=\"QuantityCancelled\">\n                    TranCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranCode || \"-\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    TranStatus\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp; {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp; {{ row.transactionStatus }}\n                      </button>\n\n                      <ng-container *ngSwitchDefault>\n                        N.A\n                      </ng-container>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"tranDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Tran Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.tranDate ? (row.tranDate | date : \"short\") : 'N.A'}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                    <!--  Verify Button -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"validateCustomerInvoice(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Edit Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"updateCustomerInvoice(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- View Button  -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewCustomerInvoice(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteCustomerInvoice(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                      </app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                </mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewCustomerInvoice(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{input.value}}\"\n                </mat-cell>\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription, BehaviorSubject } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { CustomerInvoicesService } from \"src/app/erp-finance/data/services/customer-invoices.service\";\nimport { ExpenseManagementService } from \"src/app/erp-finance/data/services/expense-management.service\";\nimport { MaintainedCurrenciesLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n//file upload\nimport * as XLSX from \"xlsx\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { CustomerLookupComponent } from \"src/app/erp-finance/data/lookups/customer-lookup/customer-lookup.component\";\nimport { CustomerInvoiceValidationComponent } from \"src/app/erp-finance/data/lookups/validation/customer-invoice-validation/customer-invoice-validation.component\";\nimport { CalculationService } from \"src/app/erp-procurement/data/services/_procurement-calculations.service\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { ExpenseLookupComponent } from \"src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component\";\nimport { TaxLookupComponent } from \"src/app/erp-finance/data/lookups/tax-lookup/tax-lookup.component\";\nimport { HttpParams } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-manage-customer-invoices\",\n  templateUrl: \"./manage-customer-invoices.component.html\",\n  styleUrls: [\"./manage-customer-invoices.component.sass\"],\n})\nexport class ManageCustomerInvoicesComponent implements OnInit {\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  disableActions = false;\n  hideApprovals = false;\n\n  // ***************************************************************\n  // ************************************************************\n  //excel columns\n  excelHeaderRef: any[] = [\"expenseGlAccount\", \"expenseName\", \"expenseType\"];\n  isLoading: any;\n\n  // File Tabulation\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private costManService: CostCentreManagementService,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private customerInvoiceManService: CustomerInvoicesService,\n    private calculationService: CalculationService,\n    private filesService: FilesService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser();\n  }\n\n  // ****************************************************************************************************************************\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        this.pageFunction = params[\"action\"];\n\n        this.id = params[\"id\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n        this.formData = additionalData;\n        this.getPage();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  invoiceId: any;\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.invoiceId);\n    this.customerInvoiceManService\n      .getCustomerInvoiceById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            // this.isLoading = false;\n            if (this.pageFunction === \"View\") {\n              this.pageFunction = \"View\";\n              this.disableActions = true;\n            }\n\n            if (this.formData.customeritems.length > 0) {\n              this.dataSource = new MatTableDataSource(this.formData.customeritems);\n              this.dataSource.paginator = this.paginator;\n              this.dataSource.sort = this.sort;\n            }\n\n            if (this.formData.customerInvoiceSupportingDocumentsList.length > 0) {\n              this.isFileDataLoading = false;\n              this.formData.customerInvoiceSupportingDocumentsList.forEach((element) => {\n                const newRow = this.fb.group({\n                  file: [element.file],\n                  filename: [element.filename],\n                  filetype: [element.filetype],\n                });\n                this.rows.push(newRow);\n              });\n\n              this.updateView();\n            }\n\n            this.showForm = true;\n\n            console.log(\"ID:\", this.invoiceId);\n            console.log(\"Additional Data:\", this.formData);\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              \"No Data Available for the Id provided\"\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"No Need Matching these parameters!\"\n          );\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.generateInvoiceForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.generateInvoiceForm();\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.generateInvoiceForm();\n\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData();\n      this.generateInvoiceForm();\n\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      customerCode: [\"\", [Validators.required]],\n      customerName: [\"\", [Validators.required]],\n      invoiceDate: [\"\", [Validators.required]],\n      dueDate: [\"\", [Validators.required]],\n      //invoiceAmount: [\"\", [Validators.required]],\n      currency: [\"\", [Validators.required]],\n\n      costCenterCode: [this.currentUser.costCenterCode, [Validators.required]],\n      expenseCode: [\"\", [Validators.required]],\n\n      customerInvoiceSupportingDocumentsList: [[]],\n      customeritems: [[]],\n\n      totalTax: [\"\", [Validators.required]],\n      subTotalAmount: [\"\", [Validators.required]],\n      totalAmount: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      customerCode: [this.formData.customerCode],\n      customerName: [this.formData.customerName, [Validators.required]],\n      invoiceDate: [this.formData.invoiceDate, [Validators.required]],\n      dueDate: [this.formData.dueDate, [Validators.required]],\n      //invoiceAmount: [this.formData.invoiceAmount, [Validators.required]],\n      currency: [this.formData.currency, [Validators.required]],\n\n      costCenterCode: [this.formData.costCenterCode, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n\n      customerInvoiceSupportingDocumentsList: [\n        this.formData.customerInvoiceSupportingDocumentsList || [],\n        \n      ],\n      customeritems: [this.formData.customeritems || []],\n\n      totalTax: [this.formData.totalTax, [Validators.required]],\n      subTotalAmount: [this.formData.subTotalAmount, [Validators.required]],\n      totalAmount: [this.formData.totalAmount, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      customerCode: [\n        { value: this.formData.customerCode, disabled: true },\n        [Validators.required],\n      ],\n      customerName: [\n        { value: this.formData.customerName, disabled: true },\n        [Validators.required],\n      ],\n      invoiceDate: [\n        { value: this.formData.invoiceDate, disabled: true },\n        [Validators.required],\n      ],\n      dueDate: [\n        { value: this.formData.dueDate, disabled: true },\n        [Validators.required],\n      ],\n      // invoiceAmount: [\n      //   { value: this.formData.invoiceAmount, disabled: true },\n      //   [Validators.required],\n      // ],\n      currency: [\n        { value: this.formData.currency, disabled: true },\n        [Validators.required],\n      ],\n\n      customerInvoiceSupportingDocumentsList: [\n        {\n          value: this.formData.customerInvoiceSupportingDocumentsList,\n          disabled: true,\n        },\n        [Validators.required],\n      ],\n      customeritems: [\n        { value: this.formData.customeritems, disabled: true },\n        [Validators.required],\n      ],\n    });\n  }\n\n  invoiceDateValidaton(control: FormControl) {\n    const invoiceSelectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (invoiceSelectedDate > today) {\n      return { invalidDate: true };\n    }\n    return null;\n  }\n  //*************************************************************************************************************************** */\n  //***********************************************************************************************************************************8 */\n  bgtForm: FormGroup;\n  displayedColumns: string[] = [\n    \"id\",\n\n    \"itemRequested\",\n    \"unitOfMeasure\",\n    \"quantity\",\n    \"unitPrice\",\n    \"taxName\",\n    \"taxRate\",\n\n    \"subTotal\",\n    \"taxAmount\",\n    \"totalAmount\",\n\n\n    \"actions\",\n  ];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1; // Track the index of the selected row\n\n  generateDisabledInvoiceForm() {\n    this.bgtForm = this.fb.group({\n      itemRequested: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemCode: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemDescription: [{ value: \"\", disabled: true }, [Validators.required]],\n      unitOfMeasure: [{ value: \"\", disabled: true }, [Validators.required]],\n      quantity: [{ value: \"\", disabled: true }, [Validators.required]],\n      unitPrice: [\n        { value: \"\", disabled: true },\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n\n\n      taxRate: [{ value: \"\", disabled: true }, [Validators.required]],\n      taxName: [{ value: \"\", disabled: true }, [Validators.required]],\n\n      subTotal: [{ value: \"\", disabled: true }, [Validators.required]],\n      taxAmount: [{ value: \"\", disabled: true }, [Validators.required]],\n      totalAmount: [{ value: \"\", disabled: true }, [Validators.required]],\n    });\n  }\n\n  generateInvoiceForm() {\n    this.bgtForm = this.fb.group({\n      itemRequested: [\"\", [Validators.required]],\n      itemCode: [\"\"],\n      itemDescription: [\"\", [Validators.required, Validators.maxLength(300)]],\n      unitOfMeasure: [\"\", [Validators.required]],\n      quantity: [\n        0,\n        [\n          Validators.required,\n          Validators.min(0.01),\n          Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$\"),\n        ],\n      ],\n      unitPrice: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n\n\n\n      taxRate: [\"\", [Validators.required, Validators.min(0.01),\n      Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$\"),\n      ]],\n      taxName: [\"\", [Validators.required]],\n\n      subTotal: [\"\"],\n      taxAmount: [\"\"],\n      totalAmount: [\"\"],\n    });\n\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n  enterManually: boolean = true;\n  manualItemsEntry() {\n    this.showItemForm = true;\n    this.enterManually = true;\n\n    console.log(\"event: \", event);\n  }\n\n  addToArray() {\n    if (this.bgtForm.valid) {\n      this.calculateTax();\n\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n      const newRecord = {\n        itemRequested: this.bgtForm.value.itemRequested,\n        itemCode: this.bgtForm.value.itemCode,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        quantity: this.bgtForm.value.quantity,\n        unitPrice: this.bgtForm.value.unitPrice,\n\n        taxRate: this.bgtForm.value.taxRate,\n        taxName: this.bgtForm.value.taxName,\n\n        subTotal: this.bgtForm.value.subTotal,\n        taxAmount: this.bgtForm.value.taxAmount,\n        totalAmount: this.bgtForm.value.totalAmount,\n      };\n\n      this.dataSource.data.push(newRecord);\n      this.dataSource.data = this.dataSource.data.slice();\n      this.resetBgtForm();\n      this.setDefaultValues();\n\n      this.calculateTotals();\n    }\n  }\n\n  setDefaultValues() {\n    if (this.currentUser) {\n      this.mngForm.patchValue({\n        costCenterCode: this.currentUser.costCenterCode,\n      });\n    }\n  }\n\n  updateInvoiceDetails() {\n    if (this.bgtForm.valid) {\n      this.calculateTax();\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n\n      const updatedRecord = {\n        itemRequested: this.bgtForm.value.itemRequested,\n        itemCode: this.bgtForm.value.itemCode,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        quantity: this.bgtForm.value.quantity,\n        unitPrice: this.bgtForm.value.unitPrice,\n\n        taxRate: this.bgtForm.value.taxRate,\n        taxName: this.bgtForm.value.taxName,\n        subTotal: this.bgtForm.value.subTotal,\n        taxAmount: this.bgtForm.value.taxAmount,\n        totalAmount: this.bgtForm.value.totalAmount,\n      };\n\n      this.dataSource.data[this.selectedRowIndex] = updatedRecord;\n      this.dataSource.data = this.dataSource.data.slice();\n      this.resetBgtForm();\n\n      this.editButton = false;\n      this.addButton = true;\n      this.selectedRowIndex = -1;\n\n      this.calculateTotals();\n    }\n  }\n\n  onEditInvoiceDetails(row: any) {\n    this.editButton = true;\n    this.addButton = false;\n    this.selectedRowIndex = this.dataSource.data.indexOf(row);\n    this.showItemForm = true;\n\n    this.bgtForm.patchValue({\n      id: row.id,\n      itemRequested: row.itemRequested,\n      itemCode: row.itemCode,\n      itemDescription: row.itemDescription,\n      unitOfMeasure: row.unitOfMeasure,\n      quantity: row.quantity,\n      unitPrice: row.unitPrice,\n\n\n      taxRate: row.taxRate,\n      taxName: row.taxName,\n\n      subTotal: row.subTotal,\n      taxAmount: row.taxAmount,\n      totalAmount: row.totalAmount,\n    });\n  }\n\n  onDeleteInvoiceDetails(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.dataSource.data = this.dataSource.data.slice();\n    this.calculateTotals();\n  }\n\n  clearForm() {\n    this.resetBgtForm();\n    this.editButton = false;\n    this.addButton = true;\n    this.selectedRowIndex = -1;\n  }\n  showItemForm: boolean = false;\n\n  resetBgtForm() {\n    this.bgtForm.reset();\n\n    this.showItemForm = false;\n  }\n\n  calculateTax() {\n    console.log(\"quantity: \", Number(this.bgtForm.value.quantity));\n    console.log(\"unitPrice: \", Number(this.bgtForm.value.unitPrice));\n    console.log(\"taxRate: \", Number(this.bgtForm.value.taxRate));\n\n    const taxDetails = this.calculationService.calculateTax(\n      Number(this.bgtForm.value.quantity),\n      Number(this.bgtForm.value.unitPrice),\n      Number(this.bgtForm.value.taxRate)\n    );\n\n    this.bgtForm.patchValue({\n      subTotal: taxDetails.subTotal.toFixed(2),\n      taxAmount: taxDetails.taxAmount.toFixed(2),\n      totalAmount: taxDetails.totalAmount.toFixed(2),\n    });\n  }\n\n  totals = {\n    number: 0,\n    totalTax: 0,\n    subTotalAmount: 0,\n    totalAmount: 0,\n    purchaseRequisitionItems: [],\n  };\n\n  calculateTotals() {\n    const dataArray = this.dataSource.data;\n    console.log(\"dataArray: \", dataArray);\n    this.totals = this.calculationService.calculateTotals(dataArray);\n    console.log(\"totals: \", this.totals);\n   // invoiceAmount\n    this.mngForm.patchValue({\n      number: this.totals.number,\n      totalTax: this.totals.totalTax,\n      subTotalAmount: this.totals.subTotalAmount,\n      totalAmount: this.totals.totalAmount,\n      customeritems: this.totals.purchaseRequisitionItems.slice(),\n    });\n  }\n\n  // **************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"fileName\",\n    \"fileType\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n    this.mngForm.patchValue({\n      customerInvoiceSupportingDocumentsList: this.documentsForm.value.filedetails,\n    });\n  }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue();\n    const index = dataArray.indexOf(row);\n\n    if (index !== -1) {\n      dataArray.splice(index, 1);\n      this.attachementsDataSource.next(dataArray);\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currfileName: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\");\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name);\n        console.log(\"Extension:\", extension);\n\n        this.currfileName = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          fileName: this.currfileName,\n          fileType: this.currType,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel() {\n    console.log(\"Before routing\");\n    this.router.navigate([\"/erp-finance/finance-management/all-cusInvoices\"]);\n    // admin/parameters/all-expenses\n  }\n\n  // ****************************************************************************************************************************\n\n  //Import customer invoices from Excel\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n        console.log(\"this.items: \", this.items);\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // ****************************************************************************************************************************\n\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate(userType) {\n    // let privilege = \"Manage Expenses\";\n\n    let privilege = \"\";\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"HOD Customer Invoice Validation\";\n        // privilege = \"Manage Expenses\";\n        break;\n      case \"FINANCE\":\n        privilege = \"Finance Customer Invoice Validation\";\n        // privilege = \"Manage Expenses\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType,\n      };\n\n      console.log(\"this.formData: \", this.formData);\n\n      const dialogRef = this.dialog.open(\n        CustomerInvoiceValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\n          \"/erp-finance/finance-management/all-cusInvoices\",\n        ]);\n      });\n    }\n  }\n\n  //******************************************************************************************************************************************************** */\n  // Look up for the Customers\n  selectedItem: any[] = [];\n  _customerLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View GL Accounts\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(CustomerLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        this.mngForm.patchValue({\n          customerCode: element.customerCode,\n          customerName: element.customerName,\n          //currency: element.currency,\n        });\n      });\n    });\n  }\n\n  //Currencies LookUP\n  _currencyLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedCurrenciesLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode,\n        });\n      });\n    });\n  }\n\n  taxIsSelected = false;\n  selectedTaxes: any[] = [];\n  taxesLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"single tax\",\n      selected: this.selectedTaxes,\n    };\n\n    const dialogRef = this.dialog.open(TaxLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.bgtForm.patchValue({\n          taxRate: result.data[0].taxRate,\n          taxName: result.data[0].taxName,\n        });\n      }\n    });\n  }\n  expenseIsSelected = false;\n  selectedExpense: [] = [];\n  expenseArray: [] = [];\n  expenseGlCode = \"\";\n\n  expenseLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpense,\n    };\n\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        expenseCode: result.data[0].expenseCode,\n      });\n    });\n  }\n\n  selectedCostCenter: any[] = [];\n  costCenterLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single CostCenter\",\n      selected: this.selectedCostCenter,\n    };\n\n    const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        costCenterCode: result.data[0].costCenterCode,\n      });\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //submit button function\n\n  submit() {\n    console.log(\"Both: \", this.mngForm.value);\n\n    if (this.pageFunction === \"Add\") {\n      this.customerInvoiceManService\n        .addcustomerInvoices(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res.status: \", res.statusCode);\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-management/all-cusInvoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.customerInvoiceManService\n        .updateCustomerInvoice(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-management/all-cusInvoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n\n  //uploading batch expense files\n\n  submitBatch() {\n    console.log(\"submitting batch\");\n\n    if (this.pageFunction === \"Add\") {\n      this.customerInvoiceManService\n        .uploadBatchcustomerInvoices(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-management/all-cusInvoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Customer Invoices'\" [items]=\"['Customer Invoices']\"\n        [active_item]=\"'Manage Customer Invoices'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !=='Add'\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <!-- HOD Approval -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod\">{{ formData.hodApprovalStatus }}</div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod-approved\">{{ formData.hodApprovedBy }}</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>HOD Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.hodApprovalReason }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Finance Approval -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance\">{{ formData.financeApprovalStatus }}</div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance-approved\">{{ formData.financeApprovedBy }}</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Finance Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.financeApprovalReason }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <!-- Procurement Approval -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Procurement Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement\">{{ formData.procurementApprovalStatus }}</div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Procurement Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement-approved\">{{ formData.procurementApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Procurement Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{ formData.procurementApprovalReason }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"ADD A CUSTOMER INVOICE\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                      <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>{{ pageFunction }} Customer Invoices</h2>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\"></div>\n                      </div>\n                      <div>\n                        <form [formGroup]=\"mngForm\">\n                          <div class=\"row\">\n                            <!-- Customer Code -->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label> Customer Code </mat-label>\n                                <input matInput formControlName=\"customerCode\" readonly />\n                                <mat-icon matSuffix (click)=\"_customerLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('customerCode')\n                                      .hasError('required')\n                                  \">\n                                  Customer Code is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Customer Name -->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label> Customer Name </mat-label>\n                                <input matInput formControlName=\"customerName\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('customerName')\n                                      .hasError('required')\n                                  \">\n                                  Customer Name is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Invoice Amount -->\n                            <!-- <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label> Invoice Amount </mat-label>\n                                <input matInput formControlName=\"invoiceAmount\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('invoiceAmount')\n                                      .hasError('required')\n                                  \">\n                                  Invoice Amount is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div> -->\n\n                            <!-- Currency -->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label> Currency Code </mat-label>\n                                <input matInput formControlName=\"currency\" />\n                                <mat-icon matSuffix (click)=\"_currencyLookup()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm.get('currency').hasError('required')\n                                  \">\n                                  Currency Code is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>CostCenterCode</mat-label>\n                                <input matInput formControlName=\"costCenterCode\" />\n                                <mat-icon matSuffix (click)=\"costCenterLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('costCenterCode').hasError('required')\">CostCenterCode is\n                                  required</mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>ExpenseCode</mat-label>\n                                <input matInput formControlName=\"expenseCode\" />\n                                <mat-icon matSuffix (click)=\"expenseLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('expenseCode').hasError('required')\">ExpenseCode is\n                                  required</mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!--Invoice date-->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                <mat-label>Invoice Date</mat-label>\n                                <input matInput [matDatepicker]=\"datepicker\" formControlName=\"invoiceDate\" required />\n                                <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\n                                <mat-datepicker #datepicker></mat-datepicker>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('invoiceDate')\n                                      .hasError('required')\n                                  \">\n                                  Invoice Date is required\n                                </mat-error>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('invoiceDate')\n                                      .hasError('invalidDate')\n                                  \">\n                                  Enter a Valid Invoice Date\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Due Date -->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                <mat-label>Due Date</mat-label>\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"dueDate\" required />\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error *ngIf=\"\n                                    mngForm.get('dueDate').hasError('required')\n                                  \">\n                                  Due Date is required\n                                </mat-error>\n                                <mat-error *ngIf=\"\n                                    mngForm.get('dueDate').hasError('pastDate')\n                                  \">\n                                  Enter a Valid Due Date\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                          </div>\n\n\n\n\n\n\n                        </form>\n\n                        <mat-tab-group>\n                          <mat-tab>\n                            <ng-template mat-tab-label>\n                              <mat-icon>person</mat-icon> Invoice Items\n                            </ng-template>\n                            <div class=\"mt-3\">\n                              <!-- Content for the first tab -->\n\n                              <ng-container *ngIf=\"showItemForm\">\n\n                                <div class=\"header\">\n                                  <div class=\"row\">\n                                    <h2>Invoice Items</h2>\n                                  </div>\n                                </div>\n\n                                <form class=\"mx-4\" [formGroup]=\"bgtForm\" *ngIf=\"enterManually\">\n                                  <div class=\"row\">\n\n\n                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Item</mat-label>\n                                        <input matInput formControlName=\"itemRequested\"\n                                          [readOnly]=\"isCatalogueItemsReadOnly\" />\n                                        <mat-error *ngIf=\"bgtForm.get('itemRequested').hasError('required')\">Item is\n                                          required</mat-error>\n                                      </mat-form-field>\n                                    </div>\n\n\n\n                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Unit of Measure</mat-label>\n                                        <input matInput formControlName=\"unitOfMeasure\"\n                                          [readOnly]=\"isCatalogueItemsReadOnly\" />\n                                        <mat-error *ngIf=\"bgtForm.get('unitOfMeasure').hasError('required')\">Unit of\n                                          Measure is\n                                          required</mat-error>\n                                      </mat-form-field>\n                                    </div>\n\n                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Quantity</mat-label>\n                                        <input matInput formControlName=\"quantity\" />\n                                        <mat-error *ngIf=\"bgtForm.get('quantity').hasError('required')\">Quantity is\n                                          required</mat-error>\n\n                                        <mat-error *ngIf=\"\n                                            bgtForm.get('quantity').hasError('min')\n                                          \">Quantity cannot be 0</mat-error>\n\n                                        <mat-error *ngIf=\"\n                                          bgtForm.get('quantity').hasError('pattern')\n                                        \">Quantity allows numbers only</mat-error>\n                                      </mat-form-field>\n                                    </div>\n\n                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Unit Price</mat-label>\n                                        <input matInput formControlName=\"unitPrice\" mask=\"separator\"\n                                          thousandSeparator=\",\" />\n\n                                        <mat-error *ngIf=\"\n                                            bgtForm.get('unitPrice').hasError('required') &&\n                                            bgtForm.get('unitPrice').touched\n                                          \">\n                                          Please enter unit amount!\n                                        </mat-error>\n                                        <mat-error *ngIf=\"\n                                            bgtForm.get('unitPrice').hasError('pattern') &&\n                                            bgtForm.get('unitPrice').touched\n                                          \">\n                                          Please ensure amount does not exceed 2 decimal values!\n                                        </mat-error>\n                                        <mat-error *ngIf=\"\n                                            bgtForm.get('unitPrice').hasError('max') &&\n                                            bgtForm.get('unitPrice').touched\n                                          \">\n                                          Please ensure amount does not exceed 1 billion!\n                                        </mat-error>\n                                      </mat-form-field>\n                                    </div>\n\n\n\n                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Tax Name</mat-label>\n                                        <input matInput formControlName=\"taxName\" />\n                                        <mat-icon matSuffix (click)=\"taxesLookup()\">search</mat-icon>\n                                        <mat-error *ngIf=\"bgtForm.get('taxName').hasError('required')\">Tax Name is\n                                          required</mat-error>\n                                      </mat-form-field>\n                                    </div>\n                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Tax Rate</mat-label>\n                                        <input matInput formControlName=\"taxRate\" />\n                                        <mat-icon matSuffix (click)=\"taxesLookup()\">search</mat-icon>\n                                        <mat-error *ngIf=\"\n                                            bgtForm.get('taxRate').hasError('min')\n                                          \">TaxRate cannot be 0</mat-error>\n\n                                        <mat-error *ngIf=\"\n                                          bgtForm.get('taxRate').hasError('pattern')\n                                        \">TaxRate allows numbers only</mat-error>\n                                      </mat-form-field>\n                                    </div>\n\n\n\n\n                                    <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                      <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                        <mat-label>Item Description</mat-label>\n                                        <input matInput formControlName=\"itemDescription\" />\n                                        <mat-error *ngIf=\"\n                                            bgtForm.get('itemDescription').hasError('required')\n                                          \">Item Description is required</mat-error>\n                                        <mat-error *ngIf=\"\n                                          bgtForm.get('itemDescription').hasError('maxlength')\n                                        \">Item Description must not exceed 300 characters.</mat-error>\n                                      </mat-form-field>\n                                    </div>\n\n                                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                                      <div class=\"float-right\">\n                                        <button *ngIf=\"addButton\" [disabled]=\"!bgtForm.valid\" (click)=\"addToArray()\"\n                                          class=\"btn-space\" mat-raised-button color=\"primary\">\n                                          + Add Invoice details\n                                        </button>\n                                        <button *ngIf=\"editButton\" [disabled]=\"!bgtForm.valid\" class=\"btn-space\"\n                                          (click)=\"updateInvoiceDetails()\" mat-raised-button color=\"primary\">\n                                          + Update Invoice details\n                                        </button>\n                                        <button type=\"button\" (click)=\"clearForm()\" mat-raised-button color=\"warn\">\n                                          Clear\n                                        </button>\n                                      </div>\n                                    </div>\n                                  </div>\n\n                                </form>\n\n                              </ng-container>\n\n\n                              <div class=\"mx-4 my-4\">\n                                <div class=\"materialTableHeader\">\n                                  <div class=\"row\">\n                                    <div class=\"col-8\">\n                                      <ul class=\"header-buttons-left ms-0\">\n                                        <li class=\"dropdown\">\n                                          <h2>Invoice Records</h2>\n                                        </li>\n                                        <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                              class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                            #filter class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                        </li>\n\n                                        <li>\n                                          <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"manualItemsEntry()\">\n                                              <mat-icon class=\"col-white\">add</mat-icon>\n                                            </button>\n                                          </div>\n                                        </li>\n\n                                        <!-- <li *ngIf=\"showImportButton\">\n                                          <div class=\"m-l-10\" matTooltip=\"IMPORT\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"importExcel()\">\n                                              <mat-icon class=\"col-white\">cloud_upload</mat-icon>\n                                            </button>\n                                            <input type=\"file\" accept=\".xlsx, .xls\" style=\"display: none\" #fileInput\n                                              (change)=\"handleFileInput($event.target.files)\">\n                                          </div>\n                                        </li> -->\n\n\n                                        <li>\n                                          <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                            <button mat-mini-fab color=\"primary\">\n                                              <mat-icon class=\"col-white\">refresh</mat-icon>\n                                            </button>\n                                          </div>\n                                        </li>\n                                      </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                      <ul class=\"header-buttons\">\n                                        <li>\n                                          <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                                exporter.exportTable('xlsx', {\n                                                  fileName: 'Invoice-Items-list',\n                                                  sheet: 'sheet1'\n                                                })\n                                              \" />\n                                          </div>\n                                        </li>\n                                        <li>\n                                          <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                            <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                              (click)=\"exporter.exportTable('csv')\" />\n                                          </div>\n                                        </li>\n                                        <li>\n                                          <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                            <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                              (click)=\"exporter.exportTable('json')\" />\n                                          </div>\n                                        </li>\n                                        <li>\n                                          <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                            <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                              (click)=\"exporter.exportTable('txt')\" />\n                                          </div>\n                                        </li>\n                                      </ul>\n                                    </div>\n                                  </div>\n\n\n                                </div>\n\n                                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                  #exporter=\"matTableExporter\">\n                                  <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-2\">#\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row;\" class=\"psl-3 tbl-col-width-per-2\">{{ row.id ?\n                                      row.id : '#' }}\n                                    </mat-cell>\n                                  </ng-container>\n                                  <ng-container matColumnDef=\"type\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">Type\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.type\"> {{ row.type }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n\n                                  <!-- <ng-container matColumnDef=\"category\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">Category\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.category\"> {{ row.category }}</span>\n                                    </mat-cell>\n                                  </ng-container> -->\n\n                                  <ng-container matColumnDef=\"costCenterCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">CC-Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.costcentercode\">\n                                        {{ row.costcentercode }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n                                  <ng-container matColumnDef=\"expenseCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">ExpCode\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.expenseCode\">\n                                        {{ row.expenseCode }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n\n\n                                  <ng-container matColumnDef=\"accountNumber\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">ActNo\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.accountNumber\">\n                                        {{ row.accountNumber }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n                                  <ng-container matColumnDef=\"itemRequested\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">ReqItem\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.itemRequested\"> {{ row.itemRequested }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n                                  <ng-container matColumnDef=\"unitOfMeasure\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">UnitOfMeasure\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.unitOfMeasure\">\n                                        {{ row.unitOfMeasure }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n                                  <ng-container matColumnDef=\"quantity\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">Quantity\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.quantity\"> {{ row.quantity }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n                                  <ng-container matColumnDef=\"unitPrice\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">UnitPrice\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.unitPrice\">\n                                        {{\n                                        row.unitPrice | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                        }}\n                                      </span>\n                                    </mat-cell>\n                                  </ng-container>\n\n                                  <ng-container matColumnDef=\"taxName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">TaxName\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.taxName\"> {{ row.taxName }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n                                  <ng-container matColumnDef=\"taxRate\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">TaxRate\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.taxRate\"> {{ row.taxRate }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n\n                                  <ng-container matColumnDef=\"subTotal\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">SubTotal\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.subTotal\"> {{\n                                        row.subTotal | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                        }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n\n                                  <ng-container matColumnDef=\"taxAmount\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">TaxAmount\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.taxAmount\"> {{\n                                        row.taxAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                        }}</span>\n                                    </mat-cell>\n                                  </ng-container>\n\n                                  <ng-container matColumnDef=\"totalAmount\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"psl-3 tbl-col-width-per-24\">TotalAmount\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                      <span *ngIf=\"row.totalAmount\">{{\n                                        row.totalAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                        }} </span>\n                                    </mat-cell>\n                                  </ng-container>\n\n\n                                  <ng-container matColumnDef=\"budgetFlag\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"column-nowrap psl-3 tbl-col-width-per-10\">BudgetCheck</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                      class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                      (click)=\"$event.stopPropagation()\">\n                                      <ng-container [ngSwitch]=\"row.budgetFlag\">\n\n                                        <button *ngSwitchCase=\"'N'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                          Fail\n                                        </button>\n                                        <button *ngSwitchCase=\"'Y'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                          Pass\n                                        </button>\n                                        <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                          {{ \"-\" }}\n                                        </button>\n                                      </ng-container>\n                                    </mat-cell>\n                                  </ng-container>\n                                  <ng-container matColumnDef=\"allowOverride\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                      class=\"column-nowrap psl-3 tbl-col-width-per-10\">OverrideBgt</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                      class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                      (click)=\"$event.stopPropagation()\">\n                                      <ng-container [ngSwitch]=\"row.allowOverride\">\n                                        <button *ngSwitchCase=\"'Y'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                          Yes\n                                        </button>\n                                        <button *ngSwitchCase=\"'N'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                          No\n                                        </button>\n\n                                        <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                          {{ \"-\" }}\n                                        </button>\n                                      </ng-container>\n                                    </mat-cell>\n                                  </ng-container>\n\n                                  <ng-container matColumnDef=\"actions\">\n                                    <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"pr-0\">\n                                      <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                                        (click)=\"onEditInvoiceDetails(row)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                      </button>\n                                      <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                                        (click)=\"onDeleteInvoiceDetails(i)\" class=\"tbl-action-btn\">\n                                        <app-feather-icons [icon]=\"'trash-2'\"\n                                          [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                      </button>\n                                    </mat-cell>\n                                  </ng-container>\n\n                                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                  <mat-row *matRowDef=\"let row; let i = index; columns: displayedColumns\"\n                                    (click)=\"onEditInvoiceDetails(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                  </mat-row>\n                                </mat-table>\n                                <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                  </mat-progress-spinner>\n                                </div>\n                                <!-- <mat-paginator [pageSize]=\"100\" [pageSizeOptions]=\"[2, 6, 10, 20, 30, 40, 50, 100]\"\n                                  aria-label=\"Select page of users\"></mat-paginator> -->\n\n                                <div class=\"col-md-12\">\n                                  <div class=\"float-end m-t-30 text-end\">\n                                    <p>Sub - Total amount: <span>{{ totals.subTotalAmount | currency: \"KSH \" : \"symbol\"\n                                        : \"1.2-2\"\n                                        }}</span>\n                                    </p>\n                                    <p>vat: <span>{{ totals.totalTax | currency: \"KSH \" : \"symbol\" : \"1.2-2\" }}</span>\n                                    </p>\n                                    <hr>\n                                    <h3><b>Total:</b> <span>{{ totals.totalAmount | currency: \"KSH \" : \"symbol\" :\n                                        \"1.2-2\" }}</span>\n                                    </h3>\n                                  </div>\n                                </div>\n\n\n\n\n                              </div>\n                            </div>\n                          </mat-tab>\n\n                          <mat-tab>\n                            <ng-template mat-tab-label>\n                              <mat-icon>attach_file</mat-icon> Upload Invoice Attachments\n                            </ng-template>\n                            <div class=\"mt-3\">\n                              <!-- Content for the second tab -->\n                              <form [formGroup]=\"documentsForm\">\n                                <!-- <form [formGroup]=\"form\"> -->\n\n                                <div style=\"margin: 20px\">\n                                  <div class=\"table-responsive\">\n                                    <div class=\"materialTableHeader\">\n                                      <div class=\"row\">\n                                        <div class=\"col-8\">\n                                          <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                              <h2>Upload Documents</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                              <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                              <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                #filter class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                            </li>\n\n                                            <li>\n                                              <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                                </button>\n                                              </div>\n                                            </li>\n                                          </ul>\n                                        </div>\n                                        <div class=\"col-4\"></div>\n                                      </div>\n                                    </div>\n\n                                    <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                                    <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                                      formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                      <!-- ID Column -->\n                                      <ng-container matColumnDef=\"id\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                          {{ index + 1 }}\n                                        </mat-cell>\n                                      </ng-container>\n\n                                      <ng-container matColumnDef=\"fileName\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileName</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                          <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                            <mat-label>fileName</mat-label>\n                                            <input matInput type=\"text\" formControlName=\"fileName\"\n                                              placeholder=\"fileName\" maxlength=\"50\" />\n                                          </mat-form-field>\n                                        </mat-cell>\n                                      </ng-container>\n                                      <ng-container matColumnDef=\"fileType\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileType</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                          <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                            <mat-label>fileType</mat-label>\n                                            <input matInput type=\"text\" formControlName=\"fileType\"\n                                              placeholder=\"fileType\" maxlength=\"50\" />\n                                          </mat-form-field>\n                                        </mat-cell>\n                                      </ng-container>\n\n                                      <ng-container matColumnDef=\"selectFile\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                                          File</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                                          <input #file type=\"file\" [disabled]=\"isLoading | async\"\n                                            (change)=\"onSelectFile(file.files, row, index)\" [multiple]=\"'multiple'\" />\n                                        </mat-cell>\n                                      </ng-container>\n\n                                      <ng-container matColumnDef=\"download\">\n                                        <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                          *matHeaderCellDef>Download</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row; let i = index\"\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                          <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                            <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                                          </button>\n                                        </mat-cell>\n                                      </ng-container>\n\n\n                                      <ng-container matColumnDef=\"action\">\n                                        <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                          *matHeaderCellDef>Action</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row; let i = index\"\n                                          class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                          <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                              [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                          </button>\n                                        </mat-cell>\n                                      </ng-container>\n\n\n\n                                      <!-- Row definitions -->\n                                      <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                                      <mat-row *matRowDef=\"\n                                          let row;\n                                          let i = index;\n                                          columns: displayColumns\n                                        \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                                      <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                                        input.value\n                                        }}\"</mat-cell>\n                                    </mat-table>\n\n                                    <!-- Loading spinner -->\n                                    <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                      </mat-progress-spinner>\n                                    </div>\n                                    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                      aria-label=\"Select page of users\"></mat-paginator>\n                                  </div>\n                                </div>\n\n\n                              </form>\n                            </div>\n                          </mat-tab>\n                        </mat-tab-group>\n\n\n                        <hr>\n\n                        <!-- Action Buttons -->\n                        <div class=\"row mx-2\">\n                          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                            <div mat-dialog-action [align]=\"'end'\">\n                              <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                (click)=\"cancel()\">\n                                Cancel\n                              </button>\n\n                              <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\"\n                                [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                Submit\n                              </button>\n\n                              <ng-container *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\">\n                                <button class=\"btn-space\" (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                                  <mat-icon>done_outline</mat-icon>\n                                  HOD Approval\n                                </button>\n                                <button class=\"btn-space\" (click)=\"onValidate('FINANCE')\" mat-raised-button\n                                  color=\"primary\">\n                                  <mat-icon>attach_money</mat-icon>\n                                  Finance Approval\n                                </button>\n                              </ng-container>\n\n                              <!-- <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                                (click)=\"onValidate('Verifier')\" mat-raised-button color=\"primary\">\n                                <mat-icon>done_outline</mat-icon>\n                                Verify\n                              </button> -->\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Second Tab -->\n                </mat-tab>\n                <!-- <mat-tab label=\"UPLOAD MULTIPLE CUSTOMER INVOICES\">\n                  <div [hidden]=\"hideSubmit\" class=\"mx-4 mt-4\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4 m-3\">\n                        <div class=\"m-3\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n\n                        <div class=\"mx-3\">\n                          <app-file-upload (change)=\"handleFileInput($event.target.files)\">\n                          </app-file-upload>\n                        </div>\n\n                        <div class=\"mt-4 mx-3\">\n                          <table class=\"table\">\n                            <thead>\n                              <tr>\n                                <th>Customer Code</th>\n                                <th>Customer Name</th>\n                                <th>Due Date</th>\n                                <th>Invoice Amount</th>\n                                <th>Currency</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let item of items\">\n                                <td>{{ item.customerCode }}</td>\n                                <td>{{ item.customerName }}</td>\n                                <td>{{ item.dueDate }}</td>\n                                <td>{{ item.invoiceAmount }}</td>\n                                <td>{{ item.currency }}</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row mx-4 mt-4\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-12\">\n                      <div mat-dialog-action [align]=\"'end'\" class=\"mt-2\">\n                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                          (click)=\"cancel()\">\n                          Cancel\n                        </button>\n                        <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" (click)=\"submitBatch()\">\n                          Submit Batch\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </mat-tab> -->\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { CustomerValidationComponent } from \"src/app/erp-finance/data/lookups/validation/customer-validation/customer-validation.component\";\nimport { ReceivablePaymentsValidationComponent } from \"src/app/erp-finance/data/lookups/validation/receivable-payments-validation/receivable-payments-validation.component\";\nimport { CustomerManagementService } from \"src/app/erp-finance/data/services/customer-management.service\";\nimport { ReceivablePaymentsService } from \"src/app/erp-finance/data/services/receivable-payments.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { AccountingJournalTransactionsComponent } from \"../../../transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-all-receivable-payments\",\n  templateUrl: \"./all-receivable-payments.component.html\",\n  styleUrls: [\"./all-receivable-payments.component.scss\"],\n})\nexport class AllReceivablePaymentsComponent implements OnInit {\n  //table columns\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    // \"paymentCode\",\n    \"invoiceCode\",\n    \"customerCode\",\n    \"customerName\",\n    \"paymentAmount\",\n    \"currency\",\n    \"paymentDate\",\n\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  validationIsLoading: any;\n  dialogRef: any;\n  hideValidation: any;\n\n  // ****************************************************************************************************************************\n  //dependency injection\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private receivablePaymentManService: ReceivablePaymentsService,\n    public accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private transactionService: TransactionsService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      approvalType: [\"AllPayables\", Validators.required],\n    });\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // fetching all the data\n  Form: FormGroup;\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  selectedApprovalType: string = \"AllPayables\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData();\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.selection = new SelectionModel<any>(true, []);\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n\n    let params = {\n      status: this.Form.value.status,\n      approvalType: this.Form.value.approvalType,\n    };\n    // this.alignTableColumns();\n    this.receivablePaymentManService\n      .getReceivablePaymentsByStatusAndApprovalType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  // getData() {\n  //   this.receivablePaymentManService\n  //     .getAllReceivablePayments()\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         if (res.statusCode == 200) {\n  //           this.data = res.entity;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n  //           this.selection = new SelectionModel<any>(true, []);\n\n  //           //confirm data value\n  //           console.log(\"this.data: \", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => { },\n  //     }),\n  //     Subscription;\n  // }\n\n  //On refresh, fetch the data again\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n  //adding customers\n  addReceivablePayment() {\n    this.router.navigate([\n      \"/erp-finance/finance-management/manage-recPayments\",\n    ]);\n  }\n\n  //Updating the payments\n\n  editReceivablePayment(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"Stringfied: \", data); //checks the stringified JS value\n\n    let route = \"/erp-finance/finance-management/manage-recPayments\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the payments\n  viewReceivablePayment(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-finance/finance-management/manage-recPayments\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n\n  //Validating a single customer\n  validateReceivablePayment(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-finance/finance-management/manage-recPayments\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting customers\n\n  deleteReceivablePayment(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Receivable Payment will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Receivable Payment \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.receivablePaymentManService\n          .deleteReceivablePayment(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n // ****************************************************************************************************************************\n  //Select Expenses\n  expenseDetails: any;\n\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n\n    console.log(\"this.selection.selected: \", this.selection.selected);\n  }\n\n  // hasAccess: boolean;\n  // processMultiple(userType) {\n  //   let privilege = \"Manage Expenses\"; //Insert the priviledge later\n\n  //   this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n  //     privilege,\n  //   ]);\n\n  //   if (this.hasAccess) {\n  //     const dialogConfig = new MatDialogConfig();\n  //     dialogConfig.disableClose = false;\n  //     dialogConfig.autoFocus = true;\n  //     dialogConfig.width = \"800px\";\n  //     dialogConfig.data = {\n  //       id: this.selection.selected.map((element) => {\n  //         return {\n  //           id: element.id,\n  //         };\n  //       }),\n  //       // id: this.selection.selected.map((item)=> item.id),\n  //       data: this.selection.selected,\n  //       userType: userType,\n  //     };\n\n  //     const dialogRef = this.dialog.open(\n  //       PaymentsValidationComponent,\n  //       dialogConfig\n  //     );\n\n  //     dialogRef.afterClosed().subscribe((result) => {\n  //       this.router.navigate([\n  //         \"/erp-finance/finance-management/allAccountsPayable\",\n  //       ]);\n  //       this.refresh();\n  //     });\n  //   }\n  // }\n\n  // hasAccess: boolean;\n\n  // processMultipleRows(status: any) {\n  //   //Validate Payables\n  //   let privilege = \"Dashboard\";\n\n  //   this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n  //     privilege,\n  //   ]);\n\n  //   this.hasAccess = true;\n\n  //   if (this.hasAccess) {\n  //     Swal.fire({\n  //       title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n  //       input: \"textarea\",\n  //       inputPlaceholder: \"Type your remarks here...\",\n  //       confirmButtonText: \"Submit\",\n  //       showCancelButton: true,\n  //       cancelButtonText: \"Cancel\",\n\n  //       inputValidator: (value) => {\n  //         if (!value) {\n  //           return \"Please enter your remarks\";\n  //         }\n  //       },\n  //     }).then((result) => {\n  //       if (result.isConfirmed) {\n  //         const verifierRemarks = result.value;\n\n  //         const processedRows = this.selection.selected.map((element) => {\n  //           return {\n  //             id: element.id,\n  //             status: status,\n  //             verifierRemarks: verifierRemarks,\n  //           };\n  //         });\n\n  //         console.log(\"LOG: \", processedRows);\n\n  //         this.allAccountsManService\n  //           .validatePayablePayments(processedRows)\n  //           .pipe(takeUntil(this.destroy$))\n  //           .subscribe({\n  //             next: (res) => {\n  //               console.log(\"res: \", res);\n  //               if (res.entity) {\n  //                 this.snackbar.showNotification(\n  //                   \"snackbar-success\",\n  //                   res.message\n  //                 );\n\n  //                 this.selection = new SelectionModel<any>(true, []);\n  //               } else {\n  //                 this.snackbar.showNotification(\n  //                   \"snackbar-danger\",\n  //                   res.message\n  //                 );\n  //               }\n  //             },\n  //             error: (err) => {\n  //               this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //             },\n  //             complete: () => {\n  //               this.getData();\n  //             },\n  //           }),\n  //           Subscription;\n  //       } else {\n  //         this.selection = new SelectionModel<any>(true, []);\n  //       }\n  //     });\n  //   }\n\n  // }\n\n  selectedRows: any[] = [];\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selection.selected.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              }\n\n              let params = { approvalType: newSelectedUserType };\n\n              console.log(\"params: \", params);\n\n              this.receivablePaymentManService\n                .validateReceivablePayment(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData();\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  //********************************************************************************************************************** */\n  //accounting Select\n  //********************************************************************************************************************** */\n\n  // accountingTableSelection = new SelectionModel<any>(false, []);\n  // accountingSelectItemsSelected: boolean = false;\n  // accountingCheckboxSelectedRows: any;\n\n  // isAllaccountingTableSelected() {\n  //   const numSelected = this.accountingTableSelection.selected.length;\n  //   const numRows = this.dataSource.data.length;\n  //   return numSelected === numRows;\n  // }\n\n  // masteraccountingTableToggle() {\n  //   if (this.isAllaccountingTableSelected()) {\n  //     this.accountingTableSelection.clear();\n  //     return;\n  //   }\n\n  //   this.accountingTableSelection.select(...this.dataSource.data);\n  // }\n\n  // checkboxaccountingTableLabel(row?: any): string {\n  //   if (!row) {\n  //     return `${\n  //       this.isAllaccountingTableSelected() ? \"deselect\" : \"select\"\n  //     } all`;\n  //   }\n  //   return `${\n  //     this.accountingTableSelection.isSelected(row) ? \"deselect\" : \"select\"\n  //   } row ${row.position + 1}`;\n  // }\n\n  // checkaccountingTableSelection() {\n  //   const numSelected = this.accountingTableSelection.selected.length;\n  //   const numRows = this.dataSource.data.length;\n  //   if (numSelected === numRows) {\n  //     this.accountingSelectItemsSelected = true;\n  //   } else if (numSelected !== numRows) {\n  //     this.accountingSelectItemsSelected = false;\n  //   }\n\n  //   console.log(\n  //     \"accountingSelectItemsSelected: \",\n  //     this.accountingSelectItemsSelected\n  //   );\n  // }\n\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n    //this.accountingCheckboxSelectedRows = this.accountingTableSelection.selected;\n\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.selection.selected[0].tranCode\n    );\n\n    if (\n      this.transactionAction === \"Add\" &&\n      this.selection.selected[0]?.tranCode\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Transaction already exists for this record\"\n      );\n    } else if (\n      this.transactionAction !== \"Add\" &&\n      (this.selection.selected[0]?.tranCode === null ||\n        this.selection.selected[0]?.tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    } else {\n      this.transactionLookUp();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  transactionType: string = \"SupplierPayment\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\"this.accountingTableSelection:: \", this.selection.selected[0]);\n\n    let addBody = {};\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n        prCode: this.selection.selected[0].prCode,\n        referenceCode: this.selection.selected[0].paymentCode,\n        itemCode: \"\",\n        parttrans: [\n          {\n            accountNo: \"\",\n            amount: this.selection.selected[0].paymentAmount,\n            partTranstype: \"Debit\",\n          },\n        ],\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.selection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.selection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n       // this.updateReceivedTransactionStatus();\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n\n\n\n\n\n  downloadReceivablesExcelReport() {\n    this.downloadLoading = true;\n    this.receivablePaymentManService.downloadExcelReceivablesReport()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          let url = window.URL.createObjectURL(res.data);\n\n          // if you want to open PDF in new tab\n          // window.open(url);\n\n          let a = document.createElement(\"a\");\n          document.body.appendChild(a);\n          a.setAttribute(\"style\", \"display: none\");\n          a.setAttribute(\"target\", \"blank\");\n          a.href = url;\n          // Append row.code to the download URL\n          a.download = `Receivable_payments.xlsx`;\n          a.click();\n          window.URL.revokeObjectURL(url);\n          a.remove();\n\n          this.downloadLoading = false;\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            \"Report generated successfully\"\n          );\n\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Error downloading Receivable_payments report!\"\n          );\n          console.log(\"Error\", err.message)\n          this.downloadLoading = false;\n        },\n        complete: () => {\n          this.downloadLoading = false;\n        },\n      }),\n      Subscription;\n  }\n  // ****************************************************************************************************************************\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Receivable Payments'\" [items]=\"['Receivable Payments']\"\n        [active_item]=\"'All Receivable Payments'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n             \n\n              <div class=\"materialTableHeaderCustom mx-0 mt-0\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Approval Type:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'AllPayables'\"\n                        class=\"mat-button all-payables mb-1\" (click)=\"getApprovalTypeSelectedStatus('AllPayables')\">\n                        <mat-icon>description</mat-icon>\n                        ALL PAYABLES\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToFinanceManager()\"  mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Finance Manager'\n                        \" class=\"mat-button finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('Finance Manager')\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        FINANCE MANAGER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToSeniorFinanceManager()\" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Senior Finance Manager'\n                        \" class=\"mat-button senior-finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Senior Finance Manager'\n                          )\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        SENIOR MANAGER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToHeadOfFinanceAndStrategy()\"  mat-raised-button [class.active]=\"selectedApprovalType === 'Head of Finance And Strategy'\"\n                        class=\"mat-button head-of-finance-strategy mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Head of Finance And Strategy')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HEAD OF FINANCE\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToManagingDirectorAndCEO()\"  mat-raised-button [class.active]=\"selectedApprovalType === 'Managing Director And CEO'\"\n                        class=\"mat-button managing-director-ceo mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Managing Director And CEO')\">\n                        <mat-icon>person_pin</mat-icon>\n                        MANAGING DIRECTOR\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Status:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mx-0 mt-1\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>PAYABLE PAYMENTS</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addReceivablePayment()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"DOWNLOAD REPORT\">\n                          <button mat-mini-fab color=\"primary\" [disabled]=\"downloadLoading\"\n                            [class.auth-spinner]=\"downloadLoading\" (click)=\"downloadReceivablesExcelReport()\">\n                            <mat-icon class=\"col-white\">cloud_download</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"View Accounting Details\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('View')\">\n                            <mat-icon class=\"col-white\">visibility</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Table Definition -->\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"customerSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"customerSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    {{row.id}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Invoice Code   -->\n                <ng-container matColumnDef=\"invoiceCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Invoice Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.invoiceCode}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Customer Code   -->\n                <ng-container matColumnDef=\"customerCode\" class=\"emboss\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Customer Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.customerCode}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Customer Name  -->\n                <ng-container matColumnDef=\"customerName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Customer Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.customerName}}\n                  </mat-cell>\n                </ng-container>\n\n\n                <!--  Payment Amount   -->\n                <ng-container matColumnDef=\"paymentAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Payment Amount\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.paymentAmount}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Currency    -->\n                <ng-container matColumnDef=\"currency\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Currency\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.currency}}\n                  </mat-cell>\n                </ng-container>\n\n                <!--  Payment Date   -->\n                <ng-container matColumnDef=\"paymentDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Payment Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.paymentDate | date : \"short\"}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"tranCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    matTooltip=\"QuantityCancelled\">\n                    TranCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranCode || \"-\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    TranStatus\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp; {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp; {{ row.transactionStatus }}\n                      </button>\n\n                      <ng-container *ngSwitchDefault>\n                        N.A\n                      </ng-container>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"tranDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Tran Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.tranDate ? (row.tranDate | date : \"short\") : 'N.A'}}\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                    <!--  Verify Button -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"validateReceivablePayment(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Edit Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editReceivablePayment(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- View Button  -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewReceivablePayment(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteReceivablePayment(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                      </app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                </mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewReceivablePayment(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{input.value}}\"\n                </mat-cell>\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, FormArray, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, BehaviorSubject, takeUntil, Subscription } from 'rxjs';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { CustomerInvoiceLookupComponent } from 'src/app/erp-finance/data/lookups/customer-invoice-lookup/customer-invoice-lookup.component';\nimport { CustomerLookupComponent } from 'src/app/erp-finance/data/lookups/customer-lookup/customer-lookup.component';\nimport { MaintainedCurrenciesLookUpComponent } from 'src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component';\nimport { CustomerValidationComponent } from 'src/app/erp-finance/data/lookups/validation/customer-validation/customer-validation.component';\nimport { ReceivablePaymentsValidationComponent } from 'src/app/erp-finance/data/lookups/validation/receivable-payments-validation/receivable-payments-validation.component';\nimport { CostCentreManagementService } from 'src/app/erp-finance/data/services/cost-centre-management.service';\nimport { ReceivablePaymentsService } from 'src/app/erp-finance/data/services/receivable-payments.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { NotificationService } from 'src/app/erp-procurement/data/services/notification.service';\nimport { FilesService, SelectedFiles } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport * as XLSX from 'xlsx'\n\n@Component({\n  selector: 'app-manage-receivable-payments',\n  templateUrl: './manage-receivable-payments.component.html',\n  styleUrls: ['./manage-receivable-payments.component.sass']\n})\nexport class ManageReceivablePaymentsComponent implements OnInit {\n\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  disableActions = false;\n  hideApprovals = false;\n  // ***************************************************************\n  //excel columns\n  excelHeaderRef: any[] =\n    [\n      \"invoiceCode\",\n      \"customerCode\",\n      \"customerName\",\n      \"paymentAmount\",\n      \"currency\",\n      \"paymentDate\",\n    ];\n  isLoading: any;\n\n  // File Tabulation\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private receivablePaymentsManService: ReceivablePaymentsService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private costManService: CostCentreManagementService,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private filesService: FilesService,\n\n\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization \n  ngOnInit(): void {\n    this.getPage();\n    // this.getcostCenter();\n    this.showForm = true;\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params)\n\n      /**\n       * define the page behaviour based on received parameters\n       * first 'if' checks if the selected item has a unique id\n       * second if defines action \n       *  */\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        }\n        else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n        else if (action === \"Verify\") {\n          this.pageFunction = \"Verify\";\n          this.disableActions = true;\n        }\n        this.id = params[\"id\"]; 21\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n\n        this.formData = additionalData;\n\n        this.getPage();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData)\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    }\n    else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n    else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      invoiceCode: [\"\", [Validators.required]],\n      customerCode: [\"\", [Validators.required]],\n      customerName: [\"\", [Validators.required]],\n      paymentAmount: [\"\", [Validators.required]],\n      currency: [\"\", [Validators.required]],\n      paymentDate: [\"\", [Validators.required]],\n      receivablePaymentSupportingDocxList: []\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      invoiceCode: [this.formData.invoiceCode, [Validators.required]],\n      customerCode: [this.formData.customerCode, [Validators.required]],\n      customerName: [this.formData.customerName, [Validators.required]],\n      paymentAmount: [this.formData.paymentAmount, [Validators.required]],\n      currency: [this.formData.currency, [Validators.required]],\n      paymentDate: [this.formData.paymentDate, [Validators.required, this.dateValidator]],\n      receivablePaymentSupportingDocxList: [this.formData.receivablePaymentSupportingDocxList]\n    });\n    this.dataSource.data = this.formData.receivablePaymentSupportingDocxList\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      invoiceCode: [{ value: this.formData.invoiceCode, disabled: true }, [Validators.required]],\n      customerCode: [{ value: this.formData.customerCode, disabled: true }, [Validators.required]],\n      customerName: [{ value: this.formData.customerName, disabled: true }, [Validators.required]],\n      paymentAmount: [{ value: this.formData.paymentAmount, disabled: true }, [Validators.required]],\n      currency: [{ value: this.formData.currency, disabled: true }, [Validators.required]],\n      paymentDate: [{ value: this.formData.paymentDate, disabled: true }, [Validators.required]],\n      receivablePaymentSupportingDocxList: [{ value: this.formData.receivablePaymentSupportingDocxList, disabled: true }, [Validators.required]],\n\n    });\n    this.dataSource.data = this.formData.receivablePaymentSupportingDocxList\n  }\n\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel() {\n    console.log(\"Before routing\");\n    this.router.navigate([\"/erp-finance/finance-management/all-recPayments\"]);\n  }\n\n  // ****************************************************************************************************************************\n  //Import customers from Excel\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n        this.items = jsonData;\n        console.log(\" this.items :\", this.items);\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n        //call the function to validate the items\n        // this.validateItems();\n        console.log(\"this.items: \", this.items)\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n\n  }\n  // validation of uploaded excel file \n\n  // ****************************************************************************************************************************\n  //  currency Loook Up\n  selectedItem: any[] = [];\n  _currencyLookup() {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n\n    }\n    const dialogRef = this.dialog.open(MaintainedCurrenciesLookUpComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach(element => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode\n        })\n      })\n    })\n  }\n\n  _customerInvoicesLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n\n    }\n    const dialogRef = this.dialog.open(CustomerInvoiceLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach(element => {\n        this.mngForm.patchValue({\n          invoiceCode: element.invoiceCode,\n          customerCode: element.customerCode,\n          customerName: element.customerName,\n        })\n      })\n    })\n  }\n\n  // ****************************************************************************************************************************\n  //  currency Loook Up\n  _customerLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n\n    }\n    const dialogRef = this.dialog.open(CustomerLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach(element => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode\n        })\n      })\n    })\n  }\n\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate(userType) {\n    let privilege = \"Receivable Payment Validation\"; \n    // let privilege = \"All Currencies\";\n    this.hasAccess = this.accessControlService.hasPrivilege('FinanceModule', [privilege]);\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType\n      };\n      console.log(\"this.formData: \", this.formData)\n      const dialogRef = this.dialog.open(ReceivablePaymentsValidationComponent, dialogConfig);\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-management/all-recPayments\"]);\n      });\n    }\n  }\n  //******************************************************************************************************************************************************** */\n  //adding attachments to customers \n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"filename\",\n    \"filetype\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    this.addFileRow();\n  }\n\n  // file: trerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrtysdfxzdgjr634racxzvcnfgerewrsa,\n  // filename: currFilename,\n  // filetype: currFiletype},\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      filetype: [\"\", Validators.required],\n      filename: [\"\", Validators.required],\n    });\n    // this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n\n    this.mngForm.patchValue({\n      docAttachments: this.documentsForm.value.filedetails,\n    });\n  }\n\n\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currFilename: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currFilename = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          filename: this.currFilename,\n          filetype: this.currType,\n        });\n        console.log(\n          \"this.documentsForm.value.filedetails: \",\n          this.selectedFiles\n        );\n\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let filename = row.value.filename;\n    let filetype = row.value.filetype;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${filename}.${filetype}`;\n    link.click();\n  }\n\n\n\n  // ****************************************************************************************************************************\n  //submit button function\n\n  submit() {\n\n    console.log(\"Both: \", this.mngForm.value)\n\n    if (this.pageFunction === \"Add\") {\n      this.receivablePaymentsManService\n        .addReceivablePayments(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe\n        (\n          {\n            next: (res) => {\n              console.log(\"res.status: \", res.statusCode);\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.router.navigate([\"/erp-finance/finance-management/all-recPayments\"]);\n              }\n              else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => { },\n          }\n        ),\n        Subscription;\n    }\n    else if (this.pageFunction === \"Update\") {\n      this.receivablePaymentsManService\n        .updateReceivablePayment(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe\n        (\n          {\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.router.navigate([\"/erp-finance/finance-management/all-recPayments\"]);\n              }\n              else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification\n                (\n                  \"snackbar-danger\",\n                  err.message\n                );\n            },\n            complete: () => { },\n          }\n        ),\n        Subscription;\n    }\n  }\n\n\n  //uploading batch customers files\n\n  submitBatch() {\n    console.log(\"submitting batch\");\n\n    if (this.pageFunction === \"Add\") {\n      this.receivablePaymentsManService\n        .uploadBatchReceivablePayments(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe\n        (\n          {\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.router.navigate([\"/erp-finance/finance-management/all-recPayments\"]);\n              }\n              else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => { },\n          }\n        ),\n        Subscription;\n    }\n\n  }\n\n}\n\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Manage Receivable Payments'\" [items]=\"['Receivable Payments']\"\n                [active_item]=\"'Manage Receivable Payments'\">\n            </app-breadcrumb>\n        </div>\n\n        <div class=\"row clearfix\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"body\" *ngIf=\"showForm\">\n                        <div class=\"row\" *ngIf=\"pageFunction !=='Add'\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n\n                                <div class=\"card bg-color\">\n                                    <div class=\"chat\">\n                                        <div class=\"chat-header clearfix\">\n\n                                            <div class=\"row\">\n\n                                                <div class=\"col-lg-2 col-sm-6\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Invoice Code: </div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-blue\">{{formData.invoiceCode}}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-lg-2 col-sm-6\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Posted On: </div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-pink\">{{formData.postedTime |\n                                                                date: 'MMMM dd, yyyy HH:mm'}}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-lg-2 col-sm-6\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Verified By: </div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-blue\">{{formData.verifiedBy}}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-lg-2 col-sm-6\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Verified On: </div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-pink\">{{formData.verifiedTime\n                                                                | date: 'MMMM dd, yyyy HH:mm'}}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"mx-2\">\n                            <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                                <mat-tab label=\"ADD A RECEIVABLE\">\n                                    <div class=\"row clearfix mx-2 mt-4 m-3\">\n                                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n\n                                            <!-- <div class=\"header\">\n                                                <div class=\"row\">\n                                                    <h2>\n                                                        {{ pageFunction }} Receivables\n                                                    </h2>\n                                                </div>\n                                            </div> -->\n                                            <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                </div>\n                                            </div>\n                                            <div>\n\n                                                <form [formGroup]=\"mngForm\">\n                                                    <div class=\"row\">\n\n\n                                                        <!-- Invoice Code -->\n                                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                                                            <mat-form-field class=\"example-full-width mb-3\"\n                                                                appearance=\"outline\">\n                                                                <mat-label>\n                                                                    Invoice Code\n                                                                </mat-label>\n                                                                <input matInput formControlName=\"invoiceCode\"\n                                                                    readonly />\n                                                                <mat-icon matSuffix\n                                                                    (click)=\"_customerInvoicesLookUp()\">search</mat-icon>\n                                                                <mat-error\n                                                                    *ngIf=\"mngForm.get('invoiceCode').hasError('required')\">\n                                                                    Invoice Code is required\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n\n                                                        <!-- Customer Code -->\n                                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                                                            <mat-form-field class=\"example-full-width mb-3\"\n                                                                appearance=\"outline\">\n                                                                <mat-label>\n                                                                    Customer Code\n                                                                </mat-label>\n                                                                <input matInput formControlName=\"customerCode\"\n                                                                    readonly />\n                                                                <mat-error\n                                                                    *ngIf=\"mngForm.get('customerCode').hasError('required')\">\n                                                                    Customer Code is required\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n                                                        <!-- Customer Name -->\n                                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                                                            <mat-form-field class=\"example-full-width mb-3\"\n                                                                appearance=\"outline\">\n                                                                <mat-label>\n                                                                    Customer Name\n                                                                </mat-label>\n                                                                <input matInput formControlName=\"customerName\"\n                                                                    readonly />\n                                                                <mat-error\n                                                                    *ngIf=\"mngForm.get('customerName').hasError('required')\">\n                                                                    Customer Name is required\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n                                                        <!-- Payment Amount -->\n                                                        <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                                                            <mat-form-field class=\"example-full-width mb-3\"\n                                                                appearance=\"outline\">\n                                                                <mat-label>\n                                                                    Payment Amount\n                                                                </mat-label>\n                                                                <input matInput formControlName=\"paymentAmount\" />\n                                                                <mat-error\n                                                                    *ngIf=\"mngForm.get('paymentAmount').hasError('required')\">\n                                                                    Payment Amount is required\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n                                                        <!-- Currency  -->\n                                                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-3\">\n                                                            <mat-form-field class=\"example-full-width mb-3\"\n                                                                appearance=\"outline\">\n                                                                <mat-label>\n                                                                    Currency\n                                                                </mat-label>\n                                                                <input matInput formControlName=\"currency\" readonly />\n                                                                <mat-icon matSuffix\n                                                                    (click)=\"_currencyLookup()\">search</mat-icon>\n                                                                <mat-error\n                                                                    *ngIf=\"mngForm.get('currency').hasError('required')\">\n                                                                    Currency is required\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n                                                        <!-- Payment Date -->\n                                                        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                                            <mat-form-field class=\"example-full-width mb-1\"\n                                                                appearance=\"outline\">\n                                                                <mat-label>Payment Date</mat-label>\n                                                                <input matInput [matDatepicker]=\"picker\"\n                                                                    formControlName=\"paymentDate\" required />\n                                                                <mat-datepicker-toggle matSuffix\n                                                                    [for]=\"picker\"></mat-datepicker-toggle>\n                                                                <mat-datepicker #picker></mat-datepicker>\n                                                                <mat-error *ngIf=\"\n                                      mngForm.get('paymentDate').hasError('required')\n                                    \">\n                                                                    Payment Date is required\n                                                                </mat-error>\n                                                                <mat-error *ngIf=\"\n                                      mngForm.get('paymentDate').hasError('pastDate')\n                                    \">\n                                                                    Enter a Valid Payment Date\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <ng-template mat-tab-label>\n                                        Add Receivable\n                                    </ng-template>\n                                    <div class=\"mt-3\">\n                                        <!-- Content for the second tab -->\n                                        <ng-container *ngIf=\"!hideBgtButtons\">\n                                            <form [formGroup]=\"documentsForm\">\n                                                <!-- <form [formGroup]=\"form\"> -->\n\n\n                                                <mat-tab-group>\n                                                    <mat-tab>\n                                                        <ng-template mat-tab-label>\n                                                            <mat-icon>attach_file</mat-icon> Upload Documents\n                                                        </ng-template>\n                                                    </mat-tab>\n                                                </mat-tab-group>\n\n                                                <div class=\"card bg-card\">\n                                                    <div style=\"margin: 20px\">\n                                                        <div class=\"table-responsive\">\n                                                            <div class=\"materialTableHeader  bg-table-header font\">\n                                                                <div class=\"row\">\n                                                                    <div class=\"col-8\">\n                                                                        <ul class=\"header-buttons-left ms-0\">\n                                                                            <li class=\"dropdown\">\n                                                                                <h2>Uploaded Documents</h2>\n                                                                            </li>\n                                                                            <li class=\"dropdown m-l-20\">\n                                                                                <label for=\"search-input\"><i\n                                                                                        class=\"material-icons search-icon\">search</i></label>\n                                                                                <input placeholder=\"Filter...\"\n                                                                                    type=\"text\"\n                                                                                    (keyup)=\"applyFilter($event)\"\n                                                                                    #filter\n                                                                                    class=\"browser-default search-field\"\n                                                                                    aria-label=\"Search box\" />\n                                                                            </li>\n\n                                                                            <li>\n                                                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                                                    <button mat-mini-fab color=\"primary\"\n                                                                                        (click)=\"addFileRow()\">\n                                                                                        <mat-icon\n                                                                                            class=\"col-white\">add</mat-icon>\n                                                                                    </button>\n                                                                                </div>\n                                                                            </li>\n                                                                        </ul>\n                                                                    </div>\n                                                                    <div class=\"col-4\"></div>\n                                                                </div>\n                                                            </div>\n                                                            <hr>\n\n                                                            <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                                                            <mat-table #table matTableExporter [dataSource]=\"dataSource\"\n                                                                formArrayName=\"filedetails\" matSort class=\"mat-cell\"\n                                                                #exporter=\"matTableExporter\">\n                                                                <!-- ID Column -->\n                                                                <ng-container matColumnDef=\"id\">\n                                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-6 start-col mat-elevation-z0\">Id</mat-header-cell>\n                                                                    <mat-cell *matCellDef=\"let row; let index = index\"\n                                                                        [formGroupName]=\"index\"\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                                                        {{ index + 1 }}\n                                                                    </mat-cell>\n                                                                </ng-container>\n\n                                                                <ng-container matColumnDef=\"filename\">\n                                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell mid-col mat-elevation-z0\">File\n                                                                        Name</mat-header-cell>\n                                                                    <mat-cell *matCellDef=\"let row; let index = index\"\n                                                                        [formGroupName]=\"index\"\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                                                        <mat-form-field\n                                                                            class=\"example-full-width mt-2 mr-5\"\n                                                                            appearance=\"fill\">\n                                                                            <mat-label>File Name</mat-label>\n                                                                            <input matInput type=\"text\"\n                                                                                formControlName=\"filename\"\n                                                                                placeholder=\"Filename\" maxlength=\"50\" />\n                                                                        </mat-form-field>\n                                                                    </mat-cell>\n                                                                </ng-container>\n                                                                <ng-container matColumnDef=\"filetype\">\n                                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell mid-col mat-elevation-z0\">File\n                                                                        Type</mat-header-cell>\n                                                                    <mat-cell *matCellDef=\"let row; let index = index\"\n                                                                        [formGroupName]=\"index\"\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                                                        <mat-form-field\n                                                                            class=\"example-full-width mt-2 mr-5\"\n                                                                            appearance=\"fill\">\n                                                                            <mat-label>File Type</mat-label>\n                                                                            <input matInput type=\"text\"\n                                                                                formControlName=\"filetype\"\n                                                                                placeholder=\"filetype\" maxlength=\"50\" />\n                                                                        </mat-form-field>\n                                                                    </mat-cell>\n                                                                </ng-container>\n\n                                                                <ng-container matColumnDef=\"selectFile\">\n                                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell mid-col mat-elevation-z0\">Select\n                                                                        File</mat-header-cell>\n                                                                    <mat-cell *matCellDef=\"let row; let index = index\"\n                                                                        [formGroupName]=\"index\"\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                                                                        <input #file type=\"file\"\n                                                                            [disabled]=\"isLoading | async\"\n                                                                            (change)=\"onSelectFile(file.files, row, index)\"\n                                                                            [multiple]=\"'multiple'\" />\n                                                                    </mat-cell>\n                                                                </ng-container>\n\n                                                                <ng-container matColumnDef=\"download\">\n                                                                    <mat-header-cell\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-30 mid-col mat-elevation-z0\"\n                                                                        *matHeaderCellDef>Download</mat-header-cell>\n                                                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                                                        <button mat-icon-button color=\"primary\"\n                                                                            (click)=\"$event.stopPropagation()\"\n                                                                            (click)=\"downloadDocument(row)\"\n                                                                            class=\"tbl-action-btn\">\n                                                                            <mat-icon\n                                                                                aria-label=\"Download\">file_download</mat-icon>\n                                                                        </button>\n                                                                    </mat-cell>\n                                                                </ng-container>\n\n                                                                <ng-container matColumnDef=\"action\">\n                                                                    <mat-header-cell\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-30 end-col mat-elevation-z0\"\n                                                                        *matHeaderCellDef>Action</mat-header-cell>\n                                                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                                                        class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                                                        <button mat-icon-button color=\"accent\"\n                                                                            (click)=\"$event.stopPropagation()\"\n                                                                            (click)=\"deleteCall(row)\"\n                                                                            class=\"tbl-action-btn\">\n                                                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                                                        </button>\n                                                                    </mat-cell>\n                                                                </ng-container>\n\n                                                                <!-- Row definitions -->\n                                                                <mat-header-row\n                                                                    *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                                                                <mat-row *matRowDef=\"\n                                                              let row;\n                                                              let i = index;\n                                                              columns: displayColumns\n                                                            \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                                                                <mat-cell *matNoDataRow colspan=\"4\">No data matching the\n                                                                    filter \"{{\n                                                                    input.value\n                                                                    }}\"</mat-cell>\n                                                            </mat-table>\n\n                                                            <!-- Loading spinner -->\n                                                            <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                                                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\"\n                                                                    mode=\"indeterminate\">\n                                                                </mat-progress-spinner>\n                                                            </div>\n                                                            <!-- <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                  aria-label=\"Select page of users\"></mat-paginator> -->\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Action Buttons -->\n                                                <div class=\"row mx-2\">\n                                                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                                                        <div mat-dialog-action [align]=\"'end'\">\n                                                            <button class=\"btn-space\" type=\"button\" mat-raised-button\n                                                                color=\"warn\" mat-button (click)=\"cancel()\">\n                                                                Cancel\n                                                            </button>\n                                                            <button mat-raised-button color=\"primary\"\n                                                                [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"\n                                                                (click)=\"submit()\">\n                                                                Submit\n                                                            </button>\n\n                                                            <button class=\"btn-space\" *ngIf=\"!hideApprovals\"\n                                                                [hidden]=\"hideApprovals\" (click)=\"onValidate()\"\n                                                                mat-raised-button color=\"primary\">\n                                                                <mat-icon>\n                                                                    done_outline\n                                                                </mat-icon>\n                                                                Verify\n                                                            </button>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            </form>\n                                        </ng-container>\n\n                                    </div>\n\n\n\n                                    <!-- Second Tab -->\n                                </mat-tab>\n                                <!-- <div class=\"row clearfix mx-2\">\n                                </div>\n                                <mat-icon>attach_file</mat-icon>\n                                <mat-tab label=\"Customer Mass Upload\">\n                                    <div [hidden]=\"hideSubmit\" class=\"mx-4 mt-4\">\n                                        <div class=\"row clearfix mx-2\">\n                                            <div class=\"mt-4 m-3\">\n                                                <div class=\"m-3\">\n                                                    <h5>Upload Excel File</h5>\n                                                </div>\n                                                <div class=\"mx-3\">\n                                                    <app-file-upload (change)=\"handleFileInput($event.target.files)\">\n                                                    </app-file-upload>\n                                                </div>\n                                                <div class=\"mt-4 mx-3\">\n                                                    <table class=\"table\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>Invoice Code</th>\n                                                                <th>Customer Code</th>\n                                                                <th>Customer Name</th>\n                                                                <th>Payment Amount</th>\n                                                                <th>Currency</th>\n                                                                <th>Payment Date</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            <tr *ngFor=\"let item of items\">\n                                                                <td>{{ item.invoiceCode }}</td>\n                                                                <td>{{ item.customerCode }}</td>\n                                                                <td>{{ item.customerName }}</td>\n                                                                <td>{{ item.paymentAmount }}</td>\n                                                                <td>{{ item.currency }}</td>\n                                                                <td>{{ item.paymentDate }}</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row mx-4 mt-4\">\n                                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-12\">\n                                            <div mat-dialog-action [align]=\"'end'\" class=\"mt-2\">\n                                                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\"\n                                                    mat-button (click)=\"cancel()\">\n                                                    Cancel\n                                                </button>\n                                                <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                                                    (click)=\"submitBatch()\">\n                                                    Submit Batch\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </mat-tab> -->\n                            </mat-tab-group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { ExpenseManagementService } from \"src/app/erp-finance/data/services/expense-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { AccountsPayableService } from \"src/app/erp-finance/data/services/accounts-payable.service\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { PaymentsValidationComponent } from \"src/app/erp-finance/data/lookups/validation/payments-validation/payments-validation.component\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AccountingJournalTransactionsComponent } from \"../../../transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\n\n@Component({\n  selector: \"app-all-accounts-payable\",\n  templateUrl: \"./all-accounts-payable.component.html\",\n  styleUrls: [\"./all-accounts-payable.component.scss\"],\n})\nexport class AllAccountsPayableComponent implements OnInit {\n  //table columns\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"invoiceCode\",\n    \"supplierCode\",\n    \"supplierName\",\n    \"paymentCode\",\n    \"paymentAmount\",\n    \"currency\",\n    \"paymentDate\",\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  // ****************************************************************************************************************************\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    public accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private allAccountsManService: AccountsPayableService,\n    private transactionService: TransactionsService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      approvalType: [\"AllPayables\", Validators.required],\n      tranStatus: [\"PENDING\", Validators.required],\n    });\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // // fetching all the data\n  // getData() {\n  //   this.allAccountsManService\n  //     .getAllPayablePayments()\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         if (res.statusCode == 200) {\n  //           this.data = res.entity;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n  //           this.selection = new SelectionModel<any>(true, []);\n\n  //           //confirm data value\n  //           console.log(\"this.data: \", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {},\n  //     }),\n  //     Subscription;\n  // }\n\n  // //On refresh, fetch the data again\n\n  // refresh() {\n  //   this.getData(this.currentPage, this.pageSize);\n  // }\n\n  // ****************************************************************************************************************************\n  Form: FormGroup;\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedTranStatus: string = \"PENDING\";\n  getSelectSelectedTranStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedTranStatus(tranStatus: any) {\n    this.Form.patchValue({\n      tranStatus: tranStatus,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedApprovalType: string = \"AllPayables\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // getData() {\n  //   this.selection = new SelectionModel<any>(true, []);\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   this.selectedApprovalType = this.Form.value.approvalType;\n  //   this.selectedTranStatus = this.Form.value.tranStatus;\n\n  //   let params = {\n  //     status: this.Form.value.status,\n  //     approvalType: this.Form.value.approvalType,\n  //     tranStatus: this.Form.value.tranStatus,\n  //   };\n  //   console.log(\"this.params :\", params);\n  //   this.allAccountsManService\n  //     .getPayablePayamentsByStatusAndApprovalType(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.data :\", res);\n  //         if (res.entity) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.isLoading = false;\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.isLoading = false;\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {\n  //         this.isLoading = false;\n  //       },\n  //     }),\n  //     Subscription;\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n  // data: any;\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n    this.selectedTranStatus = this.Form.value.tranStatus;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n\n      status: this.Form.value.status,\n      approvalType: this.Form.value.approvalType,\n      tranStatus: this.Form.value.tranStatus,\n    };\n\n    this.allAccountsManService\n      .getPayablePayamentsByStatusAndApprovalType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.daentityta);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // ****************************************************************************************************************************\n\n  // ****************************************************************************************************************************\n  //adding Expense\n  addPayablePayment() {\n    this.router.navigate([\n      \"/erp-finance/finance-management/manageAccountsPayable\",\n    ]);\n  }\n\n  //Updating the expenses\n\n  editPayablePayment(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    console.log(\"Stringfied: \", data); //checks the stringified JS value\n\n    let route = \"/erp-finance/finance-management/manageAccountsPayable\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the expenses\n  viewPayablePayment(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-finance/finance-management/manageAccountsPayable\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n\n  //Validating Expense\n  validatePayablePayment(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-finance/finance-management/manageAccountsPayable\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting expenses\n\n  deletePayablePayment(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Payment will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Payment \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.allAccountsManService\n          .deletePayablePaymentPermanently(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  \"Payment Deleted Successfully\"\n                );\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //Select Expenses\n  expenseDetails: any;\n\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n\n    console.log(\"this.selection.selected: \", this.selection.selected);\n  }\n\n  // hasAccess: boolean;\n  // processMultiple(userType) {\n  //   let privilege = \"Manage Expenses\"; //Insert the priviledge later\n\n  //   this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n  //     privilege,\n  //   ]);\n\n  //   if (this.hasAccess) {\n  //     const dialogConfig = new MatDialogConfig();\n  //     dialogConfig.disableClose = false;\n  //     dialogConfig.autoFocus = true;\n  //     dialogConfig.width = \"800px\";\n  //     dialogConfig.data = {\n  //       id: this.selection.selected.map((element) => {\n  //         return {\n  //           id: element.id,\n  //         };\n  //       }),\n  //       // id: this.selection.selected.map((item)=> item.id),\n  //       data: this.selection.selected,\n  //       userType: userType,\n  //     };\n\n  //     const dialogRef = this.dialog.open(\n  //       PaymentsValidationComponent,\n  //       dialogConfig\n  //     );\n\n  //     dialogRef.afterClosed().subscribe((result) => {\n  //       this.router.navigate([\n  //         \"/erp-finance/finance-management/allAccountsPayable\",\n  //       ]);\n  //       this.refresh();\n  //     });\n  //   }\n  // }\n\n  // hasAccess: boolean;\n\n  // processMultipleRows(status: any) {\n  //   //Validate Payables\n  //   let privilege = \"Dashboard\";\n\n  //   this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n  //     privilege,\n  //   ]);\n\n  //   this.hasAccess = true;\n\n  //   if (this.hasAccess) {\n  //     Swal.fire({\n  //       title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n  //       input: \"textarea\",\n  //       inputPlaceholder: \"Type your remarks here...\",\n  //       confirmButtonText: \"Submit\",\n  //       showCancelButton: true,\n  //       cancelButtonText: \"Cancel\",\n\n  //       inputValidator: (value) => {\n  //         if (!value) {\n  //           return \"Please enter your remarks\";\n  //         }\n  //       },\n  //     }).then((result) => {\n  //       if (result.isConfirmed) {\n  //         const verifierRemarks = result.value;\n\n  //         const processedRows = this.selection.selected.map((element) => {\n  //           return {\n  //             id: element.id,\n  //             status: status,\n  //             verifierRemarks: verifierRemarks,\n  //           };\n  //         });\n\n  //         console.log(\"LOG: \", processedRows);\n\n  //         this.allAccountsManService\n  //           .validatePayablePayments(processedRows)\n  //           .pipe(takeUntil(this.destroy$))\n  //           .subscribe({\n  //             next: (res) => {\n  //               console.log(\"res: \", res);\n  //               if (res.entity) {\n  //                 this.snackbar.showNotification(\n  //                   \"snackbar-success\",\n  //                   res.message\n  //                 );\n\n  //                 this.selection = new SelectionModel<any>(true, []);\n  //               } else {\n  //                 this.snackbar.showNotification(\n  //                   \"snackbar-danger\",\n  //                   res.message\n  //                 );\n  //               }\n  //             },\n  //             error: (err) => {\n  //               this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //             },\n  //             complete: () => {\n  //               this.getData(this.currentPage, this.pageSize);\n  //             },\n  //           }),\n  //           Subscription;\n  //       } else {\n  //         this.selection = new SelectionModel<any>(true, []);\n  //       }\n  //     });\n  //   }\n\n  // }\n\n  selectedRows: any[] = [];\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n        PostInternalPayable: \"Post Internal Payable\",\n        PostExternalPayable: \"Post External Payable\"\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        } else if (selectedUserType === \"PostInternalPayable\") {\n          privilege = \"Post Internal Payable\";\n        } else if (selectedUserType === \"PostExternalPayable\") {\n          privilege = \"Post External Payable\";\n        }\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selection.selected.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              } else if (selectedUserType === \"Post Internal Payable\") {\n                newSelectedUserType = \"PostInternalPayable\";\n              } else if (selectedUserType === \"PostExternalPayable\") {\n                newSelectedUserType = \"Post External Payable\";\n              }\n\n              let params = { approvalType: newSelectedUserType };\n\n              console.log(\"params: \", params);\n\n              this.allAccountsManService\n                .validatePayablePayments(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData(this.currentPage, this.pageSize);\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  //********************************************************************************************************************** */\n  //accounting Select\n  //********************************************************************************************************************** */\n\n  // accountingTableSelection = new SelectionModel<any>(false, []);\n  // accountingSelectItemsSelected: boolean = false;\n  // accountingCheckboxSelectedRows: any;\n\n  // isAllaccountingTableSelected() {\n  //   const numSelected = this.accountingTableSelection.selected.length;\n  //   const numRows = this.dataSource.data.length;\n  //   return numSelected === numRows;\n  // }\n\n  // masteraccountingTableToggle() {\n  //   if (this.isAllaccountingTableSelected()) {\n  //     this.accountingTableSelection.clear();\n  //     return;\n  //   }\n\n  //   this.accountingTableSelection.select(...this.dataSource.data);\n  // }\n\n  // checkboxaccountingTableLabel(row?: any): string {\n  //   if (!row) {\n  //     return `${\n  //       this.isAllaccountingTableSelected() ? \"deselect\" : \"select\"\n  //     } all`;\n  //   }\n  //   return `${\n  //     this.accountingTableSelection.isSelected(row) ? \"deselect\" : \"select\"\n  //   } row ${row.position + 1}`;\n  // }\n\n  // checkaccountingTableSelection() {\n  //   const numSelected = this.accountingTableSelection.selected.length;\n  //   const numRows = this.dataSource.data.length;\n  //   if (numSelected === numRows) {\n  //     this.accountingSelectItemsSelected = true;\n  //   } else if (numSelected !== numRows) {\n  //     this.accountingSelectItemsSelected = false;\n  //   }\n\n  //   console.log(\n  //     \"accountingSelectItemsSelected: \",\n  //     this.accountingSelectItemsSelected\n  //   );\n  // }\n\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n\n    const selectedRecord = this.selection.selected[0];\n    const tranCode = selectedRecord?.tranCode;\n\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.selection.selected[0].tranCode\n    );\n\n    if (\n      this.transactionAction === \"Add\" &&\n      this.selection.selected[0]?.tranCode\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Transaction already exists for this record\"\n      );\n    } else if (\n      this.transactionAction !== \"Add\" &&\n      (this.selection.selected[0]?.tranCode === null ||\n        this.selection.selected[0]?.tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    }\n    else if (\n      this.transactionAction === \"Add\" &&\n      (this.selection.selected[0]?.tranCode === null ||\n        this.selection.selected[0]?.tranCode === undefined)\n    ) {\n      this.getPaymentTransactionData(selectedRecord)\n    } else {\n      this.transactionLookUp();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  transactionType: string = \"SupplierPayment\";\n  transactionResponse: any;\n  transactionLookUp(parttrans?: any) {\n    console.log(\"this.accountingTableSelection:: \", this.selection.selected[0]);\n\n    let addBody = {};\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n        prCode: this.selection.selected[0].prCode,\n        referenceCode: this.selection.selected[0].paymentCode,\n        itemCode: \"\",\n        parttrans: parttrans,\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.selection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.selection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n        // this.updateReceivedTransactionStatus();\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  generatedTransactionDetails: any;\n  getPaymentTransactionData(record) {\n    this.isLoading = true;\n    let params = {\n      paymentCode: record.paymentCode,\n    };\n    this.allAccountsManService\n      .getPayablePreviewTransactions(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.generatedTransactionDetails = res.entity;\n\n            this.transactionLookUp(this.generatedTransactionDetails.parttrans);\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          console.log(\"this.err :\", err);\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.isLoading = false;\n\n          this.selection = new SelectionModel<any>(true, []);\n        },\n      }),\n      Subscription;\n  }\n\n  retryAction() { }\n\n\n  downloadPayablesExcelReport() {\n    this.downloadLoading = true;\n    this.allAccountsManService\n      .downloadExcelPayablesReport()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          let url = window.URL.createObjectURL(res.data);\n\n          // if you want to open PDF in new tab\n          // window.open(url);\n\n          let a = document.createElement(\"a\");\n          document.body.appendChild(a);\n          a.setAttribute(\"style\", \"display: none\");\n          a.setAttribute(\"target\", \"blank\");\n          a.href = url;\n          // Append row.code to the download URL\n          a.download = `Payable_payments.xlsx`;\n          a.click();\n          window.URL.revokeObjectURL(url);\n          a.remove();\n\n          this.downloadLoading = false;\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            \"Report generated successfully\"\n          );\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          console.log(\"Error\", err.message);\n          this.downloadLoading = false;\n        },\n        complete: () => {\n          this.downloadLoading = false;\n        },\n      }),\n      Subscription;\n  }\n  // ****************************************************************************************************************************\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Payable Payments'\" [items]=\"['Payable Payment']\"\n        [active_item]=\"'Manage Payable Payments'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeaderCustom mx-0 mt-0\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Approval Type:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'AllPayables'\"\n                        class=\"mat-button all-payables mb-1\" (click)=\"getApprovalTypeSelectedStatus('AllPayables')\">\n                        <mat-icon>description</mat-icon>\n                        ALL PAYABLES\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToFinanceManager()\" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Finance Manager'\n                        \" class=\"mat-button finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('Finance Manager')\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        FINANCE MANAGER\n                      </button>\n\n                      <button *ngIf=\"\n                          accessControlService.hasAccessToSeniorFinanceManager()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Senior Finance Manager'\n                        \" class=\"mat-button senior-finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Senior Finance Manager'\n                          )\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        SENIOR MANAGER\n                      </button>\n\n                      <button *ngIf=\"\n                          accessControlService.hasAccessToHeadOfFinanceAndStrategy()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType ===\n                          'Head of Finance And Strategy'\n                        \" class=\"mat-button head-of-finance-strategy mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Head of Finance And Strategy'\n                          )\n                        \">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HEAD OF FINANCE\n                      </button>\n\n                      <button *ngIf=\"\n                          accessControlService.hasAccessToManagingDirectorAndCEO()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Managing Director And CEO'\n                        \" class=\"mat-button managing-director-ceo mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Managing Director And CEO'\n                          )\n                        \">\n                        <mat-icon>person_pin</mat-icon>\n                        MANAGING DIRECTOR\n                      </button>\n\n                      <button *ngIf=\"\n                          accessControlService.hasAccessToPostInternalPayable()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Post Internal Payable'\n                        \" class=\"mat-button post-payables-internal mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('Post Internal Payable')\n                        \">\n                        <mat-icon>attach_money</mat-icon>\n                        Post Internal\n                      </button>\n                      <button *ngIf=\"\n                          accessControlService.hasAccessToPostExternalPayable()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Post External Payable'\n                        \" class=\"mat-button post-payables-external mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('Post External Payable')\n                        \">\n                        <mat-icon>attach_money</mat-icon>\n                        Post External\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                  <ng-container>\n                    <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                      <h2>Status:</h2>\n                    </div>\n\n                    <div class=\"col-lg-5 col-md-5 col-sm-12 col-xs-12 mb-0\">\n                      <div class=\"button-container d-flex flex-wrap mt-1\">\n                        <!-- Button for PENDING status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                          class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n\n                        <!-- Button for APPROVED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                          class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                          <mat-icon>thumb_up</mat-icon>\n                          APPROVED\n                        </button>\n\n                        <!-- Button for RETURNED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                          class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                          <mat-icon>reply</mat-icon>\n                          RETURNED\n                        </button>\n\n                        <!-- Button for REJECTED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                          class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                          <mat-icon>cancel</mat-icon>\n                          REJECTED\n                        </button>\n                      </div>\n                    </div>\n                  </ng-container>\n                  <!-- *ngIf=\"\n                      selectedApprovalType === 'Post Internal Payable' ||\n                      selectedApprovalType === 'Post External Payable'\n                    \" -->\n                  <ng-container>\n                    <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                      <h2>Trans Status:</h2>\n                    </div>\n\n                    <div class=\"col-lg-5 col-md-5 col-sm-12 col-xs-12 mb-0\">\n                      <div class=\"button-container d-flex flex-wrap mt-1\">\n                        <!-- Button for PENDING status -->\n                        <button mat-raised-button [class.active]=\"selectedTranStatus === 'PENDING'\"\n                          class=\"mat-button pending\" (click)=\"getSelectedTranStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n\n                        <!-- Button for SUCCESS status -->\n                        <button mat-raised-button [class.active]=\"selectedTranStatus === 'SUCCESS'\"\n                          class=\"mat-button success\" (click)=\"getSelectedTranStatus('SUCCESS')\">\n                          <mat-icon>done</mat-icon>\n                          SUCCESS\n                        </button>\n\n                        <!-- Button for FAILED status -->\n                        <button mat-raised-button [class.active]=\"selectedTranStatus === 'FAILED'\"\n                          class=\"mat-button failed\" (click)=\"getSelectedTranStatus('FAILED')\">\n                          <mat-icon>clear</mat-icon>\n                          FAILED\n                        </button>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mx-0 mt-1\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Payable Payments</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addPayablePayment()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"DOWNLOAD REPORT\">\n                          <button mat-mini-fab color=\"primary\" [disabled]=\"downloadLoading\"\n                            [class.auth-spinner]=\"downloadLoading\" (click)=\"downloadPayablesExcelReport()\">\n                            <mat-icon class=\"col-white\">cloud_download</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"Add Transaction Details\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Add')\">\n                            <mat-icon class=\"col-white\">add_circle</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"Edit Transaction Details\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Update')\">\n                            <mat-icon class=\"col-white\">edit</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"View Transaction Details\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('View')\">\n                            <mat-icon class=\"col-white\">visibility</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"Retry\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"retryAction()\">\n                            <mat-icon class=\"col-white\">autorenew</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      \n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- <div class=\"materialTableHeader mt-2\" *ngIf=\"selection.selected.length > 0\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Accounting Actions: </h2>\n                      </li>\n\n                      <ng-container>\n                        <li *ngIf=\"selection.selected.length > 0\">\n                            <div class=\"m-l-10\" matTooltip=\"Add Accounting Details\">\n                              <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Add')\">\n                                <mat-icon class=\"col-white\">add_circle</mat-icon>\n                              </button>\n                            </div>\n                          </li>\n\n                      </ng-container>\n                    </ul>\n                  </div>\n                </div>\n              </div> -->\n\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-5\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    <span *ngIf=\"row.id\">{{ row.id }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Invoice Code Column -->\n                <ng-container matColumnDef=\"invoiceCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">Invoice Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.invoiceCode\">{{ row.invoiceCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Supplier Code Column -->\n                <ng-container matColumnDef=\"supplierCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Supplier Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.supplierCode\">{{ row.supplierCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Supplier Name Column -->\n                <ng-container matColumnDef=\"supplierName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">Supplier Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.supplierName\">{{ row.supplierName }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Payment Code Column -->\n                <ng-container matColumnDef=\"paymentCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">Payment Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.paymentCode\">{{ row.paymentCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Payment Amount Column -->\n                <ng-container matColumnDef=\"paymentAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Payment Amount\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.paymentAmount\">{{\n                      row.paymentAmount\n                      | currency : row.currency : \"symbol\" : \"1.2-2\"\n                      }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Currency Column -->\n                <ng-container matColumnDef=\"currency\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Currency\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.currency\">{{ row.currency }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Payment Date Column -->\n                <ng-container matColumnDef=\"paymentDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Payment Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.paymentDate\">{{\n                      row.paymentDate | date : \"dd/MM/yyyy\"\n                      }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Tran Code Column -->\n                <ng-container matColumnDef=\"tranCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    matTooltip=\"QuantityCancelled\">\n                    TranCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span>{{ row.tranCode || \"-\" }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Transaction Status Column -->\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    TranStatus\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'FAILED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <ng-container *ngSwitchDefault>\n                        <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                          <i class=\"fas fa-question-circle\"></i>&nbsp;\n                          {{ row.transactionStatus }}\n                        </button>\n                      </ng-container>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n                <!-- Tran Date Column -->\n                <ng-container matColumnDef=\"tranDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Tran Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span>{{\n                      row.tranDate ? (row.tranDate | date : \"short\") : \"N.A\"\n                      }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Status Column -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\"\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\" (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp; {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Action Column -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\"\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewPayablePayment(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" class=\"tbl-action-btn\"\n                      [disabled]=\"row?.status !== 'PENDING'\" (click)=\"editPayablePayment(row)\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"accent\" [disabled]=\"row?.status !== 'PENDING'\"\n                      (click)=\"deletePayablePayment(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n\n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\">\n                    No data matching the filter \"{{ input }}\"\n                  </td>\n                </tr>\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              \n              \n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n          \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, Subscription, Observable, takeUntil } from 'rxjs';\nimport { CostCentreManagementService } from 'src/app/erp-finance/data/services/cost-centre-management.service';\nimport { ExpenseManagementService } from 'src/app/erp-finance/data/services/expense-management.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { NotificationService } from 'src/app/erp-procurement/data/services/notification.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport * as XLSX from 'xlsx';\nimport { GlAccountsService } from 'src/app/erp-finance/data/services/gl-accounts.service';\nimport { AccountsPayableService } from 'src/app/erp-finance/data/services/accounts-payable.service';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { element } from 'protractor';\nimport { MaintainedCurrenciesLookUpComponent } from '../../../../../data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component';\nimport { PaymentsValidationComponent } from 'src/app/erp-finance/data/lookups/validation/payments-validation/payments-validation.component';\nimport { ApprovedSuppliersInvoicesComponent } from 'src/app/erp-finance/data/lookups/approved-suppliers-invoices/approved-suppliers-invoices.component';\n\n\n@Component({\n  selector: 'app-manage-accounts-payable',\n  templateUrl: './manage-accounts-payable.component.html',\n  styleUrls: ['./manage-accounts-payable.component.scss']\n})\nexport class ManageAccountsPayableComponent implements OnInit {\n\n  // ****************************************************************************************************************************\n  // //table columns \n  // displayedColumns: string[] =\n  //   [\n\n  //     \"accountNumber\",\n  //     \"accountName\",\n\n  //   ]\n\n\n\n  dataSourceItems = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorItems!: MatPaginator;\n  @ViewChild(MatSort) sortItems!: MatSort;\n\n\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  hideApprovals = false;\n\n  //excel upload variables\n  exceldata: [][] | undefined;\n  subscription!: Subscription;\n  keys: string[];\n  otherRows: any[];\n  dataSheet = new Subject();\n  headerRows: any;\n  fileAcess: any;\n  firstElement: any;\n  excelSelected: any;\n  fileInfos?: Observable<any>;\n  values: any;\n  finalValues: any;\n  valuesArray: any;\n  submitted = false;\n  excelDataPresent = false;\n  sumofCredits = 0;\n  excelFileAccepted = false;\n  uploadedData: any;\n\n  //excel columns\n  excelHeaderRef: any[] =\n    [\n      \"costCenterName\",\n    ];\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private payablePaymentsmanService: AccountsPayableService,\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization \n  ngOnInit(): void {\n\n\n    this.getPage();\n    this.showForm = true;\n\n\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params)\n\n      /**\n       * define the page behaviour based on received parameters\n       * first 'if' checks if the selected item has a unique id\n       * second if defines action \n       *  */\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        }\n        else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n        else if (action == \"Verify\") {\n          this.pageFunction = \"Verify\";\n        }\n\n        this.id = params[\"id\"];\n        const serializedData = params[\"additionalData\"];\n        const additionalData = JSON.parse(serializedData);\n\n        this.formData = additionalData;\n\n        this.getPage();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData)\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    }\n    else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    }\n    else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n    else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = false;\n    }\n  }\n\n\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      // id: [\"\"],\n      invoiceCode: [\"\", [Validators.required]],\n\n      supplierCode: [\"\", [Validators.required]],\n      supplierName: [\"\", [Validators.required]],\n      paymentAmount: [\"\", [Validators.required]],\n\n      currency: [\"\", [Validators.required]],\n      paymentDate: [\"\", [Validators.required, this.dateValidator]],\n\n\n    });\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      supplierCode: [this.formData.supplierCode, [Validators.required]],\n      supplierName: [this.formData.supplierName, [Validators.required]],\n      invoiceCode: [this.formData.invoiceCode, [Validators.required]],\n      paymentCode: [this.formData.paymentCode, [Validators.required]],\n      paymentAmount: [this.formData.paymentAmount, [Validators.required]],\n      currency: [this.formData.currency, [Validators.required]],\n      paymentDate: [this.formData.paymentDate, [Validators.required]],\n\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      // id: [{ value: this.formData.id, disabled: true }],\n      supplierCode: [{ value: this.formData.supplierCode, disabled: true }, [Validators.required]],\n      supplierName: [{ value: this.formData.supplierName, disabled: true }, [Validators.required]],\n      invoiceCode: [{ value: this.formData.invoiceCode, disabled: true }, [Validators.required]],\n      paymentCode: [{ value: this.formData.paymentCode, disabled: true }, [Validators.required]],\n      paymentAmount: [{ value: this.formData.paymentAmount, disabled: true }, [Validators.required]],\n      currency: [{ value: this.formData.currency, disabled: true }, [Validators.required]],\n      paymentDate: [{ value: this.formData.paymentDate, disabled: true }, [Validators.required]],\n    });\n  }\n\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel(): void {\n\n    this.router.navigate([\"/erp-finance/finance-management/allAccountsPayable\"]);\n\n  }\n\n\n  // ****************************************************************************************************************************\n\n\n  //second formula\n  //Import gls from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n  importExcel() {\n\n    this.fileInput.nativeElement.click();\n  }\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n        console.log(\"this.items: \", this.items)\n\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  //Compares the excel headers\n  compareExcelHeaders() {\n    if (this.headerRows.length != this.excelHeaderRef.length) {\n      this.notificationAPI.alertWarning(\"PLEASE CONFIRM ALL FIELDS ARE PRESENT INCHECK THE UPLOADED EXCEL FILE!\")\n\n    }\n    else if (this.headerRows.length == this.excelHeaderRef.length) {\n      if (JSON.stringify(this.headerRows) === JSON.stringify(this.excelHeaderRef)) {\n        this.excelFileAccepted = true;\n        // this.formData.patchValue({\n        //   exce: this.finalValues,\n\n        // });\n        this.notificationAPI.alertSuccess(\"THE EXCEL FILE IS VALID!\");\n        // console.log(\"this.uploadedData: \", this.uploadedData)\n      } else if (\n        JSON.stringify(this.headerRows) !== JSON.stringify(this.excelHeaderRef)\n      ) {\n        this.excelFileAccepted = false;\n        this.notificationAPI.alertWarning(\"PLEASE CHECK THE UPLOADED EXCEL FILE, AND TRY AGAIN!\");\n      }\n    }\n  }\n  //filter through the table\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSourceItems.filter = filterValue.trim().toLowerCase();\n    if (this.dataSourceItems.paginator) {\n      this.dataSourceItems.paginator.firstPage();\n    }\n  }\n\n\n\n  //populate table from excel\n  createPopulatedForm() {\n    this.mngForm = this.fb.group(\n      {\n        supplierCode: [this.exceldata, [Validators.required]],\n        supplierName: [this.exceldata, [Validators.required]],\n        // costCenterName: [this.exceldata, [Validators.required]],\n      }\n    )\n    console.log(\"this.uploadedData: \", this.uploadedData)\n    console.log(\"data::::\", this.mngForm.value);\n\n  }\n\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate() {\n    let privilege = \"Validate GL\"; //Insert the priviledge later\n\n    this.hasAccess = this.accessControlService.hasPrivilege('FinanceModule', [privilege]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        // userType: userType\n      };\n\n      const dialogRef = this.dialog.open(PaymentsValidationComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-parameters/all-GLs\"]);\n      });\n    }\n  }\n\n\n  // ****************************************************************************************************************************\n  // submit button function\n  loading: boolean = false;\n  submit() {\n    console.log(\"data::::\", this.mngForm.value);\n\n    if (this.pageFunction === \"Add\") {\n      this.payablePaymentsmanService\n        .addPayabelPayemnts(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe\n        (\n          {\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.router.navigate([\"/erp-finance/finance-management/allAccountsPayable\"]);\n              }\n              else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err);\n            },\n            complete: () => { this.loading = false },\n          }\n        ),\n        Subscription;\n    }\n    else if (this.pageFunction === \"Update\") {\n      this.payablePaymentsmanService\n        .updatePayablePaymnet(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe\n        (\n          {\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.router.navigate([\"/erp-finance/finance-management/allAccountsPayable\"]);\n              }\n              else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification\n                (\n                  \"snackbar-danger\",\n                  err.message\n                );\n            },\n            complete: () => { this.loading = false },\n          }\n        ),\n        Subscription;\n    }\n  }\n\n  // *********************************************************\n  // Approved Supplier Invoice lookup\n\n  approvedSupplierInvoiceLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Approved Supplier Invoices\",\n      selected: this.selectedItem,\n\n    }\n    console.log(\"Data\", this.mngForm.value);\n    const dialogRef = this.dialog.open(ApprovedSuppliersInvoicesComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach(element => {\n        this.mngForm.patchValue({\n          invoiceCode: element.invoiceCode,\n          supplierName: element.supplierName,\n          supplierCode: element.supplierCode,\n          paymentAmount: element.invoiceAmount,\n\n        })\n      })\n    })\n\n  }\n\n  // ****************************************************************************************************************************\n  //currecny lookup\n\n  selectedItem: any[] = [];\n\n  currencyLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n\n    }\n    const dialogRef = this.dialog.open(MaintainedCurrenciesLookUpComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach(element => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode\n        })\n      })\n    })\n\n\n  }\n\n  //Uploading a batch of items\n\n\n  private readonly templateFilename = 'PaymentTemplate.xlsx';\n\n  downloadTemplate() {\n    const link = document.createElement('a');\n    link.setAttribute('type', 'hidden');\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n\n  submitBatch() {\n\n\n    let excelUpload = this.items\n    if (this.pageFunction === \"Add\")\n      console.log(\"Excel data: \", excelUpload)\n    let submitData = [];\n\n    {\n      this.payablePaymentsmanService\n        .updatePayablePaymnet(excelUpload)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe\n        (\n          {\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n                this.router.navigate([\"/erp-finance/finance-management/allAccountsPayable\"]);\n              }\n              else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => { },\n          }\n        ),\n        Subscription;\n    }\n\n  }\n\n\n}","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Payable Payments'\" [items]=\"['Payable Payments']\"\n        [active_item]=\"'Manage Payable Payments'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix row m-t-25\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add'\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-2 col-sm-6\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By:</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-2 col-sm-6\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted On:</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\">\n                                {{\n                                formData.postedTime\n                                | date : \"MMMM dd, yyyy HH:mm\"\n                                }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-2 col-sm-6\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By:</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-2 col-sm-6\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified On:</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\">\n                                {{\n                                formData.verifiedTime\n                                | date : \"MMMM dd, yyyy HH:mm\"\n                                }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"ADD PAYABLE PAYMENT\">\n                  <div class=\"row clearfix mx-2\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                      <!-- <div class=\"card\"> -->\n                      <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>{{ pageFunction }} Payable Payment</h2>\n                        </div>\n                      </div>\n\n                      <div>\n                        <form class=\"m-4\" [formGroup]=\"mngForm\">\n                          <div class=\"row\">\n                            <!--Invoice Code   -->\n                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Invoice Code </mat-label>\n                                <input matInput formControlName=\"invoiceCode\" />\n                                <mat-icon matSuffix (click)=\"approvedSupplierInvoiceLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('invoiceCode')\n                                      .hasError('required')\n                                  \">\n                                  The Invoice Code is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!-- Supplier Code-->\n                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Supplier Code </mat-label>\n                                <input matInput formControlName=\"supplierCode\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('supplierCode')\n                                      .hasError('required')\n                                  \">\n                                  The Supplier Code is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--Supplier Name  -->\n                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Supplier Name </mat-label>\n                                <input matInput formControlName=\"supplierName\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('supplierName')\n                                      .hasError('required')\n                                  \">\n                                  The Supplier Name is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!--Payment Amount  -->\n                            <div class=\"col-xl-4Payment Amount col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Payment Amount </mat-label>\n                                <input matInput formControlName=\"paymentAmount\" />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('paymentAmount')\n                                      .hasError('required')\n                                  \">\n                                  The Payment Amount is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--Currency  -->\n                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Currency </mat-label>\n\n                                <input matInput formControlName=\"currency\" />\n                                <mat-icon matSuffix (click)=\"currencyLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm.get('currency').hasError('required')\n                                  \">\n                                  The Currency is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--Payment Date  -->\n                            <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label>\n                                  Payment Date\n                              </mat-label>\n                                <input matInput formControlName=\"paymentDate\" />\n                                <mat-error *ngIf=\"mngForm.get('paymentDate').hasError('required')\">\n                                  The Payment Date is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div> -->\n\n                            <!-- Need By Date -->\n                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label>Payment Date</mat-label>\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"paymentDate\" required />\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('paymentDate')\n                                      .hasError('required')\n                                  \">\n                                  Payment Date is required\n                                </mat-error>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('paymentDate')\n                                      .hasError('pastDate')\n                                  \">\n                                  Enter a Valid Payment Date\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                          </div>\n\n                          <!-- Action Buttons -->\n                          <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                              <div mat-dialog-action [align]=\"'end'\">\n                                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                  (click)=\"cancel()\">\n                                  Cancel\n                                </button>\n                                <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading || !mngForm.valid\"\n                                  [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                  Submit\n                                </button>\n\n                                <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                                  (click)=\"onValidate()\" mat-raised-button color=\"primary\">\n                                  <mat-icon> done_outline </mat-icon>\n                                  Verify\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                      <!-- </div> -->\n                    </div>\n                  </div>\n                </mat-tab>\n\n                <!-- <mat-tab label=\"UPLOAD MULTIPLE PAYABLE PAYMENTS\">\n                  <div [hidden]=\"hideSubmit\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4\">\n                        <div class=\"row clearfix\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                            <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                          </div>\n                          <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                            <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                              (click)=\"downloadTemplate()\">\n                              <i class=\"fa fa-download\"></i> Excel Template\n                            </button>\n                          </div>\n                        </div>\n\n                        <div class=\"mt-4\">\n                          <table class=\"table\">\n                            <thead>\n                              <tr>\n                                <th>Supplier Code</th>\n                                <th>Supplier Name</th>\n                                <th>Invoice Code</th>\n                                <th>Payment Code</th>\n                                <th>Payment Amount</th>\n                                <th>Currency</th>\n                                <th>Payment Date</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor=\"let item of items\">\n                                <td>{{ item.supplierCode }}</td>\n                                <td>{{ item.supplierName }}</td>\n                                <td>{{ item.invoiceCode }}</td>\n                                <td>{{ item.paymentCode }}</td>\n                                <td>{{ item.paymentAmount }}</td>\n                                <td>{{ item.currency }}</td>\n                                <td>{{ item.paymentDate }}</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n\n                  \n                      </div>\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"this.excelDataPresent\">\n                    <br />\n                    <div class=\"row\">\n                      <div class=\"col-md-4 col-sm-12\">\n                        <mat-form-field>\n                          <span matPrefix> </span>\n                          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search...\" #input />\n                          <button matSuffix mat-button>\n                            &nbsp;\n                            <mat-icon color=\"primary\">search</mat-icon>\n                          </button>\n                        </mat-form-field>\n                      </div>\n                    </div>\n                    <br />\n                    <div class=\"table-row\">\n                      <table class=\"y-scrollable-table\" mat-table matSort matTableExporter [dataSource]=\"dataSource\">\n                        <ng-container matColumnDef=\"index\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                            #\n                          </th>\n                          <td mat-cell *matCellDef=\"let element; let i = index\">\n                            {{ i + 1 }}\n                          </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"accountName\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                            GL Account Name\n                          </th>\n                          <td mat-cell *matCellDef=\"let row\">\n                            {{ row.accountName | uppercase }}\n                          </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"accountNumber\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                            GL Account Number.\n                          </th>\n                          <td mat-cell *matCellDef=\"let row\">\n                            {{ row.accountNumber | uppercase }}\n                          </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr (click)=\"onSelect()\" mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n                        <tr class=\"mat-row\" *matNoDataRow>\n                          <td class=\"mat-cell\" colspan=\"4\">\n                            No data matching the filter \"{{ input.value }}\"\n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                    <mat-paginator [pageSizeOptions]=\"[7, 20, 30, 40, 50, 100]\"\n                      aria-label=\"Select page\"></mat-paginator>\n                  </div>\n                  <br />\n                  <div class=\"row mx-4 mt-4\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                      <div mat-dialog-action [align]=\"'end'\">\n                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                          (click)=\"cancel()\">\n                          Cancel\n                        </button>\n                        <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" (click)=\"submitBatch()\">\n                          Submit Batch\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </mat-tab> -->\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { DatePipe } from \"@angular/common\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { AccountsPayableService } from \"src/app/erp-finance/data/services/accounts-payable.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { AccountingJournalTransactionsComponent } from \"../../../transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\n\n@Component({\n  selector: \"app-all-supplier-invoices\",\n  templateUrl: \"./all-supplier-invoices.component.html\",\n  styleUrls: [\"./all-supplier-invoices.component.scss\"],\n})\nexport class AllSupplierInvoicesComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"accountingSelect\",\n    \"id\",\n    \"supplierName\",\n    \"supplierCode\",\n    \"prCode\",\n    \"invoiceCode\",\n    \"invoiceAmount\",\n    \"invoiceDate\",\n    \"dueDate\",\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  currentDate: Date = new Date();\n  dateTomorrow: Date = new Date(\n    this.currentDate.getTime() + 1 * 24 * 60 * 60 * 1000\n  );\n  oneWeekAgo: Date = new Date(\n    this.currentDate.getTime() - 7 * 24 * 60 * 60 * 1000\n  );\n\n  currentUser: any;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private supplierInvoiceManService: AccountsPayableService,\n    private fb: FormBuilder,\n    private datepipe: DatePipe,\n    private tokenCookiService: TokenCookieService,\n    private dialog: MatDialog,\n    public accessControlService: AccessControlService,\n    private transactionService: TransactionsService\n  ) {\n    this.currentUser = this.tokenCookiService.getUser().supplierCode;\n  }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      approvalType: [\"AllInvoices\", Validators.required],\n    });\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedApprovalType: string = \"HOD\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // getData() {\n  //   this.selection = new SelectionModel<any>(true, []);\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   this.selectedApprovalType = this.Form.value.approvalType;\n\n  //   let params = {\n  //     status: this.Form.value.status,\n  //     approvalType: this.Form.value.approvalType,\n  //   };\n  //   // this.alignTableColumns();\n  //   this.supplierInvoiceManService\n  //     .getSupplierInvoicesByStatusAndApprovalType(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.data :\", res);\n  //         if (res.entity) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n\n\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => { this.isLoading = false; },\n  //     }),\n  //     Subscription;\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n  // data: any;\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n      status: this.Form.value.status,\n      approvalType: this.Form.value.approvalType,\n    };\n\n    this.supplierInvoiceManService\n      .getSupplierInvoicesByStatusAndApprovalType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.daentityta);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // ****************************************************************************************************************************\n\n  deleteTransaction(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Transaction?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Transaction!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = { id: id };\n\n        this.transactionService\n          .deleteTransactionsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n\n  // ****************************************************************************************************************************\n\n  onDeleteInvoiceDetails(id: string) {\n    const params = new HttpParams().set(\"id\", id);\n\n    console.log(\"the id to delete:\", id);\n\n    Swal.fire({\n      icon: \"warning\",\n      title: \"Are you sure you want to delete this Invoice Info?\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.supplierInvoiceManService.deleteSupplierInvoice(params).subscribe(\n          () => {\n            Swal.fire({\n              icon: \"success\",\n              title: \"Record deleted successfully!\",\n            }).then(() => {\n              this.router.navigate([\n                \"/erp-finance/finance-management/allSupplierInvoices\",\n              ]);\n              this.getData(this.currentPage, this.pageSize);\n            });\n          },\n          (error) => {\n            Swal.fire({\n              icon: \"error\",\n              title: \"Error deleting record\",\n              text: \"An error occurred while deleting the record.\",\n            });\n          }\n        );\n      }\n    });\n  }\n\n  // getData() {\n  // const params = new HttpParams().set(\"supplierCode\", this.currentUser);\n  // console.log(\"this.params :\", params);\n  // this.supplierInvoiceManService.getAllInvoicesbySupcode(params).subscribe({\n  //   next: (res) => {\n  //     console.log(\"this.data :\", res);\n  //     if (res.statusCode===200) {\n  //       this.data = res.entity;\n  //       this.isLoading = false;\n  //       this.dataSource = new MatTableDataSource<any>(this.data);\n  //       this.dataSource.paginator = this.paginator;\n  //       this.dataSource.sort = this.sort;\n\n  //       this.selection = new SelectionModel<any>(true, []);\n\n  //       console.log(\"this.data :\", this.data);\n  //     } else {\n  //       this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //     }\n  //   },\n  //   error: (err) => {\n  //     console.log(\"this.err :\", err);\n  //     this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //   },\n  //   complete: () => {},\n  // }),\n  //   Subscription;\n  // }\n\n  addSuplierInvoice() {\n    let route = \"/erp-finance/finance-management/manageSupplierInvoices\";\n    this.router.navigate([route]);\n  }\n\n  editRequisition() { }\n  toggleFavorite(row: any) {\n    row.favorite = !row.favorite;\n  }\n\n  handleNavigate(data: any) {\n    let route = \"/erp-finance/finance-management/manageSupplierInvoices\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Update\" },\n    });\n  }\n\n  // View Supplier Invoice\n  viewSupplierInvoice(data: any) {\n    // console.log(\"ID:: \", [data])\n\n    let route = \"/erp-finance/finance-management/manageSupplierInvoices\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"View\" },\n    });\n  }\n\n  // Approve Supplier Invoice\n  approveSupplierInvoice(data: any) {\n    let route = \"/erp-finance/finance-management/manageSupplierInvoices\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Verify\" },\n    });\n  }\n\n  //********************************************************************************************************************** */\n  //accounting Select\n  //********************************************************************************************************************** */\n\n  // New selection for a different MatTable\n  accountingTableSelection = new SelectionModel<any>(false, []);\n  accountingSelectItemsSelected: boolean = false;\n  accountingCheckboxSelectedRows: any;\n\n  isAllaccountingTableSelected() {\n    const numSelected = this.accountingTableSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masteraccountingTableToggle() {\n    if (this.isAllaccountingTableSelected()) {\n      this.accountingTableSelection.clear();\n      return;\n    }\n\n    this.accountingTableSelection.select(...this.dataSource.data);\n  }\n\n  checkboxaccountingTableLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllaccountingTableSelected() ? \"deselect\" : \"select\"\n        } all`;\n    }\n    return `${this.accountingTableSelection.isSelected(row) ? \"deselect\" : \"select\"\n      } row ${row.position + 1}`;\n  }\n\n  checkaccountingTableSelection() {\n    const numSelected = this.accountingTableSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    if (numSelected === numRows) {\n      this.accountingSelectItemsSelected = true;\n    } else if (numSelected !== numRows) {\n      this.accountingSelectItemsSelected = false;\n    }\n    this.selectedRows = [];\n\n    this.selectedRows = this.selection.selected;\n\n    console.log(\n      \"accountingSelectItemsSelected: \",\n      this.accountingSelectItemsSelected\n    );\n  }\n\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n    //this.accountingCheckboxSelectedRows = this.accountingTableSelection.selected;\n\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.accountingTableSelection.selected[0].tranCode\n    );\n\n    if (\n      this.transactionAction !== \"Add\" &&\n      (this.accountingTableSelection.selected[0].tranCode === null ||\n        this.accountingTableSelection.selected[0].tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    } else {\n      this.transactionLookUp();\n    }\n  }\n  // Receiving\n  // Inventory\n  // FixedAssets\n  // SupplierInvoice\n  // CustomerInvoice\n  // SupplierPayment\n  // CustomerPayment\n  // Disbursement\n  // Imprests\n  // Salaries\n  // ****************************************************************************************************************************\n  transactionType: string = \"SupplierInvoice\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\n      \"this.accountingTableSelection:: \",\n      this.accountingTableSelection.selected[0]\n    );\n\n    let addBody = {};\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n        prCode: this.accountingTableSelection.selected[0].prCode,\n        referenceCode: this.accountingTableSelection.selected[0].invoiceCode,\n        itemCode: \"\",\n        parttrans: [\n          {\n            accountNo: \"\",\n            amount: this.accountingTableSelection.selected[0].invoiceAmount,\n            partTranstype: \"Debit\",\n          },\n        ],\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.accountingTableSelection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.accountingTableSelection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n        this.updateReceivedTransactionStatus();\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  updateReceivedTransactionStatus() {\n    let params = {\n      transactionType: this.transactionResponse.transactionType,\n      tranCode: this.transactionResponse.tranCode,\n      tranDate: this.transactionResponse.tranDate,\n      referenceCode: this.transactionResponse.referenceCode,\n    };\n    this.transactionService\n      .updateAccountingTransactionDetailsStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n            this.getData(this.currentPage, this.pageSize);\n            // this.router.navigate([\n            //   \"/erp-procurement/requisitions/all-requisitions\",\n            // ]);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        //HOD: \"HOD\",\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.accountingTableSelection.selected.map(\n                (element) => {\n                  return {\n                    id: element.id,\n                    status: status,\n                    verifierRemarks: verifierRemarks,\n                  };\n                }\n              );\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              }\n              let params = { approvalType: newSelectedUserType };\n\n              this.supplierInvoiceManService\n                .validateSupplierInvoices(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData(this.currentPage, this.pageSize);\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Supplier Invoices'\" [items]=\"['Invoicing']\" [active_item]=\"'All Invoices'\">\n      </app-breadcrumb>\n    </div>\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n             \n\n              <div class=\"materialTableHeaderCustom mx-0 mt-0\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Approval Type:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- All Invoices -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'AllInvoices'\"\n                        class=\"mat-button all-invoices mb-1\" (click)=\"getApprovalTypeSelectedStatus('AllInvoices')\">\n                        <mat-icon>description</mat-icon>\n                        ALL INVOICES\n                      </button>\n\n                      <!-- HOD -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'HOD'\"\n                        class=\"mat-button hod mb-1\" (click)=\"getApprovalTypeSelectedStatus('HOD')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HOD VERIFIER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToFinanceManager()\"  mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Finance Manager'\n                        \" class=\"mat-button finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('Finance Manager')\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        FINANCE MANAGER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToSeniorFinanceManager()\" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Senior Finance Manager'\n                        \" class=\"mat-button senior-finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Senior Finance Manager'\n                          )\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        SENIOR MANAGER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToHeadOfFinanceAndStrategy()\"  mat-raised-button [class.active]=\"selectedApprovalType === 'Head of Finance And Strategy'\"\n                        class=\"mat-button head-of-finance-strategy mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Head of Finance And Strategy')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HEAD OF FINANCE\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToManagingDirectorAndCEO()\"  mat-raised-button [class.active]=\"selectedApprovalType === 'Managing Director And CEO'\"\n                        class=\"mat-button managing-director-ceo mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Managing Director And CEO')\">\n                        <mat-icon>person_pin</mat-icon>\n                        MANAGING DIRECTOR\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Status:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"materialTableHeader  mx-0 mt-1\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Supplier Invoices</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n\n                      <!-- <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addSuplierInvoice()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li> -->\n\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <ng-container *ngIf=\"accountingTableSelection.selected.length > 0\">\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">check</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                            <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">cancel</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                            <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                              class=\"mat-button-custom\">\n                              <mat-icon class=\"col-white\">undo</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n\n\n                        <!-- <li>\n                          <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Update')\">\n                              <mat-icon class=\"col-white\">edit</mat-icon>\n                            </button>\n                          </div>\n                        </li> -->\n\n                        <li>\n                          <div class=\"m-l-10\" matTooltip=\"View Accounting Details\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('View')\">\n                              <mat-icon class=\"col-white\">visibility</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ng-container>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <!-- <div class=\"materialTableHeader mt-2\" *ngIf=\"accountingTableSelection.selected.length > 0\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Accounting Actions:</h2>\n                      </li>\n\n                      <ng-container>\n                        \n\n                      </ng-container>\n                    </ul>\n                  </div>\n                </div>\n              </div> -->\n\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"accountingSelect\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masteraccountingTableToggle() : null\" [checked]=\"\n                        accountingTableSelection.hasValue() &&\n                        isAllaccountingTableSelected()\n                      \" [indeterminate]=\"\n                        accountingTableSelection.hasValue() &&\n                        !isAllaccountingTableSelected()\n                      \" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"\n                        $event ? accountingTableSelection.toggle(row) : null\n                      \" [checked]=\"accountingTableSelection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                      [aria-label]=\"checkboxaccountingTableLabel(row)\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-5\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-5\">\n                    <span *ngIf=\"row.id\">{{ row.id }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"supplierName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">Supplier Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.supplierName\">\n                      {{ row.supplierName }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"supplierCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Supplier Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.supplierCode\">\n                      {{ row.supplierCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">Pr\n                    Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.prCode\"> {{ row.prCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"invoiceCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-15\">Invoice Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15\">\n                    <span *ngIf=\"row.invoiceCode\"> {{ row.invoiceCode }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"invoiceAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Invoice Amount\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.invoiceAmount\">\n                      {{\n                      row.invoiceAmount\n                      | currency : row.currency : \"symbol\" : \"1.2-2\"\n                      }}\n                    </span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"invoiceDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Invoice Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span>\n                      {{\n                      row.postedTime\n                      ? (row.postedTime | date : \"MM/dd/yyyy\")\n                      : (row.modifiedTime | date : \"MM/dd/yyyy\")\n                      }}\n                    </span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"dueDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Due Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span *ngIf=\"row.dueDate\">\n                      {{ row.dueDate | date : \"dd/MM/yyyy\" }}</span>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"tranCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    matTooltip=\"QuantityCancelled\">\n                    TranCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranCode || \"-\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    TranStatus\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <ng-container *ngSwitchDefault> N.A </ng-container>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"tranDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Tran Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranDate ? (row.tranDate | date : \"short\") : \"N.A\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Approval Status -->\n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\"\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-10\" (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\"\n                    class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewSupplierInvoice(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" class=\"tbl-action-btn\"\n                      [disabled]=\"row?.status !== 'PENDING'\" (click)=\"handleNavigate(row)\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"approveSupplierInvoice(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button> -->\n\n                    <button mat-icon-button color=\"accent\" [disabled]=\"row?.status !== 'PENDING'\"\n                      (click)=\"onDeleteInvoiceDetails(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n               \n                \n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                </tr>\n              </mat-table>\n\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n             \n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n  FormControl,\n} from \"@angular/forms\";\nimport { DateAdapter } from \"@angular/material/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, BehaviorSubject, takeUntil, Subscription } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { AccountsPayableService } from \"src/app/erp-finance/data/services/accounts-payable.service\";\nimport { MaintainedCurrenciesLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { CustomerInvoiceValidationComponent } from \"src/app/erp-finance/data/lookups/validation/customer-invoice-validation/customer-invoice-validation.component\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SupplierInvoiceValidationComponent } from \"src/app/erp-finance/data/lookups/validation/supplier-invoice-validation/supplier-invoice-validation.component\";\nimport { MaintainedSuppliersLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-suppliers-look-up/maintained-suppliers-look-up.component\";\nimport { PurchaseRequisitionLookUpComponent } from \"src/app/erp-finance/data/lookups/purchase-requisition-look-up/purchase-requisition-look-up.component\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { RequisitionService } from \"src/app/erp-procurement/data/services/requisition.service\";\n\n\ninterface PaymentTypes {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n\n  selector: \"app-manage-supplier-invoices\",\n  templateUrl: \"./manage-supplier-invoices.component.html\",\n  styleUrls: [\"./manage-supplier-invoices.component.scss\"],\n\n})\nexport class ManageSupplierInvoicesComponent implements OnInit {\n\n\n  mngForm: FormGroup;\n  showForm: boolean = true;\n  pageFunction: string = \"Add\";\n  currentUser: any;\n  formData: any;\n  selectedItem: any[] = [];\n  minDate: Date;\n  hideApprovals = true;\n  selectedPaymentType: string;\n\n  paymentTypes: PaymentTypes[] = [\n    { value: 'FULL', viewValue: 'Full Payment' },\n    { value: 'PARTIAL', viewValue: 'Partial Payment' },\n  ];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n\n\n  constructor(\n    private fb: FormBuilder,\n    private tfb: FormBuilder,\n    private filesService: FilesService,\n    private tfilesService: FilesService,\n    private tokenStorageService: TokenStorageService,\n    private supplierInvoiceManService: AccountsPayableService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private cdRef: ChangeDetectorRef,\n    private dateAdapter: DateAdapter<Date>,\n    private accessControlService: AccessControlService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private tokenCookiService: TokenCookieService,\n    private requisitionService: RequisitionService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser();\n    this.minDate = this.dateAdapter.today();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ngOnInit(): void {\n  //   this.pageFunction = this.route.snapshot.queryParams[\"action\"] || \"Add\";\n  //   this.dataSource.paginator = this.paginator;\n  //   this.minDate = new Date();\n\n  //   const queryParams = this.route.snapshot.queryParams;\n  //   const purchaseRequisitionCode = queryParams[\"purchaseRequisitionCode\"];\n  //   const totalAmount = queryParams[\"totalAmount\"];\n\n  //   const cleanPurchaseRequisitionCode = purchaseRequisitionCode\n  //     ? purchaseRequisitionCode.replace(/\"/g, \"\")\n  //     : \"\";\n  //   const cleanTotalAmount = totalAmount ? totalAmount.replace(/\"/g, \"\") : \"\";\n\n  //   if (this.pageFunction === \"Add\") {\n  //     this.generateEmptyForm();\n  //     this.mngForm.get(\"prCode\").setValue(cleanPurchaseRequisitionCode);\n  //     this.mngForm.get(\"invoiceAmount\").setValue(cleanTotalAmount);\n  //   } else if (this.pageFunction === \"Update\") {\n  //     this.formData = JSON.parse(\n  //       this.route.snapshot.queryParams[\"additionalData\"]\n  //     );\n  //     this.initializeData();\n  //     this.generateFormWithData();\n  //   } else if (this.pageFunction === \"View\") {\n  //     this.formData = JSON.parse(\n  //       this.route.snapshot.queryParams[\"additionalData\"]\n  //     );\n  //     this.generateDisabledFormWithData();\n  //     this.initializeData();\n  //   } else if (this.pageFunction === \"Verify\") {\n  //     this.formData = JSON.parse(\n  //       this.route.snapshot.queryParams[\"additionalData\"]\n  //     );\n  //     this.generateDisabledFormWithData();\n  //     this.initializeData();\n  //     this.hideApprovals = false;\n  //   }\n  // }\n\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    // this.route.queryParams.subscribe((params) => {\n    //   //  Confirm the received params from the parent component in path\n    //   console.log(\"res\", params);\n\n    //   if (params.hasOwnProperty(\"id\")) {\n    //     const action = params[\"action\"];\n    //     if (action == \"Update\") {\n    //       this.pageFunction = \"Update\";\n    //     } else if (action == \"View\") {\n    //       this.pageFunction = \"View\";\n    //     } else if (action == \"Verify\") {\n    //       this.pageFunction = \"Verify\";\n    //     }\n\n    //     this.id = params[\"id\"];\n\n    //     this.getDataById();\n    //   }\n    // });\n\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.id) {\n          this.id = params.id;\n          this.getDataById();\n          this.pageFunction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n\n\n  id: any;\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.supplierInvoiceManService\n      .getSupplierInvoiceById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"resresresresres :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n  hideSubmit: boolean = false;\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = false;\n    }\n  }\n\n  //****************************************************************************************************************** */\n\n  currencyLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedCurrenciesLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode,\n        });\n      });\n    });\n  }\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      supplierName: [, [Validators.required]],\n      supplierCode: [, [Validators.required]],\n      prCode: [, [Validators.required]],\n      grnCode: [, [Validators.required]],\n      currency: [, [Validators.required]],\n      invoiceAmount: [, [Validators.required]],\n      paymentType: [, [Validators.required]],\n      invoiceCode: [, [Validators.required]],\n      dueDate: [null, Validators.required],\n      invoiceAttachments: [[]],\n    });\n\n    if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n    }\n\n    // if (this.pageFunction === 'View') {\n    //   this.generateDisabledFormWithData();\n    // }\n  }\n\n  generateFormWithData() {\n    console.log(\"generateFormWithData: \", this.formData);\n    this.mngForm = this.fb.group({\n      id: [this.formData.id, [Validators.required]],\n      supplierName: [this.formData.supplierName, [Validators.required]],\n      supplierCode: [this.formData.supplierCode, [Validators.required]],\n      prCode: [this.formData.prCode, [Validators.required]],\n      grnCode: [this.formData.grnCode, [Validators.required]],\n      currency: [this.formData.currency, [Validators.required]],\n      invoiceAmount: [this.formData.invoiceAmount, [Validators.required]],\n      paymentType: [this.formData.paymentType, [Validators.required]],\n      invoiceCode: [this.formData.invoiceCode, [Validators.required]],\n      dueDate: [this.formData.dueDate, Validators.required],\n      invoiceAttachments: [this.formData.invoiceAttachments],\n      status: [this.formData.status, [Validators.required]],\n    });\n  }\n\n  generateDisabledFormWithData() {\n    console.log(\"generateFormWithData: \", this.formData);\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }, [Validators.required]],\n      supplierName: [\n        { value: this.formData.supplierName, disabled: true },\n        [Validators.required],\n      ],\n      supplierCode: [\n        { value: this.formData.supplierCode, disabled: true },\n        [Validators.required],\n      ],\n      prCode: [\n        { value: this.formData.prCode, disabled: true },\n        [Validators.required],\n      ],\n      grnCode: [\n        { value: this.formData.grnCode, disabled: true },\n        [Validators.required],\n      ],\n      currency: [\n        { value: this.formData.currency, disabled: true },\n        [Validators.required],\n      ],\n      invoiceAmount: [\n        { value: this.formData.invoiceAmount, disabled: true },\n        [Validators.required],\n      ],\n      paymentType: [\n        { value: this.formData.paymentType, disabled: true }, [Validators.required]\n      ],\n      invoiceCode: [\n        { value: this.formData.invoiceCode, disabled: true },\n        [Validators.required],\n      ],\n      dueDate: [\n        { value: this.formData.dueDate, disabled: true },\n        Validators.required,\n      ],\n      invoiceAttachments: [\n        { value: this.formData.invoiceAttachments, disabled: true },\n      ],\n    });\n  }\n\n  initializeData() {\n    if (this.formData.invoiceAttachments) {\n      this.isFileDataLoading = false;\n      this.formData.invoiceAttachments.forEach((element) => {\n        const newRow = this.fb.group({\n          id: [element.id],\n          file: [element.file],\n          fileName: [element.fileName],\n          fileType: [element.fileType],\n        });\n        this.rows.push(newRow);\n      });\n      this.updateView();\n    }\n\n    console.log(\"Additional Data:\", this.formData);\n\n    this.generateFormWithData();\n    this.generateDisabledFormWithData();\n    this.showForm = true;\n    this.currentUser = this.tokenCookiService.getUser();\n    const defaultSupplierName = this.currentUser?.email || \"\";\n    const defaultSupplierCode = this.currentUser?.supplierCode || \"\";\n    console.log(\"defaultSupplierName:\", defaultSupplierName);\n    console.log(\"defaultSupplierCode:\", defaultSupplierCode);\n\n    this.mngForm.controls[\"supplierName\"].patchValue(defaultSupplierName);\n\n    this.generateFormWithData();\n    this.generateDisabledFormWithData();\n\n    this.showForm = true;\n  }\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  enterManually: boolean = true;\n  manualItemsEntry() {\n    this.enterManually = true;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1; // Track the index of the selected row\n\n  clearForm() {\n    this.editButton = false;\n    this.addButton = true;\n    this.selectedRowIndex = -1; // Reset the selected row index\n  }\n  // ************************************financial**************************************************************\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"filename\",\n    \"filetype\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n\n  combinedFiles: FormArray = this.fb.array([]);\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n  isFileDataLoading: boolean = true;\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n\n    this.paginator.length = this.rows.length;\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue();\n    const index = dataArray.indexOf(row);\n\n    if (index !== -1) {\n      dataArray.splice(index, 1);\n      this.attachementsDataSource.next(dataArray);\n      this.paginator.length = this.rows.length;\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currFilename: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n\n    this.isFileLoading.next(true);\n\n    this.filesService.toBase64(files, []).subscribe((res) => {\n      if (res && res.length > 0) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles.push(...res);\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[index].base64;\n\n        const fileName = this.selectedFiles[index].name;\n\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\");\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name);\n        console.log(\"Extension:\", extension);\n        console.log(\"selectedFiles: \", this.selectedFiles);\n        this.currFilename = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.selectedFiles[index].base64,\n          fileName: name,\n          fileType: extension,\n        });\n        this.updateView();\n\n        const filesArray = this.mngForm.get(\"invoiceAttachments\") as FormArray;\n        const fileData = {\n          id: this.rows.get(\"id\").value,\n          file: this.rows.get(\"file\").value,\n          fileName: name,\n          fileType: extension,\n        };\n        filesArray.push(this.fb.group(fileData));\n        console.log(\"File data\", fileData);\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  hasAccess: boolean;\n  onValidate(userType) {\n    // let privilege = \"Manage Expenses\";\n\n    let privilege = \"\";\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"HOD Customer Invoice Validation\";\n        // privilege = \"HOD Supplier Invoice Validation\";\n        break;\n      case \"FINANCE\":\n        privilege = \"Finance Customer Invoice Validation\";\n        // privilege = \"Finance Supplier Invoice Validation\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType,\n      };\n\n      console.log(\"this.formData: \", this.formData);\n\n      const dialogRef = this.dialog.open(\n        SupplierInvoiceValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\n          \"/erp-finance/finance-management/allSupplierInvoices\",\n        ]);\n      });\n    }\n  }\n\n  // ******************************************************************************************************\n  // Maintained supplier lookup\n  maintainedSuppliersLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"500px\";\n    dialogConfig.data = {\n      action: \"single supplier\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedSuppliersLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          supplierName: element.companyName,\n          supplierCode: element.supplierCode,\n        });\n      });\n    });\n  }\n\n  // **************************************************\n  // Purchase requisition LookUp\n  purchaseRequisitionLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"500px\";\n    dialogConfig.data = {\n      action: \"single purchaseorder\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      PurchaseRequisitionLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          prCode: element.purchaseRequisitionCode,\n          supplierCode: element.supplierCode,\n          supplierName: element.supplierName,\n          invoiceAmount: element.totalAmount\n        });\n      });\n    });\n  }\n\n  onSubmit() {\n    this.mngForm.patchValue({\n      invoiceAttachments: this.documentsForm.value.filedetails,\n    });\n\n    let upload = this.mngForm.value;\n\n    console.log(\"this is the upload object\", upload);\n    if (this.pageFunction == \"Add\") {\n      this.supplierInvoiceManService\n        .addInvoice(upload)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode === 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n               res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-management/allSupplierInvoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n             err.message\n            );\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Update\") {\n      this.supplierInvoiceManService\n        .updateInvoice(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode === 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-management/allSupplierInvoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            console.log(\"this is the error:\", err);\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-finance/finance-management/allSupplierInvoices\", ]);\n  }\n\n\n   //*************************************************************************************************************** */\n\n   downloadGrn() {\n     this.downloadLoading = true;\n \n     const params = new HttpParams().set(\"grnNo\", this.formData.grnCode);\n \n     this.requisitionService\n       .donwloadSingleGoodsReceivedNote(params)\n       .pipe(takeUntil(this.destroy$))\n       .subscribe({\n         next: (res) => {\n           console.log(\"res :\", res);\n           let url = window.URL.createObjectURL(res.data);\n \n           // if you want to open PDF in new tab\n           window.open(url);\n \n           let a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.setAttribute(\"style\", \"display: none\");\n           a.setAttribute(\"target\", \"blank\");\n           a.href = url;\n           // Append row.code to the download URL\n           a.download = `GoodsReceivedNote_${this.formData.grnCode}.pdf`;\n           a.click();\n           window.URL.revokeObjectURL(url);\n           a.remove();\n \n           this.downloadLoading = false;\n \n           this.snackbar.showNotification(\n             \"snackbar-success\",\n             \"Report generated successfully\"\n           );\n           // if (res.statusCode === 200) {\n           // } else {\n           //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n           // }\n         },\n         error: (err) => {\n           this.snackbar.showNotification(\n             \"snackbar-danger\",\n             err.message\n           );\n           this.downloadLoading = false;\n         },\n         complete: () => {\n           this.downloadLoading = false;\n         },\n       }),\n       Subscription;\n   }\n\n\n  // downloadSingleGrn(row: any) {\n  //   // Show SweetAlert to confirm download\n  //   Swal.fire({\n  //     title: 'Download Goods Received Note',\n  //     text: 'Are you sure you want to download the Goods Received Note?',\n  //     icon: 'question',\n  //     showCancelButton: true,\n  //     confirmButtonText: 'Yes',\n  //     cancelButtonText: 'No',\n  //   }).then((result: any) => {\n  //     // If user clicks 'Confirm'\n  //     if (result.isConfirmed) {\n  //       const params = new HttpParams()\n  //         .set('supplierCode', row.supplierCode)\n  //         .set('grnCode', row.grnCode)\n  //         .set('type', row.type);\n  \n  //       console.log(\"paramsparams :\", params);\n  \n  //       this.requisitionService\n  //         .donwloadSingleGoodsReceivedNote(params)\n  //         .pipe(takeUntil(this.destroy$))\n  //         .subscribe({\n  //           next: (res) => {\n  //             console.log(\"res :\", res);\n  //             let url = window.URL.createObjectURL(res.data);\n  \n  //             // Open PDF in new tab\n  //             window.open(url);\n  \n  //             // Download the PDF\n  //             let a = document.createElement(\"a\");\n  //             document.body.appendChild(a);\n  //             a.setAttribute(\"style\", \"display: none\");\n  //             a.href = url;\n  //             a.download = `GoodsReceivedNote_${row.grnCode}.pdf`;\n  //             a.click();\n  //             window.URL.revokeObjectURL(url);\n  //             a.remove();\n  \n  //             this.downloadLoading = false;\n  \n  //             this.snackbar.showNotification(\n  //               \"snackbar-success\",\n  //               res.message\n  //             );\n  //           },\n  //           error: (err) => {\n  //             this.snackbar.showNotification(\n  //               \"snackbar-danger\",\n  //               err.message\n  //             );\n  //             this.downloadLoading = false;\n  //           },\n  //           complete: () => {\n  //             this.downloadLoading = false;\n  //           },\n  //         }),\n  //         Subscription;\n  //     } else {\n  //       // User clicked 'Cancel'\n  //       this.snackbar.showNotification('snackbar-info', 'Download canceled');\n  //     }\n  //   });\n  // }\n}\n\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <app-breadcrumb\n        [title]=\"' Manage Supplier Invoice'\"\n        [items]=\"['Invoice']\"\n        [active_item]=\"'Supplier Invoice'\"\n      >\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"\">\n            <!-- <app-invoice-widgets></app-invoice-widgets> -->\n          </div>\n\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add'\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"></div>\n            </div>\n            <div class=\"header\">\n              <div class=\"row\">\n                <h2>{{ pageFunction }} Supplier Invoice</h2>\n              </div>\n            </div>\n\n            <form class=\"mx-4\" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <mat-label>Pr Code</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"prCode\"\n                      required\n                      [disabled]=\"true\"\n                      readonly\n                    />\n                    <mat-icon matSuffix (click)=\"purchaseRequisitionLookUp()\"\n                      >search</mat-icon\n                    >\n                    <mat-error\n                      *ngIf=\"mngForm.get('prCode').hasError('required')\"\n                      >prCode is required</mat-error\n                    >\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <mat-label>SupplierCode</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"supplierCode\"\n                      required\n                      [disabled]=\"true\"\n                      readonly\n                    />\n                    <mat-error\n                      *ngIf=\"mngForm.get('supplierCode').hasError('required')\"\n                      >Supplier Code is required</mat-error\n                    >\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <mat-label>Supplier Name</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"supplierName\"\n                      required\n                      [disabled]=\"true\"\n                      readonly\n                    />\n                    <!-- <mat-icon matSuffix (click)=\"maintainedSuppliersLookUp()\">search</mat-icon> -->\n                    <mat-error\n                      *ngIf=\"mngForm.get('supplierName').hasError('required')\"\n                      >Supplier Name is required</mat-error\n                    >\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <mat-label>invoiceAmount</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"invoiceAmount\"\n                      required\n                      [disabled]=\"true\"\n                    />\n                    <mat-error\n                      *ngIf=\"mngForm.get('invoiceAmount').hasError('required')\"\n                      >invoiceAmount is required</mat-error\n                    >\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <mat-label>Select Payment Type</mat-label>\n                    <mat-select\n                      [(ngModel)]=\"selectedPaymentType\"\n                      formControlName=\"paymentType\"\n                    >\n                      <mat-option value=\"PARTIAL\">Partial Payment</mat-option>\n                      <mat-option value=\"FULL\">Full Payment</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <mat-label> Currency </mat-label>\n                    <input\n                      matInput\n                      formControlName=\"currency\"\n                      required\n                      [disabled]=\"true\"\n                    />\n                    <mat-icon matSuffix (click)=\"currencyLookUp()\"\n                      >search</mat-icon\n                    >\n                    <mat-error\n                      *ngIf=\"mngForm.get('currency').hasError('required')\"\n                    >\n                      The Currency is required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Payment Type</mat-label>\n                    <mat-select formControlName=\"paymentType\">\n                      <mat-option *ngFor=\"let paymentType of paymentTypes\" [value]=\"paymentType.value\">\n                        {{paymentType.viewValue}}\n                      </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"mngForm.get('paymentType').hasError('required')\">paymentType is\n                      required</mat-error>\n                  </mat-form-field>\n                </div> -->\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <mat-label>Invoice Code</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"invoiceCode\"\n                      required\n                      [disabled]=\"true\"\n                    />\n                    <mat-error\n                      *ngIf=\"mngForm.get('invoiceCode').hasError('required')\"\n                      >invoiceCode is required</mat-error\n                    >\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <input\n                      matInput\n                      [matDatepicker]=\"dueDatePicker\"\n                      formControlName=\"dueDate\"\n                      placeholder=\"Due Date\"\n                      [min]=\"minDate\"\n                    />\n                    <mat-datepicker-toggle\n                      matSuffix\n                      [for]=\"dueDatePicker\"\n                    ></mat-datepicker-toggle>\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\n                    <mat-error\n                      *ngIf=\"mngForm.get('dueDate').hasError('required')\"\n                      >Due Date is required</mat-error\n                    >\n                    <mat-error\n                      *ngIf=\"\n                        mngForm.get('dueDate').hasError('matDatepickerMin')\n                      \"\n                      >Due Date must be later than today</mat-error\n                    >\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field\n                    class=\"example-full-width mb-1\"\n                    appearance=\"outline\"\n                  >\n                    <mat-label>grnCode</mat-label>\n                    <input\n                      matInput\n                      formControlName=\"grnCode\"\n                      required\n                      [disabled]=\"true\"\n                    />\n                    <mat-error\n                      *ngIf=\"mngForm.get('grnCode').hasError('required')\"\n                      >grnCode is required</mat-error\n                    >\n                  </mat-form-field>\n                </div>\n              </div>\n            </form>\n            <mat-tab-group>\n              <mat-tab>\n                <ng-template mat-tab-label>\n                  <mat-icon>attach_file</mat-icon> Upload Financial Attachments\n                </ng-template>\n                <div class=\"mt-3\">\n                  <form [formGroup]=\"documentsForm\">\n                    <div style=\"margin: 20px\">\n                      <div class=\"table-responsive\">\n                        <div class=\"materialTableHeader\">\n                          <div class=\"row\">\n                            <div class=\"col-8\">\n                              <ul class=\"header-buttons-left ms-0\">\n                                <li class=\"dropdown\">\n                                  <h2>Upload Documents</h2>\n                                </li>\n                                <li class=\"dropdown m-l-20\">\n                                  <label for=\"search-input\"\n                                    ><i class=\"material-icons search-icon\"\n                                      >search</i\n                                    ></label\n                                  >\n                                  <input\n                                    placeholder=\"Filter...\"\n                                    type=\"text\"\n                                    (keyup)=\"applyFilter($event)\"\n                                    #filter\n                                    class=\"browser-default search-field\"\n                                    aria-label=\"Search box\"\n                                  />\n                                </li>\n\n                                <li>\n                                  <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                    <button\n                                      mat-mini-fab\n                                      color=\"primary\"\n                                      (click)=\"addFileRow()\"\n                                    >\n                                      <mat-icon class=\"col-white\">add</mat-icon>\n                                    </button>\n                                  </div>\n                                </li>\n                              </ul>\n                            </div>\n                            <div class=\"col-4\"></div>\n                          </div>\n                        </div>\n\n                        <mat-table\n                          #table\n                          matTableExporter\n                          [dataSource]=\"attachementsDataSource\"\n                          formArrayName=\"filedetails\"\n                          matSort\n                          class=\"mat-cell\"\n                          #exporter=\"matTableExporter\"\n                        >\n                          <!-- ID Column -->\n                          <ng-container matColumnDef=\"id\">\n                            <mat-header-cell\n                              *matHeaderCellDef\n                              mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\"\n                              >Id</mat-header-cell\n                            >\n                            <mat-cell\n                              *matCellDef=\"let row; let index = index\"\n                              [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-6\"\n                            >\n                              {{ index + 1 }}\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"filename\">\n                            <mat-header-cell\n                              *matHeaderCellDef\n                              mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\"\n                              >Filename</mat-header-cell\n                            >\n                            <mat-cell\n                              *matCellDef=\"let row; let index = index\"\n                              [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\"\n                            >\n                              <mat-form-field\n                                class=\"example-full-width mt-2 mr-5\"\n                                appearance=\"fill\"\n                              >\n                                <mat-label>Filename</mat-label>\n                                <input\n                                  matInput\n                                  type=\"text\"\n                                  formControlName=\"fileName\"\n                                  placeholder=\"Filename\"\n                                  maxlength=\"50\"\n                                />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"filetype\">\n                            <mat-header-cell\n                              *matHeaderCellDef\n                              mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\"\n                              >Filetype</mat-header-cell\n                            >\n                            <mat-cell\n                              *matCellDef=\"let row; let index = index\"\n                              [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\"\n                            >\n                              <mat-form-field\n                                class=\"example-full-width mt-2 mr-5\"\n                                appearance=\"fill\"\n                              >\n                                <mat-label>Filetype</mat-label>\n                                <input\n                                  matInput\n                                  type=\"text\"\n                                  formControlName=\"fileType\"\n                                  placeholder=\"Filetype\"\n                                  maxlength=\"50\"\n                                />\n                              </mat-form-field>\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"selectFile\">\n                            <mat-header-cell\n                              *matHeaderCellDef\n                              mat-sort-header\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\"\n                              >Select File</mat-header-cell\n                            >\n                            <mat-cell\n                              *matCellDef=\"let row; let index = index\"\n                              [formGroupName]=\"index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\"\n                            >\n                              <input\n                                #file\n                                type=\"file\"\n                                [disabled]=\"\n                                  (this.isFileLoading | async) || otherCondition\n                                \"\n                                (change)=\"onSelectFile(file.files, row, index)\"\n                                [multiple]=\"'multiple'\"\n                                [hidden]=\"pageFunction === 'View'\"\n                                required\n                              />\n                            </mat-cell>\n                          </ng-container>\n\n                          <ng-container matColumnDef=\"download\">\n                            <mat-header-cell\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef\n                              >Download</mat-header-cell\n                            >\n                            <mat-cell\n                              *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                            >\n                              <button\n                                mat-icon-button\n                                color=\"primary\"\n                                (click)=\"$event.stopPropagation()\"\n                                (click)=\"downloadDocument(row)\"\n                                class=\"tbl-action-btn\"\n                              >\n                                <mat-icon aria-label=\"Download\"\n                                  >file_download</mat-icon\n                                >\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n                          <ng-container matColumnDef=\"action\">\n                            <mat-header-cell\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                              *matHeaderCellDef\n                              >Action</mat-header-cell\n                            >\n                            <mat-cell\n                              *matCellDef=\"let row; let i = index\"\n                              class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                            >\n                              <button\n                                mat-icon-button\n                                color=\"accent\"\n                                (click)=\"$event.stopPropagation()\"\n                                (click)=\"deleteCall(row)\"\n                                class=\"tbl-action-btn\"\n                              >\n                                <app-feather-icons\n                                  [icon]=\"'trash-2'\"\n                                  [class]=\"'tbl-fav-delete'\"\n                                ></app-feather-icons>\n                              </button>\n                            </mat-cell>\n                          </ng-container>\n                          <!-- Row definitions -->\n                          <mat-header-row\n                            *matHeaderRowDef=\"displayColumns\"\n                          ></mat-header-row>\n                          <mat-row\n                            *matRowDef=\"\n                              let row;\n                              let i = index;\n                              columns: displayColumns\n                            \"\n                            [style.cursor]=\"'pointer'\"\n                            matRipple\n                          ></mat-row>\n                          <mat-cell *matNoDataRow colspan=\"4\"\n                            >No data matching the filter \"{{\n                              input.value\n                            }}\"</mat-cell\n                          >\n                        </mat-table>\n\n                        <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                          <mat-progress-spinner\n                            color=\"primary\"\n                            [diameter]=\"40\"\n                            mode=\"indeterminate\"\n                          >\n                          </mat-progress-spinner>\n                        </div>\n                        <mat-paginator\n                          [pageSize]=\"10\"\n                          [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                          showFirstLastButtons\n                          aria-label=\"Select page of users\"\n                        ></mat-paginator>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </mat-tab>\n            </mat-tab-group>\n            <hr />\n            <div class=\"example-button-row\" align=\"end\">\n              <button\n                class=\"btn-space\"\n                type=\"button\"\n                mat-raised-button\n                color=\"warn\"\n                mat-button\n                (click)=\"cancel()\"\n              >\n                <mat-icon>cancel</mat-icon>\n                Cancel\n              </button>\n              <button\n                class=\"btn-space\"\n                [disabled]=\"!mngForm.valid\"\n                [hidden]=\"hideSubmit\"\n                [hidden]=\"pageFunction === 'View'\"\n                (click)=\"onSubmit()\"\n                mat-raised-button\n                color=\"primary\"\n              >\n                <mat-icon>send</mat-icon>\n                {{ pageFunction }} Invoice\n              </button>\n\n              <!-- <ng-container *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\">\n                <button class=\"btn-space\" (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                  <mat-icon>done_outline</mat-icon>\n                  HOD Approval\n                </button>\n\n                <button class=\"btn-space\" (click)=\"onValidate('FINANCE')\" mat-raised-button color=\"primary\">\n                  <mat-icon>done_outline</mat-icon>\n                  FINANCE Approval\n                </button>\n              </ng-container> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AllAccountsPayableComponent } from \"./accounts-payable/payables/all-accounts-payable/all-accounts-payable.component\";\nimport { RoutePrivilegeGuard } from \"src/app/erp-procurement/data/services/_AccessControlAuthGuard.service\";\nimport { ManageAccountsPayableComponent } from \"./accounts-payable/payables/manage-accounts-payable/manage-accounts-payable.component\";\nimport { ManageCustomersComponent } from \"../finance-parameters/pages/customer-management/manage-customers/manage-customers.component\";\nimport { AllCustomersComponent } from \"../finance-parameters/pages/customer-management/all-customers/all-customers.component\";\nimport { AllSupplierInvoicesComponent } from \"./accounts-payable/supplierInvoice/all-supplier-invoices/all-supplier-invoices.component\";\nimport { ManageSupplierInvoicesComponent } from \"./accounts-payable/supplierInvoice/manage-supplier-invoices/manage-supplier-invoices.component\";\nimport { ManageReceivablePaymentsComponent } from \"./account-receivables/receivablePayments/manage-receivable-payments/manage-receivable-payments.component\";\nimport { AllReceivablePaymentsComponent } from \"./account-receivables/receivablePayments/all-receivable-payments/all-receivable-payments.component\";\nimport { AllCustomerInvoicesComponent } from \"./account-receivables/customerInvoices/all-customer-invoices/all-customer-invoices.component\";\nimport { ManageCustomerInvoicesComponent } from \"./account-receivables/customerInvoices/manage-customer-invoices/manage-customer-invoices.component\";\n\nimport { AllImprestsComponent } from \"./imprests/all-imprests/all-imprests.component\";\nimport { ManageImprestsComponent } from \"./imprests/manage-imprests/manage-imprests.component\";\nimport { AllSystemTransactionsComponent } from \"./transactions/system-transactions/all-system-transactions/all-system-transactions.component\";\nimport { AllSalariesComponent } from \"./salaries/all-salaries/all-salaries.component\";\nimport { ManageSalariesComponent } from \"./salaries/manage-salaries/manage-salaries.component\";\nimport { ThirdPartyTransactionsComponent } from \"./transactions/system-transactions/third-party-transactions/third-party-transactions.component\";\nimport { SalaryAnalyticsComponent } from \"./salaries/salary-analytics/salary-analytics.component\";\nimport { BalanceSheetComponent } from \"../../../erp-reports/modules/preview-reports/balance-sheet/balance-sheet.component\";\nimport { ProfitLossComponent } from \"../../../erp-reports/modules/preview-reports/profit-loss/profit-loss.component\";\nimport { FsClassDataComponent } from \"../../../erp-reports/modules/preview-reports/fs-class-data/fs-class-data.component\";\nimport { CoreSynchronizationComponent } from \"./transactions/core-transactions/core-synchronization/core-synchronization.component\";\nimport { GlAccountStatementComponent } from \"../../../erp-reports/modules/preview-reports/gl-account-statement/gl-account-statement.component\";\nimport { JournalsComponent } from \"./transactions/system-transactions/journals/journals.component\";\nimport { TrialBalanceComponent } from \"../../../erp-reports/modules/preview-reports/trial-balance/trial-balance.component\";\nimport { FinanceReportsComponent } from \"./finance-reports/finance-reports.component\";\n\nconst routes: Routes = [\n\n  //Salaries\n  {\n    path: \"all-salaries\",\n    component: AllSalariesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        \"All Salaries\",\n      ],\n    },\n  },\n  {\n    path: \"manage-salaries\",\n    component: ManageSalariesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        \"Manage Salaries\",\n      ],\n    },\n  },\n\n  {\n    path: \"salary-analytics\",\n    component: SalaryAnalyticsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        \"Manage Salaries\",\n      ],\n    },\n  },\n\n  //Imprests\n  {\n    path: \"all-imprests\",\n    component: AllImprestsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        \"All Imprest\",\n      ],\n    },\n  },\n  {\n    path: \"manage-imprest\",\n    component: ManageImprestsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        \"Manage Imprest\",\n      ],\n    },\n  },\n\n  //Accounts Payable\n  {\n    path: \"allAccountsPayable\",\n    component: AllAccountsPayableComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Accounts Payable\"\n        \"All Currencies\",\n      ],\n    },\n  },\n  {\n    path: \"manageAccountsPayable\",\n    component: ManageAccountsPayableComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"Manage Accounts Payable\"\n        \"All Currencies\",\n      ],\n    },\n  },\n\n  //customer management\n  {\n    path: \"all-customers\",\n    component: AllCustomersComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Customers\"\n        \"All Currencies\",\n      ],\n    },\n  },\n  {\n    path: \"manage-customers\",\n    component: ManageCustomersComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"Manage Customers\"\n        \"All Currencies\",\n      ],\n    },\n  },\n\n  //Supplier Invoices\n  {\n    path: \"allSupplierInvoices\",\n    component: AllSupplierInvoicesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Supplier Invoices\"\n        \"All Currencies\",\n      ],\n    },\n  },\n  {\n    path: \"manageSupplierInvoices\",\n    component: ManageSupplierInvoicesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"Manage Supplier Invoices\"\n        \"All Currencies\",\n      ],\n    },\n  },\n\n  //Receivable Payments\n  {\n    path: \"all-recPayments\",\n    component: AllReceivablePaymentsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Receivable Payments\",\n        \"All Currencies\",\n      ],\n    },\n  },\n  {\n    path: \"manage-recPayments\",\n    component: ManageReceivablePaymentsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"Manage Receivable Payments\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n  //Customer Invoices\n  {\n    path: \"all-cusInvoices\",\n    component: AllCustomerInvoicesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Receivable Payments\",\n        \"All Currencies\",\n      ],\n    },\n  },\n  {\n    path: \"manage-cusInvoices\",\n    component: ManageCustomerInvoicesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"Manage Receivable Payments\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n\n\n  {\n    path: \"all-system-transactions\",\n    component: AllSystemTransactionsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n  \n\n  {\n    path: \"all-journals\",\n    component: JournalsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n  {\n    path: \"third-party-transactions\",\n    component: ThirdPartyTransactionsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Third Party Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n\n  {\n    path: \"system-reports\",\n    component: FinanceReportsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n\n\n\n\n  {\n    path: \"core-synchronization\",\n    component: CoreSynchronizationComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"FinanceModule\",\n      requiredPrivilege: [\n        // \"All Transactions\",\n        \"All Currencies\",\n      ],\n    },\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FinanceManagementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { FinanceManagementRoutingModule } from './finance-management-routing.module';\nimport { AllAccountsPayableComponent } from './accounts-payable/payables/all-accounts-payable/all-accounts-payable.component';\nimport { ManageAccountsPayableComponent } from './accounts-payable/payables/manage-accounts-payable/manage-accounts-payable.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { AllCustomersComponent } from '../finance-parameters/pages/customer-management/all-customers/all-customers.component';\nimport { ManageCustomersComponent } from '../finance-parameters/pages/customer-management/manage-customers/manage-customers.component';\nimport { AllSupplierInvoicesComponent } from './accounts-payable/supplierInvoice/all-supplier-invoices/all-supplier-invoices.component';\nimport { ManageSupplierInvoicesComponent } from './accounts-payable/supplierInvoice/manage-supplier-invoices/manage-supplier-invoices.component';\nimport { AllReceivablePaymentsComponent } from './account-receivables/receivablePayments/all-receivable-payments/all-receivable-payments.component';\nimport { ManageReceivablePaymentsComponent } from './account-receivables/receivablePayments/manage-receivable-payments/manage-receivable-payments.component';\nimport { AllCustomerInvoicesComponent } from './account-receivables/customerInvoices/all-customer-invoices/all-customer-invoices.component';\nimport { ManageCustomerInvoicesComponent } from './account-receivables/customerInvoices/manage-customer-invoices/manage-customer-invoices.component';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { AllImprestsComponent } from './imprests/all-imprests/all-imprests.component';\nimport { ManageImprestsComponent } from './imprests/manage-imprests/manage-imprests.component';\nimport { AllSystemTransactionsComponent } from './transactions/system-transactions/all-system-transactions/all-system-transactions.component';\nimport { AllSalariesComponent } from './salaries/all-salaries/all-salaries.component';\nimport { ManageSalariesComponent } from './salaries/manage-salaries/manage-salaries.component';\nimport { ThirdPartyTransactionsComponent } from './transactions/system-transactions/third-party-transactions/third-party-transactions.component';\nimport { SalaryAnalyticsComponent } from './salaries/salary-analytics/salary-analytics.component';\nimport { BalanceSheetComponent } from '../../../erp-reports/modules/preview-reports/balance-sheet/balance-sheet.component';\nimport { ProfitLossComponent } from '../../../erp-reports/modules/preview-reports/profit-loss/profit-loss.component';\nimport { FsClassDataComponent } from '../../../erp-reports/modules/preview-reports/fs-class-data/fs-class-data.component';\nimport { CoreSynchronizationComponent } from './transactions/core-transactions/core-synchronization/core-synchronization.component';\nimport { GlAccountStatementComponent } from '../../../erp-reports/modules/preview-reports/gl-account-statement/gl-account-statement.component';\nimport { JournalsComponent } from './transactions/system-transactions/journals/journals.component';\nimport { AccountingJournalTransactionsComponent } from './transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component';\nimport { TrialBalanceComponent } from '../../../erp-reports/modules/preview-reports/trial-balance/trial-balance.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { FinanceReportsComponent } from './finance-reports/finance-reports.component';\n\n\n\n@NgModule({\n  declarations: [\n    AllAccountsPayableComponent,\n    ManageAccountsPayableComponent,\n    AllCustomersComponent,\n    ManageCustomersComponent,\n    AllSupplierInvoicesComponent,\n    ManageSupplierInvoicesComponent,\n    AllReceivablePaymentsComponent,\n    ManageReceivablePaymentsComponent,\n    AllCustomerInvoicesComponent,\n    ManageCustomerInvoicesComponent,\n\n    AllImprestsComponent,\n    ManageImprestsComponent,\n    AllSystemTransactionsComponent,\n    AllSalariesComponent,\n    ManageSalariesComponent,\n    ThirdPartyTransactionsComponent,\n    SalaryAnalyticsComponent,\n        \n    CoreSynchronizationComponent,\n    JournalsComponent,\n    AccountingJournalTransactionsComponent,\n    FinanceReportsComponent,\n    \n  ],\n  imports: [\n    CommonModule,\n    FinanceManagementRoutingModule,\n\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    MatRadioModule,\n    \n    \n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n    \n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n    \n    MatFormFieldModule,\n    \n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    \n    MatSnackBarModule,\n    MatToolbarModule,\n    \n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule,\n    MatChipsModule\n\n  ], \n  providers:[DatePipe]\n})\nexport class FinanceManagementModule { }\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { ImprestManagementService } from \"src/app/erp-imprest/data/services/imprest-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { AccountingJournalTransactionsComponent } from \"../../transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\n\n@Component({\n  selector: \"app-all-imprests\",\n  templateUrl: \"./all-imprests.component.html\",\n  styleUrls: [\"./all-imprests.component.scss\"],\n})\nexport class AllImprestsComponent implements OnInit {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"requestCode\",\n    \"imprestTitle\",\n    \"description\",\n    \"amountRequested\",\n    \"submissionDate\",\n    \"imprestAccountingStatus\",\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    // \"hodVerifierStatus\",\n    // \"financeManagerVerifiedStatus\",\n    //\"actions\"\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  isLoading: boolean = true;\n  formData: any;\n\n  currentBranch: any;\n  currentUser: any;\n  currentUserCode: any;\n\n  mngForm: FormGroup;\n  Form: FormGroup;\n\n  hasAccess: boolean;\n\n  //employee Details\n  employeeName: any;\n  employeeCode: any;\n\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    public accessControlService: AccessControlService,\n    private route: ActivatedRoute,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private imprestManService: ImprestManagementService,\n    private transactionService: TransactionsService\n  ) {}\n\n  hasHodFinanceAccess: boolean;\n  ngOnInit(): void {\n    this.hasHodFinanceAccess = this.accessControlService.hasPrivilege(\n      \"FinanceModule\",\n      [\n        \"Finance Manager\",\n        \"Senior Finance Manager\",\n        \"Head of Finance And Strategy\",\n        \"Managing Director And CEO\",\n        \"Post Imprest Transactions\",\n      ]\n    );\n    // \"HOD Finance Approval\",\n\n    this.currentBranch = this.tokenCookieService.getUser().branchCode;\n    this.currentUserCode = this.tokenCookieService.getUser().empPfNo;\n    this.currentUser = this.tokenCookieService.getUser();\n\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      tranStatus: [\"PENDING\", Validators.required],\n      approvalType: [\"AllImprests\", Validators.required],\n      costCenterCode: [\n        this.tokenCookieService.getUser().costCenterCode,\n        Validators.required,\n      ],\n      employeeCode: [\n        this.tokenCookieService.getUser().empPfNo,\n        Validators.required,\n      ],\n\n      imprestType: [\"Apply\", Validators.required],\n    });\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.status) {\n          this.selectedStatus = params.status;\n\n          this.Form.patchValue({\n            status: params.status,\n          });\n          this.getData(this.currentPage, this.pageSize);\n        }\n      });\n    }\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //filter through the items\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  viewImprest(data: any) {\n    let route = \"/erp-finance/finance-management/manage-imprest\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: data.requestCode,\n        //additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n\n  editImprest(data: any) {\n    let route = \"/erp-finance/finance-management/manage-imprest\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: data.requestCode,\n        //additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n\n  // accountForImprest(data: any) {\n  //   let route = \"/erp-finance/finance-management/manage-imprest\";\n  //   this.router.navigate([route], {\n  //     queryParams: {\n  //       requestCode: data.requestCode,\n  //       //additionalData: serializedData,\n  //       action: \"Account\",\n  //     },\n  //   });\n  // }\n\n  validateImprest(data: any) {\n    let route = \"/erp-finance/finance-management/manage-imprest\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: data.id,\n        //additionalData: serializedData,\n        action: \"Validate\",\n      },\n    });\n  }\n\n  addImprest() {\n    let route = \"/erp-finance/finance-management/manage-imprest\";\n    this.router.navigate([route]);\n  }\n\n  //**********************************************************************************************************\n\n  cCentreIsSelected = false;\n  selectedCostCentres: any[] = [];\n  costCentersLookUp(type: any) {\n    if (type === \"Search\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"view Cost Centres\",\n        selected: this.selectedCostCentres,\n      };\n\n      const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        if (result && result.data.length != 0) {\n          this.Form.patchValue({\n            costCenterCode: result.data[0].costCenterCode,\n          });\n\n          this.getData(this.currentPage, this.pageSize);\n        }\n      });\n    } else if (type === \"All\") {\n      this.Form.patchValue({\n        costCenterCode: \"All\",\n      });\n\n      this.getData(this.currentPage, this.pageSize);\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedTranStatus: string = \"PENDING\";\n  getSelectSelectedTranStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedTranStatus(tranStatus: any) {\n    this.Form.patchValue({\n      tranStatus: tranStatus,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n  selectedApprovalType: string = \"AllImprests\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedImprestType: string = \"Apply\";\n  getSelectSelectedImprestType() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedImprestType(type: any) {\n    this.Form.patchValue({\n      imprestType: type,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  toggleTableFields() {\n    if (this.selectedImprestType === \"Apply\") {\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"requestCode\",\n        \"imprestTitle\",\n        \"description\",\n        \"amountRequested\",\n        \"submissionDate\",\n        \"imprestAccountingStatus\",\n        \"tranCode\",\n        \"transactionStatus\",\n        \"tranDate\",\n        \"status\",\n        // \"hodVerifierStatus\",\n        // \"financeManagerVerifiedStatus\",\n      ];\n    } else if (this.selectedImprestType === \"Accounting\") {\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"requestCode\",\n        \"refImprestCode\",\n        \"imprestTitle\",\n        \"description\",\n        \"amountRequested\",\n        \"submissionDate\",\n        //\"imprestAccountingStatus\",\n        \"tranCode\",\n        \"transactionStatus\",\n        \"tranDate\",\n        \"status\",\n        // \"hodVerifierStatus\",\n        // \"financeManagerVerifiedStatus\",\n      ];\n    } else {\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"requestCode\",\n        \"imprestTitle\",\n        \"description\",\n        \"amountRequested\",\n        \"submissionDate\",\n        \"tranCode\",\n        \"transactionStatus\",\n        \"tranDate\",\n        \"status\",\n        // \"hodVerifierStatus\",\n        // \"financeManagerVerifiedStatus\",\n      ];\n    }\n  }\n  isDataPresent: boolean = false;\n\n  // getData() {\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   this.selectedApprovalType = this.Form.value.approvalType;\n  //   this.selectedImprestType = this.Form.value.imprestType;\n  //   this.selectedTranStatus = this.Form.value.tranStatus;\n\n  //   this.toggleTableFields();\n\n  //   let params = {\n  //     status: this.Form.value.status,\n  //     tranStatus: this.Form.value.tranStatus,\n  //     approvalType: this.Form.value.approvalType,\n  //     costCenterCode: this.Form.value.costCenterCode,\n  //    // employee_code: this.Form.value.employeeCode,\n  //     imprestType: this.Form.value.imprestType,\n  //   };\n\n  //   console.log(\"this.params :\", params);\n\n  //   // this.alignTableColumns();\n  //   this.imprestManService\n  //     .getImprestByStatus(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.data :\", res);\n  //         if (res.entity) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.isLoading = false;\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.isLoading = false;\n  //         console.log(\"this.err :\", err);\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {\n  //         this.isLoading = false;\n  //         this.selection = new SelectionModel<any>(true, []);\n  //       },\n  //     }),\n  //     Subscription;\n  // }\n\n  // reqStatuses: any[] = [\n  //   { name: \"PENDING\" },\n  //   { name: \"APPROVED\" },\n  //   { name: \"RETURNED\" },\n  //   { name: \"REJECTED\" },\n  // ];\n\n  // selectedStatus: string = \"PENDING\";\n  // getSelectSelectedStatus() {\n  //   this.getData(this.currentPage, this.pageSize);\n  // }\n  // getSelectedStatus(status: any) {\n  //   this.Form.patchValue({\n  //     status: status,\n  //   });\n\n  //   this.getData(this.currentPage, this.pageSize);\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n  // data: any;\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n    this.selectedImprestType = this.Form.value.imprestType;\n    this.selectedTranStatus = this.Form.value.tranStatus;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      status: this.Form.value.status,\n      tranStatus: this.Form.value.tranStatus,\n      approvalType: this.Form.value.approvalType,\n      costCenterCode: this.Form.value.costCenterCode,\n      // employee_code: this.Form.value.employeeCode,\n      imprestType: this.Form.value.imprestType,\n      searchTerm: this.input,\n      pageNo: page,\n      pageSize: size,\n    };\n\n    this.imprestManService\n      .getImprestByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select Imprest\n\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  imprestSelected() {\n    this.atleastOneSelected = true;\n\n    console.log(\"this.selection.selected: \", this.selection.selected);\n  }\n\n  processMultiple(userType) {\n    let privilege = \"Imprest Validation\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        id: this.selection.selected.map((element) => {\n          return {\n            id: element.id,\n          };\n        }),\n        // id: this.selection.selected.map((item)=> item.id),\n        data: this.selection.selected,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(\n        ExpenseValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        let route = \"/erp-finance/finance-management/all -imprest\";\n        this.refresh();\n      });\n    }\n  }\n\n  //**********************************************************************************************************\n  deleteImprest(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Imprest Item will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Imprest Item \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.imprestManService\n          .deleteImprest(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        HODFinanceApproval: \"HOD Finance Approval\",\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        // HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        // ManagingDirectorAndCEO: \"Managing Director And CEO\",\n        PostImprestTransactions: \"Post Imprest Transactions\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        console.log(\"result.value:: \", selectedUserType);\n\n        if (selectedUserType === \"HODFinanceApproval\") {\n          privilege = \"HOD Finance Approval\";\n        } else if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        } else if (selectedUserType === \"PostImprestTransactions\") {\n          privilege = \"Post Imprest Transactions\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              this.isLoading = true;\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selection.selected.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"HODFinanceApproval\") {\n                newSelectedUserType = \"HOD Finance Approval\";\n              } else if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              } else if (selectedUserType === \"PostImprestTransactions\") {\n                newSelectedUserType = \"Post Imprest Transactions\";\n              }\n\n              let params = { approvalType: newSelectedUserType };\n\n              this.imprestManService\n                .validateImprest(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (res.statusCode == 200) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.showFailedMessages(res.entity);\n\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    console.log(\"err: \", err);\n\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData(this.currentPage, this.pageSize);\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n              this.isLoading = false;\n            }\n          });\n        }\n      }\n    });\n  }\n\n  showFailedMessages(messages: string[]): void {\n    Swal.fire({\n      title: \"Some records failed to update state\",\n      html:\n        \"<ul>\" + messages.map((msg) => `<li>${msg}</li>`).join(\"\") + \"</ul>\",\n      icon: \"error\",\n      confirmButtonText: \"OK\",\n    });\n  }\n  // ****************************************************************************************************************************\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n    this.transactionAction = action;\n\n    const selectedRecord = this.selection.selected[0];\n    const imprestType = selectedRecord?.imprestType;\n    const tranCode = selectedRecord?.tranCode;\n\n    if (!imprestType || (this.transactionAction === \"Add\" && tranCode)) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Transaction already exists for this record\"\n      );\n    } else if (\n      this.transactionAction !== \"Add\" &&\n      (!tranCode || tranCode === undefined)\n    ) {\n      if (imprestType === \"Apply\") {\n        this.transactionAction = \"Preview\";\n        this.getImprestTransactionData(selectedRecord);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"No transaction added for this record!!\"\n        );\n      }\n    } else {\n      if (imprestType === \"Apply\") {\n        this.getImprestTransactionData(selectedRecord);\n      } else {\n        let parttrans = [\n          {\n            crAcName: selectedRecord.employeeBankName,\n            crAcId: selectedRecord.employeeBankAc,\n            crAcCurrencyCode: \"KES\",\n          },\n        ];\n\n        this.transactionLookUp(parttrans);\n      }\n    }\n  }\n\n  transactionType: string = \"ImprestApplication\";\n  transactionResponse: any;\n  transactionLookUp(parttrans?: any) {\n    console.log(\"this.selection:: \", this.selection.selected[0]);\n\n    let addBody = {};\n    if (\n      this.transactionAction === \"Add\" ||\n      this.transactionAction === \"Preview\"\n    ) {\n      addBody = {\n        transactionType: this.transactionType,\n        referenceCode: this.selection.selected[0].requestCode,\n        itemCode: \"\",\n        parttrans: parttrans ? parttrans : [],\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.selection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.selection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n\n      this.selection = new SelectionModel<any>(true, []);\n      this.getData(this.currentPage, this.pageSize);\n    });\n  }\n\n  // ********************************T********************************************************************************************\n  //\n\n  generatedTransactionDetails: any;\n  getImprestTransactionData(record) {\n    this.isLoading = true;\n    let params = {\n      requestCode: record.requestCode,\n    };\n    this.imprestManService\n      .getImprestTransactions(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.generatedTransactionDetails = res.entity;\n\n            this.transactionLookUp(this.generatedTransactionDetails.parttrans);\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          console.log(\"this.err :\", err);\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.isLoading = false;\n\n          this.selection = new SelectionModel<any>(true, []);\n        },\n      }),\n      Subscription;\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Imprests'\" [items]=\"['Imprest Management']\"\n        [active_item]=\"'All Imprest Management'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n          </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeaderCustom mx-0\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Approval Type:</h2>\n                  </div>\n\n                  <div class=\"col-lg-11 col-md-11 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- All Imprests -->\n                      <button mat-raised-button [class.active]=\"selectedApprovalType === 'AllImprests'\"\n                        class=\"mat-button all-imprests mb-1\" (click)=\"getApprovalTypeSelectedStatus('AllImprests')\">\n                        <mat-icon>description</mat-icon>\n                        ALL IMPRESTS\n                      </button>\n\n                      <!-- HOD -->\n                      <button *ngIf=\"accessControlService.hasAccessToHODFinanceApproval()\" mat-raised-button\n                        [class.active]=\"selectedApprovalType === 'HOD Finance Approval'\" class=\"mat-button hod mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('HOD Finance Approval')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HOD VERIFIER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToFinanceManager()\" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Finance Manager'\n                        \" class=\"mat-button finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('Finance Manager')\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        FINANCE MANAGER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToSeniorFinanceManager()\" mat-raised-button\n                        [class.active]=\"\n                          selectedApprovalType === 'Senior Finance Manager'\n                        \" class=\"mat-button senior-finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Senior Finance Manager'\n                          )\n                        \">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        SENIOR MANAGER\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToHeadOfFinanceAndStrategy()\" mat-raised-button\n                        [class.active]=\"selectedApprovalType === 'Head of Finance And Strategy'\"\n                        class=\"mat-button head-of-finance-strategy mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Head of Finance And Strategy')\">\n                        <mat-icon>supervisor_account</mat-icon>\n                        HEAD OF FINANCE\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToManagingDirectorAndCEO()\" mat-raised-button\n                        [class.active]=\"selectedApprovalType === 'Managing Director And CEO'\"\n                        class=\"mat-button managing-director-ceo mb-1\"\n                        (click)=\"getApprovalTypeSelectedStatus('Managing Director And CEO')\">\n                        <mat-icon>person_pin</mat-icon>\n                        MANAGING DIRECTOR\n                      </button>\n\n                      <button *ngIf=\"accessControlService.hasAccessToPostImprestTransactions()\" mat-raised-button\n                        [class.active]=\"\n                          selectedApprovalType === 'Post Imprest Transactions'\n                        \" class=\"mat-button post-transactions mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Post Imprest Transactions'\n                          )\n                        \">\n                        <mat-icon>attach_money</mat-icon>\n                        Post Imprests\n                      </button>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n              <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                  <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                    <h2>Imprest Type:</h2>\n                  </div>\n                  \n                  <div class=\"col-lg-7 col-md-7 col-sm-12 col-xs-12 mb-0\">\n                    <div class=\"button-container d-flex flex-wrap mt-1\">\n                      <!-- Button for APPLY -->\n                      <button mat-raised-button [class.active]=\"selectedImprestType === 'Apply'\"\n                        class=\"mat-button apply\" (click)=\"getSelectedImprestType('Apply')\">\n                        <mat-icon>add_circle</mat-icon>\n                        ADVANCE IMPRESTS\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedImprestType === 'Accounting'\"\n                        class=\"mat-button accounting\" (click)=\"getSelectedImprestType('Accounting')\">\n                        <mat-icon>account_balance_wallet</mat-icon>\n                        ACCOUNTED IMPRESTS\n                      </button>\n\n                      <!-- Button for CLAIM -->\n                      <button mat-raised-button [class.active]=\"selectedImprestType === 'Claim'\"\n                        class=\"mat-button claim\" (click)=\"getSelectedImprestType('Claim')\">\n                        <mat-icon>monetization_on</mat-icon>\n                        CLAIM IMPRESTS\n                      </button>\n                    </div>\n                  </div>\n\n                  <div class=\"col-lg-4 col-md-4 col-sm-12 col-xs-12 mb-0\" *ngIf=\"selection.selected.length > 0\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <div class=\"button-container-unique\">\n                        <li>\n                          <span class=\"action-label\">Transaction Actions:</span>\n                        </li>\n                        <li\n                          *ngIf=\"accessControlService.hasAccessToPostImprestTransactions() && selectedImprestType !== 'Apply'\">\n                          <div class=\"m-l-10\" matTooltip=\"Add Accounting Details\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Add')\">\n                              <mat-icon class=\"col-white\">add_circle</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n\n                        <li\n                          *ngIf=\" accessControlService.hasAccessToPostImprestTransactions() && selectedImprestType !== 'Apply'\">\n                          <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Update')\">\n                              <mat-icon class=\"col-white\">edit</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n\n                        <li *ngIf=\"selection.selected.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"View Accounting Details\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('View')\">\n                              <mat-icon class=\"col-white\">visibility</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </div>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n                  <ng-container>\n                    <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                      <h2>Status:</h2>\n                    </div>\n\n                    <div class=\"col-lg-5 col-md-5 col-sm-12 col-xs-12 mb-0\">\n                      <div class=\"button-container d-flex flex-wrap mt-1\">\n                        <!-- Button for PENDING status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                          class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n\n                        <!-- Button for APPROVED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                          class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                          <mat-icon>thumb_up</mat-icon>\n                          APPROVED\n                        </button>\n\n                        <!-- Button for RETURNED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                          class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                          <mat-icon>reply</mat-icon>\n                          RETURNED\n                        </button>\n\n                        <!-- Button for REJECTED status -->\n                        <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                          class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                          <mat-icon>cancel</mat-icon>\n                          REJECTED\n                        </button>\n                      </div>\n                    </div>\n                  </ng-container>\n                  <ng-container>\n                    <div class=\"col-lg-1 col-md-1 col-sm-12 col-xs-12 mb-0\">\n                      <h2>Trans Status:</h2>\n                    </div>\n\n                    <div class=\"col-lg-5 col-md-5 col-sm-12 col-xs-12 mb-0\">\n                      <div class=\"button-container d-flex flex-wrap mt-1\">\n                        <!-- Button for PENDING status -->\n                        <button mat-raised-button [class.active]=\"selectedTranStatus === 'PENDING'\"\n                          class=\"mat-button pending\" (click)=\"getSelectedTranStatus('PENDING')\">\n                          <mat-icon>pending</mat-icon>\n                          PENDING\n                        </button>\n\n                        <!-- Button for SUCCESS status -->\n                        <button mat-raised-button [class.active]=\"selectedTranStatus === 'SUCCESS'\"\n                          class=\"mat-button success\" (click)=\"getSelectedTranStatus('SUCCESS')\">\n                          <mat-icon>done</mat-icon>\n                          SUCCESS\n                        </button>\n\n                        <!-- Button for FAILED status -->\n                        <button mat-raised-button [class.active]=\"selectedTranStatus === 'FAILED'\"\n                          class=\"mat-button failed\" (click)=\"getSelectedTranStatus('FAILED')\">\n                          <mat-icon>clear</mat-icon>\n                          FAILED\n                        </button>\n                      </div>\n                    </div>\n                  </ng-container>\n\n\n                </div>\n              </div>\n\n              <!-- <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                <div class=\"row mx-2\">\n\n                </div>\n              </div> -->\n              <div class=\"materialTableHeader mt-1\">\n                <div class=\"row\">\n                  <div class=\"col-6\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Imprests</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <!-- <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addImprest()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li> -->\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"selection.selected.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div class=\"col-lg-2 col-md-2 col-sm-12 col-xs-12 mb-0\">\n                    <form [formGroup]=\"Form\">\n                      <div class=\"row\">\n                        <div class=\"col-9\">\n                          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                            <mat-label>Cost Center Code</mat-label>\n\n                            <input matInput formControlName=\"costCenterCode\" readonly />\n\n                            <mat-error *ngIf=\"\n                                Form.get('costCenterCode').hasError('required')\n                              \">\n                              Please Enter Cost Center Code\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                        <div class=\"col-3 imp\" [hidden]=\"!hasHodFinanceAccess\">\n                          <div class=\"m-l-10\" matTooltip=\"Search Cost Center\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"costCentersLookUp('Search')\">\n                              <mat-icon class=\"col-white\">search</mat-icon>\n                            </button>\n                          </div>\n                          <div class=\"m-l-10\" matTooltip=\"From All Cost Centers\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"costCentersLookUp('All')\">\n                              <mat-icon class=\"col-white\">all_inclusive</mat-icon>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'Suppliers-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Table Definition -->\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-3'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-3'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                      [aria-label]=\"checkboxLabel(row)\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-3\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let index = index\" class=\"column-nowrap psl-3 tbl-col-width-per-3\">\n                    {{ row.id }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Request Code -->\n                <ng-container matColumnDef=\"requestCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Request Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.requestCode }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Request Code -->\n                <ng-container matColumnDef=\"refImprestCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Account For\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.refImprestCode }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- imprestTitle -->\n                <ng-container matColumnDef=\"imprestTitle\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Imprest Title\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    <span class=\"mat-table-emboss\">\n                      {{ row.imprestTitle }}\n                    </span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- description   -->\n                <ng-container matColumnDef=\"description\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    Description\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    {{ row.description }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- amountRequested  -->\n                <ng-container matColumnDef=\"amountRequested\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                    Amount Requested\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                    <ng-container *ngIf=\"row.currency; else noCurrency\">\n                      {{\n                      row.amountRequested\n                      | currency : row.currency : \"symbol\" : \"1.2-2\"\n                      }}\n                    </ng-container>\n                    <ng-template #noCurrency>\n                      {{\n                      row.amountRequested\n                      | currency : \"Ksh\" : \"symbol\" : \"1.2-2\"\n                      }}\n                    </ng-template>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"imprestAccountingStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Accounting Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.imprestAccountingStatus\">\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PARTIAL'\" class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                        <i class=\"fas fa-adjust\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'FULL_ACCOUNTING'\" class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-double\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'NON_ACCOUNTING'\" class=\"badge badge-solid-gray btn btn btn-sm m-1\">\n                        <i class=\"fas fa-ban\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.imprestAccountingStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Hod Verifier Status -->\n                <ng-container matColumnDef=\"hodVerifierStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    HOD Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.hodVerifierStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.hodVerifierStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Finance Manager Verified Status -->\n                <ng-container matColumnDef=\"financeManagerVerifiedStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Finance Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.financeManagerVerifiedStatus\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.financeManagerVerifiedStatus }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- submissionDate -->\n                <ng-container matColumnDef=\"submissionDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Submission Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.submissionDate | date : \"short\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"tranCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    TranCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranCode || \"-\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"transactionStatus\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    TranStatus\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    <ng-container [ngSwitch]=\"row.transactionStatus\">\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <button *ngSwitchCase=\"'FAILED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.transactionStatus }}\n                      </button>\n\n                      <ng-container *ngSwitchDefault>\n                        <button class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                          <i class=\"fas fa-question-circle\"></i>&nbsp;\n                          {{ row.transactionStatus }}\n                        </button>\n                      </ng-container>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"tranDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Tran Date\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{ row.tranDate ? (row.tranDate | date : \"short\") : \"N.A\" }}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editImprest(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"accountForImprest(row)\" class=\"tbl-action-btn\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewImprest(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"warn\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteImprest(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"noData\">\n                  <mat-footer-cell *matFooterCellDef [colspan]=\"displayedColumns.length\">\n                    No data matching the filter \"{{ input }}\"\n                  </mat-footer-cell>\n                </ng-container> -->\n\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewImprest(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple></mat-row>\n\n                <tr *matNoDataRow>\n                  <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                </tr>\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              \n              \n              <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n\n          \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- 51 -->","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, AbstractControl, FormArray } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, takeUntil, BehaviorSubject, Subscription } from 'rxjs';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { MaintainedCurrenciesLookUpComponent } from 'src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component';\nimport { ImprestManagementService } from 'src/app/erp-imprest/data/services/imprest-management.service';\nimport { ImprestValidationComponent } from 'src/app/erp-imprest/data/validation/imprest-validation/imprest-validation.component';\nimport { BrancstoresManagementService } from 'src/app/erp-inventory/data/services/brancstores-management.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { FilesService, SelectedFiles } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-imprests',\n  templateUrl: './manage-imprests.component.html',\n  styleUrls: ['./manage-imprests.component.scss']\n})\nexport class ManageImprestsComponent implements OnInit {\n\n  showForm = false;\n  isLoading = true;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n  currentUserCode: any;\n  formData: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  requestCode: any;\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  imprestTypes: any[] = [{ name: \"Apply\" }, { name: \"Claim\" }];\n\n\n  constructor(\n    private fb: FormBuilder,\n    private filesService: FilesService,\n    private tokenStorageService: TokenStorageService,\n    private branchStoreManService: BrancstoresManagementService,\n    private imprestManService: ImprestManagementService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n    this.currentUserCode = this.tokenStorageService.getUser().empPfNo;\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.getPage();\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.requestCode) {\n          this.requestCode = params.requestCode;\n          this.getDataById();\n          this.pageAction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n\n    this.route.queryParams.subscribe((params) => {\n      console.log(\"res\", params);\n      if (params.hasOwnProperty(\"requestCode\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action == \"Transfer\") {\n          this.pageFunction = \"Transfer\";\n        } else if (action == \"Issue\") {\n          this.pageFunction = \"Issue\";\n        }\n\n        this.requestCode = params[\"requestCode\"];\n        //const serializedData = params[\"additionalData\"];\n        //const additionalData = JSON.parse(serializedData);\n\n       // this.formData = additionalData;\n\n        console.log(\"ID:\", this.requestCode);\n\n        this.getPage();\n      }\n    });\n  }\n\n  pageAction = \"Add\";\n\n  getDataById() {\n    const params = new HttpParams().set(\"requestCode\", this.requestCode);\n    this.imprestManService\n      .getImprestByRequestCode(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          \n          if (res.entity) {\n            //in thsi res, I cant access anything beyond res.entity. Why???\n            this.formData = res.entity;\n            console.log(\"this.formData: \",  this.formData)\n            if (this.pageAction === \"Update\") {\n              this.pageFunction = \"Update\";\n            } else if (this.pageAction === \"View\") {\n              this.pageFunction = \"View\";\n              this.disableActions = true;\n              this.showForm = false;\n            } else if (this.pageAction === \"Validate\") {\n              this.pageFunction = \"Validate\";\n              this.disableActions = true;\n              this.approvalVisible = true;\n              this.showForm = false;\n            }\n\n            // if (this.formData.rfpDocumentations.length > 0) {\n            //   this.isFileRFPAttachmentsDataLoading = false;\n            //   this.formData.rfpDocumentations.forEach((element) => {\n            //     const newRow = this.fb.group({\n            //       file: [element.file],\n            //       filename: [element.filename],\n            //       filetype: [element.filetype],\n            //     });\n            //     this.rowsRFPAttachments.push(newRow);\n            //   });\n      \n            //   this.updateRFPAttachmentsView();\n            // }\n\n            if (this.formData.imprestAttachments.length > 0) {\n              this.isFileDataLoading = false;\n              console.log(\"this.formData.imprestAttachments: \", this.formData.imprestAttachments)\n              this.formData.imprestAttachments.forEach((element) => {\n                const newRow = this.fb.group({\n                  file: [element.file],\n                  fileName: [element.fileName],\n                  fileType: [element.fileType],\n                });\n                this.rows.push(newRow);\n              });\n              this.updateView();\n            }\n            this.showForm = true;\n            this.getPage();\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n           err.message\n          );\n        },\n        complete: () => {},\n      });\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateDisabledFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      imprestType: [\"\"],\n      imprestTitle: [\"\", [Validators.required]],\n      description: [\"\", [Validators.required, Validators.maxLength(300)]],\n      amountRequested: [\n        \"\",\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      currency: [\"KES\"],\n      costcentercode: [this.currentUser.costCenterCode, [Validators.required]],\n      expenseAc: [\"\"], \n      expenseCode: [\"\"], \n      accountByDate: [\"\"], \n      employeeName: this.currentUser.username,\n      employeeCode: this.currentUserCode,\n      balance: [\"\"],\n      imprestAccountingStatus: [\"\"],\n      imprestAttachments: [[]],\n    });\n\n    // Subscribe to changes in imprestType control\n    this.subscribeToChangesInImprestType();\n  }\n\n  generateFormWithData() {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      imprestType: [this.formData.imprestType],\n      requestCode: [this.formData.requestCode],\n      imprestTitle: [this.formData.imprestTitle, [Validators.required]],\n      description: [\n        this.formData.description,\n        [Validators.required, Validators.maxLength(300)],\n      ],\n      amountRequested: [\n        this.formData.amountRequested,\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      currency: [this.formData.currency],\n\n      costcentercode: [this.formData.costcentercode, [Validators.required]],\n\n      expenseAc: [this.formData.expenseAc, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n      accountByDate: [this.formData.accountByDate, [Validators.required]],\n\n      imprestAttachments: [this.formData.imprestAttachments],\n\n      employeeCode: [this.formData.employeeCode],\n      employeeName: [this.formData.employeeName],\n\n      balance: [this.formData.balance],\n      imprestAccountingStatus: [this.formData.imprestAccountingStatus],\n    });\n    this.subscribeToChangesInImprestType();\n  }\n\n  generateDisabledFormWithData() {\n    this.mngForm = this.fb.group({\n      imprestType: [this.formData.imprestType],\n      imprestTitle: [this.formData.imprestTitle, [Validators.required]],\n      description: [this.formData.description, [Validators.required]],\n      amountRequested: [\n        this.formData.amountRequested,\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      currency: [this.formData.currency, [Validators.required]],\n\n      costcentercode: [this.formData.costcentercode, [Validators.required]],\n\n      expenseAc: [this.formData.expenseAc, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n      accountByDate: [this.formData.accountByDate, [Validators.required]],\n\n      imprestAttachments: [this.formData.imprestAttachments],\n\n      employeeCode: [this.formData.employeeCode],\n      employeeName: [this.formData.employeeName],\n    });\n  }\n\n  imprestTypeChange(event: any) {\n    console.log(\"Event: \", event.value);\n\n    if (event.value === \"Apply\") {\n      this.mngForm.patchValue({\n        imprestTitle: \"Advance Request\",\n        expenseCode: \"EXP5\",\n        expenseAc: \"106201\",\n      });\n      this.hideNonAdvanceFields = false;\n    } else if (event.value === \"Claim\") {\n      this.mngForm.patchValue({\n        imprestTitle: \"Expense Request\",\n        expenseCode: \"\",\n        expenseAc: \"\",\n      });\n      this.hideNonAdvanceFields = true;\n    }\n  }\n\n  hideNonAdvanceFields: boolean = false;\n  subscribeToChangesInImprestType() {\n    this.mngForm.get(\"imprestType\").valueChanges.subscribe((imprestType) => {\n      if (imprestType === \"Claim\") {\n        // Set expenseAc, expenseCode, and accountByDate as required\n        this.mngForm.get(\"expenseAc\").setValidators([Validators.required]);\n        this.mngForm.get(\"expenseCode\").setValidators([Validators.required]);\n        this.mngForm.get(\"accountByDate\").setValidators([Validators.required]);\n        this.hideNonAdvanceFields = true;\n      } else {\n        // Clear validators if imprestType is not 'Claim'\n        this.mngForm.get(\"expenseAc\").clearValidators();\n        this.mngForm.get(\"expenseCode\").clearValidators();\n        this.mngForm.get(\"accountByDate\").clearValidators();\n      }\n      // Update the validity of the form controls after changing validators\n      this.mngForm.get(\"expenseAc\").updateValueAndValidity();\n      this.mngForm.get(\"expenseCode\").updateValueAndValidity();\n      this.mngForm.get(\"accountByDate\").updateValueAndValidity();\n\n      this.hideNonAdvanceFields = false;\n    });\n  }\n  //************************************************************************************************************************************ */\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n  //*************************************************************************************************************************************** */\n\n  //*************************************************************************************************************************************** */\n  //Currencies LookUP\n  selectedItem: any;\n  _currencyLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedCurrenciesLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode,\n        });\n      });\n    });\n  }\n\n  // **************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"fileName\",\n    \"fileType\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n    this.mngForm.patchValue({\n      imprestAttachments: this.documentsForm.value.filedetails,\n    });\n  }\n\n  // deleteCall(index){\n  //   this.dataSource.splice(index, 1);\n  // }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currfileName: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currfileName = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          fileName: this.currfileName,\n          fileType: this.currType,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  // **************************************************************************************************\n  //Showing the submit button\n\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction == \"Add\") {\n      this.imprestManService\n        .addImprest(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n               res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-management/all-imprests\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Update\") {\n      this.imprestManService\n        .updateImprest(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-finance/finance-management/all-imprests\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-finance/finance-management/all-imprests\"]);\n  }\n\n  // **********************************************************************************************\n  //validate branch requisition\n\n  hasAccess: boolean;\n\n  onValidate(userType) {\n    let privilege = \"\";\n\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"Imprest Validation\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"ImprestModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"650px\";\n      dialogConfig.data = {\n        data: this.formData,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(\n        ImprestValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-management/all-imprests\"]);\n      });\n    }\n  }\n\n  // *********************************************************************************************\n\n  // **********************************************************************************************\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Imprest'\" [items]=\"['Imprest']\" [active_item]=\"'Manage Imprest'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <!-- HOD Verification -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod\">\n                                    {{ formData.hodVerifierStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod-approved\">\n                                    {{ formData.hodVerifierBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-1\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.hodVerifierRemarks\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Finance Manager Verification -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance\">\n                                    {{ formData.financeManagerVerifiedStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance-approved\">\n                                    {{ formData.financeManagerVerifiedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-1\">\n                                <div class=\"chat-with remarks\">\n                                  <strong> Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.financeManagerVerifiedRemarks\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Head of Finance and Strategy Verification -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">\n                                  Head Finance\n                                </div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement\">\n                                    {{\n                                    formData.headFinanceAndStrategyVerifiedStatus\n                                    }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement-approved\">\n                                    {{\n                                    formData.headFinanceAndStrategyVerifiedBy\n                                    }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-1\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.headFinanceAndStrategyVerifiedRemarks\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Senior Finance Manager Verification -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">\n                                  Senior Manager\n                                </div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement\">\n                                    {{\n                                    formData.seniorFinanceManagerVerifiedStatus\n                                    }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement-approved\">\n                                    {{\n                                    formData.seniorFinanceManagerVerifiedBy\n                                    }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-1\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.seniorFinanceManagerVerifiedRemarks\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Managing Director and CEO Verification -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">\n                                  Managing Director\n                                </div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement\">\n                                    {{\n                                    formData.managingDirectorAndCEOVerifiedStatus\n                                    }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement-approved\">\n                                    {{\n                                    formData.managingDirectorAndCEOVerifiedBy\n                                    }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-1\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.managingDirectorAndCEOVerifiedRemarks\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Post Imprest Verification -->\n                        <div class=\"col-4\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">\n                                  Post Imprest\n                                </div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement\">\n                                    {{ formData.postImprestVerifiedStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Verified By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-procurement-approved\">\n                                    {{ formData.postImprestVerifiedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-1\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.postImprestVerifiedRemarks\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"\">\n                  <div class=\"header\">\n                    <div class=\"row\">\n                      <h2>{{ pageFunction }} Imprest</h2>\n                    </div>\n                  </div>\n                  <div class=\"row clearfix mx-2 mt-0\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                      <div>\n                        <!-- <div *ngIf=\"test\">\n                       \n                      </div> -->\n\n                        <form [formGroup]=\"mngForm\">\n                          <div class=\"row\">\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Imprest Type</mat-label>\n                                <mat-select formControlName=\"imprestType\" (selectionChange)=\"imprestTypeChange($event)\">\n                                  <mat-option *ngFor=\"let imprestType of imprestTypes\" [value]=\"imprestType.name\">{{\n                                    imprestType.name }}\n                                  </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('imprestType')\n                                      .hasError('required')\n                                  \">\n                                  Imprest Type is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--  Advance Type-->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Imprest Title </mat-label>\n                                <input matInput formControlName=\"imprestTitle\" readonly />\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('imprestTitle')\n                                      .hasError('required')\n                                  \">\n                                  Imprest Title is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--Currency -->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Currency </mat-label>\n                                <input matInput formControlName=\"currency\" />\n                                <mat-icon matSuffix (click)=\"_currencyLookup()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm.get('currency').hasError('required')\n                                  \">\n                                  Currency is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- amountRequested  -->\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Amount Requested </mat-label>\n                                <input matInput formControlName=\"amountRequested\" mask=\"separator\"\n                                  thousandSeparator=\",\" />\n                                <mat-icon matSuffix>attach_money</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('amountRequested')\n                                      .hasError('required')\n                                  \">\n                                  Amount Requested is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\" *ngIf=\"pageFunction === 'Account'\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Imprest Balance </mat-label>\n                                <input matInput formControlName=\"balance\" mask=\"separator\" thousandSeparator=\",\" />\n                                <mat-icon matSuffix>attach_money</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm.get('balance').hasError('required')\n                                  \">\n                                  Balance is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- accountByDate -->\n                            <div [hidden]=\"hideNonAdvanceFields\" class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label>Account By Date </mat-label>\n                                <input matInput [matDatepicker]=\"picker\" formControlName=\"accountByDate\" required />\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('accountByDate')\n                                      .hasError('required')\n                                  \">\n                                  Account By Date is required\n                                </mat-error>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('accountByDate')\n                                      .hasError('pastDate') &&\n                                    !mngForm\n                                      .get('accountByDate')\n                                      .hasError('required')\n                                  \">\n                                  Enter a Valid Account By Date\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>CostCenterCode</mat-label>\n                                <input matInput formControlName=\"costcentercode\" readonly />\n                                <mat-icon matSuffix (click)=\"costCenterLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('costcentercode')\n                                      .hasError('required')\n                                  \">CostCenterCode is required</mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- expenseCode -->\n                            <div [hidden]=\"hideNonAdvanceFields\" class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Expense Code </mat-label>\n                                <input matInput formControlName=\"expenseCode\" />\n                                <mat-icon matSuffix (click)=\"expenseLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('expenseCode')\n                                      .hasError('required')\n                                  \">\n                                  Expense Code is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- expenseAc -->\n                            <div [hidden]=\"hideNonAdvanceFields\" class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Expense Account </mat-label>\n                                <input matInput formControlName=\"expenseAc\" />\n                                <mat-icon matSuffix (click)=\"glsLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('expenseAc')\n                                      .hasError('required')\n                                  \">\n                                  Expense Account is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-0\" *ngIf=\"pageFunction === 'Account'\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label>\n                                  Imprest Accounting Status\n                                </mat-label>\n                                <mat-select formControlName=\"imprestAccountingStatus\">\n                                  <mat-option *ngFor=\"\n                                      let imprestAccountingStatus of imprestAccountingStatuses\n                                    \" [value]=\"imprestAccountingStatus.name\">{{ imprestAccountingStatus.name }}\n                                  </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('imprestAccountingStatus')\n                                      .hasError('required')\n                                  \">\n                                  Imprest Accounting Status is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!--  Description -->\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-0\">\n                              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                                <mat-label> Description </mat-label>\n                                <textarea matInput formControlName=\"description\"></textarea>\n\n                                <mat-error *ngIf=\"\n                                    mngForm\n                                      .get('description')\n                                      .hasError('required')\n                                  \">\n                                  Description is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                  <ng-template mat-tab-label> Imprest Details </ng-template>\n                  <div class=\"mt-3\">\n                    <!-- Content for the second tab -->\n                    <ng-container *ngIf=\"!hideBgtButtons\">\n                      <form [formGroup]=\"documentsForm\">\n                        <!-- <form [formGroup]=\"form\"> -->\n\n                        <div style=\"margin: 20px\">\n                          <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                              <div class=\"row\">\n                                <div class=\"col-8\">\n                                  <ul class=\"header-buttons-left ms-0\">\n                                    <li class=\"dropdown\">\n                                      <h2>Upload Documents</h2>\n                                    </li>\n                                    <li class=\"dropdown m-l-20\">\n                                      <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                      <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                        class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                    </li>\n\n                                    <li>\n                                      <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                        <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                          <mat-icon class=\"col-white\">add</mat-icon>\n                                        </button>\n                                      </div>\n                                    </li>\n                                  </ul>\n                                </div>\n                                <div class=\"col-4\"></div>\n                              </div>\n                            </div>\n\n                            <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                            <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                              formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n                              <!-- ID Column -->\n                              <ng-container matColumnDef=\"id\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                  {{ index + 1 }}\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"fileName\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileName</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                  <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                    <mat-label>fileName</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"fileName\" placeholder=\"fileName\"\n                                      maxlength=\"50\" />\n                                  </mat-form-field>\n                                </mat-cell>\n                              </ng-container>\n                              <ng-container matColumnDef=\"fileType\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileType</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                  <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                    <mat-label>fileType</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"fileType\" placeholder=\"fileType\"\n                                      maxlength=\"50\" />\n                                  </mat-form-field>\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"selectFile\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                                  File</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                                  <input #file type=\"file\" (change)=\"\n                                      onSelectFile(file.files, row, index)\n                                    \" [multiple]=\"'multiple'\" />\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"download\">\n                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                  *matHeaderCellDef>Download</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                  <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                    <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                                  </button>\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"action\">\n                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                  *matHeaderCellDef>Action</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                  <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                    (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                    <app-feather-icons [icon]=\"'trash-2'\"\n                                      [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                  </button>\n                                </mat-cell>\n                              </ng-container>\n\n                              <!-- Row definitions -->\n                              <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                              <mat-row *matRowDef=\"\n                                  let row;\n                                  let i = index;\n                                  columns: displayColumns\n                                \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                              <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                                input.value\n                                }}\"</mat-cell>\n                            </mat-table>\n\n                            <!-- Loading spinner -->\n                            <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                              </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[\n                                2, 5, 10, 20, 30, 40, 50, 100\n                              ]\" aria-label=\"Select page of users\"></mat-paginator>\n                          </div>\n                        </div>\n\n                        <div class=\"row mx-4 mt-4\">\n                          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-12\">\n                            <div mat-dialog-action [align]=\"'end'\" class=\"mt-2\">\n                              <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                (click)=\"cancel()\">\n                                Cancel\n                              </button>\n                              <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                                [class.auth-spinner]=\"posting\" [disabled]=\"!mngForm.valid\" (click)=\"onSubmit()\">\n                                Submit Imprest\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </ng-container>\n                  </div>\n\n                  <!-- Second Tab -->\n                </mat-tab>\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { SalariesService } from \"src/app/erp-finance/data/services/salaries.service\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { AccountingJournalTransactionsComponent } from \"../../transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\n\n@Component({\n  selector: \"app-all-salaries\",\n  templateUrl: \"./all-salaries.component.html\",\n  styleUrls: [\"./all-salaries.component.scss\"],\n})\nexport class AllSalariesComponent implements OnInit {\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n\n    \"payrollCircle\",\n    \"period\",\n    \"totalGrosspay\",\n\n    \"tranCode\",\n    \"transactionStatus\",\n    \"tranDate\",\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(false, []);\n  data: any;\n  isLoading: boolean = true;\n  formData: any;\n\n  currentBranch: any;\n  currentUser: any;\n  currentUserCode: any;\n\n  mngForm: FormGroup;\n  Form: FormGroup;\n\n  hasAccess: boolean;\n\n  //employee Details\n  employeeName: any;\n  employeeCode: any;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    public accessControlService: AccessControlService,\n    private route: ActivatedRoute,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private salariesService: SalariesService,\n    private transactionService: TransactionsService\n  ) { }\n\n  ngOnInit(): void {\n    this.currentBranch = this.tokenCookieService.getUser().branchCode;\n    this.currentUserCode = this.tokenCookieService.getUser().empPfNo;\n\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      approvalType: [\"AllSalaries\", Validators.required],\n    });\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.status) {\n          this.selectedStatus = params.status;\n\n          this.Form.patchValue({\n            status: params.status,\n          });\n          this.getData(this.currentPage, this.pageSize);\n        }\n      });\n    }\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //filter through the items\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    \n      this.getData(this.currentPage, this.pageSize);\n    \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  viewSalary(data: any) {\n    let route = \"/erp-finance/finance-management/manage-salaries\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"View\",\n      },\n    });\n  }\n\n  editSalary(data: any) {\n    let route = \"/erp-finance/finance-management/manage-salaries\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.requestCode,\n        action: \"Update\",\n      },\n    });\n  }\n\n  validateSalary(data: any) {\n    let route = \"/erp-finance/finance-management/manage-salaries\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: data.id,\n        action: \"Validate\",\n      },\n    });\n  }\n\n  addSalary() {\n    let route = \"/erp-finance/finance-management/manage-salaries\";\n    this.router.navigate([route]);\n  }\n\n  //**********************************************************************************************************\n\n  // ****************************************************************************************************************************\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedApprovalType: string = \"AllSalaries\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    if (approvalType === \"Post Salary Transactions\") {\n      this.Form.patchValue({\n        status: \"PENDING\",\n      });\n    }\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // getData() {\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   this.selectedApprovalType = this.Form.value.approvalType;\n\n  //   let params = {\n  //     status: this.Form.value.status,\n  //     approvalType: this.Form.value.approvalType,\n  //   };\n  //   // this.alignTableColumns();\n  //   this.salariesService\n  //     .getSalariesByStatus(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.data :\", res);\n  //         if (res.entity) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {},\n  //     }),\n  //     Subscription;\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n      status: this.Form.value.status,\n    };\n\n    this.salariesService\n      .getSalariesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // ****************************************************************************************************************************\n\n  //**********************************************************************************************************\n\n  //Select salary\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  salarySelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  processMultiple(userType) {\n    let privilege = \"salary Validation\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"salaryModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        id: this.selectedRows.map((element) => {\n          return {\n            id: element.id,\n          };\n        }),\n        // id: this.selectedRows.map((item)=> item.id),\n        data: this.selectedRows,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(\n        ExpenseValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        let route = \"/erp-salary/salary-management/all-salary\";\n        this.refresh();\n      });\n    }\n  }\n\n  //**********************************************************************************************************\n  deletesalary(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This salary Item will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this salary Item \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.salariesService\n          .deleteSalaryTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //********************************************************************************************************************************** */\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n        PostSalaryTransactions: \"Post Salary Transactions\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        console.log(\"result.value:: \", selectedUserType);\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        } else if (selectedUserType === \"PostSalaryTransactions\") {\n          privilege = \"Post Salary Transactions\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selection.selected.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              } else if (selectedUserType === \"PostSalaryTransactions\") {\n                newSelectedUserType = \"Post Salary Transactions\";\n              }\n\n              // HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n              // ManagingDirectorAndCEO: \"Managing Director And CEO\",\n              // PostSalaryTransactions: \"Post Salary Transactions\"\n\n              let params = { approvalType: newSelectedUserType };\n\n              this.salariesService\n                .validateSalaries(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n\n                      res.statusCode == 200\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData(this.currentPage, this.pageSize);\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  approvalTransactionDetails: any;\n  getSalaryApprovalTransactionDetails() {\n    const params = new HttpParams().set(\n      \"payrollCircle\",\n      this.selection.selected[0].payrollCircle\n    );\n    this.salariesService\n      .getSalaryApprovalTranDetails(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"approvalTransactionDetails :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.approvalTransactionDetails = res.entity;\n\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n\n            this.transactionAction = \"View Salary\";\n            this.transactionLookUp();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n  //********************************************************************************************************************** */\n  //accounting Select\n  //********************************************************************************************************************** */\n\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n    //this.accountingCheckboxSelectedRows = this.selection.selected;\n\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.selection.selected[0]\n    );\n\n    if (\n      this.transactionAction === \"Add\" &&\n      this.selection.selected[0]?.tranCode\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Transaction already exists for this record\"\n      );\n    } else if (\n      this.transactionAction !== \"Add\" &&\n      this.transactionAction !== \"Preview\" &&\n      (this.selection.selected[0]?.tranCode === null ||\n        this.selection.selected[0]?.tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    }\n\n    if (this.transactionAction === \"Preview\") {\n      this.getTransactionData();\n    } else {\n      this.transactionLookUp();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  transactionType: string = \"Salaries\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\"this.selection:: \", this.selection.selected[0]);\n\n    let addBody: any; // Declare the addBody variable outside of the if block\n\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        // Assign the constructed object to addBody within the if block\n        transactionType: this.transactionType,\n        referenceCode: this.selection.selected[0].payrollCircle,\n        parttrans: [\n          ...(this.selection.selected.length > 0\n            ? [\n              ...(this.selection.selected[0].totalGrosspay &&\n                this.selection.selected[0].totalGrosspay > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalGrosspay,\n                    partTranstype: \"Debit\",\n                    narration: \"Total Gross Amount\",\n                  },\n                ]\n                : []),\n              ...(this.selection.selected[0].totalPaye &&\n                this.selection.selected[0].totalPaye > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalPaye,\n                    partTranstype: \"Credit\",\n                    narration: \"Total Paye\",\n                  },\n                ]\n                : []),\n              ...(this.selection.selected[0].totalNhif &&\n                this.selection.selected[0].totalNhif > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalNhif,\n                    partTranstype: \"Credit\",\n                    narration: \"Total NHIF\",\n                  },\n                ]\n                : []),\n              ...(this.selection.selected[0].totalNssf &&\n                this.selection.selected[0].totalNssf > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalNssf,\n                    partTranstype: \"Credit\",\n                    narration: \"Total NSSF\",\n                  },\n                ]\n                : []),\n              ...(this.selection.selected[0].totalHouselevy &&\n                this.selection.selected[0].totalHouselevy > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalHouselevy,\n                    partTranstype: \"Credit\",\n                    narration: \"Total House Levy\",\n                  },\n                ]\n                : []),\n              ...(this.selection.selected[0].totalPension &&\n                this.selection.selected[0].totalPension > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalPension,\n                    partTranstype: \"Credit\",\n                    narration: \"Total Pension\",\n                  },\n                ]\n                : []),\n              ...(this.selection.selected[0].totalGratuity &&\n                this.selection.selected[0].totalGratuity > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalGratuity,\n                    partTranstype: \"Credit\",\n                    narration: \"Total Gratuity\",\n                  },\n                ]\n                : []),\n\n              ...(this.selection.selected[0].totalStaffloan &&\n                this.selection.selected[0].totalStaffloan > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalStaffloan,\n                    partTranstype: \"Credit\",\n                    narration: \"Total Staff Loan\",\n                  },\n                ]\n                : []),\n              ...(this.selection.selected[0].totalNetpay &&\n                this.selection.selected[0].totalNetpay > 0\n                ? [\n                  {\n                    accountNo: \"\",\n                    amount: this.selection.selected[0].totalNetpay,\n                    partTranstype: \"Credit\",\n                    narration: \"Total Net Pay\",\n                  },\n                ]\n                : []),\n            ]\n            : []),\n        ],\n      };\n    }\n\n    if (this.transactionAction === \"View Salary\") {\n      addBody = {\n        // Assign the constructed object to addBody within the if block\n        transactionType: this.transactionType,\n        referenceCode: this.selection.selected[0].payrollCircle,\n        parttrans: this.approvalTransactionDetails.parttrans,\n        description: \"Salary processing\",\n      };\n    }\n\n    if (this.transactionAction === \"Preview\") {\n      addBody = {\n        // Assign the constructed object to addBody within the if block\n        transactionType: this.transactionType,\n        referenceCode: this.selection.selected[0].payrollCircle,\n        parttrans: this.previewTransactionData.parttrans,\n        description: \"Salary preview\",\n      };\n    }\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.selection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.selection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  previewTransactionData: any;\n  getTransactionData() {\n    let params = {\n      payrollCircle: this.selection.selected[0].payrollCircle,\n    };\n\n    console.log(\"this.params: \", params);\n    this.salariesService\n      .getSalariesTransactionPreview(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.transactionData :\", res);\n          if (res.entity) {\n            this.previewTransactionData = res.entity;\n\n            console.log(\"this.transactionData :\", this.previewTransactionData);\n\n            this.transactionLookUp();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Salaries'\" [items]=\"['Salaries Management']\"\n                [active_item]=\"'Salaries Management'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeaderCustom mx-0 mt-0\">\n                                <div class=\"row mx-2\">\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Approval Type:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                        <div class=\"button-container d-flex flex-wrap mt-1\">\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedApprovalType === 'AllSalaries'\"\n                                                class=\"mat-button all-salaries mb-1\"\n                                                (click)=\"getApprovalTypeSelectedStatus('AllSalaries')\">\n                                                <mat-icon>description</mat-icon>\n                                                ALL Salaries\n                                            </button>\n\n                                            <button *ngIf=\"accessControlService.hasAccessToFinanceManager()\"\n                                                mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Finance Manager'\n                        \" class=\"mat-button finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('Finance Manager')\n                        \">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                FINANCE MANAGER\n                                            </button>\n\n                                            <button *ngIf=\"\n                          accessControlService.hasAccessToSeniorFinanceManager()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Senior Finance Manager'\n                        \" class=\"mat-button senior-finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Senior Finance Manager'\n                          )\n                        \">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                SENIOR MANAGER\n                                            </button>\n\n                                            <button *ngIf=\"\n                          accessControlService.hasAccessToHeadOfFinanceAndStrategy()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType ===\n                          'Head of Finance And Strategy'\n                        \" class=\"mat-button head-of-finance-strategy mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Head of Finance And Strategy'\n                          )\n                        \">\n                                                <mat-icon>supervisor_account</mat-icon>\n                                                HEAD OF FINANCE\n                                            </button>\n\n                                            <button *ngIf=\"\n                          accessControlService.hasAccessToManagingDirectorAndCEO()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Managing Director And CEO'\n                        \" class=\"mat-button managing-director-ceo mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Managing Director And CEO'\n                          )\n                        \">\n                                                <mat-icon>person_pin</mat-icon>\n                                                MANAGING DIRECTOR\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Post Salary Transactions'\n                        \" class=\"mat-button post-salary-transactions mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Post Salary Transactions'\n                          )\n                        \">\n                                                <mat-icon>attach_money</mat-icon>\n                                                Post Salary\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeaderCustom mx-0 mt-1\"\n                                *ngIf=\"selectedApprovalType !== 'Post Salary Transactions'\">\n                                <div class=\"row mx-2\">\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Status:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                        <div class=\"button-container d-flex flex-wrap mt-1\">\n                                            <!-- Button for PENDING status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <!-- Button for APPROVED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n\n                                            <!-- Button for RETURNED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n\n                                            <!-- Button for REJECTED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mx-0 mt-1\">\n                                <div class=\"row\">\n                                    <div class=\"col-6\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>All Salaries</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n                                            <!-- <li>\n                            <div class=\"m-l-10\" matTooltip=\"ADD\">\n                              <button mat-mini-fab color=\"primary\" (click)=\"addSalaries()\">\n                                <mat-icon class=\"col-white\">add</mat-icon>\n                              </button>\n                            </div>\n                          </li> -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <!-- Container element with *ngIf condition -->\n                                            <li *ngIf=\"this.selectedRows.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"this.selectedRows.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"this.selectedRows.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"Preview Salary Transaction\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"accountingCheckboxActive('Preview')\">\n                                                        <mat-icon class=\"col-white\">visibility</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n\n                                    <div class=\"col-6\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'Suppliers-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Table Definition -->\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <!-- Select Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"salarySelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"salarySelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- id -->\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-5\">\n                                        #\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let index = index\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-5\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Payroll Circle -->\n                                <ng-container matColumnDef=\"payrollCircle\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n                                        Payroll Circle\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n                                        {{ row.payrollCircle }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Period -->\n                                <ng-container matColumnDef=\"period\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n                                        Period\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n                                        {{ row.periodM }} {{ row.periodY }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Total Gross Pay -->\n                                <ng-container matColumnDef=\"totalGrosspay\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n                                        Total Gross Pay\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n                                        {{ row.totalGrosspay | currency : \"Ksh\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"tranCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                                        TranCode\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                                        {{ row.tranCode || \"-\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"transactionStatus\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                                        TranStatus\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                                        <ng-container [ngSwitch]=\"row.transactionStatus\">\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.transactionStatus }}\n                                            </button>\n\n                                            <button *ngSwitchCase=\"'POSTED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.transactionStatus }}\n                                            </button>\n\n                                            <ng-container *ngSwitchDefault> N.A </ng-container>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"tranDate\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                                        TranDate\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                                        {{ row.tranDate ? (row.tranDate | date : \"short\") : \"-\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Status -->\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n                                        <!-- View Button  -->\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"viewSalary(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <!-- Delete Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteSalary(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewSalary(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                                (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                                [pageSize]=\"pageSize\" showFirstLastButtons>\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { GlAccountsService } from \"src/app/erp-finance/data/services/gl-accounts.service\";\nimport { SalariesService } from \"src/app/erp-finance/data/services/salaries.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { AccountingJournalTransactionsComponent } from \"../../transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\n\n@Component({\n  selector: \"app-manage-salaries\",\n  templateUrl: \"./manage-salaries.component.html\",\n  styleUrls: [\"./manage-salaries.component.scss\"],\n})\nexport class ManageSalariesComponent implements OnInit {\n  displayedColumns: string[] = [\n    //'id',\n    //\"payrollCircle\",\n    //\"period\",\n    \"employeeName\",\n    \"employeeAc\",\n    \"empIdno\",\n    // \"kraPin\",\n    // \"nhifNo\",\n    // \"nssfNo\",\n    \"empGrosspay\",\n    \"empPaye\",\n    \"empNhif\",\n    \"empNssf\",\n    \"empHouselevy\",\n    \"empPension\",\n    \"empGratuity\",\n    \"empStaffloan\",\n    \"empNetpay\",\n    \"action\"\n  ];\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  hideApprovals = false;\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private salariesService: SalariesService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        }\n\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  refresh() {\n    this.getDataById();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  dataArray: any[] = [];\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.salariesService\n      .getSalariesById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.dataArray = res.entity.salariespaymentdetails;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  isLoading: boolean = true;\n  getPage() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n\n    this.dataSource = new MatTableDataSource(this.dataArray);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n\n  //********************************************************************************** */\n  showRecordDetails(row) {\n    // Generate the HTML content for the SweetAlert modal\n    const content = `\n    <div style=\"font-family: Arial, sans-serif; text-align: left;\">\n      <table style=\"width: 100%;\">\n        <tr>\n          <td><strong>Payroll Circle:</strong></td>\n          <td>${row.payrollCircle}</td>\n        </tr>\n        <tr>\n          <td><strong>Period:</strong></td>\n          <td>${row.periodM} ${row.periodY}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee Name:</strong></td>\n          <td>${row.employeeName}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee AC:</strong></td>\n          <td>${row.employeeAc}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee ID No:</strong></td>\n          <td>${row.empIdno}</td>\n        </tr>\n        <tr>\n          <td><strong>KRA PIN:</strong></td>\n          <td>${row.kraPin}</td>\n        </tr>\n        <tr>\n          <td><strong>NHIF No:</strong></td>\n          <td>${row.nhifNo}</td>\n        </tr>\n        <tr>\n          <td><strong>NSSF No:</strong></td>\n          <td>${row.nssfNo}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee Gross Pay:</strong></td>\n          <td>${row.empGrosspay}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee PAYE:</strong></td>\n          <td>${row.empPaye}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee NHIF:</strong></td>\n          <td>${row.empNhif}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee NSSF:</strong></td>\n          <td>${row.nssfEmployee}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee House Levy:</strong></td>\n          <td>${row.employeeHouseLevy}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee Pension:</strong></td>\n          <td>${row.pensionEmployee}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee Gratuity:</strong></td>\n          <td>${row.empGratuity}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee Staff Loan:</strong></td>\n          <td>${row.empStaffloan}</td>\n        </tr>\n        <tr>\n          <td><strong>Employee Net Pay:</strong></td>\n          <td>${row.empNetpay}</td>\n        </tr>\n      </table>\n    </div>\n  `;\n\n\n    // Display the SweetAlert modal with custom styling\n    Swal.fire({\n      title: 'Record Details',\n      html: content,\n      icon: 'info',\n      confirmButtonText: 'Close'\n    });\n  }\n\n\n\n  //********************************************************************************************************************** */\n  //APPROVALS\n  //********************************************************************************************************************** */\n\n  hasAccess: boolean;\n  approveSalaryApproval(type: any) {\n\n    let privilege = \"Post Salary Transactions\"\n    this.hasAccess = this.accessControlService.hasPrivilege(\n      \"FinanceModule\",\n      [privilege]\n    );\n\n    console.log(\n      \"this.hasAccess:: \",\n      this.hasAccess\n    );\n\n    if (this.hasAccess) {\n      Swal.fire({\n        title: \"Approve Salary\",\n        text: \"Are you sure you want to approve this salary record?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        confirmButtonText: \"Yes, Approve\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n\n\n          if (type === 'Booking') {\n            let processedRows = [{\n              id: this.formData.id,\n              status: 'APPROVED',\n              verifierRemarks: 'GL Booking Approved'\n            }]\n            let params = { approvalType: \"Post Salary Transactions\" };\n\n            this.salariesService\n              .validateSalaries(params, processedRows)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe({\n                next: (res) => {\n                  if (res.statusCode == 200) {\n                    this.snackbar.showNotification(\"snackbar-success\", \"Salary item approved successfully\");\n                  }\n                },\n                error: (err) => {\n                  this.snackbar.showNotification(\"snackbar-danger\", err.message);\n                },\n                complete: () => {\n                  this.getDataById() // Assuming you're fetching data after approving\n                },\n              });\n          } else if (type === 'Disburse') {\n            let processedRows = [{\n              id: this.formData.id,\n              status: 'APPROVED',\n              verifierRemarks: 'GL Booking Approved'\n            }]\n            let params = { approvalType: \"Post Salary Transactions\" };\n\n            this.salariesService\n              .validateSalaries(params, processedRows)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe({\n                next: (res) => {\n                  if (res.statusCode == 200) {\n                    this.snackbar.showNotification(\"snackbar-success\", \"Salary item approved successfully\");\n                  }\n                },\n                error: (err) => {\n                  this.snackbar.showNotification(\"snackbar-danger\", err.message);\n                },\n                complete: () => {\n                  this.getDataById() // Assuming you're fetching data after approving\n                },\n              });\n          }\n\n        }\n      });\n    }\n    else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"You do not have access to this right!\"\n      );\n    }\n  }\n\n  transactionAction: string = \"\";\n  type: any\n  accountingCheckboxActive(action: any, type: any) {\n    //this.accountingCheckboxSelectedRows = this.selection.selected;\n    this.type = type\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.formData\n    );\n\n    if (\n      this.transactionAction === \"Add\" &&\n      this.formData?.tranCode\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Transaction already exists for this record\"\n      );\n    } else if (\n      this.transactionAction !== \"Add\" &&\n      this.transactionAction !== \"Preview\" &&\n      (this.formData?.tranCode === null ||\n        this.formData?.tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    }\n\n    if (this.transactionAction === \"Preview\") {\n      if (type === 'Booking') {\n        this.getBookingTransactionData();\n      } else if (type === 'Disburse') {\n        this.getDisbursementTransactionData();\n      }\n\n    } else {\n      this.transactionLookUp();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  transactionType: string = \"Salaries\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\"this.selection:: \", this.formData);\n\n    let addBody: any; // Declare the addBody variable outside of the if block\n\n\n\n\n    if (this.transactionAction === \"Preview\") {\n      addBody = {\n        // Assign the constructed object to addBody within the if block\n        transactionType: this.transactionType,\n        referenceCode: this.formData.payrollCircle,\n        parttrans: this.previewTransactionData.parttrans,\n        description: \"Salary preview\",\n      };\n    }\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.formData,\n      bodyForAdd: addBody,\n      tranCode: this.formData.tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  previewTransactionData: any;\n  getBookingTransactionData() {\n    let params = {\n      payrollCircle: this.formData.payrollCircle,\n    };\n\n    console.log(\"this.params: \", params);\n    this.salariesService\n      .getSalariesTransactionPreview(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.transactionData :\", res);\n          if (res.entity) {\n            this.previewTransactionData = res.entity;\n\n            console.log(\"this.transactionData :\", this.previewTransactionData);\n\n            this.transactionLookUp();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  getDisbursementTransactionData() {\n    let params = {\n      payrollCircle: this.formData.payrollCircle,\n    };\n\n    console.log(\"this.params: \", params);\n    this.salariesService\n      .getDisbursementSalariesTransactionPreview(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.transactionData :\", res);\n          if (res.entity) {\n            this.previewTransactionData = res.entity;\n\n            console.log(\"this.transactionData :\", this.previewTransactionData);\n\n            this.transactionLookUp();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n","<section class=\"content font\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Salaries'\" [items]=\"['Manage']\" [active_item]=\"'Manage Salary'\">\n            </app-breadcrumb>\n\n\n            <div *ngIf=\"pageFunction !== 'Add' && formData\">\n                <div class=\"row\">\n                    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                        <div class=\"card\">\n                            <div class=\"card bg-color\">\n                                <div class=\"chat\">\n                                    <div class=\"chat-header clearfix\">\n                                        <div class=\"row\">\n                                            <!-- HOD Verification -->\n                                            <div class=\"col-4\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">Approval</div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-hod\">\n                                                                    {{ formData.verifierStatus || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">Approved By</div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-hod-approved\">\n                                                                    {{\n                                                                    formData.verifiedBy || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <div class=\"chat-about mt-1\">\n                                                            <div class=\"chat-with remarks\">\n                                                                <strong>Remarks:</strong>\n                                                                <span class=\"remarks-content mx-2\">{{\n                                                                    formData.verifierRemarks || 'N/A' }}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <!-- Finance Manager Verification -->\n                                            <div class=\"col-4\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">Finance Manager</div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-finance\">\n                                                                    {{ formData.financeManagerVerifiedStatus || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">Approved By</div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-finance-approved\">\n                                                                    {{ formData.financeManagerVerifiedBy || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <div class=\"chat-about mt-1\">\n                                                            <div class=\"chat-with remarks\">\n                                                                <strong> Remarks:</strong>\n                                                                <span class=\"remarks-content mx-2\">{{\n                                                                    formData.financeManagerVerifiedRemarks\n                                                                    || 'N/A' }}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <!-- Head of Finance and Strategy Verification -->\n                                            <div class=\"col-4\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">\n                                                                Head Finance\n                                                            </div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-procurement\">\n                                                                    {{\n                                                                    formData.headFinanceAndStrategyVerifiedStatus\n                                                                    || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">Approved By</div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-procurement-approved\">\n                                                                    {{\n                                                                    formData.headFinanceAndStrategyVerifiedBy\n                                                                    || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <div class=\"chat-about mt-1\">\n                                                            <div class=\"chat-with remarks\">\n                                                                <strong>Remarks:</strong>\n                                                                <span class=\"remarks-content mx-2\">{{\n                                                                    formData.headFinanceAndStrategyVerifiedRemarks\n                                                                    || 'N/A' }}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <!-- Senior Finance Manager Verification -->\n                                            <div class=\"col-4\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">\n                                                                Senior Manager\n                                                            </div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-procurement\">\n                                                                    {{\n                                                                    formData.seniorFinanceManagerVerifiedStatus\n                                                                    || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">Approved By</div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-procurement-approved\">\n                                                                    {{\n                                                                    formData.seniorFinanceManagerVerifiedBy\n                                                                    || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <div class=\"chat-about mt-1\">\n                                                            <div class=\"chat-with remarks\">\n                                                                <strong>Remarks:</strong>\n                                                                <span class=\"remarks-content mx-2\">{{\n                                                                    formData.seniorFinanceManagerVerifiedRemarks\n                                                                    || 'N/A' }}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <!-- Managing Director and CEO Verification -->\n                                            <div class=\"col-4\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">\n                                                                Managing Director\n                                                            </div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-procurement\">\n                                                                    {{\n                                                                    formData.managingDirectorAndCEOVerifiedStatus\n                                                                    || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">Approved By</div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-procurement-approved\">\n                                                                    {{\n                                                                    formData.managingDirectorAndCEOVerifiedBy\n                                                                    || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <div class=\"chat-about mt-1\">\n                                                            <div class=\"chat-with remarks\">\n                                                                <strong>Remarks:</strong>\n                                                                <span class=\"remarks-content mx-2\">{{\n                                                                    formData.managingDirectorAndCEOVerifiedRemarks\n                                                                    || 'N/A' }}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <!-- Post Imprest Verification -->\n                                            <div class=\"col-4\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">\n                                                                Post Salary\n                                                            </div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-procurement\">\n                                                                    {{ formData.postSalaryVerifiedStatus || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                                                        <div class=\"chat-about\">\n                                                            <div class=\"chat-with\">Verified By</div>\n                                                            <div class=\"chat-num-messages mt-2\">\n                                                                <div class=\"badge badge-procurement-approved\">\n                                                                    {{ formData.postSalaryVerifiedBy || 'N/A' }}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <div class=\"chat-about mt-1\">\n                                                            <div class=\"chat-with remarks\">\n                                                                <strong>Remarks:</strong>\n                                                                <span class=\"remarks-content mx-2\">{{\n                                                                    formData.postSalaryVerifiedRemarks\n                                                                    || 'N/A' }}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-2\">\n                        <div class=\"card\">\n                            <div class=\"card bg-color\">\n                                <div class=\"chat\">\n                                    <div class=\"row chat-header clearfix\">\n                                        <div class=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\n\n                                            <div class=\"card\">\n                                                <div class=\"card-body\">\n                                                    <h5 class=\"card-title\">Salary Booking Transaction Approval</h5>\n                                                    <p class=\"card-text\">Review and approve the salary booking\n                                                        transactions.</p>\n                                                    <ul class=\"list-group list-group-flush\">\n                                                        <li class=\"list-group-item\">Tran Code: {{ formData.tranCode ||\n                                                            'N/A' }} </li>\n                                                        <li class=\"list-group-item\">Tran Date: {{ formData.tranDate ||\n                                                            'N/A' }} </li>\n\n                                                    </ul>\n\n                                                    <div class=\"btn-group mt-3\" role=\"group\"\n                                                        aria-label=\"Transaction Actions\">\n                                                        <button type=\"button\" class=\"btn btn-success\"\n                                                            (click)=\"approveSalaryApproval('Booking')\">\n                                                            <i class=\"fas fa-check-circle\"></i> Approve\n                                                        </button>\n                                                        <button type=\"button\" class=\"mx-2 btn btn-info\"\n                                                            (click)=\"accountingCheckboxActive('Preview', 'Booking')\">\n                                                            <i class=\"fas fa-eye\"></i> Preview\n                                                        </button>\n\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-xs-12 col-sm-12 col-md-8 col-lg-8\">\n                                            <div class=\"row\">\n                                                <!--  Gross Pay -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Gross Pay</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-yellow\"\n                                                                style=\"color: #fff; background-color: #50420d\">{{\n                                                                formData.totalGrosspay | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Paye -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Paye</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-grey\"\n                                                                style=\"color: #fff; background-color: #95a5a6\">{{\n                                                                formData.totalPaye | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  NHIF -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> NHIF</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-light-blue\"\n                                                                style=\"color: #fff; background-color: #3498db\">{{\n                                                                formData.totalNhif | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Employee NSSF -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Employee NSSF</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-light-pink\"\n                                                                style=\"color: #fff; background-color: #e74c3c\">{{\n                                                                formData.totalEmployeeNssf | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Employer NSSF -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Employer NSSF</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-light-pink\"\n                                                                style=\"color: #fff; background-color: #e74c3c\">{{\n                                                                formData.totalEmployerNssf | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Employee House Levy -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Employee H.Levy</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-light-grey\"\n                                                                style=\"color: #fff; background-color: #95a5a6\">{{\n                                                                formData.totalEmployeeHouseLevy | currency: 'Ksh' }}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Employer House Levy -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Employer H.Levy</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-light-grey\"\n                                                                style=\"color: #fff; background-color: #95a5a6\">{{\n                                                                formData.totalEmployerHouseLevy | currency: 'Ksh' }}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Employee Pension -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Employee Pension</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-dark-blue\"\n                                                                style=\"color: #fff; background-color: #34495e\">{{\n                                                                formData.totalEmployeePension | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Employee Pension Voluntary -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Voluntary Pension </div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-dark-blue\"\n                                                                style=\"color: #fff; background-color: #34495e\">{{\n                                                                formData.totalEmployeePensionVoluntary | currency: 'Ksh'\n                                                                }}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Employer Pension -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Employer Pension</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-dark-blue\"\n                                                                style=\"color: #fff; background-color: #34495e\">{{\n                                                                formData.totalEmployerPension | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Gratuity -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Gratuity</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-dark-pink\"\n                                                                style=\"color: #fff; background-color: #d35400\">{{\n                                                                formData.totalGratuity | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Staff Loan -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Staff Loan</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-dark-grey\"\n                                                                style=\"color: #fff; background-color: #2c3e50\">{{\n                                                                formData.totalStaffloan | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!--  Net Pay -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\"> Net Pay</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-white\"\n                                                                style=\"color: #fff; background-color: #146b79\">{{\n                                                                formData.totalNetpay | currency: 'Ksh' }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Payroll Circle -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Payroll Circle</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-light-green\"\n                                                                style=\"color: #fff; background-color: #2ecc71\">{{\n                                                                formData.payrollCircle }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <!-- Period -->\n                                                <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                                    <div class=\"chat-about\">\n                                                        <div class=\"chat-with\">Period</div>\n                                                        <div class=\"chat-num-messages mt-2\">\n                                                            <div class=\"badge badge-solid-dark-purple\"\n                                                                style=\"color: #fff; background-color: #8e44ad\">{{\n                                                                formData.periodM }} {{ formData.periodY }}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div class=\"card\">\n                        <div class=\"body\">\n                            <div class=\"table-responsive mx-1\">\n\n                                <div class=\"materialTableHeader\">\n                                    <div class=\"row\">\n                                        <div class=\"col-7\">\n                                            <ul class=\"header-buttons-left ms-0\">\n                                                <li class=\"dropdown\">\n                                                    <h2>All Salaries</h2>\n                                                </li>\n                                                <li class=\"dropdown m-l-20\">\n                                                    <label for=\"search-input\"><i\n                                                            class=\"material-icons search-icon\">search</i></label>\n                                                    <input placeholder=\"Filter...\" type=\"text\"\n                                                        (keyup)=\"applyFilter($event)\" #filter\n                                                        class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                                </li>\n                                                <!-- <li>\n                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                  <button mat-mini-fab color=\"primary\" (click)=\"addSalaries()\">\n                                    <mat-icon class=\"col-white\">add</mat-icon>\n                                  </button>\n                                </div>\n                              </li> -->\n                                                <li>\n                                                    <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                        <button mat-mini-fab color=\"primary\"\n                                                            (click)=\"approveSalaryApproval('Disburse')\"\n                                                            class=\"mat-button-custom\">\n                                                            <mat-icon class=\"col-white\">check</mat-icon>\n                                                        </button>\n                                                    </div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"m-l-10\" matTooltip=\"Preview Salary Transaction\">\n                                                        <button mat-mini-fab color=\"primary\"\n                                                            (click)=\"accountingCheckboxActive('Preview', 'Disburse')\">\n                                                            <mat-icon class=\"col-white\">visibility</mat-icon>\n                                                        </button>\n                                                    </div>\n                                                </li>\n\n                                                <li>\n                                                    <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                        <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                        </button>\n                                                    </div>\n                                                </li>\n\n\n\n                                            </ul>\n                                        </div>\n\n                                        <div class=\"col-5\">\n                                            <ul class=\"header-buttons\">\n                                                <li>\n                                                    <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                        <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                        exporter.exportTable('xlsx', {\n                                          fileName: 'Suppliers-list',\n                                          sheet: 'sheet1'\n                                        })\n                                      \" />\n                                                    </div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                        <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                            (click)=\"exporter.exportTable('csv')\" />\n                                                    </div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                        <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                            (click)=\"exporter.exportTable('json')\" />\n                                                    </div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                        <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                            (click)=\"exporter.exportTable('txt')\" />\n                                                    </div>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n\n                                <!-- Table Definition -->\n                                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                    #exporter=\"matTableExporter\">\n\n                                    <!-- id -->\n                                    <!-- <ng-container matColumnDef=\"id\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-2 tbl-col-width-per-5\">\n                                        #\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row; let index = index\" class=\"column-nowrap psl-2 tbl-col-width-per-5\">\n                                        {{row.id}}\n                                      </mat-cell>\n                                    </ng-container> -->\n\n                                    <!-- Payroll Circle -->\n                                    <ng-container matColumnDef=\"payrollCircle\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Payroll Circle\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.payrollCircle }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Period -->\n                                    <ng-container matColumnDef=\"period\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Period\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.periodM }} {{ row.periodY }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Employee Name -->\n                                    <ng-container matColumnDef=\"employeeName\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Employee Name\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.employeeName }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Employee Ac -->\n                                    <ng-container matColumnDef=\"employeeAc\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Employee Ac\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.employeeAc }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Idno -->\n                                    <ng-container matColumnDef=\"empIdno\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Idno\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.empIdno }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Kra Pin -->\n                                    <ng-container matColumnDef=\"kraPin\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Kra Pin\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.kraPin }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Nhif No -->\n                                    <ng-container matColumnDef=\"nhifNo\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Nhif No\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.nhifNo }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Nssf No -->\n                                    <ng-container matColumnDef=\"nssfNo\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Nssf No\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.nssfNo }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Grosspay -->\n                                    <ng-container matColumnDef=\"empGrosspay\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Grosspay\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.empGrosspay | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Paye -->\n                                    <ng-container matColumnDef=\"empPaye\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Paye\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.empPaye | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Nhif -->\n                                    <ng-container matColumnDef=\"empNhif\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Nhif\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.empNhif | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Nssf -->\n                                    <ng-container matColumnDef=\"empNssf\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Nssf\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.nssfEmployee | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n                                    <!-- {\n                                        \"id\": 3,\n                                        \"payrollCircle\": \"a9rUr20240320\",\n                                        \"costCenterCode\": \"CST10\",\n                                        \"costCenterGlNo\": \"600010\",\n                                        \"costCenterPensionGlNo\": \"600050\",\n                                        \"periodY\": 2024,\n                                        \"periodM\": \"APRIL\",\n                                        \"employeeName\": \"JiPHEENS  WAHOME GICHERU\",\n                                        \"employeeAc\": \"120\",\n                                        \"employeeAcCurrencyID\": \"122\",\n                                        \"employeeAcBranchID\": \"123\",\n                                        \"employeeAcName\": \"121\",\n                                        \"empIdno\": \"34203362\",\n                                        \"kraPin\": \"A011334948R\",\n                                        \"nhifNo\": \"22236959\",\n                                        \"nssfNo\": \"20235525\",\n                                        \"empGrosspay\": 120000,\n                                        \"empPaye\": 25320.35,\n                                        \"empNhif\": 1700,\n                                        \"nssfEmployee\": 2160,\n                                        \"nssfEmployer\": 2160,\n                                        \"employeeHouseLevy\": 0,\n                                        \"employerHouseLevy\": 0,\n                                        \"pensionEmployee\": 7200,\n                                        \"pensionEmployeeVoluntary\": 0,\n                                        \"pensionEmployer\": 7200,\n                                        \"empGratuity\": 0,\n                                        \"empStaffloan\": 16666.67,\n                                        \"empNetpay\": 66952.98\n                                    } -->\n                                    <!-- Emp Houselevy -->\n                                    <ng-container matColumnDef=\"empHouselevy\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Houselevy\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.employeeHouseLevy | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Pension -->\n                                    <ng-container matColumnDef=\"empPension\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Pension\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.pensionEmployee | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Gratuity -->\n                                    <ng-container matColumnDef=\"empGratuity\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Gratuity\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.empGratuity | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Staffloan -->\n                                    <ng-container matColumnDef=\"empStaffloan\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Staffloan\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.empStaffloan | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <!-- Emp Netpay -->\n                                    <ng-container matColumnDef=\"empNetpay\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            Emp Netpay\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\"\n                                            class=\"column-nowrap psl-2 tbl-col-width-per-9 pr-3\">\n                                            {{ row.empNetpay | currency: 'Ksh' }}\n                                        </mat-cell>\n                                    </ng-container>\n\n                                    <ng-container matColumnDef=\"action\">\n                                        <mat-header-cell class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\"\n                                            *matHeaderCellDef>\n                                            Action\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row; let i = index\"\n                                            class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n\n                                            <!-- View Button  -->\n                                            <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                                (click)=\"showRecordDetails(row)\" class=\"tbl-action-btn\">\n                                                <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                                </app-feather-icons>\n                                            </button>\n\n                                        </mat-cell>\n                                    </ng-container>\n\n\n                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                                        (click)=\"showRecordDetails(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                    </mat-row>\n                                    <mat-cell *matNoDataRow colspan=\"4\">\n                                        No data matching the filter \"{{input.value}}\"\n                                    </mat-cell>\n                                </mat-table>\n\n                                <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                    </mat-progress-spinner>\n                                </div>\n                                <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                                    aria-label=\"Select page of users\">\n                                </mat-paginator>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { SalariesService } from \"src/app/erp-finance/data/services/salaries.service\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-salary-analytics\",\n  templateUrl: \"./salary-analytics.component.html\",\n  styleUrls: [\"./salary-analytics.component.scss\"],\n})\nexport class SalaryAnalyticsComponent implements OnInit {\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  displayedColumns: string[] = [\n    \"category\",\n    \"prevPayroll\",\n    \"currPayroll\",\n    \"changeRate\",\n\n    //  \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(false, []);\n  data: any;\n  isLoading: boolean = true;\n  formData: any;\n\n  currentBranch: any;\n  currentUser: any;\n  currentUserCode: any;\n\n  mngForm: FormGroup;\n  Form: FormGroup;\n\n  hasAccess: boolean;\n\n  //employee Details\n  employeeName: any;\n  employeeCode: any;\n\n  years: number[] = [];\n  months: string[] = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  isFinals: string[] = [\"Y\", \"N\"];\n\n  currentMonth: string;\n  currentYear: number;\n  previousMonth: string;\n  previousYear: number;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private route: ActivatedRoute,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private salariesService: SalariesService,\n    private transactionService: TransactionsService\n  ) {\n    this.generateYearArray();\n\n    const currentDate = new Date();\n    this.currentMonth = this.getMonthName(currentDate.getMonth());\n    this.currentYear = currentDate.getFullYear();\n    if (currentDate.getMonth() === 0) {\n      this.previousMonth = this.getMonthName(11);\n      this.previousYear = this.currentYear - 1;\n    } else {\n      this.previousMonth = this.getMonthName(currentDate.getMonth() - 1);\n      this.previousYear = this.currentYear;\n    }\n  }\n\n  ngOnInit(): void {\n    this.currentBranch = this.tokenCookieService.getUser().branchCode;\n    this.currentUserCode = this.tokenCookieService.getUser().empPfNo;\n\n    this.Form = this.fb.group({\n      prevPeriodY: [this.previousYear, Validators.required],\n      prevPeriodM: [this.previousMonth, Validators.required],\n      prevIsFinal: [\"Y\", Validators.required],\n      currPeriodY: [this.currentYear, Validators.required],\n      currPeriodM: [this.currentMonth, Validators.required],\n      currIsFinal: [\"Y\", Validators.required],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n    this.getData();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //filter through the items\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  generateYearArray(): void {\n    const currentYear: number = new Date().getFullYear();\n    for (let i = 0; i < 5; i++) {\n      this.years.push(currentYear - i);\n    }\n  }\n  getMonthName(monthIndex: number): string {\n    const monthNames: string[] = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    return monthNames[monthIndex];\n  }\n\n  // ****************************************************************************************************************************\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n\n    let params = {\n      prevPeriodY: this.Form.value.prevPeriodY,\n      prevPeriodM: this.Form.value.prevPeriodM,\n      prevIsFinal: this.Form.value.prevIsFinal,\n\n      currPeriodY: this.Form.value.currPeriodY,\n      currPeriodM: this.Form.value.currPeriodM,\n      currIsFinal: this.Form.value.currIsFinal,\n    };\n    // this.alignTableColumns();\n    this.salariesService\n      .getSalaryAnalytics(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.entity) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n\n  \n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Salaries'\" [items]=\"['Salaries Management']\" [active_item]=\"'Salaries Analytics'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                 <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-6\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Salaries Analytics</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n\n                                    <div class=\"col-6\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'Suppliers-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row mx-2 mt-2\">\n                                        <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Previous Period Year</mat-label>\n                                                <mat-select formControlName=\"prevPeriodY\">\n                                                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year\n                                                        }}</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"Form.get('prevPeriodY').hasError('required')\">Please\n                                                    select Previous Period Year</mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Previous Period Month</mat-label>\n                                                <mat-select formControlName=\"prevPeriodM\">\n                                                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month\n                                                        }}</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"Form.get('prevPeriodM').hasError('required')\">Please\n                                                    select Previous Period Month</mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Previous Period Is Final</mat-label>\n                                                <mat-select formControlName=\"prevIsFinal\" disabled>\n                                                    <mat-option *ngFor=\"let isFinal of isFinals\" [value]=\"isFinal\">{{\n                                                        isFinal }}</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"Form.get('prevIsFinal').hasError('required')\">Please\n                                                    select Previous Period Is Final</mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Current Period Year</mat-label>\n                                                <mat-select formControlName=\"currPeriodY\">\n                                                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year\n                                                        }}</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"Form.get('currPeriodY').hasError('required')\">Please\n                                                    select Current Period Year</mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Current Period Month</mat-label>\n                                                <mat-select formControlName=\"currPeriodM\">\n                                                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month\n                                                        }}</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"Form.get('currPeriodM').hasError('required')\">Please\n                                                    select Current Period Month</mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-lg-2 col-md-4 col-sm-12 col-xs-12\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Current Period Is Final</mat-label>\n                                                <mat-select formControlName=\"currIsFinal\" disabled>\n                                                    <mat-option *ngFor=\"let isFinal of isFinals\" [value]=\"isFinal\">{{\n                                                        isFinal }}</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"Form.get('currIsFinal').hasError('required')\">Please\n                                                    select Current Period Is Final</mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n\n                            <!-- Table Definition -->\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <!-- Select Column -->\n                                <!-- <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"salarySelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"salarySelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container> -->\n\n                                <!-- Category -->\n                                <ng-container matColumnDef=\"category\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-2 tbl-col-width-per-35 pr-3\">\n                                        Category\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-2 tbl-col-width-per-35 pr-3\">\n                                        {{ row.category }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Previous Payroll -->\n                                <ng-container matColumnDef=\"prevPayroll\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-2 tbl-col-width-per-35 pr-3\">\n                                        Previous Payroll\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-2 tbl-col-width-per-35 pr-3\">\n                                        <div class=\"badge badge-solid-blue\">\n                                            {{ row.prevPayroll | number: '1.2-2' }}\n                                        </div>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Current Payroll -->\n                                <ng-container matColumnDef=\"currPayroll\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-2 tbl-col-width-per-35 pr-3\">\n                                        Current Payroll\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-2 tbl-col-width-per-35 pr-3\">\n                                        <div class=\"badge badge-solid-purple\">\n                                            {{ row.currPayroll | number: '1.2-2' }}\n                                        </div>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Change Rate -->\n                                <ng-container matColumnDef=\"changeRate\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-2 tbl-col-width-per-35 pr-3\">\n                                        Change Rate\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"\n                                        class=\"column-nowrap psl-2 tbl-col-width-per-35 pr-3\">\n                                        <div class=\"badge badge-solid-green\">\n                                        {{ row.changeRate }}%\n                                    </div>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Action Buttons -->\n                                <!-- <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-0 tbl-col-width-per-10 pr-0 pr-0\">\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"viewSalary(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                       \n                                    </mat-cell>\n                                </ng-container> -->\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\"\n                                    matRipple>\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"4\">\n                                    No data matching the filter \"{{ input.value }}\"\n                                </mat-cell>\n                            </mat-table>\n\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from \"@angular/core\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { GlAccountsService } from \"src/app/erp-finance/data/services/gl-accounts.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-core-synchronization\",\n  templateUrl: \"./core-synchronization.component.html\",\n  styleUrls: [\"./core-synchronization.component.scss\"],\n})\nexport class CoreSynchronizationComponent implements OnInit {\n  progress: number = 30;\n  syncStatus: any[] = [];\n\n  constructor(\n    private glManService: GlAccountsService,\n    private snackbar: SnackbarService\n  ) {}\n\n  ngOnInit(): void {}\n\n  loadingSync: boolean = false;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n\n  initiateSynchronization() {\n    this.loadingSync = true;\n    this.randomizeDataSynchronization();\n    this.erpCoreSynchronization();\n\n    this.glManService\n      .initiateCoreSynchronization()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.loadingSync = false;\n        },\n      }),\n      Subscription;\n  }\n\n  \n\n  progressValues: number[] = [100, 100, 100, 100, 100, 100];\n  randomizeDataSynchronization() {\n    const intervals = [];\n\n    for (let i = 0; i < this.progressValues.length; i++) {\n      const randomInterval = Math.floor(Math.random() * (1000 - 200 + 1)) + 200;\n\n      intervals.push(\n        setInterval(() => {\n          const randomIncrement = Math.floor(Math.random() * 5) + 1;\n          this.progressValues[i] += randomIncrement;\n\n          if (this.progressValues[i] >= 100) {\n            this.progressValues[i] = 0;\n          }\n        }, randomInterval)\n      );\n    }\n\n    const checkLoadingSync = setInterval(() => {\n      if (!this.loadingSync) {\n        intervals.forEach((interval) => clearInterval(interval));\n        clearInterval(checkLoadingSync);\n        this.progressValues.fill(100);\n      }\n    }, 100);\n  }\n\n  progressBars: number[] = [100, 100, 100, 100, 100, 100];\n  erpCoreSynchronization() {\n    const intervals = [];\n    for (let i = 0; i < this.progressBars.length; i++) {\n      const randomInterval = Math.floor(Math.random() * (1000 - 200 + 1)) + 200;\n\n      intervals.push(\n        setInterval(() => {\n          const randomIncrement = Math.floor(Math.random() * 5) + 1;\n          this.progressBars[i] += randomIncrement;\n\n          if (this.progressBars[i] >= 100) {\n            this.progressBars[i] = 0;\n          }\n        }, randomInterval)\n      );\n    }\n\n    const checkLoadingSync = setInterval(() => {\n      if (!this.loadingSync) {\n        intervals.forEach((interval) => clearInterval(interval));\n        clearInterval(checkLoadingSync);\n        this.progressBars.fill(100);\n      }\n    }, 100);\n  }\n\n  resetSynch() {\n    this.loadingSync = false;\n  }\n}\n","<section class=\"content font\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Core Synchronization'\" [items]=\"['Synchronization']\" [active_item]=\"'ERP - Core'\">\n            </app-breadcrumb>\n\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <div class=\"card\">\n                        <div class=\"m-2 mx-2\" *ngIf=\"loadingSync\">\n                            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                            </mat-progress-bar>\n                        </div>\n                        <!-- <div class=\"header\">\n                            <h2>Synchronization Report</h2>\n                        </div> -->\n                        <h5 class=\"m-2\">Synchronization Report</h5>\n                        <div class=\"body\">\n                            <div class=\"row\">\n                                <div class=\"col-md-12 col-xl-4 d-flex flex-column justify-content-center\">\n                                    <div class=\"m-l-10 m-b-20\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <div class=\"summary-item\">\n                                                    <h6 class=\"font-weight-light\">\n                                                        Last Synchronization Date\n                                                    </h6>\n                                                    <p class=\"mb-2\">February 10, 2024 09:30 AM</p>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <div class=\"summary-item\">\n                                                    <h6 class=\"font-weight-light\">\n                                                        Total Records Synced\n                                                    </h6>\n                                                    <p class=\"mb-2\">264,782</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"summary-item\">\n                                            <h4 class=\"font-weight-light col-green\">Total Income</h4>\n                                            <h4>KES 2,359,421</h4>\n                                            <p class=\"mb-2\">\n                                                Total income generated from synchronized transactions.\n                                            </p>\n                                        </div>\n                                        <div class=\"summary-item\">\n                                            <h4 class=\"font-weight-light col-orange\">\n                                                Total Expense\n                                            </h4>\n                                            <h4>KES 1,785,229</h4>\n                                            <p class=\"mb-2\">\n                                                Total expenses incurred from synchronized transactions.\n                                            </p>\n                                        </div>\n\n                                        <div class=\"row mt-4\">\n                                            <div class=\"col-md-12\">\n                                                <button mat-raised-button color=\"primary\"\n                                                    (click)=\"initiateSynchronization()\"\n                                                    [class.auth-spinner]=\"loadingSync\" [disabled]=\"loadingSync\">\n                                                    <mat-icon>sync</mat-icon> Initiate Synchronization\n                                                </button>\n\n\n                                                <button class=\"mx-2\" mat-raised-button color=\"warn\" (click)=\"resetSynch()\">\n                                                    <mat-icon>refresh</mat-icon> Reset Synch\n                                                </button>\n                                                \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-12 col-xl-8 mt-0\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-6\">\n                                            <div class=\"header\">\n                                                <h2>Core - ERP Synchronization</h2>\n                                            </div>\n\n                                            <div class=\"mb-3 mt-3\">\n                                                <table class=\"table table-borderless\">\n                                                    <tbody>\n                                                        <tr class=\"tr-height-m\">\n                                                            <td class=\"text-muted\">Accounts</td>\n                                                            <td class=\"w-100 px-0\">\n                                                                <mat-progress-bar mode=\"determinate\"\n                                                                    class=\"progress-m progress-round progress-shadow\"\n                                                                    value=\"{{ progressValues[0] }}\">\n                                                                </mat-progress-bar>\n                                                            </td>\n                                                            <td>\n                                                                <h5 class=\"font-weight-bold mb-0\">\n                                                                    {{ progressValues[0] }}%\n                                                                </h5>\n                                                            </td>\n                                                        </tr>\n                                                        <tr class=\"tr-height-m\">\n                                                            <td class=\"text-muted\">Transactions</td>\n                                                            <td class=\"w-100 px-0\">\n                                                                <mat-progress-bar mode=\"determinate\"\n                                                                    class=\"progress-m progress-round green-progress progress-shadow\"\n                                                                    value=\"{{ progressValues[1] }}\">\n                                                                </mat-progress-bar>\n                                                            </td>\n                                                            <td>\n                                                                <h5 class=\"font-weight-bold mb-0\">\n                                                                    {{ progressValues[1] }}%\n                                                                </h5>\n                                                            </td>\n                                                        </tr>\n                                                        <tr class=\"tr-height-m\">\n                                                            <td class=\"text-muted\">Customers</td>\n                                                            <td class=\"w-100 px-0\">\n                                                                <mat-progress-bar mode=\"determinate\"\n                                                                    class=\"progress-m progress-round sky-progress progress-shadow\"\n                                                                    value=\"{{ progressValues[2] }}\">\n                                                                </mat-progress-bar>\n                                                            </td>\n                                                            <td>\n                                                                <h5 class=\"font-weight-bold mb-0\">\n                                                                    {{ progressValues[2] }}%\n                                                                </h5>\n                                                            </td>\n                                                        </tr>\n                                                        <tr class=\"tr-height-m\">\n                                                            <td class=\"text-muted\">Vendors</td>\n                                                            <td class=\"w-100 px-0\">\n                                                                <mat-progress-bar mode=\"determinate\"\n                                                                    class=\"progress-m progress-round orange-progress progress-shadow\"\n                                                                    value=\"{{ progressValues[3] }}\">\n                                                                </mat-progress-bar>\n                                                            </td>\n                                                            <td>\n                                                                <h5 class=\"font-weight-bold mb-0\">\n                                                                    {{ progressValues[3] }}%\n                                                                </h5>\n                                                            </td>\n                                                        </tr>\n                                                        <tr class=\"tr-height-m\">\n                                                            <td class=\"text-muted\">Inventory</td>\n                                                            <td class=\"w-100 px-0\">\n                                                                <mat-progress-bar mode=\"determinate\"\n                                                                    class=\"progress-m progress-round red-progress progress-shadow\"\n                                                                    value=\"{{ progressValues[4] }}\">\n                                                                </mat-progress-bar>\n                                                            </td>\n                                                            <td>\n                                                                <h5 class=\"font-weight-bold mb-0\">\n                                                                    {{ progressValues[4] }}%\n                                                                </h5>\n                                                            </td>\n                                                        </tr>\n                                                        <tr class=\"tr-height-m\">\n                                                            <td class=\"text-muted\">Reports</td>\n                                                            <td class=\"w-100 px-0\">\n                                                                <mat-progress-bar mode=\"determinate\"\n                                                                    class=\"progress-m progress-round progress-shadow\"\n                                                                    value=\"{{ progressValues[5] }}\">\n                                                                </mat-progress-bar>\n                                                            </td>\n                                                            <td>\n                                                                <h5 class=\"font-weight-bold mb-0\">\n                                                                    {{ progressValues[5] }}%\n                                                                </h5>\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\n                                            <div class=\"header\">\n                                                <h2>ERP - Core Synchronization</h2>\n                                            </div>\n                                            <div class=\"tableBody\">\n                                                <div class=\"table-responsive\">\n                                                    <table class=\"table table-hover\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>Title</th>\n                                                                <th>Progress</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            <tr>\n                                                                <td>Chart of Accounts</td>\n                                                                <td>\n                                                                    {{ progressBars[0] }}%\n                                                                    <mat-progress-bar mode=\"determinate\"\n                                                                        value=\"{{ progressBars[0] }}\"\n                                                                        color=\"warn\"></mat-progress-bar>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>Balance Synchronization</td>\n                                                                <td>\n                                                                    {{ progressBars[1] }}%\n                                                                    <mat-progress-bar mode=\"determinate\"\n                                                                        value=\"{{ progressBars[1] }}\"></mat-progress-bar>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>Transaction Data</td>\n                                                                <td>\n                                                                    {{ progressBars[2] }}%\n                                                                    <mat-progress-bar mode=\"determinate\" color=\"accent\"\n                                                                        value=\"{{ progressBars[2] }}\"></mat-progress-bar>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>Customer Information</td>\n                                                                <td>\n                                                                    {{ progressBars[3] }}%\n                                                                    <mat-progress-bar mode=\"determinate\" color=\"warn\"\n                                                                        value=\"{{ progressBars[3] }}\"></mat-progress-bar>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>Vendor Information</td>\n                                                                <td>\n                                                                    {{ progressBars[4] }}%\n                                                                    <mat-progress-bar mode=\"determinate\"\n                                                                        value=\"{{ progressBars[4] }}\"></mat-progress-bar>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>Inventory Data</td>\n                                                                <td>\n                                                                    {{ progressBars[5] }}%\n                                                                    <mat-progress-bar mode=\"determinate\" color=\"accent\"\n                                                                        value=\"{{ progressBars[5] }}\"></mat-progress-bar>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<div></div>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { AccountingJournalTransactionsComponent } from \"../../dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\n\n@Component({\n  selector: \"app-all-system-transactions\",\n  templateUrl: \"./all-system-transactions.component.html\",\n  styleUrls: [\"./all-system-transactions.component.scss\"],\n})\nexport class AllSystemTransactionsComponent implements OnInit {\n  displayedColumns: string[] = [\n    ////\"select\",\n    \"id\",\n    \"tranCode\",\n    \"referenceCode\",\n    \"transactionType\",\n    \"prCode\",\n    \"description\",\n    \"postedBy\",\n    \"postedTime\",\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private transactionService: TransactionsService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      transactionType: [\"Standard\", Validators.required],\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  \n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    \n      this.getData(this.currentPage, this.pageSize);\n    \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedTransactionType: string = \"Standard\";\n  getTransactionTypeSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getTransactionTypeSelectedStatus(transactionType: any) {\n    this.Form.patchValue({\n      transactionType: transactionType,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  alignTableColumns() {\n    if (this.Form.value.transactionType === \"Receiving\") {\n      this.displayedColumns = [\n        //\"select\",\n        \"id\",\n        \"tranCode\",\n        \"referenceCode\",\n        \"transactionType\",\n        \"prCode\",\n        \"description\",\n        \"postedBy\",\n        \"postedTime\",\n        \"status\",\n        \"action\",\n      ];\n    } else if (\n      this.Form.value.transactionType === \"ImprestApplication\" ||\n      this.Form.value.transactionType === \"ImprestClearance\"\n    ) {\n      this.displayedColumns = [\n        //\"select\",\n        \"id\",\n        \"tranCode\",\n        \"referenceCode\",\n        \"transactionType\",\n        \"imprestAccountStatus\",\n        \"description\",\n        \"postedBy\",\n        \"postedTime\",\n        \"status\",\n        \"action\",\n      ];\n    } else if (\n      this.Form.value.transactionType === \"Inventory\" ||\n      this.Form.value.transactionType === \"Invoice\" ||\n      this.Form.value.transactionType === \"Payment\" ||\n      this.Form.value.transactionType === \"CustomerInvoice\" ||\n      this.Form.value.transactionType === \"SupplierInvoice\" ||\n      this.Form.value.transactionType === \"SupplierPayment\" ||\n      this.Form.value.transactionType === \"CustomerPayment\" ||\n      this.Form.value.transactionType === \"Standard\" ||\n      this.Form.value.transactionType === \"Salaries\" ||\n      this.Form.value.transactionType === \"FixedAssetsDepreciation\"\n    ) {\n      this.displayedColumns = [\n        //\"select\",\n        \"id\",\n        \"tranCode\",\n        \"referenceCode\",\n        \"transactionType\",\n        \"description\",\n        \"postedBy\",\n        \"postedTime\",\n        \"status\",\n        \"action\",\n      ];\n    }\n  }\n\n  // getData() {\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   this.selectedTransactionType = this.Form.value.transactionType;\n\n  //   let params = {\n  //     status: this.Form.value.status,\n  //     transactionType: this.Form.value.transactionType,\n  //   };\n  //   this.alignTableColumns();\n  //   this.transactionService\n  //     .getTransactionsByStatusTransactionType(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.data :\", res);\n  //         if (res.statusCode === 302) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //       },\n  //       complete: () => {},\n  //     }),\n  //     Subscription;\n  // }\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      pageNo: page,\n      pageSize: size,\n      searchTerm: this.input,\n      status: this.Form.value.status,\n      transactionType: this.Form.value.transactionType,\n    };\n\n    this.transactionService\n      .getTransactionsByStatusTransactionType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // ****************************************************************************************************************************\n  transactionAction: string = \"\";\n  transactionType: string = \"Standard\";\n  tranCode: string = \"\";\n  selectedRecord: any;\n\n  preTransactionLookup(action?: any, row?: any) {\n    if (action) {\n      this.transactionAction = action;\n    }\n    if (row) {\n      this.tranCode = row.tranCode;\n      this.selectedRecord = row;\n      this.transactionType = row.transactionType;\n    }\n\n    this.transactionLookUp();\n  }\n\n  transactionLookUp() {\n    let addBody: any;\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n      };\n    }\n\n    console.log(\"this.selectedRecord:; \", this.selectedRecord);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.selectedRecord,\n      bodyForAdd: addBody,\n      tranCode: this.tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {});\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  deleteTransaction(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Transaction?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Transaction!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = { id: id };\n\n        this.transactionService\n          .deleteTransactionsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selection.selected.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              }\n\n              let params = { approvalType: newSelectedUserType };\n\n              console.log(\"params: \", params);\n\n              this.transactionService\n                .validateTransactions(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData(this.currentPage, this.pageSize);\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All System Transactions'\" [items]=\"['Transactions']\"\n                [active_item]=\"'All System Transactions'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n\n\n                            <div class=\"materialTableHeaderCustom mx-0\">\n                                <div class=\"row mx-2\">\n\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Transaction Type:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                        <div class=\"button-container d-flex flex-wrap mt-1\">\n\n                                            <!-- Disbursement -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'Standard'\"\n                                                class=\"mat-button disbursement mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('Standard')\">\n                                                <mat-icon>money_off</mat-icon>\n                                                STANDARD\n                                            </button>\n\n                                            <!-- Receiving -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'Receiving'\"\n                                                class=\"mat-button receiving mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('Receiving')\">\n                                                <mat-icon>receipt</mat-icon>\n                                                RECEIVING\n                                            </button>\n\n                                            <!-- Inventory -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'Inventory'\"\n                                                class=\"mat-button inventory mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('Inventory')\">\n                                                <mat-icon>storage</mat-icon>\n                                                INVENTORY\n                                            </button>\n\n                                            <!-- Fixed Assets -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'FixedAssetsDepreciation'\"\n                                                class=\"mat-button fixed-assets mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('FixedAssetsDepreciation')\">\n                                                <mat-icon>account_balance</mat-icon>\n                                                FIXED ASSETS DEPRECIATION\n                                            </button>\n\n\n\n                                            <!-- Supplier Invoice -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'SupplierInvoice'\"\n                                                class=\"mat-button supplier-invoice mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('SupplierInvoice')\">\n                                                <mat-icon>description</mat-icon>\n                                                SUPPLIER INVOICE\n                                            </button>\n\n\n                                            <!-- Supplier Payment -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'SupplierPayment'\"\n                                                class=\"mat-button supplier-payment mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('SupplierPayment')\">\n                                                <mat-icon>payment</mat-icon>\n                                                SUPPLIER PAYMENT\n                                            </button>\n                                            <!-- Customer Invoice -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'CustomerInvoice'\"\n                                                class=\"mat-button customer-invoice mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('CustomerInvoice')\">\n                                                <mat-icon>description</mat-icon>\n                                                CUSTOMER INVOICE\n                                            </button>\n\n                                            <!-- Customer Payment -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'CustomerPayment'\"\n                                                class=\"mat-button customer-payment mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('CustomerPayment')\">\n                                                <mat-icon>payment</mat-icon>\n                                                CUSTOMER PAYMENT\n                                            </button>\n\n\n\n                                            <!-- ImprestApplication -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'ImprestApplication'\"\n                                                class=\"mat-button imprest-application mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('ImprestApplication')\">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                IMPREST APPLICATION\n                                            </button>\n\n                                            <!-- ImprestClearance -->\n                                            <!-- <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'ImprestClearance'\"\n                                                class=\"mat-button imprest-clearance mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('ImprestClearance')\">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                IMPREST CLEARANCE\n                                            </button> -->\n\n\n                                            <!-- Salaries -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'Salaries'\"\n                                                class=\"mat-button salaries mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('Salaries')\">\n                                                <mat-icon>monetization_on</mat-icon>\n                                                SALARIES\n                                            </button>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                                <div class=\"row mx-2\">\n\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Status:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                        <div class=\"button-container d-flex flex-wrap mt-1\">\n\n                                            <!-- Button for PENDING status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <!-- Button for APPROVED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <!-- Button for RETURNED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n\n                                            <!-- Button for REJECTED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </div>\n\n\n\n\n                            <div class=\"materialTableHeader mt-1\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <!-- Table Functions -->\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>System Transactions</h2>\n                                            </li>\n\n                                            <!-- Search Functions -->\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\">\n                                                    <i class=\"material-icons search-icon\"> search </i>\n                                                </label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"preTransactionLookup('Add')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <!-- Refresh Function -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n\n\n                                            <!-- Container element with *ngIf condition -->\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n\n                                        <!-- Export Functions -->\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <!-- XLSX export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n\n                                            <!-- CSV Export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n\n                                            <!-- TXT Export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Table content -->\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <!-- Select Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Id -->\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"table-img tbl-col-width-per-4\">\n                                        #\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-4\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"tranCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Tran Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.tranCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <!-- Reference Code -->\n                                <ng-container matColumnDef=\"referenceCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Reference Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.referenceCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Transaction Type -->\n                                <ng-container matColumnDef=\"transactionType\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        Transaction Type\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        {{ row.transactionType }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- PR Code -->\n                                <ng-container matColumnDef=\"prCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        PR Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.prCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"imprestAccountStatus\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">AccountStatus</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.imprestAccountStatus\">\n                                            <button *ngSwitchCase=\"'Full'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.imprestAccountStatus }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'Partial'\"\n                                                class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-adjust\"></i>&nbsp;\n                                                {{ row.imprestAccountStatus }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'Return'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.imprestAccountStatus }}\n                                            </button>\n                                            <button *ngSwitchDefault\n                                                class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ \"N.A\" }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <!-- Description -->\n                                <ng-container matColumnDef=\"description\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        Description\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        {{ row.description }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Posted By -->\n                                <ng-container matColumnDef=\"postedBy\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Posted By\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.postedBy }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Posted Time -->\n                                <ng-container matColumnDef=\"postedTime\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Posted Time\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.postedTime | date : 'medium'}}\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n                                <!-- Approval Status -->\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">Status</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault\n                                                class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-10 pr-0\"\n                                        *matHeaderCellDef>Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10 pr-0\">\n\n                                        <!-- Edit Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"preTransactionLookup('Update', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\"\n                                                [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                        </button>\n\n                                        <!-- View Button -->\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"preTransactionLookup('View', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button>\n\n                                        <!-- Delete Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteTransaction(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                    (click)=\"preTransactionLookup('View', row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                                \n                            </mat-table>\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                            (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                            [pageSize]=\"pageSize\" showFirstLastButtons>\n                        </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { TransactionsService } from 'src/app/erp-finance/data/services/transactions.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\nimport { AccountingJournalTransactionsComponent } from '../../dialogs/accounting-journal-transactions/accounting-journal-transactions.component';\n\n@Component({\n  selector: 'app-journals',\n  templateUrl: './journals.component.html',\n  styleUrls: ['./journals.component.scss']\n})\nexport class JournalsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"tranCode\",\n    \"referenceCode\",\n    \"transactionType\",\n    \"description\",\n    \"postedBy\",\n    \"postedTime\",\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private transactionService: TransactionsService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      approvalType: [\"AllJournals\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n  selectedTranStatus: string = \"PENDING\";\n  getSelectSelectedTranStatus() {\n    this.getData();\n  }\n  getSelectedTranStatus(tranStatus: any) {\n    this.Form.patchValue({\n      tranStatus: tranStatus,\n    });\n\n    this.getData();\n  }\n  selectedApprovalType: string = \"AllJournals\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData();\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData();\n  }\n\n\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n\n    let params = {\n      status: this.Form.value.status,\n      transactionType: 'Journals',\n    };\n    this.transactionService\n      .getTransactionsByStatusTransactionType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n  transactionAction: string = \"\";\n  transactionType: string = \"Journals\";\n  tranCode: string = \"\";\n  selectedRecord: any;\n\n  preTransactionLookup(action?: any, row?: any) {\n    if (action) {\n      this.transactionAction = action;\n    }\n    if (row) {\n      this.tranCode = row.tranCode;\n      this.selectedRecord = row;\n      this.transactionType = row.transactionType;\n    }\n\n    this.transactionLookUp();\n  }\n\n  transactionLookUp() {\n    let addBody: any;\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n      };\n    }\n\n    console.log(\"this.selectedRecord:; \", this.selectedRecord);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.selectedRecord,\n      bodyForAdd: addBody,\n      tranCode: this.tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      this.getData();\n\n      result.data.forEach((element) => {});\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  deleteTransaction(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Transaction?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Transaction!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = { id: id };\n\n        this.transactionService\n          .deleteTransactionsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  selectedRows: any[] = [];\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n        PostJournals: \"Post Journals\"\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        }else if (selectedUserType === \"PostJournals\") {\n          privilege = \"Post Journals\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selection.selected.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              }else if (selectedUserType === \"PostJournals\") {\n                newSelectedUserType = \"Post Journals\";\n              }\n\n              let params = { approvalType: newSelectedUserType };\n\n              console.log(\"params: \", params);\n\n              this.transactionService\n                .validateTransactions(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData();\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All System Journals'\" [items]=\"['Journals']\"\n                [active_item]=\"'All System Journals'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n\n\n                            <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                                <div class=\"row mx-2\">\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Approval Type:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                        <div class=\"button-container d-flex flex-wrap mt-1\">\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedApprovalType === 'AllJournals'\"\n                                                class=\"mat-button all-payables mb-1\"\n                                                (click)=\"getApprovalTypeSelectedStatus('AllJournals')\">\n                                                <mat-icon>description</mat-icon>\n                                                ALL JOURNALS\n                                            </button>\n\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedApprovalType === 'Finance Manager'\"\n                                                class=\"mat-button finance-manager mb-1\"\n                                                (click)=\"getApprovalTypeSelectedStatus('Finance Manager')\">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                FINANCE MANAGER\n                                            </button>\n\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedApprovalType === 'Senior Finance Manager'\"\n                                                class=\"mat-button senior-finance-manager mb-1\"\n                                                (click)=\"getApprovalTypeSelectedStatus('Senior Finance Manager')\">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                SENIOR FINANCE\n                                            </button>\n\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedApprovalType === 'Head of Finance And Strategy'\"\n                                                class=\"mat-button head-of-finance-strategy mb-1\"\n                                                (click)=\"getApprovalTypeSelectedStatus('Head of Finance And Strategy')\">\n                                                <mat-icon>supervisor_account</mat-icon>\n                                                HEAD OF FINANCE\n                                            </button>\n\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedApprovalType === 'Managing Director And CEO'\"\n                                                class=\"mat-button managing-director-ceo mb-1\"\n                                                (click)=\"getApprovalTypeSelectedStatus('Managing Director And CEO')\">\n                                                <mat-icon>person_pin</mat-icon>\n                                                MANAGING DIRECTOR\n                                            </button>\n\n\n\n                                            <button mat-raised-button [class.active]=\"\n                                            selectedApprovalType === 'Post Journals'\n                                          \" class=\"mat-button post-journals-transactions mb-1\" (click)=\"\n                                            getApprovalTypeSelectedStatus(\n                                              'Post Journals'\n                                            )\n                                          \">\n                                                <mat-icon>attach_money</mat-icon>\n                                                Post Journals\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n                                <div class=\"row mx-2\">\n                                    <ng-container>\n                                        <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                            <h2>Status:</h2>\n                                        </div>\n\n                                        <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                            <div class=\"button-container d-flex flex-wrap mt-1\">\n\n                                                <!-- Button for PENDING status -->\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                    class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                    <mat-icon>pending</mat-icon>\n                                                    PENDING\n                                                </button>\n\n                                                <!-- Button for APPROVED status -->\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                    class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                    <mat-icon>thumb_up</mat-icon>\n                                                    APPROVED\n                                                </button>\n                                                <!-- Button for RETURNED status -->\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                    class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                    <mat-icon>reply</mat-icon>\n                                                    RETURNED\n                                                </button>\n\n                                                <!-- Button for REJECTED status -->\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                    class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                    <mat-icon>cancel</mat-icon>\n                                                    REJECTED\n                                                </button>\n\n\n\n                                                <!-- Button for SUCCESS status -->\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'SUCCESS'\"\n                                                    class=\"mat-button success\" (click)=\"getSelectedStatus('SUCCESS')\">\n                                                    <mat-icon>done</mat-icon>\n                                                    SUCCESS\n                                                </button>\n\n                                                <!-- Button for FAILED status -->\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'FAILED'\"\n                                                    class=\"mat-button failed\" (click)=\"getSelectedStatus('FAILED')\">\n                                                    <mat-icon>clear</mat-icon>\n                                                    FAILED\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </ng-container>\n\n                                </div>\n                            </div>\n\n\n\n\n                            <div class=\"materialTableHeader mt-1\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <!-- Table Functions -->\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>System Journals</h2>\n                                            </li>\n\n                                            <!-- Search Functions -->\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\">\n                                                    <i class=\"material-icons search-icon\"> search </i>\n                                                </label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"preTransactionLookup('Add')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <!-- Refresh Function -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n\n\n                                            <!-- Container element with *ngIf condition -->\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n\n                                        <!-- Export Functions -->\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <!-- XLSX export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n\n                                            <!-- CSV Export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n\n                                            <!-- TXT Export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Table content -->\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <!-- Select Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Id -->\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"table-img tbl-col-width-per-4\">\n                                        #\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-4\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"tranCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Tran Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.tranCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <!-- Reference Code -->\n                                <ng-container matColumnDef=\"referenceCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Reference Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.referenceCode || 'N/A' }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Transaction Type -->\n                                <ng-container matColumnDef=\"transactionType\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        Transaction Type\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        {{ row.transactionType }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- PR Code -->\n                                <ng-container matColumnDef=\"prCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        PR Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.prCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"imprestAccountStatus\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">AccountStatus</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.imprestAccountStatus\">\n                                            <button *ngSwitchCase=\"'Full'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.imprestAccountStatus }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'Partial'\"\n                                                class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-adjust\"></i>&nbsp;\n                                                {{ row.imprestAccountStatus }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'Return'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.imprestAccountStatus }}\n                                            </button>\n                                            <button *ngSwitchDefault\n                                                class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ \"N.A\" }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <!-- Description -->\n                                <ng-container matColumnDef=\"description\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        Description\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        {{ row.description }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Posted By -->\n                                <ng-container matColumnDef=\"postedBy\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Posted By\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.postedBy }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Posted Time -->\n                                <ng-container matColumnDef=\"postedTime\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Posted Time\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.postedTime | date : 'medium'}}\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n                                <!-- Approval Status -->\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">Status</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n\n                                            <button *ngSwitchCase=\"'FAILED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n\n                                            <button *ngSwitchCase=\"'SUCCESS'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n\n                                            <button *ngSwitchDefault\n                                                class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-10 pr-0\"\n                                        *matHeaderCellDef>Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10 pr-0\">\n\n                                        <!-- Edit Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"preTransactionLookup('Update', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\"\n                                                [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                        </button>\n\n                                        <!-- View Button -->\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"preTransactionLookup('View', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button>\n\n                                        <!-- Delete Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteTransaction(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                    (click)=\"preTransactionLookup('View', row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"4\">\n                                    No data matching the filter \"{{ input.value }}\"</mat-cell>\n                            </mat-table>\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\"></mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { TransactionsService } from 'src/app/erp-finance/data/services/transactions.service';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\nimport { AccountingJournalTransactionsComponent } from '../../dialogs/accounting-journal-transactions/accounting-journal-transactions.component';\n\n@Component({\n  selector: 'app-third-party-transactions',\n  templateUrl: './third-party-transactions.component.html',\n  styleUrls: ['./third-party-transactions.component.scss']\n})\nexport class ThirdPartyTransactionsComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"tranCode\",\n    \"referenceCode\",\n    \"transactionType\",\n    \"prCode\",\n    \"description\",\n    \"postedBy\",\n    \"postedTime\",\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private transactionService: TransactionsService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      transactionType: [\"Receiving\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  selectedTransactionType: string = \"Receiving\";\n  getTransactionTypeSelectSelectedStatus() {\n    this.getData();\n  }\n  getTransactionTypeSelectedStatus(transactionType: any) {\n    this.Form.patchValue({\n      transactionType: transactionType,\n    });\n\n    this.getData();\n  }\n\n  alignTableColumns() {\n    if (this.Form.value.transactionType === \"Receiving\") {\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"tranCode\",\n        \"referenceCode\",\n        \"transactionType\",\n        \"prCode\",\n        \"description\",\n        \"postedBy\",\n        \"postedTime\",\n        \"status\",\n        \"action\",\n      ];\n    }else if (this.Form.value.transactionType === \"ImprestApplication\" ||\n    this.Form.value.transactionType === \"ImprestClearance\") {\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"tranCode\",\n        \"referenceCode\",\n        \"transactionType\",\n        \"imprestAccountStatus\",\n        \"description\",\n        \"postedBy\",\n        \"postedTime\",\n        \"status\",\n        \"action\",\n      ];\n\n    } else if (\n      this.Form.value.transactionType === \"Inventory\" ||\n      this.Form.value.transactionType === \"Invoice\" ||\n      this.Form.value.transactionType === \"Payment\" ||\n      this.Form.value.transactionType === \"CustomerInvoice\" ||\n      this.Form.value.transactionType === \"SupplierInvoice\" ||\n      this.Form.value.transactionType === \"SupplierPayment\" ||\n      this.Form.value.transactionType === \"CustomerPayment\" ||\n      this.Form.value.transactionType === \"Disbursement\" ||\n      this.Form.value.transactionType === \"Salaries\"\n    ) {\n      this.displayedColumns = [\n        \"select\",\n        \"id\",\n        \"tranCode\",\n        \"referenceCode\",\n        \"transactionType\",\n        \"description\",\n        \"postedBy\",\n        \"postedTime\",\n        \"status\",\n        \"action\",\n      ];\n    }\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedTransactionType = this.Form.value.transactionType;\n\n    let params = {\n      status: this.Form.value.status,\n      transactionType: this.Form.value.transactionType,\n    };\n    this.alignTableColumns();\n    this.transactionService\n      .getTransactionsByStatusTransactionType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n  transactionAction: string = \"\";\n  transactionType: string = \"\";\n  tranCode: string = \"\";\n  selectedRecord: any;\n\n  preTransactionLookup(action?: any, row?: any) {\n    if (action) {\n      this.transactionAction = action;\n    }\n    if (row) {\n      this.tranCode = row.tranCode;\n      this.selectedRecord = row;\n      this.transactionType = row.transactionType;\n    }\n\n    this.transactionLookUp();\n  }\n\n  transactionLookUp() {\n    console.log(\"this.selectedRecord:; \", this.selectedRecord);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.selectedRecord,\n      bodyForAdd: \"\",\n      tranCode: this.tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {});\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  deleteTransaction(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Transaction?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Transaction!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = { id: id };\n\n        this.transactionService\n          .deleteTransactionsTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.selection.selected.map((element) => {\n                return {\n                  id: element.id,\n                  status: status,\n                  verifierRemarks: verifierRemarks,\n                };\n              });\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              }\n\n              let params = { approvalType: newSelectedUserType };\n\n              console.log(\"params: \", params);\n\n              this.transactionService\n                .validateTransactions(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData();\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Third Party Transactions'\" [items]=\"['Transactions']\"\n                [active_item]=\"'Third Party Transactions'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                 <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n                        <div class=\"table-responsive\">\n\n\n                            <div class=\"materialTableHeaderCustom mx-0\">\n                                <div class=\"row mx-2\">\n\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Transaction Type:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                        <div class=\"button-container d-flex flex-wrap mt-1\">\n                                           \n\n                                            <!-- Supplier Payment -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'SupplierPayment'\"\n                                                class=\"mat-button supplier-payment mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('SupplierPayment')\">\n                                                <mat-icon>payment</mat-icon>\n                                                SUPPLIER PAYMENT\n                                            </button>\n\n                                            <!-- Customer Payment -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'CustomerPayment'\"\n                                                class=\"mat-button customer-payment mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('CustomerPayment')\">\n                                                <mat-icon>payment</mat-icon>\n                                                CUSTOMER PAYMENT\n                                            </button>\n\n                                            <!-- Disbursement -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'Disbursement'\"\n                                                class=\"mat-button disbursement mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('Disbursement')\">\n                                                <mat-icon>money_off</mat-icon>\n                                                DISBURSEMENT\n                                            </button>\n\n                                            <!-- ImprestApplication -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'ImprestApplication'\"\n                                                class=\"mat-button imprest-application mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('ImprestApplication')\">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                IMPREST APPLICATION\n                                            </button>\n\n                                            <!-- ImprestClearance -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'ImprestClearance'\"\n                                                class=\"mat-button imprest-clearance mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('ImprestClearance')\">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                IMPREST CLEARANCE\n                                            </button>\n\n\n                                            <!-- Salaries -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedTransactionType === 'Salaries'\"\n                                                class=\"mat-button salaries mb-1\"\n                                                (click)=\"getTransactionTypeSelectedStatus('Salaries')\">\n                                                <mat-icon>monetization_on</mat-icon>\n                                                SALARIES\n                                            </button>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </div>\n\n\n                            <div class=\"materialTableHeaderCustom mt-2\">\n                                <div class=\"row mx-2\">\n\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Status:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12\">\n                                        <div class=\"button-container\">\n                                            <!-- Button for PENDING status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <!-- Button for APPROVED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <!-- Button for RETURNED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n\n                                            <!-- Button for REJECTED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <!-- Table Functions -->\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Third Party Transactions</h2>\n                                            </li>\n\n                                            <!-- Search Functions -->\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\">\n                                                    <i class=\"material-icons search-icon\"> search </i>\n                                                </label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"preTransactionLookup('Add')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <!-- Refresh Function -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n\n\n                                            <!-- Container element with *ngIf condition -->\n                                            <li *ngIf=\"this.selectedRows.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"this.selectedRows.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"this.selectedRows.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n\n                                        <!-- Export Functions -->\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <!-- XLSX export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n\n                                            <!-- CSV Export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n\n                                            <!-- TXT Export -->\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Table content -->\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <!-- Select Column -->\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Id -->\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"table-img tbl-col-width-per-4\">\n                                        #\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-4\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"tranCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Tran Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.tranCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <!-- Reference Code -->\n                                <ng-container matColumnDef=\"referenceCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Reference Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        {{ row.referenceCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Transaction Type -->\n                                <ng-container matColumnDef=\"transactionType\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        Transaction Type\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        {{ row.transactionType }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- PR Code -->\n                                <ng-container matColumnDef=\"prCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        PR Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.prCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"imprestAccountStatus\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">AccountStatus</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\" (click)=\"$event.stopPropagation()\">\n                                      <ng-container [ngSwitch]=\"row.imprestAccountStatus\">\n                                        <button *ngSwitchCase=\"'Full'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                          {{ row.imprestAccountStatus }}\n                                        </button>\n                                        <button *ngSwitchCase=\"'Partial'\" class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-adjust\"></i>&nbsp;\n                                          {{ row.imprestAccountStatus }}\n                                        </button>\n                                        <button *ngSwitchCase=\"'Return'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                          {{ row.imprestAccountStatus }}\n                                        </button>\n                                        <button *ngSwitchDefault class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                          <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                          {{ \"N.A\" }}\n                                        </button>\n                                      </ng-container>\n                                    </mat-cell>\n                                  </ng-container>\n                                  \n\n                                <!-- Description -->\n                                <ng-container matColumnDef=\"description\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        Description\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-12\">\n                                        {{ row.description }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Posted By -->\n                                <ng-container matColumnDef=\"postedBy\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Posted By\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.postedBy }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Posted Time -->\n                                <ng-container matColumnDef=\"postedTime\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Posted Time\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.postedTime | date : 'medium'}}\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n                                <!-- Approval Status -->\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">Status</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault\n                                                class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-10 pr-0\"\n                                        *matHeaderCellDef>Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10 pr-0\">\n\n                                        <!-- Edit Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"preTransactionLookup('Update', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\"\n                                                [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                        </button>\n\n                                        <!-- View Button -->\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"preTransactionLookup('View', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\"\n                                                [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                                        </button>\n\n                                        <!-- Delete Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteTransaction(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                    (click)=\"preTransactionLookup('View', row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n                                <mat-cell *matNoDataRow colspan=\"4\">\n                                    No data matching the filter \"{{ input.value }}\"</mat-cell>\n                            </mat-table>\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\"></mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { CustomerValidationComponent } from \"src/app/erp-finance/data/lookups/validation/customer-validation/customer-validation.component\";\nimport { CustomerManagementService } from \"src/app/erp-finance/data/services/customer-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-customers\",\n  templateUrl: \"./all-customers.component.html\",\n  styleUrls: [\"./all-customers.component.sass\"],\n})\nexport class AllCustomersComponent implements OnInit {\n  //table columns\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"customerCode\",\n    \"customerName\",\n    \"customerType\",\n    \"paymentMethod\",\n    \"currency\",\n    \"status\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  validationIsLoading: any;\n  dialogRef: any;\n  hideValidation: any;\n\n  Form: FormGroup;\n\n  // ****************************************************************************************************************************\n  //dependency injection\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private customerManService: CustomerManagementService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  // data filtering\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //***************************************************************************************************************\n  // Find by status\n\n  //**********************************************************************************************************\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n    };\n\n    this.customerManService\n      .getCustomersByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  // ****************************************************************************************************************************\n  //adding customers\n  addCustomer() {\n    this.router.navigate([\"/erp-finance/finance-management/manage-customers\"]);\n  }\n\n  //Updating the customers\n\n  editCustomer(data: any) {\n\n    let route = \"/erp-finance/finance-management/manage-customers\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the customers\n  viewCustomer(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-finance/finance-management/manage-customers\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n\n  //Validating a single customer\n  validatingCustomer(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-finance/finance-management/manage-customers\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        additionalData: serializedData,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting customers\n\n  deleteCustomer(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Customer will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Customer \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.customerManService\n          .deleteCustomer(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\n                  \"snackbar-success\",\n                  res.message\n                );\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n               err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  // ****************************************************************************************************************************\n\n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    let privilege = \"Dashboard\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.customerManService\n            .validateCustomers(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Customers'\" [items]=\"['Customers']\" [active_item]=\"'All Customers'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Customers</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addCustomer()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                     <!-- Container element with *ngIf condition -->\n                     <li *ngIf=\"this.selectedRows.length > 0\">\n                      <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                          class=\"mat-button-custom\">\n                          <mat-icon class=\"col-white\">check</mat-icon>\n                        </button>\n                      </div>\n                    </li>\n                    <li *ngIf=\"this.selectedRows.length > 0\">\n                      <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                        <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                          class=\"mat-button-custom\">\n                          <mat-icon class=\"col-white\">cancel</mat-icon>\n                        </button>\n                      </div>\n                    </li>\n                    <li *ngIf=\"this.selectedRows.length > 0\">\n                      <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                        <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                          class=\"mat-button-custom\">\n                          <mat-icon class=\"col-white\">undo</mat-icon>\n                        </button>\n                      </div>\n                    </li>\n                     \n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                            <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n    \n                          </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                            class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                            <mat-icon>check_circle</mat-icon>\n                            VERIFIED\n                          </button> -->\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n\n              <!-- Table Definition -->\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n                <!-- Select Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-4\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" class=\"tbl-checkbox\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-4\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" class=\"tbl-checkbox\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n\n                <!-- id -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-9\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">\n                    {{row.id}}\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <!-- Customer Code   -->\n                <ng-container matColumnDef=\"customerCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Customer Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    <span class=\"mat-table-emboss\">\n                      {{row.customerCode}}\n                    </span>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Customer Name   -->\n                <ng-container matColumnDef=\"customerName\" class=\"emboss\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Customer Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.customerName}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Customer Type  -->\n                <ng-container matColumnDef=\"customerType\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Customer Type\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.customerType}}\n                  </mat-cell>\n                </ng-container>\n\n\n                <!--  Payment Method   -->\n                <ng-container matColumnDef=\"paymentMethod\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Payment Method\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.paymentMethod}}\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Currency    -->\n                <ng-container matColumnDef=\"currency\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\n                    Currency\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.currency}}\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <!-- Status -->\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Status\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n\n\n                <!-- Action Buttons -->\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\" *matHeaderCellDef>\n                    Action\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                    <!--  Verify Button -->\n                    <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"validatingCustomer(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button> -->\n\n                    <!-- Edit Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"editCustomer(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- View Button  -->\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewCustomer(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                      </app-feather-icons>\n                    </button>\n\n                    <!-- Delete Button -->\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteCustomer(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                      </app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                </mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewCustomer(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{input.value}}\"\n                </mat-cell>\n              </mat-table>\n\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, Subscription, takeUntil, BehaviorSubject } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { CustomerManagementService } from \"src/app/erp-finance/data/services/customer-management.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\n\n//file upload\nimport * as XLSX from \"xlsx\";\nimport { MaintainedCurrenciesLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component\";\nimport { ExpenseValidationComponent } from \"src/app/erp-finance/data/lookups/validation/expense-validation/expense-validation.component\";\nimport { CustomerValidationComponent } from \"src/app/erp-finance/data/lookups/validation/customer-validation/customer-validation.component\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { PaymentMethodsLookUpComponent } from \"src/app/erp-finance/data/lookups/payment-methods-look-up/payment-methods-look-up.component\";\nimport { CustomerTypeLookupComponent } from \"src/app/erp-finance/data/lookups/customer-type-lookup/customer-type-lookup.component\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { BanksLookupComponent } from \"src/app/erp-finance/data/lookups/banks-lookup/banks-lookup.component\";\nimport { BranchesLookupComponent } from \"src/app/erp-finance/data/lookups/branches-lookup/branches-lookup.component\";\n\n@Component({\n  selector: \"app-manage-customers\",\n  templateUrl: \"./manage-customers.component.html\",\n  styleUrls: [\"./manage-customers.component.sass\"],\n})\nexport class ManageCustomersComponent implements OnInit {\n  // ****************************************************************************************************************************\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  disableActions = false;\n  hideApprovals = false;\n  // ***************************************************************\n  //excel columns\n  excelHeaderRef: any[] = [\n    \"customerCode\",\n    \"customerName\",\n    \"customerType\",\n    \"paymentMethod\",\n    \"currency\",\n  ];\n  isLoading: any;\n  customertypes: String[] = [\"Type A\", \"Type B\"];\n\n  hidden: boolean = true;\n\n  // File Tabulation\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private customerManService: CustomerManagementService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private costManService: CostCentreManagementService,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private filesService: FilesService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization\n  ngOnInit(): void {\n    this.getPage();\n    // this.getcostCenter();\n    this.showForm = true;\n    this.route.queryParams.subscribe((params) => {\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        this.pageFunction = action;\n        if (action === \"Verify\") {\n          this.disableActions = true;\n        }\n        this.id = params[\"id\"];\n\n        this.getDataById();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.customerManService\n      .getCustomersById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n\n            if (this.formData.customerSupportingDocumentsList.length > 0) {\n              this.isFileDataLoading = false;\n              this.formData.customerSupportingDocumentsList.forEach(\n                (element) => {\n                  const newRow = this.fb.group({\n                    file: [element.file],\n                    fileName: [element.fileName],\n                    fileType: [element.fileType],\n                  });\n                  this.rows.push(newRow);\n                }\n              );\n\n              this.updateView();\n            }\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateForm();\n    } else if (this.pageFunction === \"View\") {\n      this.generateForm();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Verify\") {\n      this.generateForm();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  // ****************************************************************************************************************************\n  generateForm(formData?): void {\n    this.mngForm = this.fb.group({\n      id: [formData?.id || \"\"],\n      customerName: [formData?.customerName || \"\", [Validators.required]],\n      customerEmail: [\n        formData?.customerEmail || \"\",\n        [Validators.required, Validators.email],\n      ],\n      customerType: [formData?.customerType || \"\", [Validators.required]],\n      bankName: [formData?.bankName || \"\", [Validators.required]],\n      bankAc: [formData?.bankAc || \"\", [Validators.required]],\n      toBankID: [formData?.toBankID || \"\", [Validators.required]],\n      branchName: [formData?.branchName || \"\", [Validators.required]],\n      toBranchID: [formData?.toBranchID || \"\", [Validators.required]],\n      customerSupportingDocumentsList: [\n        formData?.customerSupportingDocumentsList || [],\n      ],\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel() {\n    console.log(\"Before routing\");\n    this.router.navigate([\"/erp-finance/finance-management/all-customers\"]);\n  }\n\n  // ****************************************************************************************************************************\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        taxName: [item.taxName, [Validators.required]],\n        taxRate: [item.taxRate, [Validators.required]],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"taxTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // ***************************************************************************************************************************\n\n  // ****************************************************************************************************************************\n  //  currency Loook Up\n  selectedItem: any[] = [];\n  _currencyLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedCurrenciesLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode,\n        });\n      });\n    });\n  }\n\n  //  Payment Method Loook Up\n  _paymentMethodLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      PaymentMethodsLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          paymentMethod: element.paymentMethodType,\n        });\n      });\n    });\n  }\n\n  //  Customer Type Loook Up\n\n  _customerTypeMethod() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      CustomerTypeLookupComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          customerType: element.customerTypeName,\n        });\n      });\n    });\n  }\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate(userType) {\n    let privilege = \"Customer Validation\";\n    // let privilege = \"All Currencies\";\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType,\n      };\n      console.log(\"this.formData: \", this.formData);\n      const dialogRef = this.dialog.open(\n        CustomerValidationComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-finance/finance-management/all-customers\"]);\n      });\n    }\n  }\n  //******************************************************************************************************************************************************** */\n  // **************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"filename\",\n    \"filetype\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  // file: trerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrtysdfxzdgjr634racxzvcnfgerewrsa,\n  // filename: currFilename,\n  // filetype: currFiletype},\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n\n    this.mngForm.patchValue({\n      customerSupportingDocumentsList: this.documentsForm.value.filedetails,\n    });\n  }\n\n  // deleteCall(index){\n  //   this.dataSource.splice(index, 1);\n  // }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currFilename: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currFilename = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          fileName: this.currFilename,\n          fileType: this.currType,\n        });\n        console.log(\n          \"this.documentsForm.value.filedetails: \",\n          this.selectedFiles\n        );\n\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let filename = row.value.fileName;\n    let filetype = row.value.fileType;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${filename}.${filetype}`;\n    link.click();\n  }\n\n  // ****************************************************************************************************************************\n  banksLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Bank\",\n    };\n\n    const dialogRef = this.dialog.open(BanksLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        bankName: result.data[0].BankName,\n        toBankID: result.data[0].BankID,\n      });\n    });\n  }\n\n  branchesLookUp() {\n    if (\n      this.mngForm.value.toBankID !== null &&\n      this.mngForm.value.toBankID !== \"\" &&\n      this.mngForm.value.toBankID !== undefined\n    ) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"Single Branch\",\n        bankId: this.mngForm.value.toBankID,\n      };\n\n      const dialogRef = this.dialog.open(BranchesLookupComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"lookup response: \", result.data);\n\n        if (result && result.data && result.data.length > 0) {\n          this.mngForm.patchValue({\n            branchName: result.data[0].BranchName,\n            toBranchID: result.data[0].BranchID,\n          });\n        }\n      });\n    } else {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"Please select a bank before entering the branch.\"\n      );\n    }\n  }\n  //submit button function\n\n  submit() {\n    console.log(\"Both: \", this.mngForm.value);\n\n    if (this.pageFunction === \"Add\") {\n      this.customerManService\n        .addCustomers(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res.status: \", res.statusCode);\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-management/all-customers\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.customerManService\n        .updateCustomers(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-management/all-customers\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    }\n  }\n\n  //uploading batch customers files\n\n  submitBatch() {\n    console.log(\"submitting batch\");\n\n    if (this.pageFunction === \"Add\") {\n      this.customerManService\n        .uploadBatchCustomers(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-finance/finance-management/all-customers\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Customers'\" [items]=\"['Customers']\" [active_item]=\"'Manage Customers'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #007bff\">\n                                {{ formData.postedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Posted Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #e81c62\">\n                                {{ formData.postedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verified By</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-blue\" style=\"color: #fff; background-color: #28a745\">\n                                {{ formData.verifiedBy }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-3 col-md-4 col-sm-12 col-xs-12\">\n                          <div class=\"chat-about\">\n                            <div class=\"chat-with\">Verification Date</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-pink\" style=\"color: #fff; background-color: #d35400\">\n                                {{ formData.verifiedTime | date : \"medium\" }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12\">\n                          <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with\">Verifier Remarks</div>\n                            <div class=\"chat-num-messages mt-2\">\n                              <div class=\"badge badge-solid-green\" style=\"color: #fff; background-color: #004840\">\n                                {{ formData.verifierRemarks }}\n                              </div>\n                            </div>\n                          </div>\n                          <!-- <div class=\"chat-about mt-2 remarks-container\">\n                            <div class=\"chat-with remarks\">\n                              <strong>Approvers Remarks:</strong>\n                              <span class=\"remarks-content mx-2\">{{ formData.hodRemarks }}</span>\n                            </div>\n                          </div> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                <mat-tab label=\"ADD A CUSTOMER\">\n                  <div class=\"row clearfix mx-2 mt-4 m-3\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n\n                      <!-- <div class=\"header\">\n                        <div class=\"row\">\n                          <h2>\n                            {{ pageFunction }} Customers\n                          </h2>\n                        </div>\n                      </div> -->\n                      <!-- <div class=\"row\">\n                        <div class=\"col-12\">\n                        </div>\n                      </div> -->\n                      <div>\n\n                        <form [formGroup]=\"mngForm\">\n                          <div class=\"row\">\n\n                            <!-- Customer Name -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Customer Name\n                                </mat-label>\n                                <input matInput formControlName=\"customerName\" />\n                                <mat-error *ngIf=\"mngForm.get('customerName').hasError('required')\">\n                                  Customer Name is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Customer Email\n                                </mat-label>\n                                <input matInput formControlName=\"customerEmail\" />\n                                <mat-error *ngIf=\"mngForm.get('customerEmail').hasError('required')\">\n                                  Customer Email is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                            <!-- Customer Type -->\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Customer Type\n                                </mat-label>\n                                <input matInput formControlName=\"customerType\" />\n                                <mat-icon matSuffix (click)=\"_customerTypeMethod()\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('customerType').hasError('required')\">\n                                  Customer Type is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Bank Name</mat-label>\n                                <input matInput formControlName=\"bankName\" required />\n                                <mat-icon matSuffix (click)=\"banksLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('bankName').hasError('required')\">Bank Name is\n                                  required</mat-error>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>To Bank ID</mat-label>\n                                <input matInput formControlName=\"toBankID\" required />\n                                <mat-error *ngIf=\"mngForm.get('toBankID').hasError('required')\">To Bank ID is\n                                  required</mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Branch Name</mat-label>\n                                <input matInput formControlName=\"branchName\" required />\n                                <mat-icon matSuffix (click)=\"branchesLookUp()\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('branchName').hasError('required')\">Branch Name is\n                                  required</mat-error>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>To Branch ID</mat-label>\n                                <input matInput formControlName=\"toBranchID\" required />\n                                <mat-error *ngIf=\"mngForm.get('toBranchID').hasError('required')\">To Branch ID is\n                                  required</mat-error>\n                              </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                <mat-label>Bank Account</mat-label>\n                                <input matInput formControlName=\"bankAc\" required />\n                                <mat-error *ngIf=\"mngForm.get('bankAc').hasError('required')\">Bank Account is\n                                  required</mat-error>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- Currency  -->\n                            <!-- <div class=\"col-xl-3 col-lg-23col-md-12 col-sm-12 mb-3\">\n                              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                <mat-label>\n                                  Currency\n                                </mat-label>\n                                <input matInput formControlName=\"currency\" readonly />\n                                <mat-icon matSuffix (click)=\"_currencyLookup()\">search</mat-icon>\n                                <mat-error *ngIf=\"mngForm.get('currency').hasError('required')\">\n                                  Currency is required\n                                </mat-error>\n                              </mat-form-field>\n                            </div> -->\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n\n                  <ng-template mat-tab-label>\n                    {{pageFunction}} Customers\n                  </ng-template>\n                  <div class=\"mt-3\">\n                    <!-- Content for the second tab -->\n                    <ng-container *ngIf=\"!hideBgtButtons\">\n                      <form [formGroup]=\"documentsForm\">\n                        <!-- <form [formGroup]=\"form\"> -->\n\n                        <div style=\"margin: 20px\">\n                          <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                              <div class=\"row\">\n                                <div class=\"col-8\">\n                                  <ul class=\"header-buttons-left ms-0\">\n                                    <li class=\"dropdown\">\n                                      <h2>Upload Documents</h2>\n                                    </li>\n                                    <li class=\"dropdown m-l-20\">\n                                      <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                                      <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                                        class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                    </li>\n\n                                    <li>\n                                      <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                        <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                          <mat-icon class=\"col-white\">add</mat-icon>\n                                        </button>\n                                      </div>\n                                    </li>\n                                  </ul>\n                                </div>\n                                <div class=\"col-4\"></div>\n                              </div>\n                            </div>\n\n                            <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                            <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                              formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n\n                              <ng-container matColumnDef=\"id\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                  {{ index + 1 }}\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"filename\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filename</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                  <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                    <mat-label>Filename</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"fileName\" placeholder=\"Filename\"\n                                      maxlength=\"50\" />\n                                  </mat-form-field>\n                                </mat-cell>\n                              </ng-container>\n                              <ng-container matColumnDef=\"filetype\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filetype</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                  <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                    <mat-label>Filetype</mat-label>\n                                    <input matInput type=\"text\" formControlName=\"fileType\" placeholder=\"Filetype\"\n                                      maxlength=\"50\" />\n                                  </mat-form-field>\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"selectFile\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                                  File</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                                  <input #file type=\"file\" [disabled]=\"isLoading | async\"\n                                    (change)=\"onSelectFile(file.files, row, index)\" [multiple]=\"'multiple'\" />\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"download\">\n                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                  *matHeaderCellDef>Download</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                  <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                    <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                                  </button>\n                                </mat-cell>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"action\">\n                                <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                  *matHeaderCellDef>Action</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row; let i = index\"\n                                  class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                  <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                    (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                    <app-feather-icons [icon]=\"'trash-2'\"\n                                      [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                  </button>\n                                </mat-cell>\n                              </ng-container>\n\n                              <!-- Row definitions -->\n                              <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                              <mat-row *matRowDef=\"\n                                  let row;\n                                  let i = index;\n                                  columns: displayColumns\n                                \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                              <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                                input.value\n                                }}\"</mat-cell>\n                            </mat-table>\n\n                            <!-- Loading spinner -->\n                            <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                              </mat-progress-spinner>\n                            </div>\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                              aria-label=\"Select page of users\"></mat-paginator>\n                          </div>\n                        </div>\n                      </form>\n                    </ng-container>\n\n\n                    <!-- Action Buttons -->\n                    <div class=\"row mx-3\">\n                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                        <div mat-dialog-action [align]=\"'end'\">\n                          <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                            (click)=\"cancel()\">\n                            Cancel\n                          </button>\n                          <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                            Submit\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n\n\n\n                  <!-- Second Tab -->\n                </mat-tab>\n\n                <!-- <mat-icon>attach_file</mat-icon>\n                <mat-tab label=\"Customer Mass Upload\" [hidden]=\"hidden\">\n\n                  <div [hidden]=\"hideSubmit\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4\">\n                        <div class=\"row clearfix\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-xl-11 col-lg-11 col-md-8 col-sm-6\">\n                            <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                          </div>\n                          <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n                            <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                              (click)=\"downloadTemplate()\">\n                              <i class=\"fa fa-download\"></i> Excel Template\n                            </button>\n                          </div>\n                        </div>\n\n                        <div class=\"mt-4 mx-0\">\n                          <div style=\"\n                        display: flex;\n                        flex-wrap: wrap;\n                        margin-right: 10px;\n                        margin-bottom: 10px;\n                      \">\n                            <mat-chip-list aria-label=\"Fish selection\">\n                              <mat-chip color=\"accent\" selected *ngFor=\"\n                            let itemError of itemErrors;\n                            let i = index\n                          \">\n                                <span>{{ i + 1 }}. </span>\n                                {{ itemError.field }}: {{ itemError.message }}\n                                <mat-icon>error</mat-icon>\n                              </mat-chip>\n                            </mat-chip-list>\n                          </div>\n\n                          <div class=\"card\">\n                            <div class=\"header\">\n                              <h2>Taxes</h2>\n                            </div>\n                            <div class=\"tableBody\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table table-hover\">\n                                  <thead>\n                                    <tr>\n                                      <th>TaxName</th>\n                                      <th>TaxRate</th>\n\n\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    <tr *ngFor=\"let item of items\">\n                                      <td>{{ item.taxName }}</td>\n                                      <td>{{ item.taxRate }}</td>\n\n\n\n                                    </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <br />\n                  <div class=\"row mx-4 mt-4\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                      <div mat-dialog-action [align]=\"'end'\">\n                        <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                          (click)=\"cancel()\">\n                          Cancel\n                        </button>\n                        <button *ngIf=\"items.length > 0\" mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                          [class.auth-spinner]=\"posting\" [disabled]=\"posting\" (click)=\"submitBatch()\">\n                          Submit Batch\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n\n                </mat-tab> -->\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RequisitionService {\n  constructor(private http: HttpClient) {}\n\n  // http://localhost:9090/api/v1/purchaseRequisition/view\n\n  getRequisitions(): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/view`;\n    return this.http.get<any[]>(RequisitionssUrl);\n  }\n\n  getRequisitionsByStatus(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/all/by/approval/status`;\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  getRequisitionsById(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/by/id`;\n\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  getRequisitionsByCode(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/by/code`;\n\n    return this.http.get<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  addRequisitions(data: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/add`;\n    return this.http.post<any>(RequisitionssUrl, data);\n  }\n\n  updateRequisitions(RequisitionsDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update`;\n    return this.http.put<any>(updateBillUrl, RequisitionsDetails);\n  }\n\n  deleteRequisitionsTemporarily(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/delete`;\n    return this.http.delete<any[]>(RequisitionssUrl, {\n      params: params,\n    });\n  }\n\n  validateRequisition(params: any): Observable<any> {\n    const API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/approveOrRejectOrReturn`;\n    return this.http.put(\n      API_URL,\n      {},\n      {\n        params: params,\n      }\n    );\n  }\n\n  // ********************************************************************************************************************\n\n  sendPurchaseOrder(params: any): Observable<any> {\n    const RequisitionssUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/send/po`;\n    return this.http.post<any>(RequisitionssUrl, {}, { params });\n  }\n\n  donwloadPurchaseOrder(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/download/po`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download PO\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  //*********************************************************************************************************************** */\n\n  receivePurchaseOrderItems(data: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive`;\n    return this.http.post<any>(ReceiveUrl, data);\n  }\n  getReceivedPurchaseOrderItems(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/delivery/by/prCode`;\n\n    return this.http.get<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  getReceivedItemsByStatus(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/find/delivery/by/pr_category`;\n    return this.http.get<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  deleteReceivedItemsTemporarily(params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/delete`;\n    return this.http.delete<any[]>(ReceiveUrl, {\n      params: params,\n    });\n  }\n\n  validateReceivedItemsAllocation(data: any, params: any): Observable<any> {\n    const ReceiveUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/post/delivery/to/allocations`;\n\n    return this.http.put<any>(ReceiveUrl, data, { params });\n  }\n\n  // donwloadGoodsReceivedNote(params: any): Observable<any> {\n  //   let headers = new HttpHeaders();\n  //   headers.append(\"Accept\", \"application/pdf\");\n  //   let requestOptions: any = {\n  //     params: params,\n  //     headers: headers,\n  //     responseType: \"blob\",\n  //     withCredentials: false,\n  //   };\n  //   let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive/download/receiptnote`;\n  //   return this.http.get(API_URL, requestOptions).pipe(\n  //     map((response: BlobPart) => {\n  //       console.log(\"Hey this is download GRN\", response);\n  //       return {\n  //         filename: \"Report\",\n  //         data: new Blob([response], { type: \"application/pdf\" }),\n  //       };\n  //     })\n  //   );\n  // }\n\n\n  donwloadSingleGoodsReceivedNote(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/item/receive/download/receiptnote/single`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download GRN\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n  updateReceivedItemsTransactionStatus(params): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update/record/on/transaction`;\n    return this.http.put<any>(updateBillUrl, {}, {params});\n  }\n  \n}\n"],"names":[],"sourceRoot":"webpack:///"}