{"version":3,"file":"default-src_app_core_service_token-storage_service_ts-src_app_erp-hr_data_job-services_docume-b05fb2.js","mappings":"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","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-hr/data/job-services/document-management-system.service.ts","./src/app/erp-hr/data/job-services/job-applications.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHeaders,\n  HttpRequest,\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DocumentManagementSystemService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n  baseURL = `${environment.baseUrlApplicant}/api/v1/employee-documents`;\n  admsBaseURL = `${environment.baseUrlApplicant}/api/v1/applicant-documents`;\n  apiUrlApplicant = `${environment.baseUrlApplicant}/api/v1/applicant-documents`;\n\n  constructor(private http: HttpClient) {}\n\n  onUpload(data: any): Observable<any> {\n    let API_URL = `${this.admsBaseURL}/create`\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(\n        this.errorMgmt\n      ))\n  }\n\n\n  approveEmployeeDocuments(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/approveOrReject`;\n    //api/v1/employee-documents/approveOrReject\n    return this.http\n      .put(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  rejectEmployeeDocuments(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/approveOrReject`;\n    //api/v1/employee-documents/approveOrReject\n    return this.http\n      .put(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  onBulkUpload(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/add/bulk`;\n    console.log(\"Bulk Upload\", API_URL);\n    // /api/v1/employee-documents/add/bulk\n    return this.http\n      .post(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          console.log(\"On doc upload service\", res);\n          console.log(\"endpoint on doc upload\", API_URL);\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getDocumentsByReferenceId(refId: any): Observable<any> {\n    let API_URL = `${this.baseURL}/get/by/reference/identifier/${refId}`;\n    //api/v1/employee-documents/get/by/reference/identifier/{refId}\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getPolicyDocument(): Observable<any> {\n    let API_URL = `${this.baseURL}/get/onboarding/policy/doc`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getBase64ById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/get/base64file/${id}`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getDocByType(docType: any): Observable<any> {\n    let API_URL = `${this.baseURL}/get/by/document/type/${docType}`;\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getAllDocs(): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchAll`;\n    //api/v1/employee-documents/fetchAll\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  // deleteDoc(id: number):Observable<any>{\n  //   let API_URL = `${this.baseURL}/permanent/delete/${id}`\n  //   return this.http.delete(API_URL,{headers: this.headers, withCredentials: false}).pipe(\n  //     map( res=>{\n  //       return res || {}\n  //     }), catchError(this.errorMgmt)\n  //   )\n  // }\n\n  getDocumentsByReferenceId1(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/view/by/id`;\n    return this.http\n      .get(API_URL, {\n        params: params,\n        headers: this.headers,\n        responseType: \"text\",\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getDocumentsByReferenceId2(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/get/base64file/${id}`;\n    // http://localhost:8200/api/v1/employee-documents/get/by/reference/identifier?refId=12344567\n    return this.http\n      .get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  // /api/v1/employee-documents/get/base64file/{id}\n\n  onDocView(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n\n    let API_URL = `${this.baseURL}/view/by/id`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response) => {\n        return {\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n  onDocView2(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Accept\", \"application/pdf\");\n\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n\n    let API_URL = `${this.baseURL}/view/by/id`;\n\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((res) => {\n        res || {};\n      })\n    );\n  }\n\n  onDocsView(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/view/by/id`;\n    return this.http\n      .get(API_URL, {\n        headers: this.headers,\n        params: params,\n        responseType: \"blob\",\n        withCredentials: false,\n      })\n      .pipe(\n        map((response) => {\n          return {\n            filename: \"document\",\n            data: new Blob([response], { type: \"application/pdf\" }),\n          };\n        })\n      );\n  }\n\n  getBase64Doc(params: any): Observable<any> {\n    console.log(\"Base64 data\");\n    let API_URL = `${this.baseURL}/view/by/id`;\n    return this.http\n      .get(API_URL, {\n        headers: this.headers,\n        params: params,\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  updateDoc(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n\n    return this.http\n      .put(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          console.log(\"Response Data:\", res); // Log the response data\n\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  // APPLICANT DOCUMENT MANAGEMENT SYSTEM\n  getDocumentsByReferenceIdFromAdms(params: any): Observable<any> {\n    let API_URL = `${this.admsBaseURL}/get/by/reference/identifier/ref/Number`;\n    // http://localhost:8200/api/v1/applicant-documents/get/by/reference/identifier/ref/Number?refId=67867678&refNo=287272782787\n    return this.http\n      .get(API_URL, {\n        params: params,\n        headers: this.headers,\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getApplicantDocsBase64ById(id: any): Observable<any> {\n    let API_URL = `${this.admsBaseURL}/find/by/id`;\n    let queryParams = { id: id }; // Construct the query parameter object\n    console.log(\"API URL:\", API_URL);\n    return this.http\n      .get(API_URL, {\n        params: queryParams,\n        headers: this.headers,\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  getDocByIdentifier(params): Observable<any> {\n    let API_URL = `${this.apiUrlApplicant}/all`;\n    console.log(\"On Doc URL\", API_URL);\n    return this.http\n      .get(API_URL, {\n        params: params,\n        headers: this.headers,\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  deleteDoc(params): Observable<any> {\n    let API_URL = `${this.admsBaseURL}/delete`;\n    return this.http\n      .delete(API_URL, {\n        params: params,\n        headers: this.headers,\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n\n  // TRANSFER FROM ADMS TO DMS\n\n  //   http://localhost:8200/api/v1/employee-documents/transfer/from/adms\n\n  transferAdmsToDms(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/transfer/from/adms`;\n    return this.http\n      .post(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = \"\";\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n\n  updateDmsDoc(updatedData: any): Observable<any> {\n    const API_URL = `${this.baseURL}/api/v1/employee-documents/update`;\n    console.log(\"Update Employee Document URL\", API_URL);\n\n    return this.http\n      .put(API_URL, updatedData, {\n        headers: this.headers,\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n}\n","\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobApplicationAPIService {\n \n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/job/application`;\n\n\n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/create`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatusAndJobNumber(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/by_jobrefnumber_and_status`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, {params:params, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByNationalId(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/by_national_id`;\n    return this.http.get(API_URL, {params:params, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByJobRefNumberAndStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/by_jobrefnumber_and_status`;\n    return this.http.get(API_URL, {params:params, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  scheduleInterview(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/interview_schedule`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  interviewResults(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/interview_result`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n\n\n\n\n"],"names":[],"sourceRoot":"webpack:///"}