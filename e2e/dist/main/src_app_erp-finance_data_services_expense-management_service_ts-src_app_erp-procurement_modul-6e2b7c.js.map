{"version":3,"file":"src_app_erp-finance_data_services_expense-management_service_ts-src_app_erp-procurement_modul-6e2b7c.js","mappings":";;;;;;;;;;;;;;;;AAGgE;;;AAKzD,MAAM,wBAAwB;IACnC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,+HAA+H;IAE/H,WAAW;QACT,MAAM,UAAU,GAAG,GAAG,yFAA0B,sBAAsB,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,UAAU,CAAC,CAAC;IAC1C,CAAC;IAED,UAAU,CAAC,IAAS;QAClB,MAAM,UAAU,GAAG,GAAG,yFAA0B,yBAAyB,CAAC;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,UAAU,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,aAAa,CAAC,IAAS;QACrB,MAAM,UAAU,GAAG,GAAG,yFAA0B,yBAAyB,CAAC;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,UAAU,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,wBAAwB,CAAC,MAAW;QAClC,MAAM,UAAU,GAAG,GAAG,yFAA0B,yBAAyB,CAAC;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,UAAU,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IACvD,CAAC;IAED,mBAAmB,CAAC,IAAS;QAC3B,MAAM,UAAU,GAAG,GAAG,yFAA0B,8BAA8B,CAAC;QAC/E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,UAAU,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,2BAA2B,CAAC,aAAkB;QAC5C,MAAM,UAAU,GAAG,GAAG,yFAA0B,4CAA4C,aAAa,EAAE,CAAC;QAC5G,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,UAAU,EAAE,aAAa,CAAC,CAAC;IACvD,CAAC;IAED,mBAAmB,CAAC,MAAM;QACxB,MAAM,UAAU,GAAG,GAAG,yFAA0B,gCAAgC,CAAC;QACjF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IACtD,CAAC;IACD,cAAc,CAAC,MAAW;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,yFAA0B,6BAA6B,EAC1D,EAAE,MAAM,EAAE,CACX,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,aAAkB;QACpC,MAAM,UAAU,GAAG,GAAG,yFAA0B,+BAA+B,CAAC;QAChF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IAClD,CAAC;;gGAjDU,wBAAwB;yHAAxB,wBAAwB,WAAxB,wBAAwB,mBAFvB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNsC;AACR;AAEkB;AACE;AAGrB;AACY;AAEL;AAG+I;AAGxK;;;;;;;;;;;;;;;;;;;;;;;;;;ICFX,0EAA2D;IACvD,kFACmB;IACvB,4DAAM;;;;IA4BkB,6EAKlB;IAFwC,gTACb,sCAC7C,iBAAiB,CAAC,IAAD;IACuB,2EAAU;IAAA,iFAAsB;IAAA,4DAAW;IAC3C,4EACJ;IAAA,4DAAS;;;IAPa,sHAEzC;;;;IAOmB,6EAQlB;IAJ+C,gTACpB,sCAEnD,wBAAwB,CACA,IAAD;IACuB,2EAAU;IAAA,iFAAsB;IAAA,4DAAW;IAC3C,2EACJ;IAAA,4DAAS;;;IATT,6HAEnB;;;;IASmB,6EASlB;IAJiD,gTACtB,sCACE,8BAC7B,CACA,IAAD;IACuB,2EAAU;IAAA,6EAAkB;IAAA,4DAAW;IACvC,4EACJ;IAAA,4DAAS;;;IAVT,mIAGnB;;;;IASmB,6EAQlB;IAJ8C,gTACnB,sCACE,2BAC7B,CACA,IAAD;IACuB,2EAAU;IAAA,qEAAU;IAAA,4DAAW;IAC/B,8EACJ;IAAA,4DAAS;;;IATT,gIAEnB;;;;IAoFmB,wEAAmE;IAC/D,qEAAI;IAGQ,sTAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,+EAA4B;IAAA,gEAAK;IAAA,4DAAW;IAIxD,qEAAI;IAGQ,sTAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,+EAA4B;IAAA,kEAAM;IAAA,4DAAW;IAIzD,sEAAI;IAGQ,uTAAS,4BAAoB,UAAU,CAAC,IAAC;IAEzC,gFAA4B;IAAA,gEAAI;IAAA,4DAAW;IAavD,sEAAI;IAGQ,uTAAS,iCAAyB,MAAM,CAAC,IAAC;IAC1C,gFAA4B;IAAA,sEAAU;IAAA,4DAAW;IAIjE,qEAAe;;;;IA0CvB,sFAAqE;IACnD,gVAAmB,qCAA6B,GAAG,IAAI,IAAC;IAQtE,4DAAe;;;IATgB,0FAAiC;IAE5D,0DAGrB;IAHqB,wJAGrB;;;;IAMa,+EAAkE;IAChD,4KAAS,wBAAwB,IAAC,4UAC9B,gDACzC,GAAG,IAAI,IAFgE;IAIhD,4DAAe;;;;IALa,0FAAiC;IAG7E,0DAAoD;IAApD,yHAAoD;;;IAQxC,uFAC0C;IACtC,8DACJ;IAAA,4DAAkB;;;IAClB,gFAAsE;IAClE,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,sFACJ;;;IAKA,uFACqD;IACjD,yEACJ;IAAA,4DAAkB;;;IAClB,gFAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,+FACJ;;;IAKA,uFACqD;IACjD,0EACJ;IAAA,4DAAkB;;;IAClB,gFAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,gGACJ;;;IAKA,uFACqD;IACjD,0EACJ;IAAA,4DAAkB;;;IAClB,gFAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,gGACJ;;;IAKA,uFACqD;IACjD,yEACJ;IAAA,4DAAkB;;;IAClB,gFAAiF;IAC7E,uDACJ;;IAAA,4DAAW;;;IADP,0DACJ;IADI,yKACJ;;;IAKA,uFACqD;IACjD,qEACJ;IAAA,4DAAkB;;;IAClB,gFAAiF;IAC7E,uDACJ;;IAAA,4DAAW;;;IADP,0DACJ;IADI,qKACJ;;;IAKA,uFACqD;IACjD,2EACJ;IAAA,4DAAkB;;;IAClB,gFAAiF;IAC7E,uDAGJ;;IAAA,4DAAW;;;IAHP,0DAGJ;IAHI,2LAGJ;;;IAIA,uFACoF;IAChF,qEACJ;IAAA,4DAAkB;;;IAClB,gFAAiF;IAC7E,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,mGACJ;;;IAIA,uFACqD;IACjD,uEACJ;IAAA,4DAAkB;;;IAGV,8EACsD;IAClD,oEAAmC;IAAA,uDAEvC;IAAA,4DAAS;;;IAF8B,0DAEvC;IAFuC,2GAEvC;;;IAEA,8EACuD;IACnD,oEAA+B;IAAA,uDAEnC;IAAA,4DAAS;;;IAF0B,0DAEnC;IAFmC,2GAEnC;;;IAEA,wEAA+B;IAAC,gEAAI;IAAA,qEAAe;;;IAd3D,gFAAiF;IAC7E,6EAAiD;IAC7C,6IAIS;IAET,6IAIS;IAET,yJAAmD;IACvD,qEAAe;IACnB,4DAAW;;;IAfO,0DAAkC;IAAlC,+FAAkC;IACnC,0DAAuB;IAAvB,mFAAuB;IAMvB,0DAAsB;IAAtB,kFAAsB;;;IAYvC,uFACqD;IACjD,sEACJ;IAAA,4DAAkB;;;IAClB,gFAAiF;IAC7E,uDACJ;;IAAA,4DAAW;;;IADP,0DACJ;IADI,iMACJ;;;IAIA,uFACqD;IAAA,2EAC1C;IAAA,4DAAkB;;;;IAC7B,gFAEuC;IAAnC,yKAAS,wBAAwB,IAAC;IAClC,8EAEmC;IAA/B,8WAAS,gCAAoB,IAAC;IAC9B,oEAA+B;IAAA,6EACnC;IAAA,4DAAS;;;IAJD,0DAA4B;IAA5B,6FAA4B;;;IASxC,uFACqD;IAAA,uEAAY;IAAA,4DAAkB;;;;IACnF,gFAEuC;IAAnC,yKAAS,wBAAwB,IAAC;IAClC,8EAGgF;IAA3B,8WAAS,4BAAgB,IAAC;IAC3E,oEAAkC;IAAA,uEACtC;IAAA,4DAAS;;;IALD,0DAGR;IAHQ,yFAGR;;;IAQJ,uFACqD;IACjD,mEACJ;IAAA,4DAAkB;;;IAKV,8EACuD;IACnD,oEAAmC;IAAA,uDAEvC;IAAA,4DAAS;;;IAF8B,0DAEvC;IAFuC,gGAEvC;;;IACA,8EACqD;IACjD,oEAAmC;IAAA,uDAEvC;IAAA,4DAAS;;;IAF8B,0DAEvC;IAFuC,gGAEvC;;;IACA,8EACuD;IACnD,oEAA+B;IAAA,uDAEnC;IAAA,4DAAS;;;IAF0B,0DAEnC;IAFmC,gGAEnC;;;IACA,8EACsD;IAClD,oEAAyC;IAAA,uDAE7C;IAAA,4DAAS;;;IAFoC,0DAE7C;IAF6C,gGAE7C;;;IACA,8EAA4E;IACxE,oEAAsC;IAAA,uDAE1C;IAAA,4DAAS;;;IAFiC,0DAE1C;IAF0C,gGAE1C;;;IA3BR,gFAEuC;IAAnC,yKAAS,wBAAwB,IAAC;IAClC,6EAAsC;IAClC,6IAIS;IACT,6IAIS;IACT,6IAIS;IACT,6IAIS;IACT,6IAGS;IACb,qEAAe;IACnB,4DAAW;;;IA1BO,0DAAuB;IAAvB,oFAAuB;IACxB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAwB;IAAxB,oFAAwB;IAKxB,0DAAuB;IAAvB,mFAAuB;;;IAexC,uFACsB;IAClB,mEACJ;IAAA,4DAAkB;;;;IAClB,gFAC0D;IASf,uKAAS,wBAAwB,IAAC,yTAC5D,wCAA0B,IADkC;IAErE,oFACoB;IACxB,4DAAS;IAGT,8EAC8D;IADtB,uKAAS,wBAAwB,IAAC,yTAC7D,sCAAwB,IADqC;IAEtE,oFACoB;IACxB,4DAAS;IAGT,8EACmE;IAD5B,uKAAS,wBAAwB,IAAC,yTAC5D,2CAA6B,IAD+B;IAErE,oFACoB;IACxB,4DAAS;;IAhB8B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;IAOA,0DAAuB;IAAvB,uEAAuB;IAAtC,uEAAc;IAOK,0DAA0B;IAA1B,0EAA0B;IAA7C,2EAAkB;;;IAKjD,4EACiB;;;;IACjB,+EAC4E;IAAxE,iXAAS,sCAAwB,IAAC;IACtC,4DAAU;;IAD6B,8EAA0B;;;IAIjE,qEAAkB;IAC+B,uDACtC;IAAA,4DAAK;;;IADR,0DAAuC;IAAvC,+GAAuC;IAAE,0DACtC;IADsC,wHACtC;;;IAIf,2EAA2C;IACvC,uFACuB;IAC3B,4DAAM;;IAFoC,0DAAe;IAAf,wEAAe;;;ADhf9E,MAAM,4BAA4B;IA8CvC,+HAA+H;IAC/H,sBAAsB;IACtB,YACU,MAAc,EACd,QAAyB,EACzB,yBAAkD,EACnD,oBAA0C,EACzC,MAAiB,EACjB,kBAAuC,EACvC,EAAe;QANf,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,8BAAyB,GAAzB,yBAAyB,CAAyB;QACnD,yBAAoB,GAApB,oBAAoB,CAAsB;QACzC,WAAM,GAAN,MAAM,CAAW;QACjB,uBAAkB,GAAlB,kBAAkB,CAAqB;QACvC,OAAE,GAAF,EAAE,CAAa;QAtDzB,qBAAgB,GAAa;YAC3B,qBAAqB;YACrB,IAAI;YACJ,aAAa;YACb,cAAc;YACd,cAAc;YACd,aAAa;YACb,SAAS;YACT,eAAe;YAEf,cAAc;YACd,uBAAuB;YACvB,cAAc;YACd,iBAAiB;YACjB,aAAa;YACb,QAAQ;YACR,QAAQ;SACT,CAAC;QAQF,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QAG7C,cAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAM9C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,KAAK,CAAC,CAAC,eAAe;QAErC,2CAA2C;QAC3C,aAAQ,GAAqB,IAAI,0CAAO,EAAW,CAAC;QAEpD,oBAAe,GAAY,KAAK,CAAC;QA8CjC,gBAAW,GAAU;YACnB,EAAE,IAAI,EAAE,SAAS,EAAE;YACnB,wBAAwB;YACxB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,UAAU,EAAE;SACrB,CAAC;QAEF,mBAAc,GAAW,SAAS,CAAC;QAYnC,yBAAoB,GAAW,KAAK,CAAC;QAYrC,cAAc;QACd,wDAAwD;QACxD,kDAAkD;QAClD,gDAAgD;QAChD,sCAAsC;QACtC,2BAA2B;QAC3B,kDAAkD;QAClD,8DAA8D;QAE9D,mBAAmB;QACnB,sCAAsC;QACtC,kDAAkD;QAClD,OAAO;QACP,iCAAiC;QACjC,mCAAmC;QACnC,0DAA0D;QAC1D,sCAAsC;QACtC,mBAAmB;QACnB,yBAAyB;QACzB,2CAA2C;QAC3C,4BAA4B;QAC5B,6BAA6B;QAC7B,oCAAoC;QACpC,wEAAwE;QACxE,wDAAwD;QACxD,8CAA8C;QAE9C,mDAAmD;QACnD,mBAAmB;QACnB,4EAA4E;QAC5E,YAAY;QACZ,WAAW;QACX,0BAA0B;QAC1B,0EAA0E;QAC1E,kCAAkC;QAClC,WAAW;QACX,0BAA0B;QAC1B,kCAAkC;QAClC,WAAW;QACX,UAAU;QACV,oBAAoB;QACpB,IAAI;QAEJ,cAAc;QACd,mDAAmD;QACnD,IAAI;QAGJ,gBAAW,GAAG,CAAC,CAAC;QAChB,eAAU,GAAG,CAAC,CAAC;QACf,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QACb,oBAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QA8JlD,2HAA2H;QAC3H,mBAAmB;QACnB,2HAA2H;QAE3H,yCAAyC;QACzC,6BAAwB,GAAG,IAAI,qEAAc,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;QAC9D,kCAA6B,GAAY,KAAK,CAAC;QA+C/C,sBAAiB,GAAW,EAAE,CAAC;QAwB/B,+HAA+H;QAC/H,oBAAe,GAAW,iBAAiB,CAAC;QAwF5C,+HAA+H;QAC/H,iBAAY,GAAU,EAAE,CAAC;QA8KzB,gBAAW,GAAY,KAAK,CAAC;IAtmB1B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,SAAS,EAAE,gEAAmB,CAAC;YACxC,YAAY,EAAE,CAAC,aAAa,EAAE,gEAAmB,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAID,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAgBD,uBAAuB;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IACD,iBAAiB,CAAC,MAAW;QAC3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAGD,mCAAmC;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IACD,6BAA6B,CAAC,YAAiB;QAC7C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,YAAY,EAAE,YAAY;SAC3B,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAuDD,aAAa;IAEb,OAAO,CAAC,IAAY,EAAE,IAAY;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QACzD,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;SAClB;QAED,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;YAC9B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY;YAC1C,UAAU,EAAE,IAAI,CAAC,KAAK;YACtB,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;SACf,CAAC;QAEF,IAAI,CAAC,yBAAyB;aAC3B,0CAA0C,CAAC,MAAM,CAAC;aAClD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;gBAEzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAEzD,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC5D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oBAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;oBACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;iBACxC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC/D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,KAAU;QACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,+HAA+H;IAC/H,0BAA0B;IAC1B,kBAAkB;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnB,sDAAsD;SACvD,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;IAEvB,qBAAqB,CAAC,IAAS;QAC7B,+BAA+B;QAC/B,yDAAyD;QACzD,uEAAuE;QAEvE,IAAI,KAAK,GAAG,sDAAsD,CAAC;QACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE;gBACX,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,kCAAkC;gBAClC,MAAM,EAAE,QAAQ;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,mBAAmB,CAAC,IAAS;QAC3B,+BAA+B;QAC/B,yDAAyD;QAEzD,IAAI,KAAK,GAAG,sDAAsD,CAAC;QACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE;gBACX,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,mCAAmC;gBACnC,MAAM,EAAE,MAAM;aACf;SACF,CAAC,CAAC;IACL,CAAC;IAED,8BAA8B;IAC9B,uBAAuB,CAAC,IAAS;QAC/B,+BAA+B;QAC/B,yDAAyD;QAEzD,IAAI,KAAK,GAAG,sDAAsD,CAAC;QACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5B,WAAW,EAAE;gBACX,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,mCAAmC;gBACnC,MAAM,EAAE,QAAQ;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;IAE5B,qBAAqB,CAAC,EAAO;QAC3B,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,oCAAoC;SACxD,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC9C,IAAI,CAAC,yBAAyB;qBAC3B,qBAAqB,CAAC,MAAM,CAAC;qBAC7B,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC9B,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;4BACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;yBACjE;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;yBAChE;oBACH,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBACjE,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAChD,CAAC;iBACF,CAAC;oBACF,+CAAY,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAWD,4BAA4B;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,2BAA2B;QACzB,IAAI,IAAI,CAAC,4BAA4B,EAAE,EAAE;YACvC,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;YACtC,OAAO;SACR;QAED,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,4BAA4B,CAAC,GAAS;QACpC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GACL,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QACrD,MAAM,CAAC;SACR;QACD,OAAO,GACL,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAC/D,QAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC;IAC7B,CAAC;IAED,6BAA6B;QAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,IAAI,WAAW,KAAK,OAAO,EAAE;YAC3B,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;SAC3C;aAAM,IAAI,WAAW,KAAK,OAAO,EAAE;YAClC,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;SAC5C;QACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CACT,iCAAiC,EACjC,IAAI,CAAC,6BAA6B,CACnC,CAAC;IACJ,CAAC;IAGD,wBAAwB,CAAC,MAAW;QAClC,+EAA+E;QAE/E,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAChC,OAAO,CAAC,GAAG,CACT,uCAAuC,EACvC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CACnD,CAAC;QAEF,IACE,IAAI,CAAC,iBAAiB,KAAK,KAAK;YAChC,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI;gBAC1D,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,EACnE;YACA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,wCAAwC,CACzC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAKD,iBAAiB;QACf,OAAO,CAAC,GAAG,CACT,kCAAkC,EAClC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC1C,CAAC;QAEF,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,iBAAiB,KAAK,KAAK,EAAE;YACpC,OAAO,GAAG;gBACR,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM;gBACxD,aAAa,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW;gBACpE,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE;oBACT;wBACE,SAAS,EAAE,EAAE;wBACb,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa;wBAC/D,aAAa,EAAE,OAAO;qBACvB;iBACF;aACF,CAAC;SACH;QAED,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC9B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,IAAI,CAAC,iBAAiB;YAC9B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnD,UAAU,EAAE,OAAO;YACnB,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;SAC7D,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,iNAAsC,EACtC,YAAY,CACb,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAEjC,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,GAAG,EAAE;gBACjD,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC9C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACxE,IAAI,CAAC,+BAA+B,EAAE,CAAC;aACxC;iBAAM,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,GAAG,EAAE;gBACxD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxE;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,mCAAmC,CACpC,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAA+B;QAC7B,IAAI,MAAM,GAAG;YACX,eAAe,EAAE,IAAI,CAAC,mBAAmB,CAAC,eAAe;YACzD,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAQ;YAC3C,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAQ;YAC3C,aAAa,EAAE,IAAI,CAAC,mBAAmB,CAAC,aAAa;SACtD,CAAC;QACF,IAAI,CAAC,kBAAkB;aACpB,wCAAwC,CAAC,MAAM,CAAC;aAChD,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBAChE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC9C,yBAAyB;oBACzB,sDAAsD;oBACtD,MAAM;iBACP;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAID,mBAAmB,CAAC,MAAW;QAC7B,uDAAS,CAAC;YACR,KAAK,EAAE,kBAAkB;YACzB,KAAK,EAAE,QAAQ;YACf,YAAY,EAAE;gBACZ,aAAa;gBACb,cAAc,EAAE,iBAAiB;gBACjC,oBAAoB,EAAE,wBAAwB;gBAC9C,wBAAwB,EAAE,8BAA8B;gBACxD,sBAAsB,EAAE,2BAA2B;aACpD;YACD,gBAAgB,EAAE,kBAAkB;YACpC,iBAAiB,EAAE,QAAQ;YAC3B,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,QAAQ;SAC3B,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,gBAAgB,GAAG,MAAM,CAAC,KAAK,CAAC;gBACtC,iCAAiC;gBAEjC,IAAI,SAAS,GAAG,EAAE,CAAC;gBAEnB,IAAI,gBAAgB,KAAK,gBAAgB,EAAE;oBACzC,SAAS,GAAG,iBAAiB,CAAC;iBAC/B;qBAAM,IAAI,gBAAgB,KAAK,sBAAsB,EAAE;oBACtD,SAAS,GAAG,wBAAwB,CAAC;iBACtC;qBAAM,IAAI,gBAAgB,KAAK,0BAA0B,EAAE;oBAC1D,SAAS,GAAG,8BAA8B,CAAC;iBAC5C;qBAAM,IAAI,gBAAgB,KAAK,wBAAwB,EAAE;oBACxD,SAAS,GAAG,2BAA2B,CAAC;iBACzC;gBAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CACrD,eAAe,EACf,CAAC,SAAS,CAAC,CACZ,CAAC;gBAEF,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,uDAAS,CAAC;wBACR,KAAK,EACH,8DAA8D;wBAChE,KAAK,EAAE,UAAU;wBACjB,gBAAgB,EAAE,2BAA2B;wBAC7C,iBAAiB,EAAE,QAAQ;wBAC3B,gBAAgB,EAAE,IAAI;wBACtB,gBAAgB,EAAE,QAAQ;wBAE1B,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;4BACxB,IAAI,CAAC,KAAK,EAAE;gCACV,OAAO,2BAA2B,CAAC;6BACpC;wBACH,CAAC;qBACF,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;wBACjB,IAAI,MAAM,CAAC,WAAW,EAAE;4BACtB,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC;4BAErC,MAAM,aAAa,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,GAAG,CAC9D,CAAC,OAAO,EAAE,EAAE;gCACV,OAAO;oCACL,EAAE,EAAE,OAAO,CAAC,EAAE;oCACd,MAAM,EAAE,MAAM;oCACd,eAAe,EAAE,eAAe;iCACjC,CAAC;4BACJ,CAAC,CACF,CAAC;4BAEF,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;4BAEpC,IAAI,mBAAmB,GAAG,EAAE,CAAC;4BAC7B,IAAI,gBAAgB,KAAK,gBAAgB,EAAE;gCACzC,mBAAmB,GAAG,iBAAiB,CAAC;6BACzC;iCAAM,IAAI,gBAAgB,KAAK,sBAAsB,EAAE;gCACtD,mBAAmB,GAAG,wBAAwB,CAAC;6BAChD;iCAAM,IAAI,gBAAgB,KAAK,0BAA0B,EAAE;gCAC1D,mBAAmB,GAAG,8BAA8B,CAAC;6BACtD;iCAAM,IAAI,gBAAgB,KAAK,wBAAwB,EAAE;gCACxD,mBAAmB,GAAG,2BAA2B,CAAC;6BACnD;4BACD,IAAI,MAAM,GAAG,EAAE,YAAY,EAAE,mBAAmB,EAAE,CAAC;4BAEnD,IAAI,CAAC,yBAAyB;iCAC3B,wBAAwB,CAAC,MAAM,EAAE,aAAa,CAAC;iCAC/C,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iCAC9B,SAAS,CAAC;gCACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oCACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oCAC1B,IACE,GAAG,CAAC,UAAU,IAAI,GAAG;wCACrB,GAAG,CAAC,UAAU,IAAI,GAAG;wCACrB,GAAG,CAAC,UAAU,IAAI,GAAG,EACrB;wCACA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;wCAEF,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;wCACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;qCACxB;yCAAM;wCACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;qCACH;gCACH,CAAC;gCACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oCACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;gCACJ,CAAC;gCACD,QAAQ,EAAE,GAAG,EAAE;oCACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gCAChD,CAAC;6BACF,CAAC,CAAC;yBACN;6BAAM;4BACL,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;4BACnD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;yBACxB;oBACH,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+FAA+F;IAC/F,eAAe,CAAC,GAAQ;QACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;QAEpE,IAAI,CAAC,yBAAyB;aAC3B,gBAAgB,CAAC,MAAM,CAAC;aACxB,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAE/C,qCAAqC;gBACrC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAEjB,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;gBACzC,CAAC,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;gBAClC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;gBACb,sCAAsC;gBACtC,CAAC,CAAC,QAAQ,GAAG,iBAAiB,GAAG,CAAC,uBAAuB,MAAM,CAAC;gBAChE,CAAC,CAAC,KAAK,EAAE,CAAC;gBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAChC,CAAC,CAAC,MAAM,EAAE,CAAC;gBAEX,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAE7B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAChE,gCAAgC;gBAChC,WAAW;gBACX,oEAAoE;gBACpE,IAAI;YACN,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC/D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC;SACF,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAGD,WAAW,CAAC,GAAQ;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;QAEpE,IAAI,CAAC,yBAAyB;aAC3B,WAAW,CAAC,MAAM,CAAC;aACnB,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAE1B,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBACjE;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;gBACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC/D,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC;SACF,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;;wGA3rBU,4BAA4B;0HAA5B,4BAA4B;;kEAuB5B,4DAAO;;;;;;;QC9CpB,6EAAyB;QAIb,+EAEiB;QACrB,4DAAM;QAEN,6EAAmC;QAEnC,yEAAiB;QAGL,wHAGM;QACN,yEAAkB;QAKM,0EAAc;QAAA,4DAAK;QAG3B,2EAAyD;QAM7C,qJAAS,kCAA8B,aAAa,CAAC,IAAC;QACtD,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QAChC,0EACJ;QAAA,4DAAS;QAGT,8EAEmD;QAA/C,qJAAS,kCAA8B,KAAK,CAAC,IAAC;QAC9C,4EAAU;QAAA,8EAAkB;QAAA,4DAAW;QACvC,0EACJ;QAAA,4DAAS;QAET,iIAQS;QAET,iIAWS;QAET,iIAYS;QAET,iIAWS;QACb,4DAAM;QAKlB,2EAAwD;QAGxC,mEAAO;QAAA,4DAAK;QAGpB,2EAAyD;QAIlB,qJAAS,sBAAkB,SAAS,CAAC,IAAC;QACjE,4EAAU;QAAA,mEAAO;QAAA,4DAAW;QAC5B,qEACJ;QAAA,4DAAS;QAGT,8EACwE;QAAxC,qJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAC7B,sEACJ;QAAA,4DAAS;QAGT,8EACwE;QAAxC,qJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,sEACJ;QAAA,4DAAS;QAGT,8EACwE;QAAxC,qJAAS,sBAAkB,UAAU,CAAC,IAAC;QACnE,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC3B,sEACJ;QAAA,4DAAS;QAMzB,2EAA2C;QAKnB,6EAAiB;QAAA,4DAAK;QAE9B,0EAA4B;QAEmB,kEAAM;QAAA,4DAAI;QACrD,iFAE8B;QAFa,0JAAS,uBAAmB,IAAC;QAAxE,4DAE8B;QAGlC,sEAAI;QAEyC,qJAAS,wBAAoB,IAAC;QAC/D,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAKtD,sEAAI;QAEyC,qJAAS,aAAS,IAAC;QACpD,gFAA4B;QAAA,mEAAO;QAAA,4DAAW;QAK1D,8IA6Ce;QACnB,4DAAK;QAET,2EAAmB;QAI4C,iSAEnG,gBAAqB,MAAM,cACX,aAAa,SACP,QAAQ,GACA,IAAD;QALuB,4DAKpB;QAGY,sEAAI;QAGQ,iSAAS,gBAAqB,KAAK,CAAC,IAAC;QADzC,4DAC4C;QAGpD,sEAAI;QAGQ,iSAAS,gBAAqB,MAAM,CAAC,IAAC;QAD1C,4DAC6C;QAGrD,sEAAI;QAGQ,iSAAS,gBAAqB,KAAK,CAAC,IAAC;QADzC,4DAC4C;QAQpE,qFACiC;QAE7B,6EAA8C;QAC1C,mJAUkB;QAClB,qIAMW;QACf,qEAAe;QAGf,6EAAgC;QAC5B,mJAGkB;QAClB,qIAEW;QACf,qEAAe;QAGf,8EAAyC;QACrC,qJAGkB;QAClB,uIAEW;QACf,qEAAe;QAGf,8EAA0C;QACtC,qJAGkB;QAClB,uIAEW;QACf,qEAAe;QAGf,8EAA0C;QACtC,qJAGkB;QAClB,uIAEW;QACf,qEAAe;QAGf,8EAAyC;QACrC,qJAGkB;QAClB,uIAEW;QACf,qEAAe;QAGf,8EAAqC;QACjC,qJAGkB;QAClB,uIAEW;QACf,qEAAe;QAGf,8EAA2C;QACvC,qJAGkB;QAClB,uIAIW;QACf,qEAAe;QAEf,8EAAsC;QAClC,qJAGkB;QAClB,uIAEW;QACf,qEAAe;QAEf,8EAA+C;QAC3C,qJAGkB;QAClB,uIAgBW;QACf,qEAAe;QAEf,8EAAsC;QAClC,qJAGkB;QAClB,uIAEW;QACf,qEAAe;QAEf,8EAA6C;QACzC,qJAE6B;QAC7B,uIAQW;QACf,qEAAe;QAEf,8EAAyC;QACrC,qJACmF;QACnF,uIASW;QACf,qEAAe;QAGf,8EAAoC;QAChC,qJAGkB;QAClB,uIA6BW;QACf,qEAAe;QAGf,8EAAoC;QAChC,qJAGkB;QAClB,uIA6BW;QACf,qEAAe;QACf,mJACiB;QACjB,qIAEU;QAGV,2HAGK;QACT,4DAAY;QAEZ,6HAGM;QAGN,sFAE6B;QAD3C,iKAAQ,wBAAoB,IAAC;QAEjC,4DAAgB;;QA3gBE,0DAAiC;QAAjC,0FAAiC;QAUlB,0DAAkC;QAAlC,sGAAkC;QAgB7B,2DAAuD;QAAvD,+GAAuD;QAQjC,0DAA+C;QAA/C,uGAA+C;QAOhE,0DAAsD;QAAtD,sHAAsD;QAUtD,0DAE3B;QAF2B,4HAE3B;QAW2B,0DAE3B;QAF2B,gIAE3B;QAY2B,0DAE3B;QAF2B,8HAE3B;QAwB4C,0DAA6C;QAA7C,qGAA6C;QAO7C,0DAA8C;QAA9C,sGAA8C;QAO9C,0DAA8C;QAA9C,sGAA8C;QAO9C,0DAA8C;QAA9C,sGAA8C;QAyCzD,2DAAkD;QAAlD,kHAAkD;QAmF9C,2DAAyB;QAAzB,sFAAyB;QA4PvC,2DAAiC;QAAjC,iGAAiC;QAEpB,0DAAyB;QAAzB,kGAAyB;QAWrD,0DAAe;QAAf,+EAAe;QAMN,0DAAmC;QAAnC,gGAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5gB5B;AAS1B;AAC8C;AACX;AACV;AACY;AAEY;AAEyC;AACG;AACH;AAC2C;AACvD;AAC6D;AAWtI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICrBjB,0EAA2D;IACzD,mFACmB;IACvB,6DAAM;;;IAEF,2EAA+C;IAWJ,yEAAY;IAAA,6DAAM;IACzC,6EAAoC;IACL,yDAAgC;IAAA,6DAAM;IAIzE,6EAAmB;IAEQ,4EAAe;IAAA,6DAAM;IAC5C,6EAAoC;IACI,yDAA4B;IAAA,6DAAM;IAKhF,4EAAiB;IAID,yEAAY;IAAA,6DAAS;IAC7B,8EAAmC;IAAA,yDAAgC;IAAA,6DAAO;IAOpF,4EAAmB;IAIY,6EAAgB;IAAA,6DAAM;IAC7C,6EAAoC;IACD,yDAAoC;IAAA,6DAAM;IAIjF,6EAAmB;IAEQ,gFAAmB;IAAA,6DAAM;IAChD,6EAAoC;IACQ,yDAAgC;IAAA,6DAAM;IAKxF,4EAAiB;IAID,6EAAgB;IAAA,6DAAS;IACjC,8EAAmC;IAAA,yDAAoC;IAAA,6DAAO;IAQxF,4EAAmB;IAIY,iFAAoB;IAAA,6DAAM;IACjD,6EAAoC;IACG,yDAAwC;IAAA,6DAAM;IAIzF,6EAAmB;IAEQ,oFAAuB;IAAA,6DAAM;IACpD,6EAAoC;IACY,yDAC9C;IAAA,6DAAM;IAKd,4EAAiB;IAID,iFAAoB;IAAA,6DAAS;IACrC,8EAAmC;IAAA,yDAAwC;IAAA,6DAAO;;;IAlFrD,4DAAgC;IAAhC,mGAAgC;IAQvB,2DAA4B;IAA5B,+FAA4B;IAU/B,2DAAgC;IAAhC,mGAAgC;IAalC,2DAAoC;IAApC,uGAAoC;IAQ3B,2DAAgC;IAAhC,mGAAgC;IAUvC,2DAAoC;IAApC,uGAAoC;IAclC,2DAAwC;IAAxC,2GAAwC;IAQ/B,2DAC9C;IAD8C,iHAC9C;IAUmC,2DAAwC;IAAxC,2GAAwC;;;IAkC7E,6EAII;IACF,uFACF;IAAA,6DAAY;;;IASZ,6EAII;IACF,uFACF;IAAA,6DAAY;;;IAyBZ,6EAEI;IACF,uFACF;IAAA,6DAAY;;;IAQZ,6EAAsE;IAAA,sFAC5D;IAAA,6DAAY;;;IAStB,6EAAmE;IAAA,mFACzD;IAAA,6DAAY;;;IAUtB,6EAII;IACF,sFACF;IAAA,6DAAY;;;IACZ,6EAII;IACF,wFACF;IAAA,6DAAY;;;IAWZ,6EAEI;IACF,kFACF;IAAA,6DAAY;;;IACZ,6EAEI;IACF,oFACF;IAAA,6DAAY;;;IAed,4EAAU;IAAA,kEAAM;IAAA,6DAAW;IAAC,2EAC9B;;;IAqBY,6EAAqE;IAAA,4EAC3D;IAAA,6DAAY;;;IAWtB,6EAAqE;IAAA,uFAE3D;IAAA,6DAAY;;;IAQtB,6EAAgE;IAAA,gFACtD;IAAA,6DAAY;;;IAEtB,6EAEI;IAAA,gFAAoB;IAAA,6DAAY;;;IAEpC,6EAEE;IAAA,wFAA4B;IAAA,6DAAY;;;IAU1C,6EAGI;IACF,uFACF;IAAA,6DAAY;;;IACZ,6EAGI;IACF,oHACF;IAAA,6DAAY;;;IACZ,6EAGI;IACF,6GACF;IAAA,6DAAY;;;IAWZ,6EAA+D;IAAA,gFACrD;IAAA,6DAAY;;;IAQtB,6EAEI;IAAA,+EAAmB;IAAA,6DAAY;;;IAEnC,6EAEE;IAAA,uFAA2B;IAAA,6DAAY;;;IAWzC,6EAEI;IAAA,wFAA4B;IAAA,6DAAY;;;IAC5C,6EAEE;IAAA,4GAAgD;IAAA,6DAAY;;;;IAM9D,+EACsD;IADA,oVAAS,oBAAY,IAAC;IAE1E,mFACF;IAAA,6DAAS;;;IAHiB,6FAA2B;;;;IAIrD,+EACqE;IAAnE,oVAAS,8BAAsB,IAAC;IAChC,sFACF;IAAA,6DAAS;;;IAHkB,6FAA2B;;;;IAvH9D,6EAA+D;IAM5C,gEAAI;IAAA,6DAAY;IAC3B,yEAC0C;IAC1C,sKACsB;IACxB,6DAAiB;IAKnB,2EAAwD;IAEzC,4EAAe;IAAA,6DAAY;IACtC,0EAC0C;IAC1C,wKAEsB;IACxB,6DAAiB;IAGnB,4EAAwD;IAEzC,qEAAQ;IAAA,6DAAY;IAC/B,0EAA6C;IAC7C,wKACsB;IAEtB,wKAEoC;IAEpC,wKAE0C;IAC5C,6DAAiB;IAGnB,4EAAwD;IAEzC,uEAAU;IAAA,6DAAY;IACjC,0EAC0B;IAE1B,wKAKY;IACZ,wKAKY;IACZ,wKAKY;IACd,6DAAiB;IAKnB,4EAAwD;IAEzC,qEAAQ;IAAA,6DAAY;IAC/B,0EAA4C;IAC5C,iFAA4C;IAAxB,6UAAS,qBAAa,IAAC;IAAC,mEAAM;IAAA,6DAAW;IAC7D,wKACsB;IACxB,6DAAiB;IAEnB,4EAAwD;IAEzC,qEAAQ;IAAA,6DAAY;IAC/B,0EAA4C;IAC5C,iFAA4C;IAAxB,8UAAS,sBAAa,IAAC;IAAC,mEAAM;IAAA,6DAAW;IAC7D,wKAEmC;IAEnC,wKAEyC;IAC3C,6DAAiB;IAMnB,4EAAwD;IAEzC,6EAAgB;IAAA,6DAAY;IACvC,0EAAoD;IACpD,wKAE4C;IAC5C,wKAE8D;IAChE,6DAAiB;IAGnB,6EAAqE;IAEjE,mKAGS;IACT,mKAGS;IACT,gFAA2E;IAArD,4UAAS,oBAAW,IAAC;IACzC,oEACF;IAAA,6DAAS;;;IA7HE,uFAAqB;IAQ9B,2DAAqC;IAArC,uGAAqC;IAC3B,2DAAuD;IAAvD,4HAAuD;IAWjE,2DAAqC;IAArC,uGAAqC;IAC3B,2DAAuD;IAAvD,4HAAuD;IAUvD,2DAAkD;IAAlD,uHAAkD;IAGlD,2DAER;IAFQ,kHAER;IAEQ,2DAEV;IAFU,sHAEV;IAUU,2DAGR;IAHQ,oKAGR;IAGQ,2DAGR;IAHQ,mKAGR;IAGQ,2DAGR;IAHQ,+JAGR;IAaQ,2DAAiD;IAAjD,sHAAiD;IASjD,2DAER;IAFQ,iHAER;IAEQ,2DAEV;IAFU,qHAEV;IAWU,2DAER;IAFQ,8HAER;IACQ,2DAEV;IAFU,+HAEV;IAMO,2DAAe;IAAf,oFAAe;IAIf,2DAAgB;IAAhB,qFAAgB;;;IA/HnC,yEAAmC;IAEjC,2EAAoB;IAEZ,yEAAa;IAAA,6DAAK;IAI1B,wJAkIO;IAET,sEAAe;;;IApI6B,2DAAmB;IAAnB,wFAAmB;;;IA0NzD,wFACoC;IAAA,8DACpC;IAAA,6DAAkB;;;IAClB,iFAAmE;IAAA,wDAEnE;IAAA,6DAAW;;;IAFwD,2DAEnE;IAFmE,2GAEnE;;;IAGA,wFACqC;IAAA,iEACrC;IAAA,6DAAkB;;;IAEhB,wEAAuB;IAAC,wDAAc;IAAA,6DAAO;;;IAArB,2DAAc;IAAd,yFAAc;;;IADxC,iFAAiF;IAC/E,kJAA6C;IAC/C,6DAAW;;;IADF,2DAAc;IAAd,gFAAc;;;IAavB,wFACqC;IAAA,oEACrC;IAAA,6DAAkB;;;IAEhB,wEAAiC;IAC/B,wDAAwB;IAAA,6DAAO;;;IAA/B,2DAAwB;IAAxB,mGAAwB;;;IAF5B,iFAAiF;IAC/E,kJACiC;IACnC,6DAAW;;;IAFF,2DAAwB;IAAxB,0FAAwB;;;IAKjC,wFACqC;IAAA,oEACrC;IAAA,6DAAkB;;;IAEhB,wEAA8B;IAC5B,wDAAqB;IAAA,6DAAO;;;IAA5B,2DAAqB;IAArB,gGAAqB;;;IAFzB,iFAAiF;IAC/E,kJAC8B;IAChC,6DAAW;;;IAFF,2DAAqB;IAArB,uFAAqB;;;IAO9B,wFACqC;IAAA,kEACrC;IAAA,6DAAkB;;;IAEhB,wEAAgC;IAC9B,wDAAuB;IAAA,6DAAO;;;IAA9B,2DAAuB;IAAvB,kGAAuB;;;IAF3B,iFAAiF;IAC/E,kJACgC;IAClC,6DAAW;;;IAFF,2DAAuB;IAAvB,yFAAuB;;;IAKhC,wFACqC;IAAA,oEACrC;IAAA,6DAAkB;;;IAEhB,wEAAgC;IAAC,wDAAuB;IAAA,6DAAO;;;IAA9B,2DAAuB;IAAvB,kGAAuB;;;IAD1D,iFAAiF;IAC/E,kJAA+D;IACjE,6DAAW;;;IADF,2DAAuB;IAAvB,yFAAuB;;;IAIhC,wFACqC;IAAA,0EACrC;IAAA,6DAAkB;;;IAEhB,wEAAgC;IAC9B,wDAAuB;IAAA,6DAAO;;;IAA9B,2DAAuB;IAAvB,kGAAuB;;;IAF3B,iFAAiF;IAC/E,kJACgC;IAClC,6DAAW;;;IAFF,2DAAuB;IAAvB,yFAAuB;;;IAKhC,wFACqC;IAAA,qEACrC;IAAA,6DAAkB;;;IAEhB,wEAA2B;IAAC,wDAAkB;IAAA,6DAAO;;;IAAzB,2DAAkB;IAAlB,6FAAkB;;;IADhD,iFAAiF;IAC/E,kJAAqD;IACvD,6DAAW;;;IADF,2DAAkB;IAAlB,oFAAkB;;;IAI3B,wFACqC;IAAA,sEACrC;IAAA,6DAAkB;;;IAEhB,wEAA4B;IAC1B,wDAGF;;IAAA,6DAAO;;;IAHL,2DAGF;IAHE,4LAGF;;;IALF,iFAAiF;IAC/E,kJAIO;IACT,6DAAW;;;IALF,2DAAmB;IAAnB,qFAAmB;;;IAS5B,wFACqC;IAAA,oEACrC;IAAA,6DAAkB;;;IAEhB,wEAA0B;IAAC,wDAAiB;IAAA,6DAAO;;;IAAxB,2DAAiB;IAAjB,4FAAiB;;;IAD9C,iFAAiF;IAC/E,kJAAmD;IACrD,6DAAW;;;IADF,2DAAiB;IAAjB,mFAAiB;;;IAI1B,wFACqC;IAAA,oEACrC;IAAA,6DAAkB;;;IAEhB,wEAA0B;IAAC,wDAAiB;IAAA,6DAAO;;;IAAxB,2DAAiB;IAAjB,4FAAiB;;;IAD9C,iFAAiF;IAC/E,kJAAmD;IACrD,6DAAW;;;IADF,2DAAiB;IAAjB,mFAAiB;;;IAK1B,wFACqC;IAAA,qEACrC;IAAA,6DAAkB;;;IAEhB,wEAA2B;IAAC,wDAExB;;IAAA,6DAAO;;;IAFiB,2DAExB;IAFwB,0LAExB;;;IAHN,iFAAiF;IAC/E,kJAEW;IACb,6DAAW;;;IAHF,2DAAkB;IAAlB,oFAAkB;;;IAO3B,wFACqC;IAAA,sEACrC;IAAA,6DAAkB;;;IAEhB,wEAA4B;IAAC,wDAEzB;;IAAA,6DAAO;;;IAFkB,2DAEzB;IAFyB,2LAEzB;;;IAHN,iFAAiF;IAC/E,kJAEW;IACb,6DAAW;;;IAHF,2DAAmB;IAAnB,qFAAmB;;;IAO5B,wFACqC;IAAA,wEACrC;IAAA,6DAAkB;;;IAEhB,wEAA8B;IAAA,wDAEzB;;IAAA,6DAAO;;;IAFkB,2DAEzB;IAFyB,6LAEzB;;;IAHP,iFAAiF;IAC/E,kJAEY;IACd,6DAAW;;;IAHF,2DAAqB;IAArB,uFAAqB;;;IAQ9B,wFACmD;IAAA,uEAAW;IAAA,6DAAkB;;;IAM5E,+EAA+E;IAC7E,qEAA+B;IAAA,wEAEjC;IAAA,6DAAS;;;IACT,+EAA8E;IAC5E,qEAAyC;IAAA,wEAE3C;IAAA,6DAAS;;;IACT,+EAA4E;IAC1E,qEAAsC;IAAA,wDAExC;IAAA,6DAAS;;IAF+B,2DAExC;IAFwC,sFAExC;;;IAhBJ,iFAEqC;IAAnC,mLAAS,wBAAwB,IAAC;IAClC,8EAA0C;IAExC,uJAGS;IACT,uJAGS;IACT,uJAGS;IACX,sEAAe;IACjB,6DAAW;;;IAfK,2DAA2B;IAA3B,0FAA2B;IAE9B,2DAAiB;IAAjB,8EAAiB;IAIjB,2DAAiB;IAAjB,8EAAiB;;;IAY9B,wFACmD;IAAA,uEAAW;IAAA,6DAAkB;;;IAK5E,+EAA+E;IAC7E,qEAAmC;IAAA,uEAErC;IAAA,6DAAS;;;IACT,+EAA6E;IAC3E,qEAAmC;IAAA,sEAErC;IAAA,6DAAS;;;IAET,+EAA4E;IAC1E,qEAAsC;IAAA,wDAExC;IAAA,6DAAS;;IAF+B,2DAExC;IAFwC,sFAExC;;;IAhBJ,iFAEqC;IAAnC,mLAAS,wBAAwB,IAAC;IAClC,8EAA6C;IAC3C,uJAGS;IACT,uJAGS;IAET,uJAGS;IACX,sEAAe;IACjB,6DAAW;;;IAfK,2DAA8B;IAA9B,6FAA8B;IACjC,2DAAiB;IAAjB,8EAAiB;IAIjB,2DAAiB;IAAjB,8EAAiB;;;IAc9B,wFAAgD;IAAA,mEAAO;IAAA,6DAAkB;;;;IACzE,iFAA4D;IAExD,8XAAS,uCAAyB,IAAC;IACnC,qFAAgF;IAClF,6DAAS;IACT,+EAC6D;IAA3D,wXAAS,uCAAyB,IAAC;IACnC,qFACiD;IACnD,6DAAS;;;IAR8B,2DAA2B;IAA3B,6FAA2B;IAE7B,2DAAwB;IAAxB,yEAAwB;IAAxC,yEAAe;IAEG,2DAA2B;IAA3B,6FAA2B;IAG9D,2DAA0B;IAA1B,2EAA0B;IADT,4EAAkB;;;IAM3C,6EAAqE;;;;IACrE,gFAC2E;IAAzE,8XAAS,uCAAyB,IAAC;IACrC,6DAAU;;IAD4B,+EAA0B;;;IAGlE,4EAA2C;IACzC,wFACuB;IACzB,6DAAM;;IAFkC,2DAAe;IAAf,yEAAe;;;IA8BzD,4EAAU;IAAA,uEAAW;IAAA,6DAAW;IAAC,wFACnC;;;IAwCY,wFACkD;IAAA,8DAAE;IAAA,6DAAkB;;;IACtE,iFACkD;IAChD,wDACF;IAAA,6DAAW;;;IAHwC,sFAAuB;IAExE,2DACF;IADE,2FACF;;;IAIA,wFACiE;IAAA,oEAAQ;IAAA,6DAAkB;;;IAC3F,iFACiE;IAElD,oEAAQ;IAAA,6DAAY;IAC/B,yEAC0C;IAC5C,6DAAiB;;;IANgC,sFAAuB;;;IAU1E,wFACiE;IAAA,oEAAQ;IAAA,6DAAkB;;;IAC3F,iFACiE;IAElD,oEAAQ;IAAA,6DAAY;IAC/B,yEAC0C;IAC5C,6DAAiB;;;IANgC,sFAAuB;;;IAW1E,wFACmE;IAAA,uEAC7D;IAAA,6DAAkB;;;;IACxB,iFACmE;IAE/D,kfAAU,wDAAoC,IAAC;;IADjD,6DAC4E;;;;IAH3B,sFAAuB;IAE/C,2DAA8B;IAA9B,0JAA8B;;;IAMzD,wFACoB;IAAA,oEAAQ;IAAA,6DAAkB;;;;IAC9C,iFACmD;IACT,iLAAS,wBAAwB,IAAC,qUAC/D,mCAAqB,IAD0C;IAExE,iFAAgC;IAAA,yEAAa;IAAA,6DAAW;;;IAO5D,wFACoB;IAAA,kEAAM;IAAA,6DAAkB;;;;IAC5C,iFACmD;IACV,iLAAS,wBAAwB,IAAC,qUAC9D,6BAAe,IAD+C;IAEvE,qFACiD;IACnD,6DAAS;;IADL,2DAA0B;IAA1B,2EAA0B;IADT,4EAAkB;;;IAS3C,6EAAmE;;;IACnE,2EAImD;;IAA/C,+EAA0B;;;IAC9B,iFAAoC;IAAA,wDAE/B;IAAA,6DAAW;;;IAFoB,2DAE/B;IAF+B,8HAE/B;;;IAIP,4EAAmD;IACjD,wFACuB;IACzB,6DAAM;;IAFkC,2DAAe;IAAf,yEAAe;;;;IA+B7D,8EAA8D;IAC5D,+EAAwF;IAA9D,sUAAS,oBAAW,KAAK,CAAC,IAAC;IACnD,4EAAU;IAAA,wEAAY;IAAA,6DAAW;IACjC,0EACF;IAAA,6DAAS;IACT,+EACkB;IADQ,sUAAS,oBAAW,SAAS,CAAC,IAAC;IAEvD,4EAAU;IAAA,wEAAY;IAAA,6DAAW;IACjC,8EACF;IAAA,6DAAS;IACX,sEAAe;;;IAVsB,0FAAwB;;;;;IAt3BjF,2EAAmC;IACjC,oIA0GM;IACN,2EAAkB;IAOA,yDAAoC;IAAA,6DAAK;IAGjD,4EAAiB;IACf,uEAA0B;IAC5B,6DAAM;IACN,wEAAK;IAMiB,4EAAc;IAAA,6DAAY;IACtC,yEAA0D;IAC1D,iFAAgD;IAA5B,uTAAS,0BAAiB,IAAC;IAAC,mEAAM;IAAA,6DAAW;IACjE,iJAMY;IACd,6DAAiB;IAInB,4EAAwD;IAExC,4EAAc;IAAA,6DAAY;IACtC,yEAAiD;IACjD,iJAMY;IACd,6DAAiB;IAmBnB,4EAAwD;IAExC,4EAAc;IAAA,6DAAY;IACtC,yEAA6C;IAC7C,iFAAgD;IAA5B,uTAAS,0BAAiB,IAAC;IAAC,mEAAM;IAAA,6DAAW;IACjE,iJAIY;IACd,6DAAiB;IAEnB,4EAAwD;IAEzC,2EAAc;IAAA,6DAAY;IACrC,yEAAmD;IACnD,iFAAiD;IAA7B,uTAAS,2BAAkB,IAAC;IAAC,mEAAM;IAAA,6DAAW;IAClE,iJACsB;IACxB,6DAAiB;IAGnB,4EAAwD;IAEzC,wEAAW;IAAA,6DAAY;IAClC,yEAAgD;IAChD,iFAA8C;IAA1B,uTAAS,wBAAe,IAAC;IAAC,mEAAM;IAAA,6DAAW;IAC/D,iJACsB;IACxB,6DAAiB;IAGnB,4EAAwD;IAEzC,yEAAY;IAAA,6DAAY;IACnC,yEAAsF;IAGtF,iJAMY;IACZ,iJAMY;IACd,6DAAiB;IAInB,4EAAwD;IAEzC,qEAAQ;IAAA,6DAAY;IAC/B,yEAA8E;IAG9E,iJAIY;IACZ,iJAIY;IACd,6DAAiB;IAWvB,kFAAe;IAEX,qJAEc;IACd,4EAAkB;IAGhB,uJA4Ie;IAGf,4EAAuB;IAMP,4EAAe;IAAA,6DAAK;IAE1B,2EAA4B;IAEa,mEAAM;IAAA,6DAAI;IACjD,kFACyE;IAD9B,0TAAS,4BAAmB,IAAC;IAAxE,6DACyE;IAG3E,uEAAI;IAEqC,qTAAS,2BAAkB,IAAC;IAC/D,iFAA4B;IAAA,gEAAG;IAAA,6DAAW;IAgBhD,uEAAI;IAG8B,qEAAO;IAAA,6DAAW;IAMxD,6EAAmB;IAIoC,gTAEzE,iBAAqB,MAAM,cAClB,oBAAoB,SACP,QAAQ,GACA,IAAD;IALH,6DAKM;IAGV,wEAAI;IAGE,gTAAS,iBAAqB,KAAK,CAAC,IAAC;IADvC,6DAC0C;IAG9C,wEAAI;IAGE,gTAAS,iBAAqB,MAAM,CAAC,IAAC;IADxC,6DAC2C;IAG/C,wEAAI;IAGE,gTAAS,iBAAqB,KAAK,CAAC,IAAC;IADvC,6DAC0C;IAUtD,uFAC+B;IAC7B,+EAAgC;IAC9B,+JAEkB;IAClB,iJAEW;IACb,sEAAe;IACf,+EAAkC;IAChC,+JAEkB;IAClB,iJAEW;IACb,sEAAe;IAUf,+EAA4C;IAC1C,+JAEkB;IAClB,iJAGW;IACb,sEAAe;IACf,+EAAyC;IACvC,+JAEkB;IAClB,iJAGW;IACb,sEAAe;IAGf,+EAA2C;IACzC,+JAEkB;IAClB,iJAGW;IACb,sEAAe;IACf,+EAA2C;IACzC,+JAEkB;IAClB,iJAEW;IACb,sEAAe;IACf,+EAA2C;IACzC,+JAEkB;IAClB,iJAGW;IACb,sEAAe;IACf,+EAAsC;IACpC,+JAEkB;IAClB,iJAEW;IACb,sEAAe;IACf,+EAAuC;IACrC,+JAEkB;IAClB,iJAMW;IACb,sEAAe;IAEf,+EAAqC;IACnC,+JAEkB;IAClB,iJAEW;IACb,sEAAe;IACf,+EAAqC;IACnC,+JAEkB;IAClB,iJAEW;IACb,sEAAe;IAEf,+EAAsC;IACpC,+JAEkB;IAClB,iJAIW;IACb,sEAAe;IAEf,+EAAuC;IACrC,+JAEkB;IAClB,iJAIW;IACb,sEAAe;IAEf,+EAAyC;IACvC,+JAEkB;IAClB,iJAIW;IACb,sEAAe;IAGf,+EAAwC;IACtC,+JACgF;IAChF,iJAkBW;IACb,sEAAe;IACf,+EAA2C;IACzC,+JACgF;IAChF,iJAkBW;IACb,sEAAe;IAEf,+EAAqC;IACnC,+JAAyE;IACzE,iJAUW;IACb,sEAAe;IAEf,6JAAqE;IACrE,+IAEU;IACZ,6DAAY;IACZ,uIAGM;IAIN,6EAAuB;IAEhB,kFAAoB;IAAA,0EAAM;IAAA,0DAEvB;;IAAA,6DAAO;IAEb,uEAAG;IAAA,mEAAK;IAAA,0EAAM;IAAA,0DAA6D;;IAAA,6DAAO;IAElF,mEAAI;IACJ,wEAAI;IAAG,oEAAM;IAAA,6DAAI;IAAC,0EAAM;IAAA,0DACV;;IAAA,6DAAO;IAY/B,6EAAS;IACP,uJAEc;IACd,6EAAkB;IAYI,8EAAgB;IAAA,6DAAK;IAE3B,4EAA4B;IAEa,oEAAM;IAAA,6DAAI;IACjD,mFACyE;IAD9B,2TAAS,4BAAmB,IAAC;IAAxE,6DACyE;IAG3E,wEAAI;IAEqC,sTAAS,qBAAY,IAAC;IACzD,kFAA4B;IAAA,iEAAG;IAAA,6DAAW;IAMpD,wEAAyB;IAC3B,6DAAM;IAIR,uFACoF;IAElF,+EAAgC;IAC9B,+JACsE;IACtE,kJAGW;IACb,sEAAe;IAEf,gFAAsC;IACpC,gKAC2F;IAC3F,kJAOW;IACb,sEAAe;IACf,gFAAsC;IACpC,gKAC2F;IAC3F,kJAOW;IACb,sEAAe;IAEf,gFAAwC;IACtC,gKAEwB;IACxB,kJAIW;IACb,sEAAe;IAEf,gFAAsC;IACpC,gKAC8C;IAC9C,kJAMW;IACb,sEAAe;IAGf,gFAAoC;IAClC,gKAC4C;IAC5C,kJAOW;IACb,sEAAe;IAKf,6JAAmE;IACnE,gJAImD;IACnD,kJAEgB;IAClB,6DAAY;IAGZ,uIAGM;IACN,mFACoD;IACtD,6DAAM;IAUhB,mEAAI;IAGJ,8EAAsB;IAId,sTAAS,iBAAQ,IAAC;IAClB,sEACF;IAAA,6DAAS;IAET,iFAC2C;IAAnB,sTAAS,iBAAQ,IAAC;IACxC,sEACF;IAAA,6DAAS;IAET,0JAUe;IAOjB,6DAAM;;;;;IAt4BJ,2DAA2B;IAA3B,gGAA2B;IA6GhC,2DAAyC;IAAzC,4HAAyC;IAKpC,2DAAoC;IAApC,gHAAoC;IAOpC,2DAAqB;IAArB,sFAAqB;IAQP,2DAIR;IAJQ,0HAIR;IAWQ,2DAIR;IAJQ,0HAIR;IA2BQ,2DAER;IAFQ,sHAER;IAUQ,2DAAwD;IAAxD,4HAAwD;IAUxD,2DAAqD;IAArD,yHAAqD;IAQjD,2DAA4B;IAA5B,+EAA4B;IACX,2DAAkB;IAAlB,qEAAkB;IAEvC,2DAIR;IAJQ,yHAIR;IAGQ,2DAIR;IAJQ,4HAIR;IAUY,2DAAwB;IAAxB,gFAAwB;IACP,2DAAc;IAAd,sEAAc;IAEnC,2DAER;IAFQ,qHAER;IAGQ,2DAER;IAFQ,qHAER;IAsBS,2DAAkB;IAAlB,sFAAkB;IA+NI,4DAAyB;IAAzB,0FAAyB;IA+MzC,4DAAiC;IAAjC,qGAAiC;IACL,2DAAyB;IAAzB,sGAAyB;IAIlE,2DAAe;IAAf,mFAAe;IASY,2DAEvB;IAFuB,8LAEvB;IAEQ,2DAA6D;IAA7D,wLAA6D;IAGnD,2DACV;IADU,2LACV;IAkBd,2DAA2B;IAA3B,4FAA2B;IAiCQ,4DAAqC;IAArC,sGAAqC;IA6ErD,4DAA+B;IAA/B,mGAA+B;IAKnE,2DAAuB;IAAvB,oGAAuB;IAOA,2DAAuB;IAAvB,2FAAuB;IAId,2DAAe;IAAf,yEAAe;IAiBf,2DAAe;IAAf,yEAAe;IAMM,2DAA2B;IAA3B,4FAA2B;IAKtD,2DAAoB;IAApB,wFAAoB;;;AD91B5D,MAAM,+BAA+B;IAyB1C,+HAA+H;IAC/H,YACU,EAAe,EACf,MAAc,EACd,cAA8B,EAC9B,mBAAwC,EACxC,QAAyB,EACzB,KAAqB,EACrB,cAA2C,EAC3C,eAAoC,EACpC,MAAiB,EACjB,oBAA0C,EAC1C,yBAAkD,EAClD,kBAAsC,EACtC,YAA0B;QAZ1B,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAA6B;QAC3C,oBAAe,GAAf,eAAe,CAAqB;QACpC,WAAM,GAAN,MAAM,CAAW;QACjB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,8BAAyB,GAAzB,yBAAyB,CAAyB;QAClD,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAc;QAtCpC,aAAQ,GAAG,KAAK,CAAC;QACjB,iBAAY,GAAG,KAAK,CAAC;QAIrB,aAAQ,GAAqB,IAAI,0CAAO,EAAW,CAAC;QAEpD,oBAAe,GAAY,KAAK,CAAC;QAEjC,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QACvB,kBAAa,GAAG,KAAK,CAAC;QAEtB,kEAAkE;QAClE,+DAA+D;QAC/D,eAAe;QACf,mBAAc,GAAU,CAAC,kBAAkB,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;QAG3E,kBAAkB;QAClB,eAAU,GAAG,IAAI,wEAAkB,CAAM,EAAE,CAAC,CAAC;QA8P7C,qBAAgB,GAAa;YAC3B,IAAI;YAEJ,eAAe;YACf,eAAe;YACf,UAAU;YACV,WAAW;YACX,SAAS;YACT,SAAS;YAET,UAAU;YACV,WAAW;YACX,aAAa;YAEb,SAAS;SACV,CAAC;QAUF,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,IAAI,CAAC;QAC1B,qBAAgB,GAAW,CAAC,CAAC,CAAC,CAAC,sCAAsC;QA6ErE,kBAAa,GAAY,IAAI,CAAC;QAkH9B,iBAAY,GAAY,KAAK,CAAC;QA0B9B,WAAM,GAAG;YACP,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,CAAC;YACX,cAAc,EAAE,CAAC;YACjB,WAAW,EAAE,CAAC;YACd,wBAAwB,EAAE,EAAE;SAC7B,CAAC;QAiBF,qGAAqG;QACrG,iBAAiB;QAEjB,2BAAsB,GAAG,IAAI,kDAAe,CAAoB,EAAE,CAAC,CAAC;QACpE,mBAAc,GAAG;YACf,IAAI;YACJ,UAAU;YACV,UAAU;YACV,YAAY;YACZ,UAAU;YACV,QAAQ;SACT,CAAC;QACF,SAAI,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpC,kBAAa,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAErE,sBAAiB,GAAY,IAAI,CAAC;QA2C3B,kBAAa,GAAoB,EAAE,CAAC;QACpC,kBAAa,GAAG,IAAI,kDAAe,CAAC,KAAK,CAAC,CAAC;QA+DlD,+HAA+H;QAE/H,qCAAqC;QACrC,UAAK,GAAU,EAAE,CAAC,CAAC,iBAAiB;QAEpC,eAAU,GAAgC,EAAE,CAAC;QA+E7C,6JAA6J;QAC7J,4BAA4B;QAC5B,iBAAY,GAAU,EAAE,CAAC;QA8CzB,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAU,EAAE,CAAC;QAwB1B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,oBAAe,GAAO,EAAE,CAAC;QACzB,iBAAY,GAAO,EAAE,CAAC;QACtB,kBAAa,GAAG,EAAE,CAAC;QAuBnB,uBAAkB,GAAU,EAAE,CAAC;QAtyB7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;IACxD,CAAC;IAED,+HAA+H;IAC/H,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAE3B,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;gBAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAErC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC9B,mDAAmD;gBACnD,qDAAqD;gBACrD,mCAAmC;gBACnC,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+HAA+H;IAC/H,8DAA8D;IAC9D,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,yBAAyB;aAC3B,sBAAsB,CAAC,MAAM,CAAC;aAC9B,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,IAAI,GAAG,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;oBAC3B,0BAA0B;oBAC1B,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;wBAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;wBAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;qBAC5B;oBACD,OAAO,CAAC,GAAG,CACT,+BAA+B,EAC/B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAC5B,CAAC;oBACF,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CACtC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAC5B,CAAC;wBACF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBAEjC,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBAED,IACE,IAAI,CAAC,QAAQ,CAAC,sCAAsC,CAAC,MAAM,GAAG,CAAC,EAC/D;wBACA,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;wBAC/B,IAAI,CAAC,QAAQ,CAAC,sCAAsC,CAAC,OAAO,CAC1D,CAAC,OAAO,EAAE,EAAE;4BACV,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gCAC3B,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;gCACpB,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;gCAC5B,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;6BAC7B,CAAC,CAAC;4BACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACzB,CAAC,CACF,CAAC;wBAEF,IAAI,CAAC,UAAU,EAAE,CAAC;qBACnB;oBAED,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAE/C,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEf,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC/C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC/D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;SACF,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAED,6DAA6D;IAC7D,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;YAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YACvC,IAAI,CAAC,4BAA4B,EAAE,CAAC;YACpC,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IAED,+HAA+H;IAC/H,+HAA+H;IAC/H,wDAAwD;IACxD,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,CAAC,EAAE,CAAC;YACR,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACzC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACzC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACpC,6CAA6C;YAC7C,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAExC,cAAc,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACxE,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAExC,sCAAsC,EAAE,CAAC,EAAE,CAAC;YAC5C,aAAa,EAAE,CAAC,EAAE,CAAC;YAEnB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACrC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC3C,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;SACzC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACtB,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC1C,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACjE,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC/D,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACvD,sEAAsE;YACtE,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAEzD,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACrE,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAE/D,sCAAsC,EAAE;gBACtC,IAAI,CAAC,QAAQ,CAAC,sCAAsC,IAAI,EAAE;aAC3D;YACD,aAAa,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,EAAE,CAAC;YAElD,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACzD,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACrE,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,gEAAmB,CAAC,CAAC;SAChE,CAAC,CAAC;IACL,CAAC;IACD,4BAA4B;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YACjD,YAAY,EAAE;gBACZ,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACrD,CAAC,gEAAmB,CAAC;aACtB;YACD,YAAY,EAAE;gBACZ,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACrD,CAAC,gEAAmB,CAAC;aACtB;YACD,WAAW,EAAE;gBACX,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACpD,CAAC,gEAAmB,CAAC;aACtB;YACD,OAAO,EAAE;gBACP,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAChD,CAAC,gEAAmB,CAAC;aACtB;YACD,mBAAmB;YACnB,4DAA4D;YAC5D,2BAA2B;YAC3B,KAAK;YACL,QAAQ,EAAE;gBACR,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACjD,CAAC,gEAAmB,CAAC;aACtB;YAED,sCAAsC,EAAE;gBACtC;oBACE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,sCAAsC;oBAC3D,QAAQ,EAAE,IAAI;iBACf;gBACD,CAAC,gEAAmB,CAAC;aACtB;YACD,aAAa,EAAE;gBACb,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACtD,CAAC,gEAAmB,CAAC;aACtB;YAED,cAAc,EAAE;gBACd,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACvD,CAAC,gEAAmB,CAAC;aACtB;YACD,WAAW,EAAE;gBACX,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACpD,CAAC,gEAAmB,CAAC;aACtB;SACF,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB,CAAC,OAAoB;QACvC,MAAM,mBAAmB,GAAS,OAAO,CAAC,KAAK,CAAC;QAChD,MAAM,KAAK,GAAS,IAAI,IAAI,EAAE,CAAC;QAE/B,IAAI,mBAAmB,GAAG,KAAK,EAAE;YAC/B,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;SAC9B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAqBD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAMD,2BAA2B;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACrE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAChE,eAAe,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACvE,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACrE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAChE,SAAS,EAAE;gBACT,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC7B;oBACE,gEAAmB;oBACnB,2DAAc,CAAC,UAAU,CAAC;oBAC1B,+DAAkB,CAAC,mBAAmB,CAAC;iBACxC;aACF;YAED,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC/D,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAE/D,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAChE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YACjE,WAAW,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;SACpE,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC1C,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YACvE,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAC1C,QAAQ,EAAE;gBACR,CAAC;gBACD;oBACE,gEAAmB;oBACnB,2DAAc,CAAC,IAAI,CAAC;oBACpB,+DAAkB,CAAC,0BAA0B,CAAC;iBAC/C;aACF;YACD,SAAS,EAAE;gBACT,CAAC;gBACD;oBACE,gEAAmB;oBACnB,2DAAc,CAAC,UAAU,CAAC;oBAC1B,+DAAkB,CAAC,mBAAmB,CAAC;iBACxC;aACF;YAED,OAAO,EAAE;gBACP,EAAE;gBACF;oBACE,gEAAmB;oBACnB,2DAAc,CAAC,IAAI,CAAC;oBACpB,+DAAkB,CAAC,0BAA0B,CAAC;iBAC/C;aACF;YACD,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAmB,CAAC,CAAC;YAEpC,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,WAAW,EAAE,CAAC,EAAE,CAAC;SAClB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,OAAoB;QAChC,MAAM,YAAY,GAAS,OAAO,CAAC,KAAK,CAAC;QACzC,MAAM,KAAK,GAAS,IAAI,IAAI,EAAE,CAAC;QAE/B,IAAI,YAAY,GAAG,KAAK,EAAE;YACxB,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SAC3B;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAGD,gBAAgB;QACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,SAAS,GAAG;gBAChB,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa;gBAC/C,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;gBACrC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe;gBACnD,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa;gBAC/C,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;gBACrC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS;gBAEvC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;gBACnC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;gBAEnC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;gBACrC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS;gBACvC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW;aAC5C,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtB,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc;aAChD,CAAC,CAAC;SACJ;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAElD,MAAM,aAAa,GAAG;gBACpB,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa;gBAC/C,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;gBACrC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe;gBACnD,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa;gBAC/C,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;gBACrC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS;gBAEvC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;gBACnC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;gBACnC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ;gBACrC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS;gBACvC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW;aAC5C,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,aAAa,CAAC;YAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;YAE3B,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;IACH,CAAC;IAED,oBAAoB,CAAC,GAAQ;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,aAAa,EAAE,GAAG,CAAC,aAAa;YAChC,QAAQ,EAAE,GAAG,CAAC,QAAQ;YACtB,eAAe,EAAE,GAAG,CAAC,eAAe;YACpC,aAAa,EAAE,GAAG,CAAC,aAAa;YAChC,QAAQ,EAAE,GAAG,CAAC,QAAQ;YACtB,SAAS,EAAE,GAAG,CAAC,SAAS;YAExB,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,OAAO,EAAE,GAAG,CAAC,OAAO;YAEpB,QAAQ,EAAE,GAAG,CAAC,QAAQ;YACtB,SAAS,EAAE,GAAG,CAAC,SAAS;YACxB,WAAW,EAAE,GAAG,CAAC,WAAW;SAC7B,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB,CAAC,KAAa;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACpD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAGD,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QAErB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/D,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAE7D,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CACrD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EACnC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,EACpC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CACnC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACxC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1C,WAAW,EAAE,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;IAUD,eAAe;QACb,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,gBAAgB;QAChB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;YAC1B,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;YAC9B,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc;YAC1C,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;YACpC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAE;SAC5D,CAAC,CAAC;IACL,CAAC;IAsBD,cAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SACzB,CAAC,CAAC;QACH,4DAA4D;QAC5D,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;SACpC,CAAC,CAAC;QACH,4BAA4B;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,UAAU;QACR,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,sCAAsC,EACpC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW;SACvC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,GAAoB;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC;QACzD,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAErC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC7C;IACH,CAAC;IASD,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK;QACpC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACtE,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAE/B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;gBAEnD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAExE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBAE7C,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC5C,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACtC,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC9C,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAElD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;gBAErC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;gBAE1B,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;oBAC7B,IAAI,EAAE,IAAI,CAAC,QAAQ;oBACnB,QAAQ,EAAE,IAAI,CAAC,YAAY;oBAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,GAAQ;QACvB,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1B,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;QAElC,8BAA8B;QAC9B,MAAM,MAAM,GAAG,GAAG,IAAI,EAAE,CAAC;QACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,GAAG,QAAQ,IAAI,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,+HAA+H;IAC/H,wBAAwB;IACxB,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mDAAmD,CAAC,CAAC,CAAC;QAC5E,gCAAgC;IAClC,CAAC;IASD,eAAe,CAAC,KAAe;QAC7B,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE3B,IAAI,IAAI,EAAE;YACR,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YACpC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAM,EAAE,EAAE;gBAC7B,MAAM,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpC,MAAM,QAAQ,GAAG,uCAAS,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC3D,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1D,MAAM,QAAQ,GAAG,sDAAwB,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;gBAEpE,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEzC,sBAAsB;gBACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBAC7B,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,iBAAiB;iBAC5C,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1C,CAAC,CAAC;YAEF,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACpC;IACH,CAAC;IASD,UAAU,CAAC,QAAQ;QACjB,qCAAqC;QAErC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,QAAQ,QAAQ,EAAE;YAChB,KAAK,KAAK;gBACR,SAAS,GAAG,iCAAiC,CAAC;gBAC9C,iCAAiC;gBACjC,MAAM;YACR,KAAK,SAAS;gBACZ,SAAS,GAAG,qCAAqC,CAAC;gBAClD,iCAAiC;gBACjC,MAAM;YACR;gBACE,OAAO;SACV;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,eAAe,EAAE;YACvE,SAAS;SACV,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;YAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;YAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;YAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;YAC7B,YAAY,CAAC,IAAI,GAAG;gBAClB,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACrB,QAAQ,EAAE,QAAQ;aACnB,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE9C,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,6KAAkC,EAClC,YAAY,CACb,CAAC;YAEF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACnB,mDAAmD;iBACpD,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAKD,eAAe;QACb,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,kBAAkB;YAC1B,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+HAAuB,EAAE,YAAY,CAAC,CAAC;QAC1E,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC9B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,YAAY,EAAE,OAAO,CAAC,YAAY;oBAClC,YAAY,EAAE,OAAO,CAAC,YAAY;oBAClC,6BAA6B;iBAC9B,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;IACnB,eAAe;QACb,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,eAAe;YACvB,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,uKAAmC,EACnC,YAAY,CACb,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,QAAQ,EAAE,OAAO,CAAC,YAAY;iBAC/B,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAID,WAAW;QACT,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,YAAY;YACpB,QAAQ,EAAE,IAAI,CAAC,aAAa;SAC7B,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gHAAkB,EAAE,YAAY,CAAC,CAAC;QAErE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACrC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;gBAErC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtB,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;oBAC/B,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;iBAChC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAMD,aAAa;QACX,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,gBAAgB;YACxB,QAAQ,EAAE,IAAI,CAAC,eAAe;SAC/B,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4HAAsB,EAAE,YAAY,CAAC,CAAC;QAEzE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtB,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;aACxC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,gBAAgB;QACd,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,mBAAmB;YAC3B,QAAQ,EAAE,IAAI,CAAC,kBAAkB;SAClC,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4HAAsB,EAAE,YAAY,CAAC,CAAC;QAEzE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtB,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc;aAC9C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+HAA+H;IAC/H,wBAAwB;IAExB,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;YAC/B,IAAI,CAAC,yBAAyB;iBAC3B,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;iBACvC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;oBAC5C,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;wBACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;wBAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;4BACnB,mDAAmD;yBACpD,CAAC,CAAC;qBACJ;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;qBAChE;gBACH,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBACjE,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC;aACpB,CAAC;gBACF,+CAAY,CAAC;SAChB;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,yBAAyB;iBAC3B,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;iBACzC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;wBACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;wBAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;4BACnB,mDAAmD;yBACpD,CAAC,CAAC;qBACJ;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;qBAChE;gBACH,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBACjE,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC;aACpB,CAAC;gBACF,+CAAY,CAAC;SAChB;IACH,CAAC;IAED,+BAA+B;IAE/B,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEhC,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;YAC/B,IAAI,CAAC,yBAAyB;iBAC3B,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC;iBACvC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;wBACzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;wBAChE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;4BACnB,mDAAmD;yBACpD,CAAC,CAAC;qBACJ;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;qBAChE;gBACH,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBACjE,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC;aACpB,CAAC;gBACF,+CAAY,CAAC;SAChB;IACH,CAAC;;8GAp7BU,+BAA+B;8HAA/B,+BAA+B;mEAsB/B,sEAAY;mEACZ,4DAAO;;;;;;QC/DpB,8EAAyB;QAIjB,gFAEiB;QACnB,6DAAM;QAEN,0EAA0B;QAGpB,4HAGI;QACJ,+HAs8BM;QACR,6DAAM;;QAn9BQ,2DAAoC;QAApC,8FAAoC;QAQzB,2DAAkC;QAAlC,uGAAkC;QAItC,2DAAc;QAAd,+EAAc;;;;;;;;;;;;;;;;;;;;;ACfU;AACsD;AACnB;AAC4B;;;AAEtH,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,uBAAuB;QAC7B,SAAS,EAAE,sHAA4B;QACvC,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,WAAW,EAAE,uBAAuB,CAAC,EAAE;KACrG;IAED;QACE,IAAI,EAAE,0BAA0B;QAChC,SAAS,EAAE,+HAA+B;QAC1C,WAAW,EAAE,CAAC,8FAAmB,CAAC;QAClC,IAAI,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC,WAAW,EAAE,0BAA0B,CAAC,EAAE;KACxG;CACF,CAAC;AAMK,MAAM,wBAAwB;;gGAAxB,wBAAwB;qHAAxB,wBAAwB;yHAH1B,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,wBAAwB,oFAFzB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBuB;AAEyB;AACqC;AACS;AACjE;AACM;AACJ;AACQ;AACN;AACU;AACR;AACO;AACX;AACE;AACF;AACU;AACK;AACQ;AACrB;AACE;AACK;AACT;AACM;AACJ;AACF;AACM;AACA;AACD;AACT;AACV;AACsB;AACgB;AACnB;AACI;;AAqDzD,MAAM,iBAAiB;;kFAAjB,iBAAiB;8GAAjB,iBAAiB;kHA7CnB;YACP,yDAAY;YACZ,iFAAwB;YAEvB,oBAAoB;YACpB,wEAAe;YACf,iEAAa;YACb,6DAAkB;YAClB,0EAAsB;YACtB,kEAAa;YACb,wEAAgB;YAChB,iFAAoB;YACpB,oEAAc;YAGd,oEAAc;YACd,4EAAkB;YAClB,oEAAc;YACd,kEAAa;YAEb,sEAAe;YACf,kEAAa;YACb,0EAAiB;YACjB,uEAAsB;YACtB,yFAAwB;YAExB,6EAAkB;YAElB,sEAAe;YACf,sEAAe;YACf,8EAAmB;YACnB,yFAAgB;YAChB,kEAAa;YACb,gEAAmB;YAEnB,2EAAiB;YACjB,wEAAgB;YAEhB,sEAAY;YACZ,wEAAgB;YAChB,oDAAa;YACb,oEAAc;SAEhB;mIAEU,iBAAiB,mBAhD1B,sHAA4B;QAC5B,+HAA+B,aAG/B,yDAAY;QACZ,iFAAwB;QAEvB,oBAAoB;QACpB,wEAAe;QACf,iEAAa;QACb,6DAAkB;QAClB,0EAAsB;QACtB,kEAAa;QACb,wEAAgB;QAChB,iFAAoB;QACpB,oEAAc;QAGd,oEAAc;QACd,4EAAkB;QAClB,oEAAc;QACd,kEAAa;QAEb,sEAAe;QACf,kEAAa;QACb,0EAAiB;QACjB,uEAAsB;QACtB,yFAAwB;QAExB,6EAAkB;QAElB,sEAAe;QACf,sEAAe;QACf,8EAAmB;QACnB,yFAAgB;QAChB,kEAAa;QACb,gEAAmB;QAEnB,2EAAiB;QACjB,wEAAgB;QAEhB,sEAAY;QACZ,wEAAgB;QAChB,oDAAa;QACb,oEAAc","sources":["./src/app/erp-finance/data/services/expense-management.service.ts","./src/app/erp-procurement/modules/recievables/pages/all-customer-invoices/all-customer-invoices.component.ts","./src/app/erp-procurement/modules/recievables/pages/all-customer-invoices/all-customer-invoices.component.html","./src/app/erp-procurement/modules/recievables/pages/manage-customer-invoices/manage-customer-invoices.component.ts","./src/app/erp-procurement/modules/recievables/pages/manage-customer-invoices/manage-customer-invoices.component.html","./src/app/erp-procurement/modules/recievables/recievables-routing.module.ts","./src/app/erp-procurement/modules/recievables/recievables.module.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ExpenseManagementService {\n  constructor(private http: HttpClient) {}\n\n  // ****************************************************************************************************************************\n\n  getExpenses(): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/all`;\n    return this.http.get<any[]>(expenseUrl);\n  }\n\n  addExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create`;\n    return this.http.post<any[]>(expenseUrl, data);\n  }\n\n  updateExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update`;\n    return this.http.put<any[]>(expenseUrl, data);\n  }\n\n  deleteExpenseTemporarily(params: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/delete`;\n    return this.http.delete<any[]>(expenseUrl, {params});\n  }\n\n  uploadBatchExpenses(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create/bulk`;\n    return this.http.post<any>(expenseUrl, data);\n  }\n\n  getCostCentersByExpenseCode(expenseGlCode: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/expenses/allCostCenters?expenseCode=${expenseGlCode}`;\n    return this.http.get<any>(expenseUrl, expenseGlCode);\n  }\n\n  getExpensesByStatus(params): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/fetchbyStatus`;\n    return this.http.get<any[]>(expenseUrl, { params });\n  }\n  getExpenseById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/expenses/find/by/id`,\n      { params }\n    );\n  }\n\n  validateBulkExpense(processedRows: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { CustomerInvoicesService } from \"src/app/erp-finance/data/services/customer-invoices.service\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { AccountingJournalTransactionsComponent } from \"src/app/erp-finance/modules/finance-management/transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-customer-invoices\",\n  templateUrl: \"./all-customer-invoices.component.html\",\n  styleUrls: [\"./all-customer-invoices.component.scss\"],\n})\nexport class AllCustomerInvoicesComponent implements OnInit {\n  displayedColumns: string[] = [\n    //\"accountingSelect\",\n    \"id\",\n    \"invoiceCode\",\n    \"customerCode\",\n    \"customerName\",\n    \"invoiceDate\",\n    \"dueDate\",\n    \"invoiceAmount\",\n\n    // \"tranCode\",\n    // \"transactionStatus\",\n    // \"tranDate\",\n    \"downloadInvoice\",\n    \"sendInvoice\",\n    \"status\",\n    \"action\",\n  ];\n\n  //binding the columns to a table\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n\n  //necessary variables\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"ADD\"; //default value\n\n  //management of data destruction upon usage\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  validationIsLoading: any;\n  dialogRef: any;\n  hideValidation: any;\n\n  // ****************************************************************************************************************************\n  //dependency injection\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private customerInvoiceManService: CustomerInvoicesService,\n    public accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private transactionService: TransactionsService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n      approvalType: [\"AllInvoices\", Validators.required],\n    });\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // ****************************************************************************************************************************\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  // ****************************************************************************************************************************\n  Form: FormGroup;\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    // { name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  selectedApprovalType: string = \"HOD\";\n  getApprovalTypeSelectSelectedStatus() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n  getApprovalTypeSelectedStatus(approvalType: any) {\n    this.Form.patchValue({\n      approvalType: approvalType,\n    });\n\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // getData() {\n  //   this.selection = new SelectionModel<any>(true, []);\n  //   this.dataSource = new MatTableDataSource([]);\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  //   this.isLoading = true;\n  //   this.selectedStatus = this.Form.value.status;\n  //   this.selectedApprovalType = this.Form.value.approvalType;\n\n  //   let params = {\n  //     status: this.Form.value.status,\n  //     approvalType: this.Form.value.approvalType,\n  //   };\n  //   // this.alignTableColumns();\n  //   this.customerInvoiceManService\n  //     .getCustomerInvoicesByStatusAndApprovalType(params)\n  //     .pipe(takeUntil(this.destroy$))\n  //     .subscribe({\n  //       next: (res) => {\n  //         console.log(\"this.data :\", res);\n  //         if (res.entity) {\n  //           this.data = res;\n  //           this.isLoading = false;\n  //           this.dataSource = new MatTableDataSource(this.data.entity);\n  //           this.dataSource.paginator = this.paginator;\n  //           this.dataSource.sort = this.sort;\n\n  //           console.log(\"this.data :\", this.data);\n  //         } else {\n  //           this.snackbar.showNotification(\"snackbar-danger\", res.message);\n  //         }\n  //       },\n  //       error: (err) => {\n  //         this.snackbar.showNotification(\"snackbar-danger\", err.message);\n  //         this.isLoading = false;\n  //       },\n  //       complete: () => {\n  //         this.isLoading = false;\n  //       },\n  //     }),\n  //     Subscription;\n  // }\n\n  // refresh() {\n  //   this.getData(this.currentPage, this.pageSize);\n  // }\n\n\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n  // data: any;\n\n  getData(page: number, size: number) {\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n    this.selectedApprovalType = this.Form.value.approvalType;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (!this.input) {\n      this.input = \"%\";\n    }\n\n    let params = {\n      status: this.Form.value.status,\n      approvalType: this.Form.value.approvalType,\n      searchTerm: this.input,\n      pageNo: page,\n      pageSize: size,\n    };\n\n    this.customerInvoiceManService\n      .getCustomerInvoicesByStatusAndApprovalType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res:: \", res);\n          console.log(\"res.entity:: \", res.entity);\n\n          console.log(\"res.entity.content:: \", res.entity.content);\n\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.content);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalElements;\n            this.currentPage = this.data.number;\n            this.totalPages = this.data.totalPages;\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  refresh() {\n    this.getData(this.currentPage, this.pageSize);\n  }\n\n  // ****************************************************************************************************************************\n  //adding Customer Invoices\n  addCustomerInvoice() {\n    this.router.navigate([\n      \"/erp-procurement/receivable/manage-customer-invoices\",\n    ]);\n  }\n\n  //Updating the payments\n\n  updateCustomerInvoice(data: any) {\n    // const additionalData = data;\n    // const serializedData = JSON.stringify(additionalData);\n    // console.log(\"Stringfied: \", data); //checks the stringified JS value\n\n    let route = \"/erp-procurement/receivable/manage-customer-invoices\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        // additionalData: serializedData,\n        action: \"Update\",\n      },\n    });\n  }\n\n  //Viewing the payments\n  viewCustomerInvoice(data: any) {\n    // const additionalData = data;\n    // const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-procurement/receivable/manage-customer-invoices\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        //  additionalData: serializedData,\n        action: \"View\",\n      },\n    });\n  }\n\n  //Validating a single customer\n  validateCustomerInvoice(data: any) {\n    // const additionalData = data;\n    // const serializedData = JSON.stringify(additionalData);\n\n    let route = \"/erp-procurement/receivable/manage-customer-invoices\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        //  additionalData: serializedData,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  //deleting Customer Invoices\n\n  deleteCustomerInvoice(id: any) {\n    Swal.fire({\n      title: \"Are you Sure?\",\n      text: \"This Customer Invoice will be deleted!!\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Yes, Delete this Customer Invoice \",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const params = new HttpParams().set(\"id\", id);\n        this.customerInvoiceManService\n          .deleteCustomerInvoice(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.snackbar.showNotification(\"snackbar-success\", res.message);\n              } else {\n                this.snackbar.showNotification(\"snackbar-danger\", res.message);\n              }\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData(this.currentPage, this.pageSize);\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //********************************************************************************************************************** */\n  //accounting Select\n  //********************************************************************************************************************** */\n\n  // New selection for a different MatTable\n  accountingTableSelection = new SelectionModel<any>(false, []);\n  accountingSelectItemsSelected: boolean = false;\n  accountingCheckboxSelectedRows: any;\n\n  isAllaccountingTableSelected() {\n    const numSelected = this.accountingTableSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masteraccountingTableToggle() {\n    if (this.isAllaccountingTableSelected()) {\n      this.accountingTableSelection.clear();\n      return;\n    }\n\n    this.accountingTableSelection.select(...this.dataSource.data);\n  }\n\n  checkboxaccountingTableLabel(row?: any): string {\n    if (!row) {\n      return `${\n        this.isAllaccountingTableSelected() ? \"deselect\" : \"select\"\n      } all`;\n    }\n    return `${\n      this.accountingTableSelection.isSelected(row) ? \"deselect\" : \"select\"\n    } row ${row.position + 1}`;\n  }\n\n  checkaccountingTableSelection() {\n    const numSelected = this.accountingTableSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    if (numSelected === numRows) {\n      this.accountingSelectItemsSelected = true;\n    } else if (numSelected !== numRows) {\n      this.accountingSelectItemsSelected = false;\n    }\n    this.selectedRows = [];\n\n    this.selectedRows = this.selection.selected;\n\n    console.log(\n      \"accountingSelectItemsSelected: \",\n      this.accountingSelectItemsSelected\n    );\n  }\n\n  transactionAction: string = \"\";\n  accountingCheckboxActive(action: any) {\n    //this.accountingCheckboxSelectedRows = this.accountingTableSelection.selected;\n\n    this.transactionAction = action;\n    console.log(\n      \"this.accountingSelectItemsSelected:: \",\n      this.accountingTableSelection.selected[0].tranCode\n    );\n\n    if (\n      this.transactionAction !== \"Add\" &&\n      (this.accountingTableSelection.selected[0].tranCode === null ||\n        this.accountingTableSelection.selected[0].tranCode === undefined)\n    ) {\n      this.snackbar.showNotification(\n        \"snackbar-danger\",\n        \"No transaction added for this record!!\"\n      );\n    } else {\n      this.transactionLookUp();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  transactionType: string = \"CustomerInvoice\";\n  transactionResponse: any;\n  transactionLookUp() {\n    console.log(\n      \"this.accountingTableSelection:: \",\n      this.accountingTableSelection.selected[0]\n    );\n\n    let addBody = {};\n    if (this.transactionAction === \"Add\") {\n      addBody = {\n        transactionType: this.transactionType,\n        prCode: this.accountingTableSelection.selected[0].prCode,\n        referenceCode: this.accountingTableSelection.selected[0].invoiceCode,\n        itemCode: \"\",\n        parttrans: [\n          {\n            accountNo: \"\",\n            amount: this.accountingTableSelection.selected[0].invoiceAmount,\n            partTranstype: \"Debit\",\n          },\n        ],\n      };\n    }\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"1200px\";\n    dialogConfig.data = {\n      action: this.transactionAction,\n      transactionType: this.transactionType,\n      selected: this.accountingTableSelection.selected[0],\n      bodyForAdd: addBody,\n      tranCode: this.accountingTableSelection.selected[0].tranCode,\n    };\n    const dialogRef = this.dialog.open(\n      AccountingJournalTransactionsComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n\n      if (result.data && result.data.statusCode === 201) {\n        this.transactionResponse = result.data.entity;\n        this.snackbar.showNotification(\"snackbar-success\", result.data.message);\n        this.updateReceivedTransactionStatus();\n      } else if (result.data && result.data.statusCode !== 201) {\n        this.snackbar.showNotification(\"snackbar-danger\", result.data.message);\n      } else {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          \"Transaction details not captured!\"\n        );\n      }\n    });\n  }\n\n  updateReceivedTransactionStatus() {\n    let params = {\n      transactionType: this.transactionResponse.transactionType,\n      tranCode: this.transactionResponse.tranCode,\n      tranDate: this.transactionResponse.tranDate,\n      referenceCode: this.transactionResponse.referenceCode,\n    };\n    this.transactionService\n      .updateAccountingTransactionDetailsStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n            this.getData(this.currentPage, this.pageSize);\n            // this.router.navigate([\n            //   \"/erp-procurement/requisitions/all-requisitions\",\n            // ]);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  hasAccess: boolean;\n  processMultipleRows(status: any) {\n    Swal.fire({\n      title: \"Select User Type\",\n      input: \"select\",\n      inputOptions: {\n        //HOD: \"HOD\",\n        FinanceManager: \"Finance Manager\",\n        SeniorFinanceManager: \"Senior Finance Manager\",\n        HeadofFinanceAndStrategy: \"Head of Finance And Strategy\",\n        ManagingDirectorAndCEO: \"Managing Director And CEO\",\n      },\n      inputPlaceholder: \"Select User Type\",\n      confirmButtonText: \"Submit\",\n      showCancelButton: true,\n      cancelButtonText: \"Cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const selectedUserType = result.value;\n        // Use selectedUserType as needed\n\n        let privilege = \"\";\n\n        if (selectedUserType === \"FinanceManager\") {\n          privilege = \"Finance Manager\";\n        } else if (selectedUserType === \"SeniorFinanceManager\") {\n          privilege = \"Senior Finance Manager\";\n        } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n          privilege = \"Head of Finance And Strategy\";\n        } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n          privilege = \"Managing Director And CEO\";\n        }\n\n        this.hasAccess = this.accessControlService.hasPrivilege(\n          \"FinanceModule\",\n          [privilege]\n        );\n\n        if (this.hasAccess) {\n          Swal.fire({\n            title:\n              '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n            input: \"textarea\",\n            inputPlaceholder: \"Type your remarks here...\",\n            confirmButtonText: \"Submit\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n\n            inputValidator: (value) => {\n              if (!value) {\n                return \"Please enter your remarks\";\n              }\n            },\n          }).then((result) => {\n            if (result.isConfirmed) {\n              const verifierRemarks = result.value;\n\n              const processedRows = this.accountingTableSelection.selected.map(\n                (element) => {\n                  return {\n                    id: element.id,\n                    status: status,\n                    verifierRemarks: verifierRemarks,\n                  };\n                }\n              );\n\n              console.log(\"LOG: \", processedRows);\n\n              let newSelectedUserType = \"\";\n              if (selectedUserType === \"FinanceManager\") {\n                newSelectedUserType = \"Finance Manager\";\n              } else if (selectedUserType === \"SeniorFinanceManager\") {\n                newSelectedUserType = \"Senior Finance Manager\";\n              } else if (selectedUserType === \"HeadofFinanceAndStrategy\") {\n                newSelectedUserType = \"Head of Finance And Strategy\";\n              } else if (selectedUserType === \"ManagingDirectorAndCEO\") {\n                newSelectedUserType = \"Managing Director And CEO\";\n              }\n              let params = { approvalType: newSelectedUserType };\n\n              this.customerInvoiceManService\n                .validateCustomerInvoices(params, processedRows)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe({\n                  next: (res) => {\n                    console.log(\"res: \", res);\n                    if (\n                      res.statusCode == 201 ||\n                      res.statusCode == 200 ||\n                      res.statusCode == 302\n                    ) {\n                      this.snackbar.showNotification(\n                        \"snackbar-success\",\n                        res.message\n                      );\n\n                      this.selection = new SelectionModel<any>(true, []);\n                      this.selection.clear();\n                    } else {\n                      this.snackbar.showNotification(\n                        \"snackbar-danger\",\n                        res.message\n                      );\n                    }\n                  },\n                  error: (err) => {\n                    this.snackbar.showNotification(\n                      \"snackbar-danger\",\n                      err.message\n                    );\n                  },\n                  complete: () => {\n                    this.getData(this.currentPage, this.pageSize);\n                  },\n                });\n            } else {\n              this.selection = new SelectionModel<any>(true, []);\n              this.selection.clear();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  //****************************************************************************************** */\n  downloadInvoice(row: any) {\n    this.downloadLoading = true;\n\n    const params = new HttpParams().set(\"invoiceCode\", row.invoiceCode);\n\n    this.customerInvoiceManService\n      .downloadInvoices(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          let url = window.URL.createObjectURL(res.data);\n\n          // if you want to open PDF in new tab\n          window.open(url);\n\n          let a = document.createElement(\"a\");\n          document.body.appendChild(a);\n          a.setAttribute(\"style\", \"display: none\");\n          a.setAttribute(\"target\", \"blank\");\n          a.href = url;\n          // Append row.code to the download URL\n          a.download = `PurchaseOrder_${row.purchaseRequisitionCode}.pdf`;\n          a.click();\n          window.URL.revokeObjectURL(url);\n          a.remove();\n\n          this.downloadLoading = false;\n\n          this.snackbar.showNotification(\"snackbar-success\", res.message);\n          // if (res.statusCode === 200) {\n          // } else {\n          //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          // }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.downloadLoading = false;\n        },\n        complete: () => {\n          this.downloadLoading = false;\n        },\n      }),\n      Subscription;\n  }\n\n  sendLoading: boolean = false;\n  sendInvoice(row: any) {\n    this.sendLoading = true;\n\n    const params = new HttpParams().set(\"invoiceCode\", row.invoiceCode);\n\n    this.customerInvoiceManService\n      .sendInvoice(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n\n          if (res.statusCode === 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n          this.sendLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.sendLoading = false;\n        },\n        complete: () => {\n          this.sendLoading = false;\n        },\n      }),\n      Subscription;\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Customer Invoices'\" [items]=\"['Customer Invoices']\"\n                [active_item]=\"'All Customer Invoices'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeaderCustom mx-0 mt-0\" hidden>\n                                <div class=\"row mx-2\">\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Approval Type:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                        <div class=\"button-container d-flex flex-wrap mt-1\">\n                                            <!-- All Invoices -->\n                                            <button mat-raised-button\n                                                [class.active]=\"selectedApprovalType === 'AllInvoices'\"\n                                                class=\"mat-button all-invoices mb-1\"\n                                                (click)=\"getApprovalTypeSelectedStatus('AllInvoices')\">\n                                                <mat-icon>description</mat-icon>\n                                                ALL INVOICES\n                                            </button>\n\n                                            <!-- HOD -->\n                                            <button mat-raised-button [class.active]=\"selectedApprovalType === 'HOD'\"\n                                                class=\"mat-button hod mb-1\"\n                                                (click)=\"getApprovalTypeSelectedStatus('HOD')\">\n                                                <mat-icon>supervisor_account</mat-icon>\n                                                HOD VERIFIER\n                                            </button>\n\n                                            <button *ngIf=\"accessControlService.hasAccessToFinanceManager()\"\n                                                mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Finance Manager'\n                        \" class=\"mat-button finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus('Finance Manager')\n                        \">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                FINANCE MANAGER\n                                            </button>\n\n                                            <button *ngIf=\"\n                          accessControlService.hasAccessToSeniorFinanceManager()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Senior Finance Manager'\n                        \" class=\"mat-button senior-finance-manager mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Senior Finance Manager'\n                          )\n                        \">\n                                                <mat-icon>account_balance_wallet</mat-icon>\n                                                SENIOR MANAGER\n                                            </button>\n\n                                            <button *ngIf=\"\n                          accessControlService.hasAccessToHeadOfFinanceAndStrategy()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType ===\n                          'Head of Finance And Strategy'\n                        \" class=\"mat-button head-of-finance-strategy mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Head of Finance And Strategy'\n                          )\n                        \">\n                                                <mat-icon>supervisor_account</mat-icon>\n                                                HEAD OF FINANCE\n                                            </button>\n\n                                            <button *ngIf=\"\n                          accessControlService.hasAccessToManagingDirectorAndCEO()\n                        \" mat-raised-button [class.active]=\"\n                          selectedApprovalType === 'Managing Director And CEO'\n                        \" class=\"mat-button managing-director-ceo mb-1\" (click)=\"\n                          getApprovalTypeSelectedStatus(\n                            'Managing Director And CEO'\n                          )\n                        \">\n                                                <mat-icon>person_pin</mat-icon>\n                                                MANAGING DIRECTOR\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeaderCustom mx-0 mt-1\" hidden>\n                                <div class=\"row mx-2\">\n                                    <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                                        <h2>Status:</h2>\n                                    </div>\n\n                                    <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                                        <div class=\"button-container d-flex flex-wrap mt-1\">\n                                            <!-- Button for PENDING status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <!-- Button for APPROVED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n\n                                            <!-- Button for RETURNED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n\n                                            <!-- Button for REJECTED status -->\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mx-0 mt-1\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Customer Invoices</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addCustomerInvoice()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <ng-container *ngIf=\"accountingTableSelection.selected.length > 0\">\n                                                <li>\n                                                    <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                        <button mat-mini-fab color=\"primary\"\n                                                            (click)=\"processMultipleRows('APPROVED')\"\n                                                            class=\"mat-button-custom\">\n                                                            <mat-icon class=\"col-white\">check</mat-icon>\n                                                        </button>\n                                                    </div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                        <button mat-mini-fab color=\"warn\"\n                                                            (click)=\"processMultipleRows('REJECTED')\"\n                                                            class=\"mat-button-custom\">\n                                                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                        </button>\n                                                    </div>\n                                                </li>\n                                                <li>\n                                                    <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                        <button mat-mini-fab color=\"accent\"\n                                                            (click)=\"processMultipleRows('RETURNED')\"\n                                                            class=\"mat-button-custom\">\n                                                            <mat-icon class=\"col-white\">undo</mat-icon>\n                                                        </button>\n                                                    </div>\n                                                </li>\n\n                                                <!-- <li>\n                                            <div class=\"m-l-10\" matTooltip=\"Edit Accounting Details\">\n                                              <button mat-mini-fab color=\"primary\" (click)=\"accountingCheckboxActive('Update')\">\n                                                <mat-icon class=\"col-white\">edit</mat-icon>\n                                              </button>\n                                            </div>\n                                          </li> -->\n\n                                                <li>\n                                                    <div class=\"m-l-10\" matTooltip=\"View Accounting Details\">\n                                                        <button mat-mini-fab color=\"primary\"\n                                                            (click)=\"accountingCheckboxActive('View')\">\n                                                            <mat-icon class=\"col-white\">visibility</mat-icon>\n                                                        </button>\n                                                    </div>\n                                                </li>\n                                            </ng-container>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- Table Definition -->\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <!-- Select Column -->\n                                <ng-container matColumnDef=\"accountingSelect\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (change)=\"$event ? masteraccountingTableToggle() : null\"\n                                            [checked]=\"\n                        accountingTableSelection.hasValue() &&\n                        isAllaccountingTableSelected()\n                      \" [indeterminate]=\"\n                        accountingTableSelection.hasValue() &&\n                        !isAllaccountingTableSelected()\n                      \" [ngClass]=\"'tbl-checkbox'\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"\n                        $event ? accountingTableSelection.toggle(row) : null\n                      \" [checked]=\"accountingTableSelection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxaccountingTableLabel(row)\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- id -->\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"table-img tbl-col-width-per-4\">\n                                        #\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-4\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Invoice Code   -->\n                                <ng-container matColumnDef=\"invoiceCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Invoice Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.invoiceCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Customer Code   -->\n                                <ng-container matColumnDef=\"customerCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Customer Code\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.customerCode }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Customer Name  -->\n                                <ng-container matColumnDef=\"customerName\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Customer Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.customerName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!--  Invoice Date   -->\n                                <ng-container matColumnDef=\"invoiceDate\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Invoice Date\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.invoiceDate | date : \"short\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!--  Due Date   -->\n                                <ng-container matColumnDef=\"dueDate\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Due Date\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.dueDate | date : \"short\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!--  Invoice Amount   -->\n                                <ng-container matColumnDef=\"invoiceAmount\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Invoice Amount\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{\n                                        row.totalAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                        }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"tranCode\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\" matTooltip=\"QuantityCancelled\">\n                                        TranCode\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.tranCode || \"-\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"transactionStatus\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        TranStatus\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container [ngSwitch]=\"row.transactionStatus\">\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.transactionStatus }}\n                                            </button>\n\n                                            <button *ngSwitchCase=\"'POSTED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.transactionStatus }}\n                                            </button>\n\n                                            <ng-container *ngSwitchDefault> N.A </ng-container>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"tranDate\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Tran Date\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.tranDate ? (row.tranDate | date : \"short\") : \"N.A\" }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"downloadInvoice\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">Download\n                                        Invoice</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <button [disabled]=\"downloadLoading\"\n                                            class=\"badge badge-solid-purple btn btn btn-sm m-1\"\n                                            (click)=\"downloadInvoice(row)\">\n                                            <i class=\"fas fa-download\"></i>&nbsp; Download..\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"sendInvoice\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">Send Invoice</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <button [disabled]=\"\n                                         \n                                         sendLoading\n                                       \" class=\"badge badge-solid-purple btn btn btn-sm m-1\" (click)=\"sendInvoice(row)\">\n                                            <i class=\"fas fa-paper-plane\"></i>&nbsp; Send\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Status -->\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- Action Buttons -->\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                        <!--  Verify Button -->\n                                        <!-- <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"validateCustomerInvoice(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button> -->\n\n                                        <!-- Edit Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"updateCustomerInvoice(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <!-- View Button  -->\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"viewCustomerInvoice(row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <!-- Delete Button -->\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteCustomerInvoice(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                    (click)=\"viewCustomerInvoice(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            \n                            \n                            <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n              (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n              [pageSize]=\"pageSize\" showFirstLastButtons>\n          </mat-paginator>\n\n          \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription, BehaviorSubject } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { CustomerLookupComponent } from \"src/app/erp-finance/data/lookups/customer-lookup/customer-lookup.component\";\nimport { ExpenseLookupComponent } from \"src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component\";\nimport { MaintainedCurrenciesLookUpComponent } from \"src/app/erp-finance/data/lookups/maintained-currencies-look-up/maintained-currencies-look-up.component\";\nimport { TaxLookupComponent } from \"src/app/erp-finance/data/lookups/tax-lookup/tax-lookup.component\";\nimport { CustomerInvoiceValidationComponent } from \"src/app/erp-finance/data/lookups/validation/customer-invoice-validation/customer-invoice-validation.component\";\nimport { CostCentreManagementService } from \"src/app/erp-finance/data/services/cost-centre-management.service\";\nimport { CustomerInvoicesService } from \"src/app/erp-finance/data/services/customer-invoices.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { CalculationService } from \"src/app/erp-procurement/data/services/_procurement-calculations.service\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport * as XLSX from \"xlsx\";\n\n@Component({\n  selector: \"app-manage-customer-invoices\",\n  templateUrl: \"./manage-customer-invoices.component.html\",\n  styleUrls: [\"./manage-customer-invoices.component.sass\"],\n})\nexport class ManageCustomerInvoicesComponent implements OnInit {\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  disableActions = false;\n  hideApprovals = false;\n\n  // ***************************************************************\n  // ************************************************************\n  //excel columns\n  excelHeaderRef: any[] = [\"expenseGlAccount\", \"expenseName\", \"expenseType\"];\n  isLoading: any;\n\n  // File Tabulation\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  // ****************************************************************************************************************************\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private costManService: CostCentreManagementService,\n    private notificationAPI: NotificationService,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private customerInvoiceManService: CustomerInvoicesService,\n    private calculationService: CalculationService,\n    private filesService: FilesService\n  ) {\n    this.currentUser = this.tokenStorageService.getUser();\n  }\n\n  // ****************************************************************************************************************************\n  ngOnInit(): void {\n    this.showForm = false;\n\n    this.getPage();\n\n    this.route.queryParams.subscribe((params) => {\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        this.pageFunction = params[\"action\"];\n\n        this.invoiceId = params[\"id\"];\n        // const serializedData = params[\"additionalData\"];\n        // const additionalData = JSON.parse(serializedData);\n        //  this.formData = additionalData;\n        this.getDataById();\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  invoiceId: any;\n  getDataById() {\n    this.isLoading = true;\n    const params = new HttpParams().set(\"id\", this.invoiceId);\n    this.customerInvoiceManService\n      .getCustomerInvoiceById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            // this.isLoading = false;\n            if (this.pageFunction === \"View\") {\n              this.pageFunction = \"View\";\n              this.disableActions = true;\n            }\n            console.log(\n              \"this.formData.customeritems :\",\n              this.formData.customeritems\n            );\n            if (this.formData.customeritems.length > 0) {\n              this.dataSource = new MatTableDataSource(\n                this.formData.customeritems\n              );\n              this.dataSource.paginator = this.paginator;\n              this.dataSource.sort = this.sort;\n\n              this.calculateTotals();\n            }\n\n            if (\n              this.formData.customerInvoiceSupportingDocumentsList.length > 0\n            ) {\n              this.isFileDataLoading = false;\n              this.formData.customerInvoiceSupportingDocumentsList.forEach(\n                (element) => {\n                  const newRow = this.fb.group({\n                    file: [element.file],\n                    filename: [element.filename],\n                    filetype: [element.filetype],\n                  });\n                  this.rows.push(newRow);\n                }\n              );\n\n              this.updateView();\n            }\n\n            console.log(\"ID:\", this.invoiceId);\n            console.log(\"Additional Data:\", this.formData);\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      }),\n      Subscription;\n  }\n\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.generateInvoiceForm();\n      this.hideApprovals = true;\n      this.showForm = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.generateInvoiceForm();\n      this.showForm = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.generateInvoiceForm();\n\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n      this.showForm = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(): void {\n    this.mngForm = this.fb.group({\n      id: [\"\"],\n      customerCode: [\"\", [Validators.required]],\n      customerName: [\"\", [Validators.required]],\n      invoiceDate: [\"\", [Validators.required]],\n      dueDate: [\"\", [Validators.required]],\n      //invoiceAmount: [\"\", [Validators.required]],\n      currency: [\"KES\", [Validators.required]],\n\n      costCenterCode: [this.currentUser.costCenterCode, [Validators.required]],\n      expenseCode: [\"\", [Validators.required]],\n\n      customerInvoiceSupportingDocumentsList: [[]],\n      customeritems: [[]],\n\n      totalTax: [\"\", [Validators.required]],\n      subTotalAmount: [\"\", [Validators.required]],\n      totalAmount: [\"\", [Validators.required]],\n    });\n  }\n\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      customerCode: [this.formData.customerCode],\n      customerName: [this.formData.customerName, [Validators.required]],\n      invoiceDate: [this.formData.invoiceDate, [Validators.required]],\n      dueDate: [this.formData.dueDate, [Validators.required]],\n      //invoiceAmount: [this.formData.invoiceAmount, [Validators.required]],\n      currency: [this.formData.currency, [Validators.required]],\n\n      costCenterCode: [this.formData.costCenterCode, [Validators.required]],\n      expenseCode: [this.formData.expenseCode, [Validators.required]],\n\n      customerInvoiceSupportingDocumentsList: [\n        this.formData.customerInvoiceSupportingDocumentsList || [],\n      ],\n      customeritems: [this.formData.customeritems || []],\n\n      totalTax: [this.formData.totalTax, [Validators.required]],\n      subTotalAmount: [this.formData.subTotalAmount, [Validators.required]],\n      totalAmount: [this.formData.totalAmount, [Validators.required]],\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      customerCode: [\n        { value: this.formData.customerCode, disabled: true },\n        [Validators.required],\n      ],\n      customerName: [\n        { value: this.formData.customerName, disabled: true },\n        [Validators.required],\n      ],\n      invoiceDate: [\n        { value: this.formData.invoiceDate, disabled: true },\n        [Validators.required],\n      ],\n      dueDate: [\n        { value: this.formData.dueDate, disabled: true },\n        [Validators.required],\n      ],\n      // invoiceAmount: [\n      //   { value: this.formData.invoiceAmount, disabled: true },\n      //   [Validators.required],\n      // ],\n      currency: [\n        { value: this.formData.currency, disabled: true },\n        [Validators.required],\n      ],\n\n      customerInvoiceSupportingDocumentsList: [\n        {\n          value: this.formData.customerInvoiceSupportingDocumentsList,\n          disabled: true,\n        },\n        [Validators.required],\n      ],\n      customeritems: [\n        { value: this.formData.customeritems, disabled: true },\n        [Validators.required],\n      ],\n\n      costCenterCode: [\n        { value: this.formData.costCenterCode, disabled: true },\n        [Validators.required],\n      ],\n      expenseCode: [\n        { value: this.formData.expenseCode, disabled: true },\n        [Validators.required],\n      ],\n    });\n  }\n\n  invoiceDateValidaton(control: FormControl) {\n    const invoiceSelectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (invoiceSelectedDate > today) {\n      return { invalidDate: true };\n    }\n    return null;\n  }\n  //*************************************************************************************************************************** */\n  //***********************************************************************************************************************************8 */\n  bgtForm: FormGroup;\n  displayedColumns: string[] = [\n    \"id\",\n\n    \"itemRequested\",\n    \"unitOfMeasure\",\n    \"quantity\",\n    \"unitPrice\",\n    \"taxName\",\n    \"taxRate\",\n\n    \"subTotal\",\n    \"taxAmount\",\n    \"totalAmount\",\n\n    \"actions\",\n  ];\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1; // Track the index of the selected row\n\n  generateDisabledInvoiceForm() {\n    this.bgtForm = this.fb.group({\n      itemRequested: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemCode: [{ value: \"\", disabled: true }, [Validators.required]],\n      itemDescription: [{ value: \"\", disabled: true }, [Validators.required]],\n      unitOfMeasure: [{ value: \"\", disabled: true }, [Validators.required]],\n      quantity: [{ value: \"\", disabled: true }, [Validators.required]],\n      unitPrice: [\n        { value: \"\", disabled: true },\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n\n      taxRate: [{ value: \"\", disabled: true }, [Validators.required]],\n      taxName: [{ value: \"\", disabled: true }, [Validators.required]],\n\n      subTotal: [{ value: \"\", disabled: true }, [Validators.required]],\n      taxAmount: [{ value: \"\", disabled: true }, [Validators.required]],\n      totalAmount: [{ value: \"\", disabled: true }, [Validators.required]],\n    });\n  }\n\n  generateInvoiceForm() {\n    this.bgtForm = this.fb.group({\n      itemRequested: [\"\", [Validators.required]],\n      itemCode: [\"\"],\n      itemDescription: [\"\", [Validators.required, Validators.maxLength(300)]],\n      unitOfMeasure: [\"\", [Validators.required]],\n      quantity: [\n        0,\n        [\n          Validators.required,\n          Validators.min(0.01),\n          Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$\"),\n        ],\n      ],\n      unitPrice: [\n        0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n        ],\n      ],\n\n      taxRate: [\n        \"\",\n        [\n          Validators.required,\n          Validators.min(0.01),\n          Validators.pattern(\"^[0-9]+(\\\\.[0-9]{1,2})?$\"),\n        ],\n      ],\n      taxName: [\"\", [Validators.required]],\n\n      subTotal: [\"\"],\n      taxAmount: [\"\"],\n      totalAmount: [\"\"],\n    });\n  }\n\n  dateValidator(control: FormControl) {\n    const selectedDate: Date = control.value;\n    const today: Date = new Date();\n\n    if (selectedDate < today) {\n      return { pastDate: true };\n    }\n\n    return null;\n  }\n\n  enterManually: boolean = true;\n  manualItemsEntry() {\n    this.showItemForm = true;\n    this.enterManually = true;\n\n    console.log(\"event: \", event);\n  }\n\n  addToArray() {\n    if (this.bgtForm.valid) {\n      this.calculateTax();\n\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n      const newRecord = {\n        itemRequested: this.bgtForm.value.itemRequested,\n        itemCode: this.bgtForm.value.itemCode,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        quantity: this.bgtForm.value.quantity,\n        unitPrice: this.bgtForm.value.unitPrice,\n\n        taxRate: this.bgtForm.value.taxRate,\n        taxName: this.bgtForm.value.taxName,\n\n        subTotal: this.bgtForm.value.subTotal,\n        taxAmount: this.bgtForm.value.taxAmount,\n        totalAmount: this.bgtForm.value.totalAmount,\n      };\n\n      this.dataSource.data.push(newRecord);\n      this.dataSource.data = this.dataSource.data.slice();\n      this.resetBgtForm();\n      this.setDefaultValues();\n\n      this.calculateTotals();\n    }\n  }\n\n  setDefaultValues() {\n    if (this.currentUser) {\n      this.mngForm.patchValue({\n        costCenterCode: this.currentUser.costCenterCode,\n      });\n    }\n  }\n\n  updateInvoiceDetails() {\n    if (this.bgtForm.valid) {\n      this.calculateTax();\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n\n      const updatedRecord = {\n        itemRequested: this.bgtForm.value.itemRequested,\n        itemCode: this.bgtForm.value.itemCode,\n        itemDescription: this.bgtForm.value.itemDescription,\n        unitOfMeasure: this.bgtForm.value.unitOfMeasure,\n        quantity: this.bgtForm.value.quantity,\n        unitPrice: this.bgtForm.value.unitPrice,\n\n        taxRate: this.bgtForm.value.taxRate,\n        taxName: this.bgtForm.value.taxName,\n        subTotal: this.bgtForm.value.subTotal,\n        taxAmount: this.bgtForm.value.taxAmount,\n        totalAmount: this.bgtForm.value.totalAmount,\n      };\n\n      this.dataSource.data[this.selectedRowIndex] = updatedRecord;\n      this.dataSource.data = this.dataSource.data.slice();\n      this.resetBgtForm();\n\n      this.editButton = false;\n      this.addButton = true;\n      this.selectedRowIndex = -1;\n\n      this.calculateTotals();\n    }\n  }\n\n  onEditInvoiceDetails(row: any) {\n    this.editButton = true;\n    this.addButton = false;\n    this.selectedRowIndex = this.dataSource.data.indexOf(row);\n    this.showItemForm = true;\n\n    this.bgtForm.patchValue({\n      id: row.id,\n      itemRequested: row.itemRequested,\n      itemCode: row.itemCode,\n      itemDescription: row.itemDescription,\n      unitOfMeasure: row.unitOfMeasure,\n      quantity: row.quantity,\n      unitPrice: row.unitPrice,\n\n      taxRate: row.taxRate,\n      taxName: row.taxName,\n\n      subTotal: row.subTotal,\n      taxAmount: row.taxAmount,\n      totalAmount: row.totalAmount,\n    });\n  }\n\n  onDeleteInvoiceDetails(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.dataSource.data = this.dataSource.data.slice();\n    this.calculateTotals();\n  }\n\n  clearForm() {\n    this.resetBgtForm();\n    this.editButton = false;\n    this.addButton = true;\n    this.selectedRowIndex = -1;\n  }\n  showItemForm: boolean = false;\n\n  resetBgtForm() {\n    this.bgtForm.reset();\n\n    this.showItemForm = false;\n  }\n\n  calculateTax() {\n    console.log(\"quantity: \", Number(this.bgtForm.value.quantity));\n    console.log(\"unitPrice: \", Number(this.bgtForm.value.unitPrice));\n    console.log(\"taxRate: \", Number(this.bgtForm.value.taxRate));\n\n    const taxDetails = this.calculationService.calculateTax(\n      Number(this.bgtForm.value.quantity),\n      Number(this.bgtForm.value.unitPrice),\n      Number(this.bgtForm.value.taxRate)\n    );\n\n    this.bgtForm.patchValue({\n      subTotal: taxDetails.subTotal.toFixed(2),\n      taxAmount: taxDetails.taxAmount.toFixed(2),\n      totalAmount: taxDetails.totalAmount.toFixed(2),\n    });\n  }\n\n  totals = {\n    number: 0,\n    totalTax: 0,\n    subTotalAmount: 0,\n    totalAmount: 0,\n    purchaseRequisitionItems: [],\n  };\n\n  calculateTotals() {\n    const dataArray = this.dataSource.data;\n    console.log(\"dataArray: \", dataArray);\n    this.totals = this.calculationService.calculateTotals(dataArray);\n    console.log(\"totals: \", this.totals);\n    // invoiceAmount\n    this.mngForm.patchValue({\n      number: this.totals.number,\n      totalTax: this.totals.totalTax,\n      subTotalAmount: this.totals.subTotalAmount,\n      totalAmount: this.totals.totalAmount,\n      customeritems: this.totals.purchaseRequisitionItems.slice(),\n    });\n  }\n\n  // **************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"fileName\",\n    \"fileType\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n    this.mngForm.patchValue({\n      customerInvoiceSupportingDocumentsList:\n        this.documentsForm.value.filedetails,\n    });\n  }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue();\n    const index = dataArray.indexOf(row);\n\n    if (index !== -1) {\n      dataArray.splice(index, 1);\n      this.attachementsDataSource.next(dataArray);\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currfileName: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\");\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name);\n        console.log(\"Extension:\", extension);\n\n        this.currfileName = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          fileName: this.currfileName,\n          fileType: this.currType,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel() {\n    console.log(\"Before routing\");\n    this.router.navigate([\"/erp-procurement/receivable/all-customer-invoices\"]);\n    // admin/parameters/all-expenses\n  }\n\n  // ****************************************************************************************************************************\n\n  //Import customer invoices from Excel\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n        console.log(\"this.items: \", this.items);\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // ****************************************************************************************************************************\n\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate(userType) {\n    // let privilege = \"Manage Expenses\";\n\n    let privilege = \"\";\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"HOD Customer Invoice Validation\";\n        // privilege = \"Manage Expenses\";\n        break;\n      case \"FINANCE\":\n        privilege = \"Finance Customer Invoice Validation\";\n        // privilege = \"Manage Expenses\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n      privilege,\n    ]);\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: [this.formData],\n        userType: userType,\n      };\n\n      console.log(\"this.formData: \", this.formData);\n\n      const dialogRef = this.dialog.open(\n        CustomerInvoiceValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\n          \"/erp-procurement/receivable/all-customer-invoices\",\n        ]);\n      });\n    }\n  }\n\n  //******************************************************************************************************************************************************** */\n  // Look up for the Customers\n  selectedItem: any[] = [];\n  _customerLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View GL Accounts\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(CustomerLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        this.mngForm.patchValue({\n          customerCode: element.customerCode,\n          customerName: element.customerName,\n          //currency: element.currency,\n        });\n      });\n    });\n  }\n\n  //Currencies LookUP\n  _currencyLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Currency\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(\n      MaintainedCurrenciesLookUpComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          currency: element.currencyCode,\n        });\n      });\n    });\n  }\n\n  taxIsSelected = false;\n  selectedTaxes: any[] = [];\n  taxesLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"single tax\",\n      selected: this.selectedTaxes,\n    };\n\n    const dialogRef = this.dialog.open(TaxLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result && result.data.length != 0) {\n        console.log(\"result: \", result.data);\n\n        this.bgtForm.patchValue({\n          taxRate: result.data[0].taxRate,\n          taxName: result.data[0].taxName,\n        });\n      }\n    });\n  }\n  expenseIsSelected = false;\n  selectedExpense: [] = [];\n  expenseArray: [] = [];\n  expenseGlCode = \"\";\n\n  expenseLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpense,\n    };\n\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        expenseCode: result.data[0].expenseCode,\n      });\n    });\n  }\n\n  selectedCostCenter: any[] = [];\n  costCenterLookUp() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single CostCenter\",\n      selected: this.selectedCostCenter,\n    };\n\n    const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"lookupresonse: \", result.data);\n\n      this.mngForm.patchValue({\n        costCenterCode: result.data[0].costCenterCode,\n      });\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //submit button function\n\n  submit() {\n    console.log(\"Both: \", this.mngForm.value);\n\n    if (this.pageFunction === \"Add\") {\n      this.customerInvoiceManService\n        .addcustomerInvoices(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res.status: \", res.statusCode);\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-procurement/receivable/all-customer-invoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.customerInvoiceManService\n        .updateCustomerInvoice(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-procurement/receivable/all-customer-invoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n\n  //uploading batch expense files\n\n  submitBatch() {\n    console.log(\"submitting batch\");\n\n    if (this.pageFunction === \"Add\") {\n      this.customerInvoiceManService\n        .uploadBatchcustomerInvoices(this.items)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\n                \"/erp-procurement/receivable/all-customer-invoices\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => { },\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n      <div class=\"block-header\">\n        <!-- breadcrumb -->\n        <app-breadcrumb [title]=\"'Manage Customer Invoices'\" [items]=\"['Customer Invoices']\"\n          [active_item]=\"'Manage Customer Invoices'\">\n        </app-breadcrumb>\n      </div>\n  \n      <div class=\"row clearfix\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n          <div class=\"card\">\n            <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n              <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n              </mat-progress-bar>\n          </div>\n            <div class=\"body\" *ngIf=\"showForm\">\n              <div class=\"row\" *ngIf=\"pageFunction !=='Add'\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                  <div class=\"bg-color\">\n                    <div class=\"chat\">\n                      <div class=\"chat-header clearfix\">\n                        <div class=\"row\">\n                          <!-- HOD Approval -->\n                          <div class=\"col-4\">\n                            <div class=\"row\">\n                              <div class=\"col-6\">\n                                <div class=\"chat-about\">\n                                  <div class=\"chat-with\">HOD Approval</div>\n                                  <div class=\"chat-num-messages mt-2\">\n                                    <div class=\"badge badge-hod\">{{ formData.hodApprovalStatus }}</div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"col-6\">\n                                <div class=\"chat-about\">\n                                  <div class=\"chat-with\">HOD Approved By</div>\n                                  <div class=\"chat-num-messages mt-2\">\n                                    <div class=\"badge badge-hod-approved\">{{ formData.hodApprovedBy }}</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"col-12\">\n                                <div class=\"chat-about mt-2\">\n                                  <div class=\"chat-with remarks\">\n                                    <strong>HOD Remarks:</strong>\n                                    <span class=\"remarks-content mx-2\">{{ formData.hodApprovalReason }}</span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <!-- Finance Approval -->\n                          <div class=\"col-4\">\n                            <div class=\"row\">\n                              <div class=\"col-6\">\n                                <div class=\"chat-about\">\n                                  <div class=\"chat-with\">Finance Approval</div>\n                                  <div class=\"chat-num-messages mt-2\">\n                                    <div class=\"badge badge-finance\">{{ formData.financeApprovalStatus }}</div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"col-6\">\n                                <div class=\"chat-about\">\n                                  <div class=\"chat-with\">Finance Approved By</div>\n                                  <div class=\"chat-num-messages mt-2\">\n                                    <div class=\"badge badge-finance-approved\">{{ formData.financeApprovedBy }}</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"col-12\">\n                                <div class=\"chat-about mt-2\">\n                                  <div class=\"chat-with remarks\">\n                                    <strong>Finance Remarks:</strong>\n                                    <span class=\"remarks-content mx-2\">{{ formData.financeApprovalReason }}</span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n  \n                          <!-- Procurement Approval -->\n                          <div class=\"col-4\">\n                            <div class=\"row\">\n                              <div class=\"col-6\">\n                                <div class=\"chat-about\">\n                                  <div class=\"chat-with\">Procurement Approval</div>\n                                  <div class=\"chat-num-messages mt-2\">\n                                    <div class=\"badge badge-procurement\">{{ formData.procurementApprovalStatus }}</div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"col-6\">\n                                <div class=\"chat-about\">\n                                  <div class=\"chat-with\">Procurement Approved By</div>\n                                  <div class=\"chat-num-messages mt-2\">\n                                    <div class=\"badge badge-procurement-approved\">{{ formData.procurementApprovedBy }}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"col-12\">\n                                <div class=\"chat-about mt-2\">\n                                  <div class=\"chat-with remarks\">\n                                    <strong>Procurement Remarks:</strong>\n                                    <span class=\"remarks-content mx-2\">{{ formData.procurementApprovalReason }}</span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"mx-2\">\n                <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n                  <mat-tab label=\"{{pageFunction}} CUSTOMER INVOICE\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                        <div class=\"header\">\n                          <div class=\"row\">\n                            <h2>{{ pageFunction }} Customer Invoices</h2>\n                          </div>\n                        </div>\n                        <div class=\"row\">\n                          <div class=\"col-12\"></div>\n                        </div>\n                        <div>\n                          <form [formGroup]=\"mngForm\">\n                            <div class=\"row\">\n                              <!-- Customer Code -->\n                              <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label> Customer Code </mat-label>\n                                  <input matInput formControlName=\"customerCode\" readonly />\n                                  <mat-icon matSuffix (click)=\"_customerLookUp()\">search</mat-icon>\n                                  <mat-error *ngIf=\"\n                                      mngForm\n                                        .get('customerCode')\n                                        .hasError('required')\n                                    \">\n                                    Customer Code is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n  \n                              <!-- Customer Name -->\n                              <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label> Customer Name </mat-label>\n                                  <input matInput formControlName=\"customerName\" />\n                                  <mat-error *ngIf=\"\n                                      mngForm\n                                        .get('customerName')\n                                        .hasError('required')\n                                    \">\n                                    Customer Name is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n  \n                              <!-- Invoice Amount -->\n                              <!-- <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label> Invoice Amount </mat-label>\n                                  <input matInput formControlName=\"invoiceAmount\" />\n                                  <mat-error *ngIf=\"\n                                      mngForm\n                                        .get('invoiceAmount')\n                                        .hasError('required')\n                                    \">\n                                    Invoice Amount is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div> -->\n  \n                              <!-- Currency -->\n                              <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label> Currency Code </mat-label>\n                                  <input matInput formControlName=\"currency\" />\n                                  <mat-icon matSuffix (click)=\"_currencyLookup()\">search</mat-icon>\n                                  <mat-error *ngIf=\"\n                                      mngForm.get('currency').hasError('required')\n                                    \">\n                                    Currency Code is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n                              <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label>CostCenterCode</mat-label>\n                                  <input matInput formControlName=\"costCenterCode\" />\n                                  <mat-icon matSuffix (click)=\"costCenterLookUp()\">search</mat-icon>\n                                  <mat-error *ngIf=\"mngForm.get('costCenterCode').hasError('required')\">CostCenterCode is\n                                    required</mat-error>\n                                </mat-form-field>\n                              </div>\n  \n                              <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                  <mat-label>ExpenseCode</mat-label>\n                                  <input matInput formControlName=\"expenseCode\" />\n                                  <mat-icon matSuffix (click)=\"expenseLookUp()\">search</mat-icon>\n                                  <mat-error *ngIf=\"mngForm.get('expenseCode').hasError('required')\">ExpenseCode is\n                                    required</mat-error>\n                                </mat-form-field>\n                              </div>\n                              <!--Invoice date-->\n                              <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                  <mat-label>Invoice Date</mat-label>\n                                  <input matInput [matDatepicker]=\"datepicker\" formControlName=\"invoiceDate\" required />\n                                  <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\n                                  <mat-datepicker #datepicker></mat-datepicker>\n                                  <mat-error *ngIf=\"\n                                      mngForm\n                                        .get('invoiceDate')\n                                        .hasError('required')\n                                    \">\n                                    Invoice Date is required\n                                  </mat-error>\n                                  <mat-error *ngIf=\"\n                                      mngForm\n                                        .get('invoiceDate')\n                                        .hasError('invalidDate')\n                                    \">\n                                    Enter a Valid Invoice Date\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n  \n                              <!-- Due Date -->\n                              <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                  <mat-label>Due Date</mat-label>\n                                  <input matInput [matDatepicker]=\"picker\" formControlName=\"dueDate\" required />\n                                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                  <mat-datepicker #picker></mat-datepicker>\n                                  <mat-error *ngIf=\"\n                                      mngForm.get('dueDate').hasError('required')\n                                    \">\n                                    Due Date is required\n                                  </mat-error>\n                                  <mat-error *ngIf=\"\n                                      mngForm.get('dueDate').hasError('pastDate')\n                                    \">\n                                    Enter a Valid Due Date\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n                            </div>\n  \n  \n  \n  \n  \n  \n                          </form>\n  \n                          <mat-tab-group>\n                            <mat-tab>\n                              <ng-template mat-tab-label>\n                                <mat-icon>person</mat-icon> Invoice Items\n                              </ng-template>\n                              <div class=\"mt-3\">\n                                <!-- Content for the first tab -->\n  \n                                <ng-container *ngIf=\"showItemForm\">\n  \n                                  <div class=\"header\">\n                                    <div class=\"row\">\n                                      <h2>Invoice Items</h2>\n                                    </div>\n                                  </div>\n  \n                                  <form class=\"mx-4\" [formGroup]=\"bgtForm\" *ngIf=\"enterManually\">\n                                    <div class=\"row\">\n  \n  \n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                          <mat-label>Item</mat-label>\n                                          <input matInput formControlName=\"itemRequested\"\n                                            [readOnly]=\"isCatalogueItemsReadOnly\" />\n                                          <mat-error *ngIf=\"bgtForm.get('itemRequested').hasError('required')\">Item is\n                                            required</mat-error>\n                                        </mat-form-field>\n                                      </div>\n  \n  \n  \n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                          <mat-label>Unit of Measure</mat-label>\n                                          <input matInput formControlName=\"unitOfMeasure\"\n                                            [readOnly]=\"isCatalogueItemsReadOnly\" />\n                                          <mat-error *ngIf=\"bgtForm.get('unitOfMeasure').hasError('required')\">Unit of\n                                            Measure is\n                                            required</mat-error>\n                                        </mat-form-field>\n                                      </div>\n  \n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                          <mat-label>Quantity</mat-label>\n                                          <input matInput formControlName=\"quantity\" />\n                                          <mat-error *ngIf=\"bgtForm.get('quantity').hasError('required')\">Quantity is\n                                            required</mat-error>\n  \n                                          <mat-error *ngIf=\"\n                                              bgtForm.get('quantity').hasError('min')\n                                            \">Quantity cannot be 0</mat-error>\n  \n                                          <mat-error *ngIf=\"\n                                            bgtForm.get('quantity').hasError('pattern')\n                                          \">Quantity allows numbers only</mat-error>\n                                        </mat-form-field>\n                                      </div>\n  \n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                          <mat-label>Unit Price</mat-label>\n                                          <input matInput formControlName=\"unitPrice\" mask=\"separator\"\n                                            thousandSeparator=\",\" />\n  \n                                          <mat-error *ngIf=\"\n                                              bgtForm.get('unitPrice').hasError('required') &&\n                                              bgtForm.get('unitPrice').touched\n                                            \">\n                                            Please enter unit amount!\n                                          </mat-error>\n                                          <mat-error *ngIf=\"\n                                              bgtForm.get('unitPrice').hasError('pattern') &&\n                                              bgtForm.get('unitPrice').touched\n                                            \">\n                                            Please ensure amount does not exceed 2 decimal values!\n                                          </mat-error>\n                                          <mat-error *ngIf=\"\n                                              bgtForm.get('unitPrice').hasError('max') &&\n                                              bgtForm.get('unitPrice').touched\n                                            \">\n                                            Please ensure amount does not exceed 1 billion!\n                                          </mat-error>\n                                        </mat-form-field>\n                                      </div>\n  \n  \n  \n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                          <mat-label>Tax Name</mat-label>\n                                          <input matInput formControlName=\"taxName\" />\n                                          <mat-icon matSuffix (click)=\"taxesLookup()\">search</mat-icon>\n                                          <mat-error *ngIf=\"bgtForm.get('taxName').hasError('required')\">Tax Name is\n                                            required</mat-error>\n                                        </mat-form-field>\n                                      </div>\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                          <mat-label>Tax Rate</mat-label>\n                                          <input matInput formControlName=\"taxRate\" />\n                                          <mat-icon matSuffix (click)=\"taxesLookup()\">search</mat-icon>\n                                          <mat-error *ngIf=\"\n                                              bgtForm.get('taxRate').hasError('min')\n                                            \">TaxRate cannot be 0</mat-error>\n  \n                                          <mat-error *ngIf=\"\n                                            bgtForm.get('taxRate').hasError('pattern')\n                                          \">TaxRate allows numbers only</mat-error>\n                                        </mat-form-field>\n                                      </div>\n  \n  \n  \n  \n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-0\" appearance=\"outline\">\n                                          <mat-label>Item Description</mat-label>\n                                          <input matInput formControlName=\"itemDescription\" />\n                                          <mat-error *ngIf=\"\n                                              bgtForm.get('itemDescription').hasError('required')\n                                            \">Item Description is required</mat-error>\n                                          <mat-error *ngIf=\"\n                                            bgtForm.get('itemDescription').hasError('maxlength')\n                                          \">Item Description must not exceed 300 characters.</mat-error>\n                                        </mat-form-field>\n                                      </div>\n  \n                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                                        <div class=\"float-right\">\n                                          <button *ngIf=\"addButton\" [disabled]=\"!bgtForm.valid\" (click)=\"addToArray()\"\n                                            class=\"btn-space\" mat-raised-button color=\"primary\">\n                                            + Add Invoice details\n                                          </button>\n                                          <button *ngIf=\"editButton\" [disabled]=\"!bgtForm.valid\" class=\"btn-space\"\n                                            (click)=\"updateInvoiceDetails()\" mat-raised-button color=\"primary\">\n                                            + Update Invoice details\n                                          </button>\n                                          <button type=\"button\" (click)=\"clearForm()\" mat-raised-button color=\"warn\">\n                                            Clear\n                                          </button>\n                                        </div>\n                                      </div>\n                                    </div>\n  \n                                  </form>\n  \n                                </ng-container>\n  \n  \n                                <div class=\"mx-4 my-4\">\n                                  <div class=\"materialTableHeader\">\n                                    <div class=\"row\">\n                                      <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                          <li class=\"dropdown\">\n                                            <h2>Invoice Records</h2>\n                                          </li>\n                                          <li class=\"dropdown m-l-20\">\n                                            <label for=\"search-input\"><i\n                                                class=\"material-icons search-icon\">search</i></label>\n                                            <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                              #filter class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                          </li>\n  \n                                          <li>\n                                            <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                              <button mat-mini-fab color=\"primary\" (click)=\"manualItemsEntry()\">\n                                                <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                            </div>\n                                          </li>\n  \n                                          <!-- <li *ngIf=\"showImportButton\">\n                                            <div class=\"m-l-10\" matTooltip=\"IMPORT\">\n                                              <button mat-mini-fab color=\"primary\" (click)=\"importExcel()\">\n                                                <mat-icon class=\"col-white\">cloud_upload</mat-icon>\n                                              </button>\n                                              <input type=\"file\" accept=\".xlsx, .xls\" style=\"display: none\" #fileInput\n                                                (change)=\"handleFileInput($event.target.files)\">\n                                            </div>\n                                          </li> -->\n  \n  \n                                          <li>\n                                            <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                              <button mat-mini-fab color=\"primary\">\n                                                <mat-icon class=\"col-white\">refresh</mat-icon>\n                                              </button>\n                                            </div>\n                                          </li>\n                                        </ul>\n                                      </div>\n                                      <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                          <li>\n                                            <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                              <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                                  exporter.exportTable('xlsx', {\n                                                    fileName: 'Invoice-Items-list',\n                                                    sheet: 'sheet1'\n                                                  })\n                                                \" />\n                                            </div>\n                                          </li>\n                                          <li>\n                                            <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                              <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                (click)=\"exporter.exportTable('csv')\" />\n                                            </div>\n                                          </li>\n                                          <li>\n                                            <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                              <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                (click)=\"exporter.exportTable('json')\" />\n                                            </div>\n                                          </li>\n                                          <li>\n                                            <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                              <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                (click)=\"exporter.exportTable('txt')\" />\n                                            </div>\n                                          </li>\n                                        </ul>\n                                      </div>\n                                    </div>\n  \n  \n                                  </div>\n  \n                                  <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                    #exporter=\"matTableExporter\">\n                                    <ng-container matColumnDef=\"id\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-2\">#\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row;\" class=\"psl-3 tbl-col-width-per-2\">{{ row.id ?\n                                        row.id : '#' }}\n                                      </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"type\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">Type\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.type\"> {{ row.type }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n  \n                                    <!-- <ng-container matColumnDef=\"category\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-24\">Category\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.category\"> {{ row.category }}</span>\n                                      </mat-cell>\n                                    </ng-container> -->\n  \n                                    <ng-container matColumnDef=\"costCenterCode\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">CC-Code\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.costcentercode\">\n                                          {{ row.costcentercode }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"expenseCode\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">ExpCode\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.expenseCode\">\n                                          {{ row.expenseCode }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n  \n  \n                                    <ng-container matColumnDef=\"accountNumber\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">ActNo\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.accountNumber\">\n                                          {{ row.accountNumber }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"itemRequested\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">ReqItem\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.itemRequested\"> {{ row.itemRequested }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"unitOfMeasure\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">UnitOfMeasure\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.unitOfMeasure\">\n                                          {{ row.unitOfMeasure }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"quantity\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">Quantity\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.quantity\"> {{ row.quantity }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"unitPrice\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">UnitPrice\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.unitPrice\">\n                                          {{\n                                          row.unitPrice | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                          }}\n                                        </span>\n                                      </mat-cell>\n                                    </ng-container>\n  \n                                    <ng-container matColumnDef=\"taxName\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">TaxName\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.taxName\"> {{ row.taxName }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"taxRate\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">TaxRate\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.taxRate\"> {{ row.taxRate }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n  \n                                    <ng-container matColumnDef=\"subTotal\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">SubTotal\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.subTotal\"> {{\n                                          row.subTotal | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                          }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n  \n                                    <ng-container matColumnDef=\"taxAmount\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">TaxAmount\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.taxAmount\"> {{\n                                          row.taxAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                          }}</span>\n                                      </mat-cell>\n                                    </ng-container>\n  \n                                    <ng-container matColumnDef=\"totalAmount\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"psl-3 tbl-col-width-per-24\">TotalAmount\n                                      </mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-24\">\n                                        <span *ngIf=\"row.totalAmount\">{{\n                                          row.totalAmount | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                                          }} </span>\n                                      </mat-cell>\n                                    </ng-container>\n  \n  \n                                    <ng-container matColumnDef=\"budgetFlag\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">BudgetCheck</mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.budgetFlag\">\n  \n                                          <button *ngSwitchCase=\"'N'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                            Fail\n                                          </button>\n                                          <button *ngSwitchCase=\"'Y'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                            Pass\n                                          </button>\n                                          <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                            {{ \"-\" }}\n                                          </button>\n                                        </ng-container>\n                                      </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"allowOverride\">\n                                      <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">OverrideBgt</mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.allowOverride\">\n                                          <button *ngSwitchCase=\"'Y'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                            Yes\n                                          </button>\n                                          <button *ngSwitchCase=\"'N'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                            No\n                                          </button>\n  \n                                          <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                            <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                            {{ \"-\" }}\n                                          </button>\n                                        </ng-container>\n                                      </mat-cell>\n                                    </ng-container>\n  \n                                    <ng-container matColumnDef=\"actions\">\n                                      <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                                      <mat-cell *matCellDef=\"let row; let i = index\" class=\"pr-0\">\n                                        <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                                          (click)=\"onEditInvoiceDetails(row)\" class=\"tbl-action-btn\">\n                                          <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                                        </button>\n                                        <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                                          (click)=\"onDeleteInvoiceDetails(i)\" class=\"tbl-action-btn\">\n                                          <app-feather-icons [icon]=\"'trash-2'\"\n                                            [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                        </button>\n                                      </mat-cell>\n                                    </ng-container>\n  \n                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                    <mat-row *matRowDef=\"let row; let i = index; columns: displayedColumns\"\n                                      (click)=\"onEditInvoiceDetails(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                    </mat-row>\n                                  </mat-table>\n                                  <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                    </mat-progress-spinner>\n                                  </div>\n                                  <!-- <mat-paginator [pageSize]=\"100\" [pageSizeOptions]=\"[2, 6, 10, 20, 30, 40, 50, 100]\"\n                                    aria-label=\"Select page of users\"></mat-paginator> -->\n  \n                                  <div class=\"col-md-12\">\n                                    <div class=\"float-end m-t-30 text-end\">\n                                      <p>Sub - Total amount: <span>{{ totals.subTotalAmount | currency: \"KSH \" : \"symbol\"\n                                          : \"1.2-2\"\n                                          }}</span>\n                                      </p>\n                                      <p>vat: <span>{{ totals.totalTax | currency: \"KSH \" : \"symbol\" : \"1.2-2\" }}</span>\n                                      </p>\n                                      <hr>\n                                      <h3><b>Total:</b> <span>{{ totals.totalAmount | currency: \"KSH \" : \"symbol\" :\n                                          \"1.2-2\" }}</span>\n                                      </h3>\n                                    </div>\n                                  </div>\n  \n  \n  \n  \n                                </div>\n                              </div>\n                            </mat-tab>\n  \n                            <mat-tab>\n                              <ng-template mat-tab-label>\n                                <mat-icon>attach_file</mat-icon> Upload Invoice Attachments\n                              </ng-template>\n                              <div class=\"mt-3\">\n                                <!-- Content for the second tab -->\n                                <form [formGroup]=\"documentsForm\">\n                                  <!-- <form [formGroup]=\"form\"> -->\n  \n                                  <div style=\"margin: 20px\">\n                                    <div class=\"table-responsive\">\n                                      <div class=\"materialTableHeader\">\n                                        <div class=\"row\">\n                                          <div class=\"col-8\">\n                                            <ul class=\"header-buttons-left ms-0\">\n                                              <li class=\"dropdown\">\n                                                <h2>Upload Documents</h2>\n                                              </li>\n                                              <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                    class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                  #filter class=\"browser-default search-field\" aria-label=\"Search box\" />\n                                              </li>\n  \n                                              <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                  <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                                    <mat-icon class=\"col-white\">add</mat-icon>\n                                                  </button>\n                                                </div>\n                                              </li>\n                                            </ul>\n                                          </div>\n                                          <div class=\"col-4\"></div>\n                                        </div>\n                                      </div>\n  \n                                      <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                                      <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                                        formArrayName=\"filedetails\" matSort class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                        <!-- ID Column -->\n                                        <ng-container matColumnDef=\"id\">\n                                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                                          <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                            {{ index + 1 }}\n                                          </mat-cell>\n                                        </ng-container>\n  \n                                        <ng-container matColumnDef=\"fileName\">\n                                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileName</mat-header-cell>\n                                          <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                            <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                              <mat-label>fileName</mat-label>\n                                              <input matInput type=\"text\" formControlName=\"fileName\"\n                                                placeholder=\"fileName\" maxlength=\"50\" />\n                                            </mat-form-field>\n                                          </mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"fileType\">\n                                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileType</mat-header-cell>\n                                          <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                            <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                              <mat-label>fileType</mat-label>\n                                              <input matInput type=\"text\" formControlName=\"fileType\"\n                                                placeholder=\"fileType\" maxlength=\"50\" />\n                                            </mat-form-field>\n                                          </mat-cell>\n                                        </ng-container>\n  \n                                        <ng-container matColumnDef=\"selectFile\">\n                                          <mat-header-cell *matHeaderCellDef mat-sort-header\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                                            File</mat-header-cell>\n                                          <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                                            <input #file type=\"file\" [disabled]=\"isLoading | async\"\n                                              (change)=\"onSelectFile(file.files, row, index)\" [multiple]=\"'multiple'\" />\n                                          </mat-cell>\n                                        </ng-container>\n  \n                                        <ng-container matColumnDef=\"download\">\n                                          <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                            *matHeaderCellDef>Download</mat-header-cell>\n                                          <mat-cell *matCellDef=\"let row; let i = index\"\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                            <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                              (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                              <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                                            </button>\n                                          </mat-cell>\n                                        </ng-container>\n  \n  \n                                        <ng-container matColumnDef=\"action\">\n                                          <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                            *matHeaderCellDef>Action</mat-header-cell>\n                                          <mat-cell *matCellDef=\"let row; let i = index\"\n                                            class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                            <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                              (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                              <app-feather-icons [icon]=\"'trash-2'\"\n                                                [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                            </button>\n                                          </mat-cell>\n                                        </ng-container>\n  \n  \n  \n                                        <!-- Row definitions -->\n                                        <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"\n                                            let row;\n                                            let i = index;\n                                            columns: displayColumns\n                                          \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                                        <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                                          input.value\n                                          }}\"</mat-cell>\n                                      </mat-table>\n  \n                                      <!-- Loading spinner -->\n                                      <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                        </mat-progress-spinner>\n                                      </div>\n                                      <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                        aria-label=\"Select page of users\"></mat-paginator>\n                                    </div>\n                                  </div>\n  \n  \n                                </form>\n                              </div>\n                            </mat-tab>\n                          </mat-tab-group>\n  \n  \n                          <hr>\n  \n                          <!-- Action Buttons -->\n                          <div class=\"row mx-2\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\n                              <div mat-dialog-action [align]=\"'end'\">\n                                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                                  (click)=\"cancel()\">\n                                  Cancel\n                                </button>\n  \n                                <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\"\n                                  [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                                  Submit\n                                </button>\n  \n                                <ng-container *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\">\n                                  <button class=\"btn-space\" (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                                    <mat-icon>done_outline</mat-icon>\n                                    HOD Approval\n                                  </button>\n                                  <button class=\"btn-space\" (click)=\"onValidate('FINANCE')\" mat-raised-button\n                                    color=\"primary\">\n                                    <mat-icon>attach_money</mat-icon>\n                                    Finance Approval\n                                  </button>\n                                </ng-container>\n  \n                                <!-- <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                                  (click)=\"onValidate('Verifier')\" mat-raised-button color=\"primary\">\n                                  <mat-icon>done_outline</mat-icon>\n                                  Verify\n                                </button> -->\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <!-- Second Tab -->\n                  </mat-tab>\n                  <!-- <mat-tab label=\"UPLOAD MULTIPLE CUSTOMER INVOICES\">\n                    <div [hidden]=\"hideSubmit\" class=\"mx-4 mt-4\">\n                      <div class=\"row clearfix mx-2\">\n                        <div class=\"mt-4 m-3\">\n                          <div class=\"m-3\">\n                            <h5>Upload Excel File</h5>\n                          </div>\n  \n                          <div class=\"mx-3\">\n                            <app-file-upload (change)=\"handleFileInput($event.target.files)\">\n                            </app-file-upload>\n                          </div>\n  \n                          <div class=\"mt-4 mx-3\">\n                            <table class=\"table\">\n                              <thead>\n                                <tr>\n                                  <th>Customer Code</th>\n                                  <th>Customer Name</th>\n                                  <th>Due Date</th>\n                                  <th>Invoice Amount</th>\n                                  <th>Currency</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr *ngFor=\"let item of items\">\n                                  <td>{{ item.customerCode }}</td>\n                                  <td>{{ item.customerName }}</td>\n                                  <td>{{ item.dueDate }}</td>\n                                  <td>{{ item.invoiceAmount }}</td>\n                                  <td>{{ item.currency }}</td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n  \n                    <div class=\"row mx-4 mt-4\">\n                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-12\">\n                        <div mat-dialog-action [align]=\"'end'\" class=\"mt-2\">\n                          <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                            (click)=\"cancel()\">\n                            Cancel\n                          </button>\n                          <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" (click)=\"submitBatch()\">\n                            Submit Batch\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </mat-tab> -->\n                </mat-tab-group>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllCustomerInvoicesComponent } from './pages/all-customer-invoices/all-customer-invoices.component';\nimport { RoutePrivilegeGuard } from '../../data/services/_AccessControlAuthGuard.service';\nimport { ManageCustomerInvoicesComponent } from './pages/manage-customer-invoices/manage-customer-invoices.component';\n\nconst routes: Routes = [\n  {\n    path: \"all-customer-invoices\",\n    component: AllCustomerInvoicesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Dashboard\", \"All Customer Invoices\"] },\n  },\n\n  {\n    path: \"manage-customer-invoices\",\n    component: ManageCustomerInvoicesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'ProcurementModule', requiredPrivilege: [\"Dashboard\", \"Manage Customer Invoices\"] },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RecievablesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RecievablesRoutingModule } from './recievables-routing.module';\nimport { AllCustomerInvoicesComponent } from './pages/all-customer-invoices/all-customer-invoices.component';\nimport { ManageCustomerInvoicesComponent } from './pages/manage-customer-invoices/manage-customer-invoices.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\n\n\n@NgModule({\n  declarations: [\n    AllCustomerInvoicesComponent,\n    ManageCustomerInvoicesComponent\n  ],\n  imports: [\n    CommonModule,\n    RecievablesRoutingModule,\n\n     //Additional imports\n     DashboardModule,\n     MatIconModule,\n     NgApexchartsModule,\n     PerfectScrollbarModule,\n     MatMenuModule,\n     MatTooltipModule,\n     MatProgressBarModule,\n     MatRadioModule,\n     \n     \n     MatTableModule,\n     MatPaginatorModule,\n     MatInputModule,\n     MatSortModule,\n     \n     MatSelectModule,\n     MatTabsModule,\n     MatCheckboxModule,\n     MatTableExporterModule,\n     MatProgressSpinnerModule,\n     \n     MatFormFieldModule,\n     \n     MatButtonModule,\n     MatDialogModule,\n     MatDatepickerModule,\n     ComponentsModule,\n     MatCardModule,\n     ReactiveFormsModule,\n     \n     MatSnackBarModule,\n     MatToolbarModule,\n     \n     SharedModule,\n     MatStepperModule,\n     NgxMaskModule,\n     MatChipsModule\n \n  ]\n})\nexport class RecievablesModule { }\n"],"names":[],"sourceRoot":"webpack:///"}