{"version":3,"file":"default-src_app_core_service_token-storage_service_ts-src_app_erp-finance_data_lookups_ccentr-1d5d8d.js","mappings":"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","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component.ts","./src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component.html","./src/app/erp-finance/data/services/cost-centre-management.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { CostCentreManagementService } from 'src/app/erp-finance/data/services/cost-centre-management.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\n\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-ccentre-lookup',\n  templateUrl: './ccentre-lookup.component.html',\n  styleUrls: ['./ccentre-lookup.component.sass']\n})\nexport class CcentreLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"costCenterCode\",\n    \"costCenterName\",\n   \n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(true, []);\n\n  cCentreDetails: any;\n\n  dataSourceFilteredList: any[] = [];\n  cCentreArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private ccentreManService: CostCentreManagementService,\n  ) { }\n\n  ngOnInit(): void {\n\n    if(this.data.action === \"Single CostCenter\"){\n      this.selection = new SelectionModel<any>(false, []);\n    }\n    else{\n      this.selection = new SelectionModel<any>(true, []);\n    }\n    \n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.cCentreArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select cost centre\n\n \n  //Select GL Accounts\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  getData() {\n    let params = {\n      status: \"APPROVED\"\n    };\n\n    this.ccentreManService\n    .getCostCentersByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n\n          console.log(\"res: \", res)\n\n          if (res.statusCode == 201 || 200 || 302)\n          {\n            this.data = res.entity;\n\n            this.dataSource = new MatTableDataSource<any>(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n  \n          }\n      \n         \n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select Cost Centre</div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <!-- <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"cCenterSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"cCenterSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container> -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n  \n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-0 tbl-col-width-per-10\">Id\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-10\">{{ row.id }}</mat-cell>\n                </ng-container>\n  \n               <!-- Cost Centre Code -->\n                <ng-container matColumnDef=\"costCenterCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-0 tbl-col-width-per-40\">\n                    Cost Centre Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-40\">\n                    {{ row.costCenterCode }}\n                  </mat-cell>\n                </ng-container>\n  \n                <!-- Cost Centre Name -->\n                <ng-container matColumnDef=\"costCenterName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-0 tbl-col-width-per-50\">\n                    Cost Centre Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-0 tbl-col-width-per-50\">\n                    {{ row.costCenterName }}\n                  </mat-cell>\n                </ng-container>\n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CostCentreManagementService {\n  \n\n  constructor\n    (\n      private http: HttpClient,\n    ) { }\n\n    // ****************************************************************************************************************************\n      // fetch all cost centres\n    getCostCentres(): Observable<any>\n      {\n        const costCentresUrl =`${environment.baseUrlFinance}/api/v1/costCenters/all`; \n        return this.http.get<any[]>(costCentresUrl);\n      }\n\n      getCostCentersById(params: any): Observable<any> {\n        return this.http.get<any>(\n          `${environment.baseUrlFinance}/api/v1/costCenters/find/by/id`, {params}\n        );\n      }\n\n      getCostCentersByStatus(params): Observable<any> {\n        const costCentresUrl = `${environment.baseUrlFinance}/api/v1/costCenters/fetchbyStatus`;\n        return this.http.get<any[]>(costCentresUrl, { params });\n      }\n    \n    //adding cost centres\n    addCostCentre(data: any): Observable<any>\n      {\n        const costCentresUrl =`${environment.baseUrlFinance}/api/v1/costCenters/create`; \n        return this.http.post<any[]>(costCentresUrl, data);\n      }\n\n    //updating cost centres\n    updateCostCentre(data: any): Observable<any>\n      {\n        const costCentresUrl =`${environment.baseUrlFinance}/api/v1/costCenters/update`; \n        return this.http.put<any[]>(costCentresUrl, data);\n      }\n    \n    deleteCostCentreTemporarily(params: any): Observable<any>\n      {\n        const costCentresUrl =`${environment.baseUrlFinance}/api/v1/costCenters/delete`; \n        return this.http.delete<any[]>(costCentresUrl, {params});\n      }\n\n\n    uploadBatchCostCentres(data: any): Observable<any> \n      {\n        const costCentresUrl = `${environment.baseUrlFinance}/api/v1/costCenters/create/bulk`;\n        return this.http.post<any>(costCentresUrl, data);\n      }\n\n\n\n  validateCostCenters(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/costCenters/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}