{"version":3,"file":"default-src_app_erp-finance_data_lookups_tax-lookup_tax-lookup_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA0D;AAGe;AAEd;AACV;AACY;AACL;;;;;;;;;;;;;;;;;;;ICLpD,0EAAoC;IAClC,kFACmB;IACrB,4DAAM;;;IASF,sEAAuB;IAEnB,qEAAuG;IACzG,4DAAM;;;;IAIJ,wEAAiC;IACjC,0EAAiG;IAI5C,iTAAS,2BAAmB,IAAC;IAA1E,4DACW;IAGf,0EAAwB;IAGmB,6SAAS,iBAAS,IAAC;IAEtD,gFAA4B;IAAA,qEAAS;IAAA,4DAAW;IAO9D,qEAAe;;;IAVe,0DAAgC;IAAhC,gGAAgC;IACO,0DAAyC;IAAzC,oGAAyC;IAChG,+FAA+B;;;;IAevC,sFAAsE;IACtD,sUAAmB,sBAAc,GAAG,IAAI,IAAC,+PAG3C,qBAAa,IAH8B;IAIvD,4DAAe;;;IALkB,2FAAkC;IAEjE,0DAAmD;IAAnD,0HAAmD;;;;IAKvD,+EAAmE;IACnD,kKAAS,wBAAwB,IAAC,kUAAoB,iCAAqB,GAAG,IAAI,IAAhD,wPAEpC,qBAAa,IAFuB;IAGhD,4DAAe;;;;IAJe,2FAAkC;IAE9D,0DAAqC;IAArC,yGAAqC;;;IASzC,sFAAoG;IAAA,8DACpG;IAAA,4DAAkB;;;IAClB,+EAAiF;IAAA,uDAAY;IAAA,4DAAW;;;IAAvB,0DAAY;IAAZ,2EAAY;;;IAI7F,sFAAoG;IAClG,oEACF;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC/E,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,2FACF;;;IAIA,sFAAoG;IAClG,oEACF;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC/E,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,2FACF;;;IAIF,4EAAqE;;;IAErE,yEACU;;IAD+C,8EAA0B;;;IAEnF,+EAAoC;IAClC,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,+HACF;;;IAIF,0EAA2C;IACzC,sFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;ADpF5D,MAAM,kBAAkB;IAwB7B,YACS,SAA4C,EACnB,IAAI,EAC5B,EAAe,EACf,QAAyB,EACzB,YAAmC;QAJpC,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI;QAC5B,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAiB;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QA5B7C,qBAAgB,GAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAQpE,cAAS,GAAG,IAAI,oEAAc,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;QAG/C,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;QAEpC,2BAAsB,GAAU,EAAE,CAAC;QACnC,eAAU,GAAU,EAAE,CAAC;QAErB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QAEjC,cAAS,GAAY,IAAI,CAAC;IAQvB,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,YAAY,EAAE;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;SACrD;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;SACpD;QAED,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACxD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAED,MAAM;QACJ,0BAA0B;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACvC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC/B,IAAI,IAAI,KAAK,OAAO,CAAC,EAAE,EAAE;oBACvB,2EAA2E;oBAC3E,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBAChC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACtE,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,wGAAwG;IACxG,gBAAgB;IAEhB,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAC9D,GAAG,CAAC,QAAQ,GAAG,CACjB,EAAE,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IACD,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAElE,uBAAuB;IACzB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IACpE,CAAC;IACM,UAAU,KAAU,CAAC;IAE5B,OAAO;QACL,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,UAAU;SACnB,CAAC;QAEF,IAAI,CAAC,YAAY;aACd,gBAAgB,CAAC,MAAM,CAAC;aACxB,IAAI,CAAC,+CAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,IAAI,GAAG,CAAC,UAAU,KAAK,GAAG,EAAE;oBAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC;YACF,8CAAY,CAAC;IACjB,CAAC;;oFAnJU,kBAAkB,uMA0BnB,qEAAe;gHA1Bd,kBAAkB;kEAIlB,sEAAY;kEACZ,4DAAO;;;;;;QCxBpB,yEAA0B;QAGtB,8GAGM;QACN,yEAAyB;QACgB,qEAAU;QAAA,4DAAM;QACvD,4EAA8E;QAAtD,0IAAS,qBAAiB,IAAC;QACjD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAG9B,yEAAwB;QAEpB,gHAIM;QACN,0EAAoB;QAEhB,mIAqBa;QAGb,qFAC+B;QAE7B,6EAAoC;QAClC,yIAMkB;QAClB,2HAKW;QACb,qEAAe;QAIf,6EAAgC;QAC9B,yIACkB;QAClB,2HAAwG;QAC1G,qEAAe;QAEf,6EAAqC;QACnC,yIAEkB;QAClB,2HAEW;QACb,qEAAe;QAEf,6EAAqC;QACnC,yIAEkB;QAClB,2HAEW;QACb,qEAAe;QAGf,uIAAqE;QAErE,yHACU;QACV,2HAEW;QACb,4DAAY;QAGZ,iHAGM;QACN,gFACoD;QACtD,4DAAM;;QAzGO,0DAAe;QAAf,+EAAe;QAYxB,0DAAe;QAAf,+EAAe;QAOF,0DAAgB;QAAhB,gFAAgB;QAwBI,0DAAyB;QAAzB,sFAAyB;QA8CzC,2DAAiC;QAAjC,iGAAiC;QAEpB,0DAAyB;QAAzB,kGAAyB;QAQnD,0DAAe;QAAf,+EAAe;QAIN,0DAAc;QAAd,uEAAc;;;;;;;;;;;;;;;;;;;ACvGuB;;;AAKzD,MAAM,qBAAqB;IAChC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,MAAM;QACJ,MAAM,gBAAgB,GAAG,GAAG,yFAA0B,4BAA4B,CAAC;QACnF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,gBAAgB,CAAC,CAAC;IAChD,CAAC;IAED,UAAU,CAAC,MAAW;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,yFAA0B,mCAAmC,EAChE,EAAE,MAAM,EAAE,CACX,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,IAAS;QACd,MAAM,gBAAgB,GAAG,GAAG,yFAA0B,+BAA+B,CAAC;QACtF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,gBAAgB,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,SAAS,CAAC,UAAe;QACvB,MAAM,YAAY,GAAG,GAAG,yFAA0B,+BAA+B,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,YAAY,EAAE,UAAU,CAAC,CAAC;IACtD,CAAC;IAED,oBAAoB,CAAC,MAAW;QAC9B,MAAM,gBAAgB,GAAG,GAAG,yFAA0B,+BAA+B,CAAC;QACtF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,gBAAgB,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IAC3D,CAAC;IAGD,aAAa,CAAC,cAAmB;QAC/B,MAAM,UAAU,GAAG,GAAG,yFAA0B,qCAAqC,CAAC;QACtF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,UAAU,EAAE,cAAc,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB,CAAC,IAAS;QACxB,MAAM,MAAM,GAAG,GAAG,yFAA0B,oCAAoC,CAAC;QACjF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,gBAAgB,CAAC,MAAM;QACrB,MAAM,sBAAsB,GAAG,GAAG,yFAA0B,sCAAsC,CAAC;QACnG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,sBAAsB,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAClE,CAAC;;0FA5CU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM","sources":["./src/app/erp-finance/data/lookups/tax-lookup/tax-lookup.component.ts","./src/app/erp-finance/data/lookups/tax-lookup/tax-lookup.component.html","./src/app/erp-finance/data/services/tax-maintenance.service.ts"],"sourcesContent":["import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { ManageRfqsComponent } from \"src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { TaxMaintenanceService } from \"../../services/tax-maintenance.service\";\n\n@Component({\n  selector: \"app-tax-lookup\",\n  templateUrl: \"./tax-lookup.component.html\",\n  styleUrls: [\"./tax-lookup.component.sass\"],\n})\nexport class TaxLookupComponent implements OnInit {\n  displayedColumns: string[] = [\"select\", \"id\", \"taxName\", \"taxRate\"];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  taxDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  taxesArray: any[] = [];\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private taxesService: TaxMaintenanceService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"Single Tax\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.taxesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  getData() {\n    let params = {\n      status: \"APPROVED\",\n    };\n\n    this.taxesService\n      .getTaxesByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 200) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n  <div class=\"contact-details\">\n    <div class=\"mb-3\" *ngIf=\"isLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\">Select tax</div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n        <div *ngIf=\"isLoading\">\n          <div class=\"d-flex justify-content-center\">\n            <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n          </div>\n        </div>\n        <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n            <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n              <div class=\"row\">\n                <div class=\"col-6 px-4\">\n                  <div class=\"mx-auto\">\n                    <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                      #input />\n                  </div>\n                </div>\n                <div class=\"col-6 px-4\">\n                  <div class=\"mx-auto\">\n                    <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                      <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                        [disabled]=\"multimodifyloading\">\n                        <mat-icon class=\"col-white\">done_all </mat-icon>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n\n\n            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n              #exporter=\"matTableExporter\">\n\n              <ng-container matColumnDef=\"select\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                  <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                    (change)=\"expSelected()\">\n                  </mat-checkbox>\n                </mat-cell>\n              </ng-container>\n\n         \n\n              <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">Id\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.id }}</mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"taxName\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-55\">\n                  TaxName\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-55\">\n                  {{ row.taxName }}\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"taxRate\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-55\">\n                  TaxRate\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-55\">\n                  {{ row.taxRate }}\n                </mat-cell>\n              </ng-container>\n\n\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n              <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n              <mat-cell *matNoDataRow colspan=\"4\">\n                No data matching the filter \"{{ input.value }}\"\n              </mat-cell>\n            </mat-table>\n\n            <!-- Loading spinner -->\n            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n              <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n              </mat-progress-spinner>\n            </div>\n            <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n              aria-label=\"Select page of users\"></mat-paginator>\n          </div>\n        </div>\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaxMaintenanceService {\n  constructor(private http: HttpClient) {}\n\n  getTax(): Observable<any> {\n    const taxManagementUrl = `${environment.baseUrlFinance}/api/v1/TaxMaintenance/all`;\n    return this.http.get<any[]>(taxManagementUrl);\n  }\n\n  getTaxById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/TaxMaintenance/find/by/id`,\n      { params }\n    );\n  }\n\n  addTax(data: any): Observable<any> {\n    const taxManagementUrl = `${environment.baseUrlFinance}/api/v1/TaxMaintenance/create`;\n    return this.http.post<any>(taxManagementUrl, data);\n  }\n\n  updateTax(taxDetails: any): Observable<any> {\n    const updateTaxUrl = `${environment.baseUrlFinance}/api/v1/TaxMaintenance/update`;\n    return this.http.put<any>(updateTaxUrl, taxDetails);\n  }\n\n  deleteTaxTemporarily(params: any): Observable<any> {\n    const taxManagementUrl = `${environment.baseUrlFinance}/api/v1/TaxMaintenance/delete`;\n    return this.http.delete<any>(taxManagementUrl, {params});\n  }\n\n\n  validateTaxes(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/TaxMaintenance/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n\n  uploadBatchTaxes(data: any): Observable<any> {\n    const taxUrl = `${environment.baseUrlFinance}/api/v1/TaxMaintenance/create/bulk`;\n    return this.http.post<any>(taxUrl, data);\n  }\n\n  getTaxesByStatus(params): Observable<any> {\n    const GLAccountManagementUrl = `${environment.baseUrlFinance}/api/v1/TaxMaintenance/fetchbyStatus`;\n    return this.http.get<any[]>(GLAccountManagementUrl, { params });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}