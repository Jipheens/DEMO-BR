{"version":3,"file":"src_app_erp-suppliersmanagement_modules_supplier-profile-maintenance_supplier-profile-mainten-5df864.js","mappings":"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","sources":["./src/app/erp-suppliersmanagement/data/supplier-maintenance.service.ts","./src/app/erp-suppliersmanagement/data/supplier-profile.service.ts","./src/app/erp-suppliersmanagement/modules/supplier-profile-maintenance/dialogs/validate-supplier-profiles/validate-supplier-profiles.component.ts","./src/app/erp-suppliersmanagement/modules/supplier-profile-maintenance/dialogs/validate-supplier-profiles/validate-supplier-profiles.component.html","./src/app/erp-suppliersmanagement/modules/supplier-profile-maintenance/pages/all-profiles/all-profiles.component.ts","./src/app/erp-suppliersmanagement/modules/supplier-profile-maintenance/pages/all-profiles/all-profiles.component.html","./src/app/erp-suppliersmanagement/modules/supplier-profile-maintenance/pages/manage-profile/manage-profile.component.ts","./src/app/erp-suppliersmanagement/modules/supplier-profile-maintenance/pages/manage-profile/manage-profile.component.html","./src/app/erp-suppliersmanagement/modules/supplier-profile-maintenance/supplier-profile-maintenance-routing.module.ts","./src/app/erp-suppliersmanagement/modules/supplier-profile-maintenance/supplier-profile-maintenance.module.ts","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SuppliersService {\n\n  constructor(private http: HttpClient) { }\n\n  getSuppliers(): Observable<any> {\n    const SupplierssUrl = `${environment.baseUrlProcurement}/api/v1/suppliers/all`;\n    return this.http.get<any[]>(SupplierssUrl);\n  }\n  getSuppliersByStatus(params: any): Observable<any> {\n    const SupplierssUrl = `${environment.baseUrlProcurement}/api/v1/suppliers/all/by/status`;\n    return this.http.get<any>(SupplierssUrl, {params});\n  }\n  \n  getSuppliersByCategory(params: any): Observable<any> {\n    const SupplierssUrl = `${environment.baseUrlProcurement}/api/v1/suppliers/category`;\n    return this.http.get<any>(SupplierssUrl, {params});\n  }\n  \n\n  getSuppliersById(params: any): Observable<any> {\n    const SupplierssUrl= `${environment.baseUrlProcurement}/api/v1/suppliers/find/by/id`;\n\n    return this.http.get<any>(SupplierssUrl, {params});\n  }\n\n  getSuppliersByCode(params: any): Observable<any> {\n    const SupplierssUrl= `${environment.baseUrlProcurement}/api/v1/suppliers/find/by/supplierCode`;\n\n    return this.http.get<any>(SupplierssUrl, {params});\n  }\n\n  addSuppliers(data: any): Observable<any> {\n    const SupplierssUrl = `${environment.baseUrlProcurement}/api/v1/suppliers/create`;\n    return this.http.post<any>(SupplierssUrl, data);\n  }\n\n  updateSuppliers(SuppliersDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/suppliers/update`;\n    return this.http.put<any>(updateBillUrl, SuppliersDetails)\n  }\n\n  deleteSuppliersTemporarily(params: any): Observable<any> {\n    const SupplierssUrl = `${environment.baseUrlProcurement}/api/v1/suppliers/delete`;\n    return this.http.delete<any>(SupplierssUrl, {params});\n  }\n\n  validateSuppliers(dataToValidate: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/suppliers/update/state`;\n    return this.http.put<any>(updateBillUrl, dataToValidate)\n  }\n\n  addBulkSuppliers(data: any): Observable<any> {\n    const SupplierssUrl = `${environment.baseUrlProcurement}/api/v1/suppliers/create/bulk`;\n    return this.http.post<any>(SupplierssUrl, data);\n  }\n\n    // ********************************************************************************************************************\n\n\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SupplierProfileService {\n\n  constructor(private http: HttpClient) { }\n\n  getSupplierProfile(): Observable<any> {\n    const SupplierProfilesUrl = `${environment.baseUrlSupplierManagement}/erp/profile/company-information/findAll`;\n    return this.http.get<any[]>(SupplierProfilesUrl);\n  }\n  getSupplierProfileByStatus(params: any): Observable<any> {\n    const SupplierProfilesUrl = `${environment.baseUrlSupplierManagement}/erp/profile/company-information/find/by/status`;\n    return this.http.get<any>(SupplierProfilesUrl, {params});\n  }\n  // http://52.15.152.26:9099/erp/profile/company-information/findAll\n\n  // getSupplierProfileByCategory(params: any): Observable<any> {\n  //   const SupplierProfilesUrl = `${environment.baseUrlSupplierManagement}/api/v1/SupplierProfile/category`;\n  //   return this.http.get<any>(SupplierProfilesUrl, {params});\n  // }\n  \n\n  // getSupplierProfileById(params: any): Observable<any> {\n  //   const SupplierProfilesUrl= `${environment.baseUrlSupplierManagement}/api/v1/SupplierProfile/find/by/id`;\n\n  //   return this.http.get<any>(SupplierProfilesUrl, {params});\n  // }\n\n  \n  \n  getSupplierProfileBySupplierCode(params: any): Observable<any> {\n    const SupplierProfilesUrl= `${environment.baseUrlSupplierManagement}/erp/profile/company-information/find/by/suppliercode`;\n\n    return this.http.get<any>(SupplierProfilesUrl, {params});\n  }\n\n\n  addSupplierProfile(data: any): Observable<any> {\n    const SupplierProfilesUrl = `${environment.baseUrlSupplierManagement}/erp/profile/company-information/create`;\n    return this.http.post<any>(SupplierProfilesUrl, data);\n  }\n\n  updateSupplierProfile(SupplierProfileDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlSupplierManagement}/erp/profile/company-information/update`;\n    return this.http.put<any>(updateBillUrl, SupplierProfileDetails)\n  }\n\n  deleteSupplierProfileTemporarily(params: any): Observable<any> {\n    const SupplierProfilesUrl = `${environment.baseUrlSupplierManagement}/erp/profile/company-information/delete`;\n    return this.http.put<any>(SupplierProfilesUrl, {params});\n  }\n\n  validateSupplierProfile(dataToValidate: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlSupplierManagement}/erp/profile/company-information/update/state`;\n    return this.http.put<any>(updateBillUrl, dataToValidate)\n  }\n\n\n\n    // ********************************************************************************************************************\n\n\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { ManageProfileComponent } from '../../pages/manage-profile/manage-profile.component';\nimport { DatePipe } from '@angular/common';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { SupplierProfileService } from 'src/app/erp-suppliersmanagement/data/supplier-profile.service';\n\n@Component({\n  selector: 'app-validate-supplier-profiles',\n  templateUrl: './validate-supplier-profiles.component.html',\n  styleUrls: ['./validate-supplier-profiles.component.sass']\n})\nexport class ValidateSupplierProfilesComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  status!: string;\n\n  resData: any;\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageProfileComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private supplierProfileService: SupplierProfileService,\n    private router: Router,\n  ) {\n    this.Data = this.data.data;\n  }\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    this.canVerify = true;\n\n    // if (this.postedBy === this.currentUser) {\n\n    //   this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this record!\");\n\n    //   this.canVerify = false;\n\n    // } else {\n    //   this.canVerify = true;\n    // }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.status = \"VERIFIED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n \n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n\n\n    const params = {\n      id: this.Data.id,\n      role: this.data.userType,\n      status: this.status,\n      remarks: this.statusForm.value.reason,\n      approvedBy: this.currentUser,\n\n    };\n\n  \n    console.log(\"Form = \", params);\n  \n    this.supplierProfileService\n      .validateSupplierProfile(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              \"SupplierProfile validated successfully\"\n            );\n            \n          }\n\n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: \" + err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-procurement/SupplierProfiles/all-SupplierProfiles\"]);\n        }\n      });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n  <div class=\"contact-details\">\n    <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\"><strong>Validate SupplierProfile</strong></div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n\n        <div class=\"row\">\n          <!--Gift Icon-->\n          <div class=\"col text-center my-2\">\n            <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n          </div>\n          <!--Modal Text-->\n\n\n         \n          \n          <div class=\"col-8 my-2\">\n            <dl class=\"dl-horizontal\">\n              <dt class=\"pull-left me-2\">Supplier Code:</dt>\n              <dd>{{Data.supplierCode}}</dd>\n              <dt class=\"pull-left me-2\">Year Established:</dt>\n              <dd> {{ Data.yearEstablished }}</dd>\n              <dt class=\"pull-left me-2\">Industry:</dt>\n              <dd> {{ Data.industry }}</dd>\n            </dl>\n          </div>\n\n         \n        </div>\n\n        <div class=\"\">\n          <hr />\n\n          <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Verify</button>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Return</button>\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"row m-1\">\n                <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                  [disabled]=\"!canVerify\">Reject</button>\n              </div>\n            </div>\n          </div>\n          <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n            <div class=\"row\" *ngIf=\"rejected\">\n              <div class=\"col-10 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Reason for rejection</mat-label>\n                  <textarea formControlName=\"reason\" matInput></textarea>\n                  <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                </mat-form-field>\n              </div>\n              <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                  (click)=\"changeStatus()\">Submit</button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { SupplierProfileService } from \"src/app/erp-suppliersmanagement/data/supplier-profile.service\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: \"app-all-profiles\",\n  templateUrl: \"./all-profiles.component.html\",\n  styleUrls: [\"./all-profiles.component.scss\"],\n})\nexport class AllProfilesComponent implements OnInit {\n  // displayedColumns: string[] = ['select', 'id', 'supplierCode', 'name', 'email', 'phone', 'address', 'category', 'prequalified', 'status', 'action'];\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"supplierCode\",\n    'hasKingdomAccount',\n    'bankName',\n    'bankAc',\n    'toBankID',\n    'branchName',\n    'toBranchID',\n    'currency',\n    \"status\",\n    \"action\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form!: FormGroup;\n\n\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackbar: SnackbarService,\n    private supplierProfileService: SupplierProfileService\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"PENDING\", Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  reqStatuses: any[] = [\n    { name: \"PENDING\" },\n    //{ name: \"VERIFIED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"PENDING\";\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    this.getData();\n  }\n\n  getData() {\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.isLoading = true;\n    this.selectedStatus = this.Form.value.status;\n\n    const params = new HttpParams().set(\"status\", this.Form.value.status);\n    this.supplierProfileService\n      .getSupplierProfileByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res;\n            console.log(\"this.data: \", this.data)\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  // addSupplier() {\n  //   this.router.navigate([\"/erp-suppliers-management/supplier-profiles/manage-profile\"]);\n  // }\n\n  refresh() {\n    this.getData();\n  }\n\n  editSupplier(data: any) {\n    let route = \"/erp-suppliers-management/supplier-profiles/manage-profile\";\n    this.router.navigate([route], {\n      queryParams: { id: data.supplierCode, action: \"Update\" },\n    });\n  }\n  viewSupplier(data: any) {\n    let route = \"/erp-suppliers-management/supplier-profiles/manage-profile\";\n    this.router.navigate([route], {\n      queryParams: { id: data.supplierCode, action: \"View\" },\n    });\n  }\n  validateSupplier(data: any) {\n    let route = \"/erp-suppliers-management/supplier-profiles/manage-profile\";\n    this.router.navigate([route], {\n      queryParams: { id: data.supplierCode, action: \"Validate\" },\n    });\n  }\n\n  deleteSupplier(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Profile?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Supplier!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.supplierProfileService\n          .deleteSupplierProfileTemporarily(id)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  //******************************************************************************************************\n  //Select Suppliers\n  supplierDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  // ISO standards for item codes //\n\n  processMultipleRows(status: any) {\n    const processedRows = this.selectedRows.map((element) => {\n      return {\n        id: element.id,\n        status: status,\n      };\n    });\n\n    console.log(\"LOG: \", processedRows);\n\n    this.supplierProfileService\n      .validateSupplierProfile(processedRows)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res: \", res);\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              res.message\n            );\n\n            this.selectedRows.splice(0, this.selectedRows.length); // Option 2: Clear the array in place\n            this.selection = new SelectionModel<any>(true, []);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.getData();\n        },\n      }),\n      Subscription;\n  }\n  //*************************************************************************************************************** */\n\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Company Profiles'\" [items]=\"['Company Profiles']\"\n        [active_item]=\"'All Company Profiles'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Company Profiles</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\" />\n                      </li>\n                      <!-- <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addSupplier()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li> -->\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <!-- Container element with *ngIf condition -->\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'Supplier-Profile-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-2\">\n                    <form [formGroup]=\"Form\">\n                      <!-- <div class=\"row\">\n                        <div class=\"col-4\"> -->\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Status</mat-label>\n\n                        <mat-select formControlName=\"status\" (selectionChange)=\"getSelectSelectedStatus()\">\n                          <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{ reqStatus.name\n                            }}\n                          </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                          Please select Status\n                        </mat-error>\n                      </mat-form-field>\n                      <!-- </div>\n\n                      </div> -->\n                    </form>\n                  </div>\n                  <div class=\"col-10\">\n                    <div class=\"button-container mt-1\">\n                      <!-- Button for PENDING status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\" class=\"mat-button pending\"\n                        (click)=\"getSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <!-- Button for VERIFIED status -->\n                      <!-- <button mat-raised-button [class.active]=\"selectedStatus === 'VERIFIED'\"\n                        class=\"mat-button verified\" (click)=\"getSelectedStatus('VERIFIED')\">\n                        <mat-icon>check_circle</mat-icon>\n                        VERIFIED\n                      </button> -->\n\n                      <!-- Button for APPROVED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <!-- Button for RETURNED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <!-- Button for REJECTED status -->\n                      <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-4\">Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-4\">{{ row.id }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"supplierCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-10\">SupplierCode</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-10\">{{ row.supplierCode }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"hasKingdomAccount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-10\">Kingdom Acc?</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-10\">{{ row.hasKingdomAccount }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"bankName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-15\">Bank Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-15\">{{ row.bankName }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"bankAc\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-20\">Bank Account</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-15\">{{ row.bankAc }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"toBankID\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-15\">Bank ID</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-15\">{{ row.toBankID }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"branchName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-20\">Branch Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-4\">{{ row.branchName }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"toBranchID\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-10\">Branch ID</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-4\">{{ row.toBranchID }}</mat-cell>\n                </ng-container>\n                \n                <ng-container matColumnDef=\"currency\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-8\">Currency</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-4\">{{ row.currency }}</mat-cell>\n                </ng-container>\n                \n                \n\n               \n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell class=\"table-img tbl-col-width-per-15\" *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-15\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editSupplier(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"validateSupplier(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'check-circle'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewSupplier(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteSupplier(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"viewSupplier(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Subject, Subscription, takeUntil } from 'rxjs';\nimport { AccessControlService } from 'src/app/erp-procurement/data/services/_AccessControlService.service';\nimport { ValidateRfqComponent } from 'src/app/erp-procurement/modules/rfqs/pages/dialogs/validate-rfq/validate-rfq.component';\nimport { SuppliersService } from 'src/app/erp-suppliersmanagement/data/supplier-maintenance.service';\nimport { SupplierProfileService } from 'src/app/erp-suppliersmanagement/data/supplier-profile.service';\nimport { FilesService, SelectedFiles } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ValidateSupplierProfilesComponent } from '../../dialogs/validate-supplier-profiles/validate-supplier-profiles.component';\n\n\ninterface BankStatement {\n  id: number;\n  file: string;\n  filetype: string;\n  filename: string;\n}\n\n@Component({\n  selector: 'app-manage-profile',\n  templateUrl: './manage-profile.component.html',\n  styleUrls: ['./manage-profile.component.sass']\n})\nexport class ManageProfileComponent implements OnInit {\n\n\n  showForm = false;\n  pageFunction = \"Update\";\n  mngForm: FormGroup;\n  currentUser: any;\n\n  //formData: any;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n\n  supplierCode: any;\n  isLoading: boolean = false;\n\n  constructor(private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private supplierProfileService: SupplierProfileService,\n    private fb: FormBuilder,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private filesService: FilesService,\n    private suppliersService: SuppliersService,) { }\n\n  ngOnInit(): void {\n\n    //this.getPage();\n    //this.showForm = true;\n\n\n    this.route.queryParams.subscribe((params) => {\n      if (params.id) {\n        const action = params.action;\n\n\n        if (action === \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action === \"View\") {\n          this.pageFunction = \"View\";\n          this.disableActions = true;\n        } else if (action === \"Validate\") {\n          this.pageFunction = \"Validate\";\n          this.disableActions = true;\n          this.approvalVisible = true;\n        }\n\n        this.supplierCode = params.id;\n        //this.formData = JSON.parse(params.additionalData);\n\n\n\n        console.log(\"ID:\", this.supplierCode);\n\n        this.getDataById();\n        this.getSupplierDetailsByCode()\n      }\n    });\n\n  }\n\n  getPage(): void {\n\n    if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n\n  generateEmptyForm(): void {\n    this.mngForm = this.fb.group({\n      yearEstablished: [0, Validators.required],\n      companySize: ['', Validators.required],\n      numberOfEmployees: [0, Validators.required],\n      industry: ['', Validators.required],\n      productsAndServices: ['', Validators.required],\n      taxId: ['', Validators.required],\n      poDeliveryEmail: ['', Validators.required],\n      ownershipType: ['', Validators.required],\n      bankName: ['', Validators.required],\n      bankAc: ['', Validators.required]\n    });\n  }\n  generateFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id],\n      supplierCode: [this.formData.supplierCode],\n      yearEstablished: [this.formData.yearEstablished, Validators.required],\n      companySize: [this.formData.companySize, Validators.required],\n      numberOfEmployees: [this.formData.numberOfEmployees, Validators.required],\n      industry: [this.formData.industry, Validators.required],\n      productsAndServices: [this.formData.productsAndServices, Validators.required],\n      taxId: [this.formData.taxId, Validators.required],\n      poDeliveryEmail: [this.formData.poDeliveryEmail, Validators.required],\n      ownershipType: [this.formData.ownershipType, Validators.required],\n      bankName: [this.formData.bankName, Validators.required],\n      bankAc: [this.formData.bankAc, Validators.required],\n      mandatoryDocumentations: [this.formData.mandatoryDocumentations]\n    });\n  }\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      yearEstablished: [\n        { value: this.formData.yearEstablished, disabled: true },\n        [Validators.required],\n      ],\n      companySize: [\n        { value: this.formData.companySize, disabled: true },\n        [Validators.required],\n      ],\n      numberOfEmployees: [\n        { value: this.formData.numberOfEmployees, disabled: true },\n        [Validators.required],\n      ],\n      industry: [\n        { value: this.formData.industry, disabled: true },\n        [Validators.required],\n      ],\n      productsAndServices: [\n        { value: this.formData.productsAndServices, disabled: true },\n        [Validators.required],\n      ],\n      taxId: [\n        { value: this.formData.taxId, disabled: true },\n        [Validators.required],\n      ],\n      poDeliveryEmail: [\n        { value: this.formData.poDeliveryEmail, disabled: true },\n        [Validators.required],\n      ],\n      ownershipType: [\n        { value: this.formData.ownershipType, disabled: true },\n        [Validators.required],\n      ],\n      bankName: [\n        { value: this.formData.bankName, disabled: true },\n        [Validators.required],\n      ],\n      bankAc: [\n        { value: this.formData.bankAc, disabled: true },\n        [Validators.required],\n      ],\n      mandatoryDocumentations: [{ value: this.formData.mandatoryDocumentations, disabled: true },\n      [Validators.required],],\n    });\n  }\n\n\n  formData: any;\n  getDataById() {\n    const params = new HttpParams().set(\"supplierCode\", this.supplierCode);\n    this.supplierProfileService\n      .getSupplierProfileBySupplierCode(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.isLoading = true;\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            this.getPage();\n            this.showForm = true;\n\n            console.log(\"this.formData: \", this.formData);\n\n            if (this.formData.mandatoryDocumentations.length > 0) {\n              this.isFileDataLoading = false;\n              this.formData.mandatoryDocumentations.forEach((element) => {\n                const newRow = this.fb.group({\n                  documentType: [element.documentType],\n                  file: [element.file],\n                  filename: [element.filename],\n                  filetype: [element.filetype],\n                });\n                this.rows.push(newRow);\n              });\n\n              this.updateView();\n            }\n\n\n            this.isLoading = false;\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n  isLoadingSupplierDetails: boolean = true;\n  supplierDetails: any;\n\n\n\n  getSupplierDetailsByCode() {\n    const params = new HttpParams().set(\"supplierCode\", this.supplierCode);\n\n    console.log(\"this.supplierCode :\", this.supplierCode);\n\n    this.suppliersService\n      .getSuppliersByCode(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.isLoadingSupplierDetails = true;\n          console.log(\"supplierDetails :\", res);\n          if (res.entity) {\n            this.supplierDetails = res.entity;\n\n\n            this.isLoadingSupplierDetails = false;\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n             res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => { },\n      }),\n      Subscription;\n  }\n\n\n\n\n  // **************************************************************************************************\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value.trim().toLowerCase();\n\n\n  }\n\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"filename\",\n    \"filetype\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      documentType: [\"\", Validators.required],\n      file: [\"\", Validators.required],\n      filetype: [\"\", Validators.required],\n      filename: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  // deleteCall(index){\n  //   this.dataSource.splice(index, 1);\n  // }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currFilename: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currFilename = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          filename: this.currFilename,\n          filetype: this.currType,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let filename = row.value.filename;\n    let filetype = row.value.filetype;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${filename}.${filetype}`;\n    link.click();\n  }\n\n\n  //*************************************************************************************************** */\n\n\n\n\n  cancel(): void {\n    this.router.navigate([\"/erp-suppliers-management/supplier-profiles/all\"]);\n  }\n\n  // ****************************************************************************************************************************\n\n  hasAccess: boolean;\n\n  onValidate(userType) {\n    let privilege = \"Validate Supplier Profile\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege('SuppliersManagementModule', [privilege]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"650px\";\n      dialogConfig.data = {\n        data: this.formData,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(ValidateSupplierProfilesComponent, dialogConfig);\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-suppliers-management/supplier-profiles/all\"]);\n      });\n    }\n  }\n\n\n  \n\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n\n    if (this.pageFunction == \"Add\") {\n      this.supplierProfileService\n        .addSupplierProfile([this.mngForm.value])\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-suppliers-management/supplier-profiles/all\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n               res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Update\") {\n      this.supplierProfileService\n        .updateSupplierProfile(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res :\",res)\n            if (res) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\n                \"/erp-suppliers-management/supplier-profiles/all\",\n              ]);\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    }\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Company Information'\" [items]=\"['Company']\" [active_item]=\"'Company Information'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n        <div class=\"card\">\n          <!-- <div class=\"header\">\n            <h2>Supplier Details</h2>\n          </div> -->\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"wrapper wrapper-content animated fadeInUp\">\n              <div class=\"ibox\">\n                <div class=\"ibox-content\">\n                  <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                      <div class=\"m-b-md\">\n                        <!-- <p class=\"col-blue cursor-pointer pull-right\">Edit\n                          project</p> -->\n                        <h3 class=\"project-name\">Company Information</h3>\n                      </div>\n                      <!-- <dl>\n                        <dt class=\"pull-left me-2\">Status:</dt>\n                        <dd>\n                          <span _ngcontent-isv-c222=\"\" class=\"project-bedge2 project-type-Testing\">\n                            <div _ngcontent-isv-c222=\"\" class=\"pro-left\">\n                              Active\n                            </div>\n                          </span>\n                        </dd>\n                      </dl> -->\n                    </div>\n                  </div>\n\n                  <div class=\"row\" *ngIf=\"supplierDetails\">\n                    <div class=\"col-lg-5\">\n                      <dl class=\"dl-horizontal\">\n                        <dt class=\"pull-left me-2\">Supplier Code:</dt>\n                        <dd>{{ supplierDetails.supplierCode }}</dd>\n                        <dt class=\"pull-left me-2\">Name:</dt>\n                        <dd>{{ supplierDetails.name }}</dd>\n                        <dt class=\"pull-left me-2\">Email:</dt>\n                        <dd>{{ supplierDetails.email }}</dd>\n                        <dt class=\"pull-left me-2\">Phone:</dt>\n                        <dd>{{ supplierDetails.phone }}</dd>\n\n                        <dt class=\"pull-left me-2\">Profile Status:</dt>\n                        <dd>\n                          <div class=\"progress progress-xs mt-3\">\n                            <mat-progress-bar mode=\"determinate\" value=\"60\">\n                            </mat-progress-bar>\n                          </div>\n                        </dd>\n                        <small><strong>60%</strong> Profile completed.</small>\n                      </dl>\n                    </div>\n                    <div class=\"col-lg-7\" id=\"cluster_info\">\n                      <dl class=\"dl-horizontal\">\n                        <dt class=\"pull-left me-2\">Address:</dt>\n                        <dd>{{ supplierDetails.address }}</dd>\n                        <dt class=\"pull-left me-2\">Prequalified:</dt>\n                        <dd>\n                          {{ supplierDetails.prequalified ? \"Yes\" : \"No\" }}\n                        </dd>\n\n                        <dt class=\"pull-left me-2\">Category:</dt>\n                        <dd>{{ supplierDetails.category }}</dd>\n\n\n                        <dt class=\"pull-left me-2\">Status:</dt>\n                        <dd>\n                          <span [ngClass]=\"{\n                              'badge badge-solid-purple':\n                                supplierDetails.status === 'VERIFIED',\n                              'badge badge-solid-blue':\n                                supplierDetails.status === 'PENDING',\n                              'badge badge-solid-green':\n                                supplierDetails.status === 'APPROVED',\n                              'badge badge-solid-red':\n                                supplierDetails.status === 'REJECTED'\n                            }\">\n                            {{ supplierDetails.status }}\n                          </span>\n                        </dd>\n                      </dl>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                      <div class=\"project-activity\">\n                        <mat-tab-group>\n                         \n                          <mat-tab>\n                            <ng-template mat-tab-label>\n                              <mat-icon class=\"example-tab-icon msr-2\">business</mat-icon>\n                              Company Profile\n                            </ng-template>\n                            <div class=\"header\">\n                              <h2><strong>Company Profile</strong> Settings</h2>\n                            </div>\n                            <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                              <div class=\"tab-pane active\">\n                                <div class=\"feed-activity-list\">\n                                  <!-- Company Profile content here -->\n\n                                  <form class=\"mx-4\" [formGroup]=\"mngForm\">\n                                    <div class=\"row\">\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Year Established</mat-label>\n                                          <input matInput formControlName=\"yearEstablished\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Company Size</mat-label>\n                                          <input matInput formControlName=\"companySize\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Number of Employees</mat-label>\n                                          <input matInput formControlName=\"numberOfEmployees\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Industry</mat-label>\n                                          <input matInput formControlName=\"industry\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Products and Services</mat-label>\n                                          <input matInput formControlName=\"productsAndServices\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Tax ID</mat-label>\n                                          <input matInput formControlName=\"taxId\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>PO Delivery Email</mat-label>\n                                          <input matInput formControlName=\"poDeliveryEmail\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Ownership Type</mat-label>\n                                          <input matInput formControlName=\"ownershipType\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Bank Name</mat-label>\n                                          <input matInput formControlName=\"bankName\" />\n                                        </mat-form-field>\n                                      </div>\n\n                                      <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                        <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                                          <mat-label>Bank Account</mat-label>\n                                          <input matInput formControlName=\"bankAc\" />\n                                        </mat-form-field>\n                                      </div>\n                                    </div>\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n                          </mat-tab>\n                          <mat-tab>\n                            <ng-template mat-tab-label>\n                              <mat-icon class=\"example-tab-icon msr-2\">description</mat-icon>\n                              Mandatory Documentations\n                            </ng-template>\n                            <div class=\"header\">\n                              <h2><strong>Mandatory Documentations</strong></h2>\n                            </div>\n                            <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                              <div class=\"tab-pane active\">\n                                <div class=\"feed-activity-list\">\n                                  <!-- Mandatory Documentation content here -->\n\n                                  <form [formGroup]=\"documentsForm\">\n                                    <!-- <form [formGroup]=\"form\"> -->\n\n                                    <div style=\"margin: 20px\">\n                                      <div class=\"table-responsive\">\n                                        <div class=\"materialTableHeader\">\n                                          <div class=\"row\">\n                                            <div class=\"col-8\">\n                                              <ul class=\"header-buttons-left ms-0\">\n                                                <li class=\"dropdown\">\n                                                  <h2>Upload Documents</h2>\n                                                </li>\n                                                <li class=\"dropdown m-l-20\">\n                                                  <label for=\"search-input\"><i\n                                                      class=\"material-icons search-icon\">search</i></label>\n                                                  <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"\n                                                      applyFilter($event)\n                                                    \" #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                                </li>\n\n                                                <li>\n                                                  <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                                      <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                  </div>\n                                                </li>\n                                              </ul>\n                                            </div>\n                                            <div class=\"col-4\"></div>\n                                          </div>\n                                        </div>\n\n                                        <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                                        <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                                          formArrayName=\"filedetails\" matSort class=\"mat-cell\"\n                                          #exporter=\"matTableExporter\">\n                                          <!-- ID Column -->\n                                          <ng-container matColumnDef=\"id\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                                            <mat-cell *matCellDef=\"\n                                                let row;\n                                                let index = index\n                                              \" [formGroupName]=\"index\"\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                              {{ index + 1 }}\n                                            </mat-cell>\n                                          </ng-container>\n\n                                          <ng-container matColumnDef=\"documentType\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">DocumentType</mat-header-cell>\n                                            <mat-cell *matCellDef=\"\n                                                let row;\n                                                let index = index\n                                              \" [formGroupName]=\"index\"\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                                <mat-label>DocumentType</mat-label>\n                                                <input matInput type=\"text\" formControlName=\"documentType\"\n                                                  placeholder=\"documentType\" maxlength=\"50\" />\n                                              </mat-form-field>\n                                            </mat-cell>\n                                          </ng-container>\n\n                                          <ng-container matColumnDef=\"filename\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filename</mat-header-cell>\n                                            <mat-cell *matCellDef=\"\n                                                let row;\n                                                let index = index\n                                              \" [formGroupName]=\"index\"\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                                <mat-label>Filename</mat-label>\n                                                <input matInput type=\"text\" formControlName=\"filename\"\n                                                  placeholder=\"Filename\" maxlength=\"50\" />\n                                              </mat-form-field>\n                                            </mat-cell>\n                                          </ng-container>\n                                          <ng-container matColumnDef=\"filetype\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">Filetype</mat-header-cell>\n                                            <mat-cell *matCellDef=\"\n                                                let row;\n                                                let index = index\n                                              \" [formGroupName]=\"index\"\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-50 filename-cell\">\n                                              <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                                <mat-label>Filetype</mat-label>\n                                                <input matInput type=\"text\" formControlName=\"filetype\"\n                                                  placeholder=\"Filetype\" maxlength=\"50\" />\n                                              </mat-form-field>\n                                            </mat-cell>\n                                          </ng-container>\n\n                                          <ng-container matColumnDef=\"selectFile\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">Select\n                                              File</mat-header-cell>\n                                            <mat-cell *matCellDef=\"\n                                                let row;\n                                                let index = index\n                                              \" [formGroupName]=\"index\"\n                                              class=\"column-nowrap psl-3 tbl-col-width-per-50 selectfile-cell\">\n                                              <input #file type=\"file\" [disabled]=\"isLoading | async\" (change)=\"\n                                                  onSelectFile(\n                                                    file.files,\n                                                    row,\n                                                    index\n                                                  )\n                                                \" [multiple]=\"'multiple'\" />\n                                            </mat-cell>\n                                          </ng-container>\n\n                                          <ng-container matColumnDef=\"download\">\n                                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                              *matHeaderCellDef>Download</mat-header-cell>\n                                            <mat-cell *matCellDef=\"\n                                                let row;\n                                                let i = index\n                                              \" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                              <button mat-icon-button color=\"primary\" (click)=\"\n                                                  $event.stopPropagation()\n                                                \" (click)=\"downloadDocument(row)\" class=\"tbl-action-btn\">\n                                                <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                                              </button>\n                                            </mat-cell>\n                                          </ng-container>\n\n                                          <ng-container matColumnDef=\"action\">\n                                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                              *matHeaderCellDef>Action</mat-header-cell>\n                                            <mat-cell *matCellDef=\"\n                                                let row;\n                                                let i = index\n                                              \" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                              <button mat-icon-button color=\"accent\" (click)=\"\n                                                  $event.stopPropagation()\n                                                \" (click)=\"deleteCall(row)\" class=\"tbl-action-btn\">\n                                                <app-feather-icons [icon]=\"'trash-2'\"\n                                                  [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                              </button>\n                                            </mat-cell>\n                                          </ng-container>\n\n                                          <!-- Row definitions -->\n                                          <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                                          <mat-row *matRowDef=\"\n                                              let row;\n                                              let i = index;\n                                              columns: displayColumns\n                                            \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                                          <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{\n                                            input.value\n                                            }}\"</mat-cell>\n                                        </mat-table>\n\n                                        <!-- Loading spinner -->\n                                        <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                                          <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                          </mat-progress-spinner>\n                                        </div>\n                                        <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[\n                                            2, 5, 10, 20, 30, 40, 50, 100\n                                          ]\" aria-label=\"Select page of users\"></mat-paginator>\n                                      </div>\n                                    </div>\n                                  </form>\n                                </div>\n                              </div>\n                            </div>\n                          </mat-tab>\n                        </mat-tab-group>\n\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 my-3\">\n                          <div class=\"example-button-row\" align=\"end\">\n                            <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                              (click)=\"cancel()\">\n                              <mat-icon>cancel</mat-icon>\n                              Cancel\n                            </button>\n\n                            <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                              (click)=\"onValidate('Verifier')\" mat-raised-button color=\"primary\">\n                              <mat-icon>done_outline</mat-icon>\n                              Verify Profile\n                            </button>\n\n                            <button class=\"btn-space\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\"\n                              (click)=\"onSubmit()\" mat-raised-button color=\"primary\">\n                              <mat-icon>file_download</mat-icon>\n                              {{ pageFunction }} Profile\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllProfilesComponent } from './pages/all-profiles/all-profiles.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { ManageProfileComponent } from './pages/manage-profile/manage-profile.component';\n\nconst routes: Routes = [\n  {\n    path: \"all\",\n    component: AllProfilesComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'SuppliersManagementModule', requiredPrivilege: [\"All Supplier Profiles\"] },\n  },\n\n\n  {\n    path: \"manage-profile\",\n    component: ManageProfileComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: { clientName: 'SuppliersManagementModule', requiredPrivilege: [\"Manage Supplier Profile\"] },\n  },\n];\n\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SupplierProfileMaintenanceRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SupplierProfileMaintenanceRoutingModule } from './supplier-profile-maintenance-routing.module';\nimport { AllProfilesComponent } from './pages/all-profiles/all-profiles.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { ValidateSupplierProfilesComponent } from './dialogs/validate-supplier-profiles/validate-supplier-profiles.component';\nimport { ManageProfileComponent } from './pages/manage-profile/manage-profile.component';\n\n\n@NgModule({\n  declarations: [\n    ManageProfileComponent,\n    AllProfilesComponent,\n    ValidateSupplierProfilesComponent\n  ],\n  imports: [\n    CommonModule,\n    SupplierProfileMaintenanceRoutingModule,\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n\n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n\n    MatFormFieldModule,\n\n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n\n    MatSnackBarModule,\n    MatToolbarModule,\n\n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule\n  ]\n})\nexport class SupplierProfileMaintenanceModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}