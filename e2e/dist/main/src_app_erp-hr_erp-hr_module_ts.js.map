{"version":3,"file":"src_app_erp-hr_erp-hr_module_ts.js","mappings":"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","sources":["./src/app/erp-hr/data/configuration-services/holiday-configuration.service.ts","./src/app/erp-hr/data/configuration-services/kpi-anaysis.service.ts","./src/app/erp-hr/data/configuration-services/kpi-schedule.service.ts","./src/app/erp-hr/data/deductions-services/fringe-benefit.service.ts","./src/app/erp-hr/data/deductions-services/house-levy-configurations.service.ts","./src/app/erp-hr/data/deductions-services/nhifconfiguration.service.ts","./src/app/erp-hr/data/deductions-services/paye-relief.service.ts","./src/app/erp-hr/erp-hr-routing.module.ts","./src/app/erp-hr/erp-hr.module.ts","./src/app/erp-hr/hr-lookups/configurations-lookups/holidays-lookup/holidays-lookup.component.ts","./src/app/erp-hr/hr-lookups/configurations-lookups/holidays-lookup/holidays-lookup.component.html","./src/app/erp-hr/hr-lookups/configurations-lookups/kpi-analysis-lookup/kpi-analysis-lookup.component.ts","./src/app/erp-hr/hr-lookups/configurations-lookups/kpi-analysis-lookup/kpi-analysis-lookup.component.html","./src/app/erp-hr/hr-lookups/configurations-lookups/kpi-schedule-lookup/kpi-schedule-lookup.component.ts","./src/app/erp-hr/hr-lookups/configurations-lookups/kpi-schedule-lookup/kpi-schedule-lookup.component.html","./src/app/erp-hr/hr-lookups/deductions-lookups/fringe-benefit-lookup/fringe-benefit-lookup.component.ts","./src/app/erp-hr/hr-lookups/deductions-lookups/fringe-benefit-lookup/fringe-benefit-lookup.component.html","./src/app/erp-hr/hr-lookups/deductions-lookups/house-levy-lookup/house-levy-lookup.component.ts","./src/app/erp-hr/hr-lookups/deductions-lookups/house-levy-lookup/house-levy-lookup.component.html","./src/app/erp-hr/hr-lookups/deductions-lookups/nhif-lookup/nhif-lookup.component.ts","./src/app/erp-hr/hr-lookups/deductions-lookups/nhif-lookup/nhif-lookup.component.html","./src/app/erp-hr/hr-lookups/deductions-lookups/paye-lookup/paye-lookup.component.ts","./src/app/erp-hr/hr-lookups/deductions-lookups/paye-lookup/paye-lookup.component.html","./src/app/erp-hr/hr-lookups/deductions-lookups/paye-relief-lookup/paye-relief-lookup.component.ts","./src/app/erp-hr/hr-lookups/deductions-lookups/paye-relief-lookup/paye-relief-lookup.component.html","./src/app/erp-hr/hr-lookups/jobs-lookups/job-lookup/job-lookup.component.ts","./src/app/erp-hr/hr-lookups/jobs-lookups/job-lookup/job-lookup.component.html"],"sourcesContent":["import { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HolidayConfigurationService {\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/configurations/holiday`;\n\n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    console.log(data)\n    let API_URL = `${this.baseURL}/create`;\n    return this.http.post(API_URL, data, { headers: this.headers }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  findAll(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  findAllByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n  findById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/${id}`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n  updateState(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update/state`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n\n  validateBulkHolidays(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n@Injectable({\n  providedIn: 'root'\n})\nexport class KpiAnalysisService {\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n baseURL = `${environment.baseUrlHR}/api/v1/kpi-analysis`;\n\n\n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/add`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n@Injectable({\n  providedIn: 'root'\n})\nexport class KpiScheduleService {\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/kpicircleparam`;\n\n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/add`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n///api/v1/kpicircleparam/update/state\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import {\n  HttpHeaders,\n  HttpClient,\n  HttpErrorResponse,\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map, catchError, throwError } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FringeBenefitService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n  baseURL = `${environment.baseUrlHR}/api/v1/configurations/fringebenefitrate`;\n  \n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/add`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HouseLevyConfigurationsService {\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/configurations/houselevy`;\n  \n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/add`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NHIFConfigurationService {\n \n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/configurations/nhif`;\n\n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/add`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayeReliefService {\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/configurations/paye-relief`;\n  \n  ///api/v1/configurations/paye-relief/delete\n  constructor(private http: HttpClient) { }\n\n  create(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/create`;\n    return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  read(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readByStatus(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/fetchbyStatus`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  readById(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/by/id`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  update(data: any): Observable<any> {\n    let API_URL = `${this.baseURL}/update`;\n    return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      \n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  \n  delete(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/delete`;\n    return this.http.delete(API_URL, {params:params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  verify(processedRows: any): Observable<any> {\n    const expenseUrl = `${this.baseURL}/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: \"dashboard\",\n    loadChildren: () =>\n      import(\"./modules/dashboard/dashboard.module\").then(\n        (m) => m.DashboardModule\n      ),\n  },\n  {\n    path: \"configurations\",\n    loadChildren: () =>\n      import(\"./modules/configurations/configurations.module\").then(\n        (m) => m.ConfigurationsModule\n      ),\n  },\n\n  {\n    path: \"deductions\",\n    loadChildren: () =>\n      import(\"./modules/deductions/deductions.module\").then(\n        (m) => m.DeductionsModule\n      ),\n  },\n  \n  {\n    path: \"jobs\",\n    loadChildren: () =>\n      import(\"./modules/jobs/jobs.module\").then(\n        (m) => m.JobsModule\n      ),\n  },\n\n  {\n    path: \"employees\",\n    loadChildren: () =>\n      import(\"./modules/employees/employees.module\").then(\n        (m) => m.EmployeesModule\n      ),\n  },\n\n  {\n    path: \"employee-activities\",\n    loadChildren: () =>\n      import(\"./modules/employee-activities/employee-activities.module\").then(\n        (m) => m.EmployeeActivitiesModule\n      ),\n  },\n\n  {\n    path: \"pension\",\n    loadChildren: () =>\n      import(\"./modules/pension/pension.module\").then(\n        (m) => m.PensionModule\n      ),\n  },\n\n  {\n    path: \"payroll\",\n    loadChildren: () =>\n      import(\"./modules/payroll/payroll.module\").then(\n        (m) => m.PayrollModule\n      ),\n  },\n\n  {\n    path: \"leave-management\",\n    loadChildren: () =>\n      import(\"./modules/leave-management/leave-management.module\").then(\n        (m) => m.LeaveManagementModule\n      ),\n  },\n  \n  {\n    path: \"kpi-management\",\n    loadChildren: () =>\n      import(\"./modules/kpi-management/kpi-management.module\").then(\n        (m) => m.KpiManagementModule\n      ),\n  },\n\n  {\n    path: \"exit-management\",\n    loadChildren: () =>\n      import(\"./modules/exit-management/exit-management.module\").then(\n        (m) => m.ExitManagementModule\n      ),\n  },\n\n  {\n    path: \"case-management\",\n    loadChildren: () =>\n      import(\"./modules/case-management/case-management.module\").then(\n        (m) => m.CaseManagementModule\n      ),\n  },\n\n  {\n    path: \"shared-documents\",\n    loadChildren: () =>\n      import(\"./modules/shared-documents/shared-documents.module\").then(\n        (m) => m.SharedDocumentsModule\n      ),\n  },\n\n  {\n    path: \"learning-and-training\",\n    loadChildren: () =>\n      import(\"./modules/learning-and-training/learning-and-training.module\").then(\n        (m) => m.LearningAndTrainingModule\n      ),\n  },\n\n  {\n    path: \"hr-miscellaneous\",\n    loadChildren: () =>\n      import(\"./modules/hr-miscellaneous/hr-miscellaneous.module\").then(\n        (m) => m.HrMiscellaneousModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ErpHrRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ErpHrRoutingModule } from './erp-hr-routing.module';\nimport { EmployeesLookupComponent } from './hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component';\nimport { ComponentsModule } from '../shared/components/components.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { BranchesLookupComponent } from './hr-lookups/configurations-lookups/branches-lookup/branches-lookup.component';\nimport { DepartmentsLookupComponent } from './hr-lookups/configurations-lookups/departments-lookup/departments-lookup.component';\nimport { HolidaysLookupComponent } from './hr-lookups/configurations-lookups/holidays-lookup/holidays-lookup.component';\nimport { JobGradesLookupComponent } from './hr-lookups/configurations-lookups/job-grades-lookup/job-grades-lookup.component';\nimport { JobRolesLookupComponent } from './hr-lookups/configurations-lookups/job-roles-lookup/job-roles-lookup.component';\nimport { KpiAnalysisLookupComponent } from './hr-lookups/configurations-lookups/kpi-analysis-lookup/kpi-analysis-lookup.component';\nimport { KpiScheduleLookupComponent } from './hr-lookups/configurations-lookups/kpi-schedule-lookup/kpi-schedule-lookup.component';\nimport { LeaveTypesLookupComponent } from './hr-lookups/configurations-lookups/leave-types-lookup/leave-types-lookup.component';\nimport { FringeBenefitLookupComponent } from './hr-lookups/deductions-lookups/fringe-benefit-lookup/fringe-benefit-lookup.component';\nimport { HouseLevyLookupComponent } from './hr-lookups/deductions-lookups/house-levy-lookup/house-levy-lookup.component';\nimport { NhifLookupComponent } from './hr-lookups/deductions-lookups/nhif-lookup/nhif-lookup.component';\nimport { PayeLookupComponent } from './hr-lookups/deductions-lookups/paye-lookup/paye-lookup.component';\nimport { PayeReliefLookupComponent } from './hr-lookups/deductions-lookups/paye-relief-lookup/paye-relief-lookup.component';\nimport { JobLookupComponent } from './hr-lookups/jobs-lookups/job-lookup/job-lookup.component';\n\n\n@NgModule({\n  declarations: [\n    EmployeesLookupComponent,\n    BranchesLookupComponent,\n    DepartmentsLookupComponent,\n    HolidaysLookupComponent,\n    JobGradesLookupComponent,\n    JobRolesLookupComponent,\n    KpiAnalysisLookupComponent,\n    KpiScheduleLookupComponent,\n    LeaveTypesLookupComponent,\n    FringeBenefitLookupComponent,\n    HouseLevyLookupComponent,\n    NhifLookupComponent,\n    PayeLookupComponent,\n    PayeReliefLookupComponent,\n    JobLookupComponent\n  ],\n  imports: [\n    CommonModule,\n    ErpHrRoutingModule,\n\n    ComponentsModule,\n    SharedModule,\n  ]\n})\nexport class ErpHrModule { }\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ManageHolidaysComponent } from '../../../modules/configurations/holidays/dialogs/manage-holidays/manage-holidays.component';\nimport { HolidayConfigurationService } from '../../../data/configuration-services/holiday-configuration.service';\n\n@Component({\n  selector: 'app-holidays-lookup',\n  templateUrl: './holidays-lookup.component.html',\n  styleUrls: ['./holidays-lookup.component.sass']\n})\nexport class HolidaysLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"holidayName\",\n    \"holidayDate\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageHolidaysComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private holidayAPI: HolidayConfigurationService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"SingleHoliday\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n    input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // let params = {\n    //   page: page,\n    //   size: size,\n    //   status: \"1\",\n    // };\n\n    let params = {\n      status: 'APPROVED'\n    };\n    \n    this.holidayAPI\n      .findAllByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select Holiday</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"holidayName\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                                Holiday Name\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                                {{ row.holidayName }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"holidayDate\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                                Holiday Date\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                                {{ row.holidayDate | date:'mediumDate' }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ManageKpiAnalysisComponent } from '../../../modules/configurations/kpi-analysis/dialogs/manage-kpi-analysis/manage-kpi-analysis.component';\nimport { KpiAnalysisService } from '../../../data/configuration-services/kpi-anaysis.service';\n\n@Component({\n  selector: 'app-kpi-analysis-lookup',\n  templateUrl: './kpi-analysis-lookup.component.html',\n  styleUrls: ['./kpi-analysis-lookup.component.sass']\n})\nexport class KpiAnalysisLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"periodm\",\n    \"periody\",\n    \"description\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageKpiAnalysisComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private kpiAnalysisService: KpiAnalysisService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.action === \"SingleKPI Analysis\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // let params = {\n    //   page: page,\n    //   size: size,\n    //   status: \"1\",\n    // };\n    let params = {\n      status: 'APPROVED'\n    }\n    this.kpiAnalysisService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => { },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select KPI Analysis</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"periodm\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Period Month\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.periodm }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"periody\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Period Year\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.periody }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"description\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Description\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.description }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ManageKpiScheduleComponent } from '../../../modules/configurations/kpi-schedule/dialogs/manage-kpi-schedule/manage-kpi-schedule.component';\nimport { KpiAnalysisService } from '../../../data/configuration-services/kpi-anaysis.service';\nimport { KpiScheduleService } from 'src/app/erp-hr/data/configuration-services/kpi-schedule.service';\n\n@Component({\n  selector: 'app-kpi-schedule-lookup',\n  templateUrl: './kpi-schedule-lookup.component.html',\n  styleUrls: ['./kpi-schedule-lookup.component.sass']\n})\nexport class KpiScheduleLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"quarter\",\n    \"date\",\n    \"postedTime\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageKpiScheduleComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private kpiScheduleService: KpiScheduleService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"Single KPI Schedule\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n    input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // let params = {\n    //   page: page,\n    //   size: size,\n    //   status: \"1\",\n    // };\n\n    let params = {status: 'APPROVED'}\n    this.kpiScheduleService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select KPI Schedule</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"quarter\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Quarter\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.quarter }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"date\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Review Date\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.date }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                       \n                        \n                        <ng-container matColumnDef=\"postedTime\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Posted Time\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.postedTime | date:'short' }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { BranchService } from 'src/app/erp-hr/data/configuration-services/branch.service';\nimport { FringeBenefitService } from 'src/app/erp-hr/data/deductions-services/fringe-benefit.service';\nimport { ManageBranchesComponent } from 'src/app/erp-hr/modules/configurations/branches/dialogs/manage-branches/manage-branches.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-fringe-benefit-lookup',\n  templateUrl: './fringe-benefit-lookup.component.html',\n  styleUrls: ['./fringe-benefit-lookup.component.sass']\n})\nexport class FringeBenefitLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"fringeBenefitRate\",\n    \"marketRate\",\n    \"postedTime\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageBranchesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private fringeBenefitService: FringeBenefitService,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"SingleBranch\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n    input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    let params = {\n      page: page,\n      size: size,\n      status: \"APPROVED\",\n    };\n\n    this.fringeBenefitService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select Fringe Benefit</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"fringeBenefitRate\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Fringe Benefit Rate\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.fringeBenefitRate }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"marketRate\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Market Rate\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.marketRate }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                       \n                        \n                        <ng-container matColumnDef=\"postedTime\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Posted Time\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.postedTime | date:'short' }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { HouseLevyConfigurationsService } from 'src/app/erp-hr/data/deductions-services/house-levy-configurations.service';\nimport { ManageBranchesComponent } from 'src/app/erp-hr/modules/configurations/branches/dialogs/manage-branches/manage-branches.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-house-levy-lookup',\n  templateUrl: './house-levy-lookup.component.html',\n  styleUrls: ['./house-levy-lookup.component.sass']\n})\nexport class HouseLevyLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"name\",\n    \"rate\",\n    \"isActive\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageBranchesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private houseLevyConfigurationsService: HouseLevyConfigurationsService,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"SingleBranch\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n    input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    let params = {\n      page: page,\n      size: size,\n      status: \"APPROVED\",\n    };\n\n    this.houseLevyConfigurationsService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select House Levy</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"name\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Name\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.name }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"rate\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Rate\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.rate }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"isActive\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                IsActive\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.isActive }}\n                            </mat-cell>\n                        </ng-container>\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { NHIFConfigurationService } from 'src/app/erp-hr/data/deductions-services/nhifconfiguration.service';\nimport { ManageBranchesComponent } from 'src/app/erp-hr/modules/configurations/branches/dialogs/manage-branches/manage-branches.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-nhif-lookup',\n  templateUrl: './nhif-lookup.component.html',\n  styleUrls: ['./nhif-lookup.component.sass']\n})\nexport class NhifLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"maxThreshold\",\n    \"nhifDeduction\",\n    \"postedTime\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageBranchesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private nhifConfigurationService: NHIFConfigurationService,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"SingleBranch\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n    input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    let params = {\n      page: page,\n      size: size,\n      status: \"APPROVED\",\n    };\n\n    this.nhifConfigurationService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select Branch</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"maxThreshold\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Max Threshold\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.maxThreshold }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"nhifDeduction\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Nhif Deduction\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.nhifDeduction }}\n                            </mat-cell>\n                        </ng-container>\n           \n                        \n                        <ng-container matColumnDef=\"postedTime\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Posted Time\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.postedTime | date:'short' }}\n                            </mat-cell>\n                        </ng-container>\n\n                        \n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { BranchService } from 'src/app/erp-hr/data/configuration-services/branch.service';\nimport { ManageBranchesComponent } from 'src/app/erp-hr/modules/configurations/branches/dialogs/manage-branches/manage-branches.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-paye-lookup',\n  templateUrl: './paye-lookup.component.html',\n  styleUrls: ['./paye-lookup.component.sass']\n})\nexport class PayeLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"tax_band\",\n    \"rate\",\n    \"amount_monthly\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageBranchesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private branchAPI: BranchService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"SingleBranch\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n    input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    let params = {\n      page: page,\n      size: size,\n      status: \"APPROVED\",\n    };\n\n    this.branchAPI\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select Branch</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"tax_band\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Tax Band\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.tax_band }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"rate\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Rate\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.rate }}\n                            </mat-cell>\n                        </ng-container>\n                        \n                        <ng-container matColumnDef=\"amount_monthly\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Monthly Amount\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.amount_monthly }}\n                            </mat-cell>\n                        </ng-container>\n\n                        \n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { PayeReliefService } from 'src/app/erp-hr/data/deductions-services/paye-relief.service';\nimport { ManageBranchesComponent } from 'src/app/erp-hr/modules/configurations/branches/dialogs/manage-branches/manage-branches.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-paye-relief-lookup',\n  templateUrl: './paye-relief-lookup.component.html',\n  styleUrls: ['./paye-relief-lookup.component.sass']\n})\nexport class PayeReliefLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"name\",\n    \"insuranceRelief\",\n    \"personalRelief\",\n    \"pensionReliefMax\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageBranchesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private payeReliefService: PayeReliefService,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.action === \"SingleBranch\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n    input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void {}\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    let params = {\n      page: page,\n      size: size,\n      status: \"APPROVED\",\n    };\n\n    this.payeReliefService\n      .readByStatus(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select Branch</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"name\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Name\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.name }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"insuranceRelief\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                InsuranceRelief\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.insuranceRelief }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"personalRelief\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                PersonalRelief\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.personalRelief }}\n                            </mat-cell>\n                        </ng-container>\n                        <ng-container matColumnDef=\"pensionReliefMax\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                PensionReliefMax\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.pensionReliefMax }}\n                            </mat-cell>\n                        </ng-container>\n\n                        \n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil } from 'rxjs';\nimport { BranchService } from 'src/app/erp-hr/data/configuration-services/branch.service';\nimport { JobManagementService } from 'src/app/erp-hr/data/job-services/job-management.service';\nimport { ManageBranchesComponent } from 'src/app/erp-hr/modules/configurations/branches/dialogs/manage-branches/manage-branches.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-job-lookup',\n  templateUrl: './job-lookup.component.html',\n  styleUrls: ['./job-lookup.component.sass']\n})\nexport class JobLookupComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"refNumber\",\n    \"title\",\n    \"vacantPositions\",\n    \"jobLevel\",\n    \"jobTerm\",\n  ];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(\"paginator\") paginator: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n\n  selection = new SelectionModel<any>(false, []);\n\n  currencyDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  dataSourceFilteredList: any[] = [];\n  currenciesArray: any[] = [];\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageBranchesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private jobManagementService: JobManagementService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data.action === \"SingleJob\") {\n      this.selection = new SelectionModel<any>(false, []);\n    } else {\n      this.selection = new SelectionModel<any>(true, []);\n    }\n\n    this.getData();\n  }\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    //let storeId = [1, 2, 3];\n    this.dataSource.data.forEach((element) => {\n      this.currenciesArray.forEach((item) => {\n        if (item === element.id) {\n          // this.dataSourceFilteredList.push(this.dataSource.data.indexOf(element));\n          this.selection.select(element);\n        }\n      });\n    });\n\n    console.log(\"dataSourceFilteredList \", this.dataSourceFilteredList);\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************\n  //Select expense\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n\n    //   console.log(data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  //  **************************************************************************\n  currentPage = 0;\n  totalPages = 0;\n  totalItems = 0;\n  pageSize = 5;\n  pageSizeOptions = [2, 5, 10, 20, 30, 40, 50, 100];\n\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // let params = {\n    //   page: page,\n    //   size: size,\n    //   status: \"1\",\n    // };\n\n    let params = {\n      status: 'APPROVED',\n      applicationType: 'ALL'\n    };\n\n    this.jobManagementService\n      .readByStatusAndApplicationType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            this.totalItems = this.data.totalItems;\n            this.currentPage = this.data.currentPage;\n            this.totalPages = this.data.totalPages;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => { },\n      });\n  }\n\n  onPageChange(event: any) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getData(this.currentPage, this.pageSize);\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Select Job</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <mat-card-content>\n            <div *ngIf=\"isLoading\">\n                <div class=\"d-flex justify-content-center\">\n                    <img src=\"assets/images/loading.gif\"\n                        style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <div class=\"table-responsi m-t-5\">\n                    <ng-container *ngIf=\"!isLoading\">\n                        <div class=\"table-header py-3\"\n                            style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                            <div class=\"row\">\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\"\n                                            placeholder=\"Filter...\" #input />\n                                    </div>\n                                </div>\n                                <div class=\"col-6 px-4\">\n                                    <div class=\"mx-auto\">\n                                        <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                                            <button mat-mini-fab color=\"primary\" (click)=\"proceed()\"\n                                                [class.auth-spinner]=\"multimodifyloading\"\n                                                [disabled]=\"multimodifyloading\">\n                                                <mat-icon class=\"col-white\">done_all </mat-icon>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                        #exporter=\"matTableExporter\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                    [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-8'\">\n                                <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                    [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                </mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"refNumber\">\n                            <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Ref Number\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.jobRefNumber }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"title\">\n                            <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                Title\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                {{ row.jobTitle }}\n                            </mat-cell>\n                        </ng-container>\n\n\n                        <ng-container matColumnDef=\"vacantPositions\">\n                            <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Vacant Pos\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.vacantPositions }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"jobLevel\">\n                            <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Level\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.jobLevel }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"jobTerm\">\n                            <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                Term\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                {{ row.jobTerm }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                        </mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                        </mat-row>\n\n                        <tr *matNoDataRow>\n                            <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input }}\"</td>\n                        </tr>\n                    </mat-table>\n                    <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                        </mat-progress-bar>\n                    </div>\n                    <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                        </mat-progress-spinner>\n                    </div>\n\n                    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page\"\n                        (page)=\"onPageChange($event)\" [length]=\"totalItems\" [pageIndex]=\"currentPage\"\n                        [pageSize]=\"pageSize\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card-content>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}