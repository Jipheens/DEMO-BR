{"version":3,"file":"src_app_erp-prepayment_modules_prepayments_prepayments_module_ts.js","mappings":";;;;;;;;;;;;;;;AAA+D;;;AAW/D,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAKtB,MAAM,mBAAmB;IAM9B,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN1B,YAAO,GAAG,IAAI,6DAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEpE,uBAAkB,GAAkC,KAAK,CAAC;QAC1D,qBAAgB,GAAgC,KAAK,CAAC;IAKnD,CAAC;IAEG,QAAQ;QACb,yCAAyC;QACzC,MAAM,IAAI,GAAG,aAAa,CAAC;QAC3B,uEAAuE;QACvE,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/C,kEAAkE;QAClE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAC5B,2CAA2C;YAC3C,mDAAmD;YACnD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBAC/B,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC9B;YACD,uEAAuE;YACvE,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC9B,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;aACrD;SACF;QACD,2CAA2C;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,QAAQ,CAAC,IAAS;QACvB,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC;IAEM,OAAO;QACZ,MAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IACM,QAAQ;QACb,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO;IAC/B,CAAC;;sFAhDU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;;;;;;;;;;;;;;;;;;;ACfyD;AAEtC;AACyB;;;AAKzD,MAAM,kBAAkB;IAC7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,cAAc;QACZ,MAAM,eAAe,GAAG,GAAG,6FAA8B,gCAAgC,CAAC;QAC1F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,eAAe,CAAC,CAAC;IAC/C,CAAC;IAED,kBAAkB,CAAC,MAAW;QAC5B,MAAM,eAAe,GAAG,GAAG,6FAA8B,sCAAsC,CAAC;QAChG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,eAAe,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,oBAAoB,CAAC,MAAW;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,6FAA8B,wCAAwC,CAC1E,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,IAAS;QACtB,MAAM,eAAe,GAAG,GAAG,6FAA8B,iCAAiC,CAAC;QAC3F,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,eAAe,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,iBAAiB,CAAC,kBAAuB;QACvC,MAAM,aAAa,GAAG,GAAG,6FAA8B,mCAAmC,CAAC;QAC3F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,aAAa,EAAE,kBAAkB,CAAC,CAAC;IAC/D,CAAC;IAED,4BAA4B,CAAC,MAAW;QACtC,MAAM,eAAe,GAAG,GAAG,6FAA8B,mCAAmC,CAAC;QAC7F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,eAAe,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IACzD,CAAC;IAID,cAAc,CAAC,mBAAwB;QACrC,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAC;QACrD,IAAI,cAAc,GAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC;QAC7F,MAAM,QAAQ,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,MAAM,eAAe,GAAG,GAAG,6FAA8B,yDAAyD,QAAQ,EAAE,CAAC;QAE7H,kFAAkF;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,cAAc,CAAC;aAClD,IAAI,CAAC,yCAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACrB,OAAO;gBACL,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;aACrD,CAAC;QACJ,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAGD,yBAAyB,CAAC,MAAW;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,6FAA8B,mCAAmC,CACrE,CAAC;IACJ,CAAC;IAED,gCAAgC,CAAC,MAAW;QAC1C,MAAM,eAAe,GAAG,GAAG,6FAA8B,mDAAmD,CAAC;QAC7G,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,eAAe,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,qCAAqC,CAAC,MAAW;QAC/C,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAC;QACrD,IAAI,cAAc,GAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC;QAE7G,MAAM,eAAe,GAAG,GAAG,6FAA8B,yDAAyD,CAAC;QAEnH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,cAAc,CAAC;aAClD,IAAI,CAAC,yCAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACrB,OAAO;gBACL,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;aACrD,CAAC;QACJ,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAGD,0BAA0B,CAAC,gBAAqB;QAC9C,MAAM,eAAe,GAAG,GAAG,6FAA8B,kDAAkD,CAAC;QAC5G,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,eAAe,EAAE,gBAAgB,CAAC,CAAC;IAC/D,CAAC;;oFAnFU,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNsC;AAIC;AACV;AACY;AAEL;AAKzB;AACyF;AAClD;;;;;;;;;;;;;;;;;;;;;;;ICF5D,0EAA2D;IACzD,kFACmB;IACvB,4DAAM;;;;IA8EI,sFAAqE;IACrD,2UAAmB,sBAAc,GAAG,IAAI,IAAC,oQAG3C,qBAAa,IAH8B;IAIvD,4DAAe;;;IALkB,0FAAiC;IAEhE,0DAAmD;IAAnD,0HAAmD;;;;IAKvD,+EAAkE;IAClD,uKAAS,wBAAwB,IAAC,uUAAoB,iCAAqB,GAAG,IAAI,IAAhD,6PAEpC,qBAAa,IAFuB;IAGhD,4DAAe;;;;IAJe,0FAAiC;IAE7D,0DAAqC;IAArC,yGAAqC;;;IAOzC,sFACwC;IAAA,6DAAE;IAAA,4DAAkB;;;IAC5D,+EAAsE;IAAA,uDAAU;IAAA,4DAAW;;;IAArB,0DAAU;IAAV,2EAAU;;;IAIhF,sFAAmD;IAAA,yEAAc;IAAA,4DAAkB;;;IACnF,2EAAgC;IAAC,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,iGAAsB;;;IAKvD,sFAAmD;IAAA,sEAAW;IAAA,4DAAkB;;;IAChF,2EAAgC;IAAC,uDACjC;IAAA,4DAAW;;;IADsB,0DACjC;IADiC,+FACjC;;;IAIA,sFAAmD;IAAA,iEAAM;IAAA,4DAAkB;;;IAC3E,2EAAgC;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAI/C,sFAAmD;IAAA,oEAAS;IAAA,4DAAkB;;;IAC9E,2EAAgC;IAC9B,uDAAsC;;IAAA,4DAAW;;;IAAjD,0DAAsC;IAAtC,2KAAsC;;;IAIxC,sFAAmD;IAAA,kEAAO;IAAA,4DAAkB;;;IAC5E,2EAAgC;IAC9B,uDAAoC;;IAAA,4DAAW;;;IAA/C,0DAAoC;IAApC,yKAAoC;;;IAItC,sFAAmD;IAAA,0EAAe;IAAA,4DAAkB;;;IACpF,2EAAgC;IAAC,uDAAuB;IAAA,4DAAW;;;IAAlC,0DAAuB;IAAvB,kGAAuB;;;IAGxD,sFAAmD;IAAA,uEAAY;IAAA,4DAAkB;;;IACjF,2EAAgC;IAAC,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;IAIrD,sFAAmD;IAAA,wEAAa;IAAA,4DAAkB;;;IAClF,2EAAgC;IAAC,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;IAKtD,sFACoB;IAAA,iEAAM;IAAA,4DAAkB;;;;IAC5C,+EAAqG;IAE5D,iKAAS,wBAAwB,IAAC,gTAC9D,+BAAmB,IAD2C;IAEvE,mFAAgF;IAClF,4DAAS;IAET,6EACuD;IADf,iKAAS,wBAAwB,IAAC,gTAC/D,+BAAmB,IAD4C;IAExE,mFAA8E;IAChF,4DAAS;IAET,6EAC4D;IADrB,iKAAS,wBAAwB,IAAC,gTAC9D,oCAAwB,IADsC;IAEvE,mFAAqF;IACvF,4DAAS;;IAX4B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;IAKA,0DAAuB;IAAvB,uEAAuB;IAAtC,uEAAc;IAKK,0DAA0B;IAA1B,0EAA0B;IAA7C,2EAAkB;;;IAK3C,4EAAqE;;;;IACrE,8EACuC;IADmB,wWAAS,+BAAmB,IAAC;IAEvF,4DAAU;;IADR,8EAA0B;;;IAE5B,+EAAoC;IAAC,uDAA6C;IAAA,4DAAW;;;IAAxD,0DAA6C;IAA7C,8HAA6C;;;IAEpF,0EAA2C;IACzC,sFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;;ADtK9D,MAAM,uBAAuB;IAsBlC,YACU,MAAc,EACd,QAAyB,EACzB,kBAAsC,EACtC,oBAAyC,EACzC,MAAiB;QAJjB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,WAAM,GAAN,MAAM,CAAW;QAxB3B,qBAAgB,GAAa,CAAC,QAAQ,EAAC,IAAI,EAAE,gBAAgB,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC;QAM9K,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAI9C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,QAAQ,CAAC;QACtB,aAAQ,GAAqB,IAAI,0CAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QA6HjC,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;IArHhC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IAEjB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAC/E;YACE,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,GAAG,CAAC;gBAC7B,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBAEjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAC,IAAI,CAAC,IAAI,CAAE;iBAEtC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CACJ;iBACF;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;YACJ,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;YAEf,CAAC;SAEF,CACF,EAAE,+CAAY,CAAC;IAClB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,cAAc,CAAC,IAAS;QACtB,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAEtD,IAAI,KAAK,GAAG,+CAA+C,CAAC;QAC5D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IACpF,CAAC;IACD,cAAc,CAAC,IAAS;QACtB,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QACtD,IAAI,KAAK,GAAG,+CAA+C,CAAC;QAC5D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,gBAAgB,CAAC,EAAU;QACzB,uDAAS,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,+CAA+C;YACrD,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,yBAAyB;SAC7C,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBAEtB,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAC/F;oBACE,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,iCAAiC,CAClC,CAAC;oBACJ,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACJ,CAAC;oBACD,QAAQ,EAAE,GAAG,EAAE;wBACb,IAAI,CAAC,OAAO,EAAE,CAAC;oBACjB,CAAC;iBAEF,CACF,EAAE,+CAAY,CAAC;aAEjB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAUD,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAAQ,GAAG,CAAC,QAAQ,GAAG,CACrF,EAAE,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IACD,wBAAwB;QACtB,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAC;YAChC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,oCAAoC,CAAC;YAC5E,OAAM;SACP;aAAK;YACJ,IAAI,mBAAmB,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAClC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAEtC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB;iBAC1C,cAAc,CAAC,mBAAmB,CAAC;iBACnC,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;gBACX,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,IAAI,GAAQ,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBAC1C,IAAI,EAAE,cAAc;iBACrB,CAAC,CAAC;gBACH,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC7C,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;gBACb,CAAC,CAAC,QAAQ,GAAG,uBAAuB,CAAC;gBACrC,CAAC,CAAC,KAAK,EAAE,CAAC;gBACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAEhC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,+BAA+B,CAChC,CAAC;YACJ,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBAEjB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,gDAAgD,CACjD,CAAC;YACJ,CAAC,CACF,CAAC;SAGH;IAEH,CAAC;IAUH,oHAAoH;IAIpH,gCAAgC;QAC9B,MAAM,YAAY,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,IAAI,GAAG;YAClB,MAAM,EAAE,kBAAkB;YAC1B,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,gIAA8B,EAC9B,YAAY,CACb,CAAC;QAEF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;gBACrC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;aAGtC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;8FAnQY,uBAAuB;qHAAvB,uBAAuB;kEAKvB,sEAAY;kEACZ,4DAAO;;;;;;;QC5BpB,6EAAyB;QAInB,+EACiB;QACnB,4DAAM;QAEN,6EAAmC;QAEnC,yEAAiB;QAGX,mHAGI;QACJ,yEAAkB;QAOA,uEAAW;QAAA,4DAAK;QAEtB,0EAA4B;QACsC,kEAAM;QAAA,4DAAI;QAC1E,iFAC+D;QADpB,qJAAS,uBAAmB,IAAC;QAAxE,4DAC+D;QAEjE,sEAAI;QAEqC,gJAAS,mBAAe,IAAC;QAC5D,gFAA4B;QAAA,+DAAG;QAAA,4DAAW;QAIhD,sEAAI;QAEqC,gJAAS,aAAS,IAAC;QACtD,gFAA4B;QAAA,mEAAO;QAAA,4DAAW;QAIpD,sEAAI;QAEqC,gJAAS,8BAA0B,IAAC;QACvE,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QAKtC,sEAAI;QAEqC,gJAAS,sCAAkC,IAAC;QAC/E,4EAAU;QAAA,mEAAO;QAAA,4DAAW;QAOtC,2EAAmB;QAKT,2RAAS,gBAAqB,MAAM,cAAY,aAAa,SAAS,QAAQ,GAAE,IAAC;QADnF,4DACsF;QAG1F,sEAAI;QAE8C,2RAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAG1F,sEAAI;QAE+C,2RAAS,gBAAqB,MAAM,CAAC,IAAC;QAArF,4DAAwF;QAG5F,sEAAI;QAE8C,2RAAS,gBAAqB,KAAK,CAAC,IAAC;QAAnF,4DAAsF;QAOlG,qFAC+B;QAE7B,6EAAoC;QAClC,8IAMkB;QAClB,gIAKW;QACb,qEAAe;QAEf,6EAAgC;QAC9B,8IAC4D;QAC5D,gIAA2F;QAC7F,qEAAe;QAEf,6EAA4C;QAC1C,8IAAmF;QACnF,gIAAkE;QACpE,qEAAe;QAGf,6EAAyC;QACvC,8IAAgF;QAChF,gIACW;QACb,qEAAe;QAEf,6EAAoC;QAClC,8IAA2E;QAC3E,gIAA0D;QAC5D,qEAAe;QAEf,6EAAuC;QACrC,8IAA8E;QAC9E,gIACmD;QACrD,qEAAe;QAEf,6EAAqC;QACnC,8IAA4E;QAC5E,gIACiD;QACnD,qEAAe;QAEf,6EAA6C;QAC3C,8IAAoF;QACpF,gIAAmE;QACrE,qEAAe;QACf,6EAA0C;QACxC,8IAAiF;QACjF,gIAAgE;QAClE,qEAAe;QAEf,6EAA2C;QACzC,8IAAkF;QAClF,gIAAiE;QACnE,qEAAe;QAGf,6EAAoC;QAClC,8IAC4C;QAC5C,gIAiBW;QACb,qEAAe;QACf,4IAAqE;QACrE,8HAEU;QACV,gIAA6F;QAC/F,4DAAY;QACZ,sHAGM;QACN,gFACoD;QACtD,4DAAM;;QA7LI,0DAA2B;QAA3B,oFAA2B;QAShB,0DAAkC;QAAlC,sGAAkC;QA6ElB,2DAAyB;QAAzB,sFAAyB;QA2FzC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAKpD,0DAAe;QAAf,+EAAe;QAIN,0DAAe;QAAf,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7L6B;AACL;AAClB;AAEM;;;;;;;;;;;;;;;;IC0BpC,iFAA2E;IAAA,uDAE3E;IAAA,4DAAa;;;IAFqC,oFAAwB;IAAC,0DAE3E;IAF2E,4FAE3E;;;IAGF,4EAA8D;IAAA,6EACpD;IAAA,4DAAY;;;IAUtB,4EAEI;IACF,6EACF;IAAA,4DAAY;;ADpCvB,MAAM,8BAA8B;IASzC,YAAmB,SAAgD,EACjC,IAAI,EAC5B,EAAe,EACf,kBAAsC,EACtC,QAAyB,EACzB,QAAkB;QALT,cAAS,GAAT,SAAS,CAAuC;QACjC,SAAI,GAAJ,IAAI;QAC5B,OAAE,GAAF,EAAE,CAAa;QACf,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,aAAQ,GAAR,QAAQ,CAAU;QAX5B,gBAAW,GAAU,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QAE5D,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QAwBjC,UAAK,GAAW,EAAE,CAAC;IAjBa,CAAC;IAEjC,QAAQ;QAEN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACzC,CAAC,CAAC;IACL,CAAC;IAGD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAKD,QAAQ;QAEN,MAAM,MAAM,GAAG,IAAI,4DAAU,EAAE;aAC9B,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;aACxC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QAE1F,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;QAE/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB;aACxC,qCAAqC,CAAC,MAAM,CAAC;aAC7C,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,IAAI,GAAQ,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC1C,IAAI,EAAE,cAAc;aACrB,CAAC,CAAC;YACH,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;YACb,CAAC,CAAC,QAAQ,GAAG,uBAAuB,CAAC;YACrC,CAAC,CAAC,KAAK,EAAE,CAAC;YACV,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAEhC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,+BAA+B,CAChC,CAAC;QACJ,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YAEjB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,gDAAgD,CACjD,CAAC;QACJ,CAAC,CACF,CAAC;IAIN,CAAC;;4GAxEU,8BAA8B,uMAU/B,qEAAe;4HAVd,8BAA8B;QChB3C,yEAA0B;QAQmB,kFAAuB;QAAA,4DAAM;QACpE,4EAA8E;QAAtD,sJAAS,qBAAiB,IAAC;QACjD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAG9B,yEAAwB;QAgBC,kEAAM;QAAA,4DAAY;QAE7B,kFAAqC;QACnC,2IAEa;QACf,4DAAa;QAEb,yIACsB;QACxB,4DAAiB;QAGnB,0EAAwD;QAEzC,uEAAW;QAAA,4DAAY;QAClC,wEAAkF;QAGlF,yIAIY;QAEd,4DAAiB;QA4BrB,0EAAiB;QAaqE,uJAAS,eAAW,IAAC;QACrG,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC3B,oEACF;QAAA,4DAAS;QACT,8EACoC;QADkB,uJAAS,cAAU,IAAC;QAExE,4EAAU;QAAA,yEAAa;QAAA,4DAAW;QAClC,oEACF;QAAA,4DAAS;;;QAlFG,2DAAqB;QAArB,kFAAqB;QAWK,0DAAc;QAAd,oFAAc;QAKtC,0DAAgD;QAAhD,gHAAgD;QAQ5C,0DAAwB;QAAxB,8EAAwB;QACP,0DAAc;QAAd,oEAAc;QAEnC,0DAEZ;QAFY,qHAEZ;QAiDwB,0DAA2B;QAA3B,wFAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGnB;AAEkB;AAET;AACV;AACY;AAEL;AAKE;AACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;ICQ1B,4EAAsE;IAAA,sFAC5D;IAAA,4DAAY;;;IAQtB,4EAAmE;IAAA,kFACzD;IAAA,4DAAY;;;IAWtB,4EAAiE;IAAA,iFAAsB;IAAA,4DAAY;;;IAWnG,4EAA+D;IAAA,+EAAoB;IAAA,4DAAY;;;IAQ/F,4EAEI;IAAA,uFAA4B;IAAA,4DAAY;;;IAQ5C,4EAAoE;IAAA,oFAC1D;IAAA,4DAAY;;;IAQtB,4EAAqE;IAAA,qFAC3D;IAAA,4DAAY;;;IAQtB,4EAA8D;IAAA,6EAAkB;IAAA,4DAAY;;;IA2B1F,4EAEI;IAAA,sFAA2B;IAAA,4DAAY;;;IAQ3C,4EAA8D;IAAA,6EAAkB;IAAA,4DAAY;;;IAQ5F,4EAA6D;IAAA,4EAAiB;IAAA,4DAAY;;;IAQ1F,4EAA6D;IAAA,4EAAiB;IAAA,4DAAY;;;IAQ1F,4EAEI;IAAA,sFAA2B;IAAA,4DAAY;;;;IAM3C,6EACoC;IADmB,mUAAS,oBAAY,IAAC;IAE3E,kFACF;IAAA,4DAAS;;;IAHiB,6FAA4B;;;;IAItD,6EACqE;IAAnE,mUAAS,8BAAsB,IAAC;IAChC,qFACF;IAAA,4DAAS;;;IAHkB,6FAA4B;;;;IApD/D,2EAA4E;IAIzD,0EAAe;IAAA,4DAAY;IACtC,uEAAmD;IACnD,uJAE2C;IAC7C,4DAAiB;IAGnB,0EAAwD;IAEzC,kEAAM;IAAA,4DAAY;IAC7B,wEAA2C;IAC3C,yJAA4F;IAC9F,4DAAiB;IAGnB,2EAAwD;IAEzC,iEAAK;IAAA,4DAAY;IAC5B,wEAA0C;IAC1C,yJAA0F;IAC5F,4DAAiB;IAGnB,2EAAwD;IAEzC,iEAAK;IAAA,4DAAY;IAC5B,wEAAmD;IACnD,yJAA0F;IAC5F,4DAAiB;IAGnB,2EAAwD;IAEzC,2EAAe;IAAA,4DAAY;IACtC,wEAAmD;IACnD,yJAE2C;IAC7C,4DAAiB;IAGnB,2EAAqE;IAEjE,mJAGS;IACT,mJAGS;IACT,8EAA2E;IAArD,0TAAS,mBAAW,IAAC;IACzC,mEACF;IAAA,4DAAS;;;IA1DE,sFAAqB;IAMpB,0DAER;IAFQ,4HAER;IAQQ,0DAAgD;IAAhD,oHAAgD;IAQhD,0DAA+C;IAA/C,mHAA+C;IAQ/C,0DAA+C;IAA/C,mHAA+C;IAQ/C,0DAER;IAFQ,4HAER;IAMK,0DAAe;IAAf,mFAAe;IAIf,0DAAgB;IAAhB,oFAAgB;;;;IA0BvB,qEAAyC;IACD,qTAAS,uBAAe,QAAQ,CAAC,IAAC;IACtE,6EAAqC;IACP,+DAAI;IAAA,4DAAW;;;;IAIjD,qEAAyC;IAEA,wTAAS,uBAAe,SAAS,CAAC,IAAC;IACtE,+EAA4B;IAAA,0EAAe;IAAA,4DAAW;;;;IAyChE,sFAAqE;IACrD,4VAAmB,sBAAc,GAAG,IAAI,IAAC,qRAGd,qBAAa,IAHC;IAIvD,4DAAe;;;IALkB,0FAAiC;IAEhE,0DAAmD;IAAnD,4HAAmD;;;;IAKvD,+EAAkE;IAClD,uLAAS,wBAAwB,IAAC,wVAAoB,iCAAqB,GAAG,IAAI,IAAhD,8QAEF,qBAAa,IAFX;IAGhD,4DAAe;;;;IAJe,0FAAiC;IAE7D,0DAAqC;IAArC,0GAAqC;;;IAOzC,sFAAqF;IAAA,6DACrF;IAAA,4DAAkB;;;IACgD,uEAAqB;IAAC,6DAAC;IAAA,4DAAO;;;IAAhG,gFAAkE;IAAA,kJAA8B;IAChG,4DAAW;;;IAD8D,0DAAY;IAAZ,4EAAY;;;IAIrF,uFAAsF;IAAA,iEACtF;IAAA,4DAAkB;;;IAClB,gFAAiF;IACxE,uDAAe;IAAA,4DAAO;;;IAAtB,0DAAe;IAAf,wFAAe;;;IAKxB,uFAAmD;IAAA,oEAAS;IAAA,4DAAkB;;;IAC9E,2EAAgC;IAC9B,uDAAyC;;IAAA,4DAAW;;;IAApD,0DAAyC;IAAzC,2KAAyC;;;IAI3C,uFAAmD;IAAA,kEAAO;IAAA,4DAAkB;;;IAC5E,2EAAgC;IAC9B,uDAAuC;;IAAA,4DAAW;;;IAAlD,0DAAuC;IAAvC,yKAAuC;;;IAIzC,uFAAsF;IAAA,0EACtF;IAAA,4DAAkB;;;IAClB,gFAAiF;IACxE,uDAA0C;;IAAA,4DAAO;;;IAAjD,0DAA0C;IAA1C,0KAA0C;;;IAKnD,uFAAsF;IAAA,0EACtF;IAAA,4DAAkB;;;IAClB,gFAAiF;IACxE,uDAA0C;;IAAA,4DAAO;;;IAAjD,0DAA0C;IAA1C,0KAA0C;;;IAInD,uFAAsF;IAAA,kEACtF;IAAA,4DAAkB;;;IAClB,gFAAiF;IACxE,uDAAkC;;IAAA,4DAAO;;;IAAzC,0DAAkC;IAAlC,kKAAkC;;;IAK3C,uFAAsF;IAAA,iEACtF;IAAA,4DAAkB;;;IAClB,gFAAiF;IACzE,uDAAiC;;IAAA,4DAAO;;;IAAxC,0DAAiC;IAAjC,uJAAiC;;;IAKzC,uFACmD;IAAA,iEAAM;IAAA,4DAAkB;;;IAIvE,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,gGAErC;;;IACA,8EAAoF;IAClF,oEAAmC;IAAA,uDAErC;IAAA,4DAAS;;;IAF4B,0DAErC;IAFqC,gGAErC;;;IACA,8EAAsF;IACpF,oEAA+B;IAAA,uDAEjC;IAAA,4DAAS;;;IAFwB,0DAEjC;IAFiC,gGAEjC;;;IACA,8EAAoF;IAClF,oEAAyC;IAAA,uDAE3C;IAAA,4DAAS;;;IAFkC,0DAE3C;IAF2C,gGAE3C;;;IACA,8EAA4E;IAC1E,oEAAsC;IAAA,uDAExC;IAAA,4DAAS;;;IAF+B,0DAExC;IAFwC,gGAExC;;;IAtBJ,gFACqC;IAAnC,mLAAS,wBAAwB,IAAC;IAClC,6EAAsC;IACpC,uJAGS;IACT,uJAGS;IACT,uJAGS;IACT,uJAGS;IACT,uJAGS;IACX,qEAAe;IACjB,4DAAW;;;IAtBK,0DAAuB;IAAvB,oFAAuB;IAC1B,0DAAsB;IAAtB,kFAAsB;IAItB,0DAAwB;IAAxB,oFAAwB;IAIxB,0DAAwB;IAAxB,oFAAwB;IAIxB,0DAAuB;IAAvB,mFAAuB;;;IAapC,uFAAgD;IAAA,kEAAO;IAAA,4DAAkB;;;;IACzE,gFAA4D;IAExD,yXAAS,qCAAyB,IAAC;IACnC,oFAAgF;IAClF,4DAAS;IACT,8EAC6D;IAA3D,mXAAS,qCAAyB,IAAC;IACnC,oFAAqF;IACvF,4DAAS;;;IAP8B,0DAA2B;IAA3B,4FAA2B;IAE7B,0DAAwB;IAAxB,wEAAwB;IAAxC,wEAAe;IAEG,0DAA2B;IAA3B,4FAA2B;IAE1B,0DAA0B;IAA1B,0EAA0B;IAA7C,2EAAkB;;;IAK3C,4EAAqE;;;;IACrE,+EAI6E;IAAzE,yXAAS,qCAAyB,IAAC;IACvC,4DAAU;;IAD8B,8EAA0B;;;IAGpE,2EAA2C;IACzC,uFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;;IAIvD,gFACoD;;IADpB,uEAAc;;;;IAzQlD,sEAAoC;IAClC,gEAAM;IACN,yEAAoB;IAEZ,0EAAe;IAAA,4DAAK;IAG5B,uIA8DO;IAEP,0EAAuB;IAMP,2EAAe;IAAA,4DAAK;IAE1B,0EAA4B;IACsC,kEAAM;IAAA,4DAAI;IAC1E,iFACiE;IADtB,0TAAS,4BAAmB,IAAC;IAAxE,4DACiE;IAGnE,oIAMK;IACL,oIAMK;IACP,4DAAK;IAEP,2EAAmB;IAIoC,6SAEzE,iBAAqB,MAAM,cACX,aAAa,SACP,QAAQ,GACA,IAAD;IALH,4DAKM;IAGV,sEAAI;IAE8C,6SAAS,iBAAqB,KAAK,CAAC,IAAC;IAAnF,4DAAsF;IAG1F,sEAAI;IAE+C,6SAAS,iBAAqB,MAAM,CAAC,IAAC;IAArF,4DAAwF;IAG5F,sEAAI;IAE8C,6SAAS,iBAAqB,KAAK,CAAC,IAAC;IAAnF,4DAAsF;IAQlG,qFAC+B;IAC7B,6EAAoC;IAClC,8JAMkB;IAClB,gJAKW;IACb,qEAAe;IAEf,6EAAgC;IAC9B,8JACkB;IAClB,gJACW;IACb,qEAAe;IACf,6EAAmC;IACjC,8JACkB;IAClB,gJAEW;IACb,qEAAe;IAEf,6EAAuC;IACrC,8JAA8E;IAC9E,gJACsD;IACxD,qEAAe;IAEf,6EAAqC;IACnC,8JAA4E;IAC5E,gJACoD;IACtD,qEAAe;IAEf,6EAA4C;IAC1C,8JACkB;IAClB,gJAEW;IACb,qEAAe;IAEf,6EAA4C;IAC1C,8JACkB;IAClB,gJAEW;IACb,qEAAe;IACf,6EAAoC;IAClC,8JACkB;IAClB,gJAEW;IACb,qEAAe;IAEf,6EAAmC;IACjC,8JACkB;IAClB,gJAEW;IACb,qEAAe;IAEf,6EAAoC;IAClC,8JAC2E;IAC3E,gJAwBW;IACb,qEAAe;IAEf,6EAAqC;IACnC,8JAAyE;IACzE,gJASW;IACb,qEAAe;IAEf,4JAAqE;IACrE,8IAKU;IACZ,4DAAY;IACZ,sIAGM;IAEN,0JACoD;IACtD,4DAAM;;;IApQoC,0DAAgC;IAAhC,oGAAgC;IA8E3D,2DAAkC;IAAlC,iGAAkC;IAOlC,0DAAkC;IAAlC,iGAAkC;IAyCZ,2DAAyB;IAAzB,0FAAyB;IAuHzC,2DAAiC;IAAjC,qGAAiC;IAIvB,0DACvB;IADuB,sGACvB;IAGA,0DAAe;IAAf,mFAAe;IAKL,0DAAc;IAAd,kFAAc;;;;IAvWpC,yEAAmC;IAGzB,uDAA6B;IAAA,4DAAK;IAG1C,2EAAyC;IAItB,2EAAe;IAAA,4DAAY;IACtC,wEAA4D;IAC5D,2IACsB;IACxB,4DAAiB;IAGnB,2EAAwD;IAEzC,uEAAW;IAAA,4DAAY;IAClC,wEAAyD;IACzD,2IACsB;IACxB,4DAAiB;IAGnB,2EAAwD;IAEzC,sEAAU;IAAA,4DAAY;IACjC,6EAC6C;IAA3C,sTAAc,kCAAyB,IAAC;IAD1C,4DAC6C;IAC7C,wFAAiF;IAEjF,2IAAmG;IACrG,4DAAiB;IAGnB,2EAAwD;IAEzC,oEAAQ;IAAA,4DAAY;IAC/B,6EAC6C;IAA3C,sTAAc,kCAAyB,IAAC;IAD1C,4DAC6C;IAC7C,wFAA+E;IAE/E,2IAA+F;IACjG,4DAAiB;IAGnB,2EAAwD;IAEzC,4EAAgB;IAAA,4DAAY;IACvC,wEAA2E;IAC3E,2IAE4C;IAC9C,4DAAiB;IAGnB,2EAAwD;IAEzC,yEAAa;IAAA,4DAAY;IACpC,wEAA0D;IAC1D,2IACsB;IACxB,4DAAiB;IAGnB,2EAAwD;IAEzC,0EAAc;IAAA,4DAAY;IACrC,wEAA2D;IAC3D,2IACsB;IACxB,4DAAiB;IAGnB,2EAAwD;IAEzC,kEAAM;IAAA,4DAAY;IAC7B,wEAA2F;IAC3F,2IAA4F;IAC9F,4DAAiB;IAavB,gIA4QM;IAEN,2EAAwB;IAGgE,6SAAS,iBAAQ,IAAC;IAClG,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,oEACF;IAAA,4DAAS;IAET,8EACoC;IADwC,6SAAS,mBAAU,IAAC;IAE9F,4EAAU;IAAA,yEAAa;IAAA,4DAAW;IAClC,wDACF;IAAA,4DAAS;;;;;IArXP,0DAA6B;IAA7B,wGAA6B;IAGlB,0DAAqB;IAArB,qFAAqB;IAMpB,0DAAwD;IAAxD,2HAAwD;IASxD,0DAAqD;IAArD,wHAAqD;IAQjD,0DAAiC;IAAjC,8EAAiC;IAEhB,0DAAuB;IAAvB,oEAAuB;IAE5C,0DAAmD;IAAnD,sHAAmD;IAO/C,0DAA+B;IAA/B,8EAA+B;IAEd,0DAAqB;IAArB,oEAAqB;IAE1C,0DAAiD;IAAjD,oHAAiD;IAQjD,0DAER;IAFQ,4HAER;IAQQ,0DAAsD;IAAtD,yHAAsD;IAStD,0DAAuD;IAAvD,0HAAuD;IASvD,0DAAgD;IAAhD,mHAAgD;IAc9D,0DAA4B;IAA5B,+FAA4B;IAsRF,0DAA2B;IAA3B,2FAA2B;IAGnD,0DACF;IADE,0GACF;;;AD7WX,MAAM,0BAA0B;IAkCrC,YACU,EAAe,EACf,mBAAwC,EACxC,QAAyB,EACzB,MAAc,EACd,KAAqB,EACrB,oBAA0C,EAC1C,MAAiB,EACjB,kBAAsC;QAPtC,OAAE,GAAF,EAAE,CAAa;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAW;QACjB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAzChD,qBAAgB,GAAa;YAC3B,QAAQ;YACR,IAAI;YACJ,OAAO;YACP,WAAW;YACX,SAAS;YACT,gBAAgB;YAChB,gBAAgB;YAChB,QAAQ;YACR,OAAO;YACP,QAAQ;YACR,SAAS;SACV,CAAC;QACF,eAAU,GAAG,IAAI,uEAAkB,CAAM,EAAE,CAAC,CAAC;QAK7C,aAAQ,GAAG,KAAK,CAAC;QACjB,iBAAY,GAAG,KAAK,CAAC;QAOnB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QACjC,mBAAc,GAAG,KAAK,CAAC;QAEvB,+BAA0B,GAAY,KAAK,CAAC;QA4C5C,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAY,IAAI,CAAC;QA0D1B,eAAU,GAAY,KAAK,CAAC;QAsH5B,sHAAsH;QAEtH,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,IAAI,CAAC;QAC1B,qBAAgB,GAAW,CAAC,CAAC,CAAC,CAAC,sCAAsC;QA2FrE,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;QACpC,cAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;IAnT3C,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IACE,IAAI,CAAC,KAAK,CAAC,WAAW;YACtB,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,KAAK,UAAU,EACtD;YACA,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC1C,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAChC,IAAI,MAAM,CAAC,EAAE,EAAE;oBACb,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,EAAE,CAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oBACtC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;iBACjC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IACD,eAAe;QACb,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAID,WAAW;QACT,MAAM,MAAM,GAAG,IAAI,6DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7D,IAAI,CAAC,kBAAkB;aACpB,kBAAkB,CAAC,MAAM,CAAC;aAC1B,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAC1B,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;wBAChC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;qBAC9B;yBAAM,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;wBACrC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;wBAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;qBAC5B;yBAAM,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;wBACzC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;wBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;qBAC5B;oBAED,qDAAqD;oBAErD,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CACtC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAC7B,CAAC;wBACF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;qBAClC;oBAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAErB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAE/C,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEf,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC/C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,uCAAuC,CACxC,CAAC;iBACH;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,uCAAuC,CACxC,CAAC;YACJ,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC;YACF,+CAAY,CAAC;IACjB,CAAC;IAGD,OAAO;QACL,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;YAC/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,kCAAkC;SACnC;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,kCAAkC;SACnC;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YACvC,IAAI,CAAC,4BAA4B,EAAE,CAAC;YACpC,IAAI,CAAC,2BAA2B,EAAE,CAAC;YAEnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;YAC3C,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACpC;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,MAAM,EAAE;gBACN,CAAC;gBACD,CAAC,gEAAmB,EAAE,+DAAkB,CAAC,mBAAmB,CAAC,CAAC;aAC/D;YACD,aAAa,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACxC,YAAY,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACvC,WAAW,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACtC,OAAO,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YAClC,eAAe,EAAE,CAAC,CAAC,EAAE,gEAAmB,CAAC;YACzC,cAAc,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACzC,SAAS,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IACD,oBAAoB;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,gEAAmB,CAAC;YAC3C,MAAM,EAAE;gBACN,IAAI,CAAC,QAAQ,CAAC,MAAM;gBACpB,CAAC,gEAAmB,EAAE,+DAAkB,CAAC,mBAAmB,CAAC,CAAC;aAC/D;YACD,aAAa,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,gEAAmB,CAAC;YACjE,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,gEAAmB,CAAC;YAC/D,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,gEAAmB,CAAC;YAC7D,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,gEAAmB,CAAC;YACrD,eAAe,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,gEAAmB,CAAC;YACrE,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,gEAAmB,CAAC;YACnE,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,gEAAmB,CAAC;YACzD,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;YAE9C,mBAAmB;YACnB,iCAAiC;YACjC,oEAAoE;YACpE,KAAK;YACL,sCAAsC;YACtC,2BAA2B;SAC5B,CAAC,CAAC;IACL,CAAC;IACD,4BAA4B;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;YACvD,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE;YACrE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE;YACnE,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;YACjE,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;YACzD,eAAe,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE;YACzE,cAAc,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE;YACvE,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,CAAC,EAAE,CAAC;YACR,cAAc,EAAE,CAAC,CAAC,EAAE,gEAAmB,CAAC;YACxC,MAAM,EAAE,CAAC,CAAC,EAAE,gEAAmB,CAAC;YAChC,KAAK,EAAE,CAAC,CAAC,EAAE,gEAAmB,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,gEAAmB,CAAC;YAChC,cAAc,EAAE,CAAC,CAAC,EAAE,gEAAmB,CAAC;YACxC,MAAM,EAAE,CAAC,EAAE,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IACD,2BAA2B;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;YACjC,cAAc,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC5C,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;YACpC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;YACnC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;YACpC,cAAc,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC5C,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;SACtC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;QACrB,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC;QAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;QAE3C,IAAI,SAAS,IAAI,OAAO,EAAE;YACxB,MAAM,UAAU,GAAG,qDAAkB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAC1D,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAEjD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtB,eAAe,EAAE,eAAe;aACjC,CAAC,CAAC;YAEH,OAAO,eAAe,CAAC;SACxB;QAED,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,eAAe,EAAE,CAAC;SACnB,CAAC,CAAC;QAEH,OAAO,CAAC,CAAC;IACX,CAAC;IAQD,UAAU;QACR,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,SAAS,GAAG;gBAChB,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc;gBACjD,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM;gBACjC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;gBAC/B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;gBAC/B,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc;gBACjD,MAAM,EAAE,SAAS;aAClB,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAErB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAElD,MAAM,aAAa,GAAG;gBACpB,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACzB,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc;gBACjD,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM;gBACjC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;gBAC/B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;gBAC/B,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc;gBACjD,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM;aAClC,CAAC;YAEF,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,mCAAmC;YACnC,kDAAkD;aACnD,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,aAAa,CAAC;YAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAErB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,+BAA+B;SAC5D;IACH,CAAC;IAED,oBAAoB,CAAC,GAAQ;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE1D,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,cAAc,EAAE,GAAG,CAAC,cAAc;YAClC,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,KAAK,EAAE,GAAG,CAAC,KAAK;YAChB,KAAK,EAAE,GAAG,CAAC,KAAK;YAChB,cAAc,EAAE,GAAG,CAAC,cAAc;YAClC,MAAM,EAAE,GAAG,CAAC,MAAM;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,sBAAsB,CAAC,KAAa;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtD,CAAC;IAED,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,+BAA+B;IAC7D,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;SACrC,CAAC,CAAC;IACL,CAAC;IAUD,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAC9D,GAAG,CAAC,QAAQ,GAAG,CACjB,EAAE,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IACD,sGAAsG;IACtG,mGAAmG;IAEnG,cAAc,CAAC,MAAW;QACxB,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAE3B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACpC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,gBAAgB,GAAG;YACrB,gBAAgB,EAAE,iBAAiB;YACnC,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;QAEpD,IAAI,CAAC,kBAAkB;aACpB,0BAA0B,CAAC,gBAAgB,CAAC;aAC5C,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,6BAA6B,CAC9B,CAAC;oBACF,IAAI,CAAC,WAAW,EAAE,CAAC;oBAEnB,kDAAkD;oBAClD,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;oBAEnD,gDAAgD;oBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CACtC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAC7B,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBAClC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,2BAA2B,CAC5B,CAAC;iBACH;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;YACzD,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;YAC/B,IAAI,CAAC,kBAAkB;iBACpB,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;iBAClC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,IAAI,GAAG,EAAE;wBACP,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,+BAA+B,CAChC,CAAC;wBAEF,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;wBAE1B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,EAAE,CAAC;wBAC3B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;wBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,yBAAyB;wBAEzB,yBAAyB;wBACzB,mDAAmD;wBACnD,MAAM;qBACP;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,2BAA2B,CAC5B,CAAC;qBACH;gBACH,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;gBACzD,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;aACnB,CAAC;gBACF,+CAAY,CAAC;SAChB;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;YACzC,IAAI,CAAC,kBAAkB;iBACpB,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;iBACrC,IAAI,CAAC,gDAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,IAAI,GAAG,EAAE;wBACP,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,iCAAiC,CAClC,CAAC;wBAEF,IAAI,CAAC,WAAW,EAAE,CAAC;wBAEnB,yBAAyB;wBACzB,mDAAmD;wBACnD,MAAM;qBACP;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;qBAChE;gBACH,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;gBACJ,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;aACnB,CAAC;gBACF,+CAAY,CAAC;SAChB;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6CAA6C,CAAC,CAAC,CAAC;IACxE,CAAC;;oGA7fU,0BAA0B;wHAA1B,0BAA0B;kEAe1B,sEAAY;kEACZ,4DAAO;;;;;;QCrCpB,6EAAyB;QAInB,+EACiB;QACnB,4DAAM;QACN,yEAA0B;QAGpB,wHA4XM;QACR,4DAAM;;QAnYQ,0DAA6B;QAA7B,sFAA6B;QAMtB,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;;;;;;;;ACTY;AACqC;AACS;AACO;;;AAE5G,MAAM,MAAM,GAAW;IAEpB,aAAa;IACb;QACC,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qGAAuB;QAClC,WAAW,EAAE,CAAC,qHAAmB,CAAC;QAClC,IAAI,EAAE,EAAG,UAAU,EAAE,kBAAkB,EAAE,iBAAiB,EAAC,CAAC,iBAAiB,CAAC,EAAE;KACjF;IACD;QACE,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,8GAA0B;QACrC,WAAW,EAAE,CAAC,qHAAmB,CAAC;QAClC,IAAI,EAAE,EAAG,UAAU,EAAE,kBAAkB,EAAE,iBAAiB,EAAC,CAAC,mBAAmB,CAAC,EAAE;KACnF;CAKF,CAAC;AAMK,MAAM,wBAAwB;;gGAAxB,wBAAwB;qHAAxB,wBAAwB;yHAH1B,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,wBAAwB,oFAFzB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BiC;AAEe;AACoB;AACS;AAChD;AACM;AACJ;AACQ;AACI;AACR;AACO;AACX;AACE;AACF;AACU;AACK;AACQ;AACnB;AACK;AACT;AACM;AACJ;AACF;AACM;AACA;AACD;AACT;AACV;AACsB;AACgB;AACnB;AACI;AAC6D;;AAuDtH,MAAM,iBAAiB;;kFAAjB,iBAAiB;8GAAjB,iBAAiB;mHAFjB,CAAC,qDAAQ,CAAC,YA3CZ;YACP,yDAAY;YACZ,iFAAwB;YAExB,oBAAoB;YACpB,wEAAe;YACf,iEAAa;YACb,8DAAkB;YAClB,0EAAsB;YACtB,kEAAa;YACb,wEAAgB;YAChB,iFAAoB;YAEpB,oEAAc;YACd,4EAAkB;YAClB,oEAAc;YACd,kEAAa;YAEb,sEAAe;YACf,kEAAa;YACb,0EAAiB;YACjB,uEAAsB;YACtB,yFAAwB;YAExB,6EAAkB;YAElB,sEAAe;YACf,sEAAe;YACf,8EAAmB;YACnB,yFAAgB;YAChB,kEAAa;YACb,gEAAmB;YAEnB,2EAAiB;YACjB,wEAAgB;YAEhB,sEAAY;YACZ,wEAAgB;YAChB,oDAAa;SAId;mIAGU,iBAAiB,mBAjD1B,qGAAuB;QACvB,8GAA0B;QAC1B,sIAA8B,aAG9B,yDAAY;QACZ,iFAAwB;QAExB,oBAAoB;QACpB,wEAAe;QACf,iEAAa;QACb,8DAAkB;QAClB,0EAAsB;QACtB,kEAAa;QACb,wEAAgB;QAChB,iFAAoB;QAEpB,oEAAc;QACd,4EAAkB;QAClB,oEAAc;QACd,kEAAa;QAEb,sEAAe;QACf,kEAAa;QACb,0EAAiB;QACjB,uEAAsB;QACtB,yFAAwB;QAExB,6EAAkB;QAElB,sEAAe;QACf,sEAAe;QACf,8EAAmB;QACnB,yFAAgB;QAChB,kEAAa;QACb,gEAAmB;QAEnB,2EAAiB;QACjB,wEAAgB;QAEhB,sEAAY;QACZ,wEAAgB;QAChB,oDAAa;;;;;;;;;;;;;;;AClFF;AACf;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACJwC;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,iBAAiB,4DAAM;AACvB,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA,IAAI;AACJ;AACA,8BAA8B;AAC9B,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;AC/CwC;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,iBAAiB,4DAAM;AACvB,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9BwC;AACwC;AAChC;AACS;AACG;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,iBAAiB,4DAAM;AACvB,kBAAkB,4DAAM;AACxB,aAAa,gEAAU;AACvB,4BAA4B,gFAA0B;AACtD;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,gEAAU;;AAEvC;AACA,QAAQ,sEAAgB,CAAC,4DAAM,wCAAwC,gEAAU;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACvDwC;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,aAAa,4DAAM;AACnB;AACA;AACA;;;;;;;;;;;;;;;;ACzBwC;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,aAAa,4DAAM;AACnB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3BwC;AACI;AACI;AACS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,SAAS;AACtB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,aAAa,4DAAM;AACnB,SAAS,8DAAQ,qBAAqB,gEAAU;AAChD;;;;;;;;;;;;;;;;ACzBwD;AACC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd;;AAEA;AACA,kCAAkC,6EAAO;AACzC;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnDe;AACf;;AAEA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-prepayment/data/prepayment.service.ts","./src/app/erp-prepayment/modules/prepayments/pages/all-prepayments/all-prepayments.component.ts","./src/app/erp-prepayment/modules/prepayments/pages/all-prepayments/all-prepayments.component.html","./src/app/erp-prepayment/modules/prepayments/pages/dialogs/monthly-report-by-status/monthly-report-by-status.component.ts","./src/app/erp-prepayment/modules/prepayments/pages/dialogs/monthly-report-by-status/monthly-report-by-status.component.html","./src/app/erp-prepayment/modules/prepayments/pages/manage-prepayments/manage-prepayments.component.ts","./src/app/erp-prepayment/modules/prepayments/pages/manage-prepayments/manage-prepayments.component.html","./src/app/erp-prepayment/modules/prepayments/prepayments-routing.module.ts","./src/app/erp-prepayment/modules/prepayments/prepayments.module.ts","./node_modules/date-fns/esm/_lib/requiredArgs/index.js","./node_modules/date-fns/esm/compareAsc/index.js","./node_modules/date-fns/esm/differenceInCalendarMonths/index.js","./node_modules/date-fns/esm/differenceInMonths/index.js","./node_modules/date-fns/esm/endOfDay/index.js","./node_modules/date-fns/esm/endOfMonth/index.js","./node_modules/date-fns/esm/isLastDayOfMonth/index.js","./node_modules/date-fns/esm/toDate/index.js","./node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PrepaymentsService {\n  constructor(private http: HttpClient) { }\n\n  getPrepayments(): Observable<any> {\n    const PrepaymentssUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/all`;\n    return this.http.get<any[]>(PrepaymentssUrl);\n  }\n\n  getPrepaymentsById(params: any): Observable<any> {\n    const PrepaymentssUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/fetchById`;\n    return this.http.get<any>(PrepaymentssUrl, { params: params });\n  }\n\n  getPrepaymentsByCode(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlPrepayments}/api/v1/prepayment-records/fetchByCode`\n    );\n  }\n\n  addPrepayments(data: any): Observable<any> {\n    const PrepaymentssUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/save`;\n    return this.http.post<any>(PrepaymentssUrl, data);\n  }\n\n  updatePrepayments(PrepaymentsDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/update`;\n    return this.http.put<any>(updateBillUrl, PrepaymentsDetails);\n  }\n\n  deletePrepaymentsTemporarily(params: any): Observable<any> {\n    const PrepaymentssUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/delete`;\n    return this.http.put<any>(PrepaymentssUrl, { params });\n  }\n\n\n\n  generateReport(prepaymentRecordIds: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append('Accept', 'application/octet-stream');\n    let requestOptions: any = { headers: headers, responseType: 'blob', withCredentials: false };\n    const idsParam = prepaymentRecordIds.join(',');\n    const PrepaymentssUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/report?prepaymentRecordIds=${idsParam}`;\n\n    // let API_URL = `${environment.baseUrl}/api/v1/reports/directtransfer/all/excel`;\n    return this.http.get(PrepaymentssUrl, requestOptions)\n      .pipe(map((response) => {\n        return {\n          data: new Blob([response], { type: 'octet/stream' }),\n        };\n      }));\n  }\n\n\n  getPrepaymentsReportByIds(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlPrepayments}/api/v1/prepayment-records/report`\n    );\n  }\n\n  getMonthlyReportByStatusAndMonth(params: any): Observable<any> {\n    const PrepaymentssUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/monthly-reports-status`;\n    return this.http.get<any>(PrepaymentssUrl, { params: params });\n  }\n\n  getMonthlyExcelReportByStatusAndMonth(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append('Accept', 'application/octet-stream');\n    let requestOptions: any = { params: params, headers: headers, responseType: 'blob', withCredentials: false };\n\n    const PrepaymentssUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/monthly-reports-status-excel`;\n\n    return this.http.get(PrepaymentssUrl, requestOptions)\n      .pipe(map((response) => {\n        return {\n          data: new Blob([response], { type: 'octet/stream' }),\n        };\n      }));\n  }\n\n\n  updateMonthlyRecordsStatus(updateStatusBody: any): Observable<any> {\n    const PrepaymentssUrl = `${environment.baseUrlPrepayments}/api/v1/prepayment-records/update-monthly-status`;\n    return this.http.put<any>(PrepaymentssUrl, updateStatusBody);\n  }\n\n  // ********************************************************************************************************************\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, takeUntil } from 'rxjs';\nimport { PrepaymentsService } from 'src/app/erp-prepayment/data/prepayment.service';\nimport { NotificationService } from 'src/app/erp-procurement/data/services/notification.service';\n\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\nimport { MonthlyReportByStatusComponent } from '../dialogs/monthly-report-by-status/monthly-report-by-status.component';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-all-prepayments',\n  templateUrl: './all-prepayments.component.html',\n  styleUrls: ['./all-prepayments.component.sass']\n})\nexport class AllPrepaymentsComponent implements OnInit {\n\n\n  displayedColumns: string[] = ['select','id', 'prepaymentName', 'description', 'amount', 'startDate', 'endDate', 'numberOfPeriods', 'debitAccount', 'creditAccount' ,'action'];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private prepaymentsService: PrepaymentsService,\n    private nootificationService: NotificationService,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  getData() {\n    this.prepaymentsService.getPrepayments().pipe(takeUntil(this.destroy$)).subscribe(\n      {\n        next: (res) => {\n          console.log(\"this.res :\",res)\n          if (res) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\",this.data )\n      \n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res\n            )\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            err.message\n          );\n        },\n        complete: () => {\n\n        }\n\n      }\n    ), Subscription;\n  }\n\n  addPrepayment() {\n    this.router.navigate([\"/erp-prepayment/prepayments/manage-prepayment\"]);\n  }\n\n  refresh() {\n    this.getData();\n  }\n\n  editPrepayment(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n  \n    let route = '/erp-prepayment/prepayments/manage-prepayment';\n    this.router.navigate([route], { queryParams: { id: data.id, action: 'Update' } });\n  }\n  viewPrepayment(data: any) {\n    const additionalData = data;\n    const serializedData = JSON.stringify(additionalData);\n    let route = '/erp-prepayment/prepayments/manage-prepayment';\n    this.router.navigate([route], { queryParams: { id: data.id, action: 'View' } });\n  }\n\n  deletePrepayment(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Prepayment?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Prepayment!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n\n        this.prepaymentsService.deletePrepaymentsTemporarily(id).pipe(takeUntil(this.destroy$)).subscribe(\n          {\n            next: (res) => {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Prepayment Deleted Successfully\"\n              );\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            },\n            complete: () => {\n              this.getData();\n            }\n  \n          }\n        ), Subscription;\n\n      }\n    });\n  }\n\n  \n\n  //******************************************************************************************************\n  //Select expense\n  prepaymentDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  generatePrepaymentReport() {\n    if(this.selectedRows.length === 0){\n      this.nootificationService.alertWarning(\"Select atleast one Prepayment...!!\")\n      return\n    } else{\n      let prepaymentRecordIds = [];\n      this.selectedRows.forEach(element => {\n        prepaymentRecordIds.push(element.id)\n        \n      });\n\n      this.subscription = this.prepaymentsService\n      .generateReport(prepaymentRecordIds)\n      .subscribe(\n        (response) => {\n          const a = document.createElement(\"a\");\n          document.body.appendChild(a);\n          const blob: any = new Blob([response.data], {\n            type: \"octet/stream\",\n          });\n          const url = window.URL.createObjectURL(blob);\n          a.href = url;\n          a.download = \"PrepaymentReport.xlsx\";\n          a.click();\n          window.URL.revokeObjectURL(url);\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            \"Report generated successfully\"\n          );\n        },\n        (err) => {\n          this.error = err;\n\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Excel File could not be generated successfully\"\n          );\n        }\n      );\n\n      \n    }\n\n  }\n\n  \n\n\n\n\n\n\n\n//*************************************************************************************************************** */\n\n\n\ngeneratePendingPrepaymentsReport() {\n  const dialogConfig = new MatDialogConfig();\n  dialogConfig.disableClose = false;\n  dialogConfig.autoFocus = true;\n  dialogConfig.width = \"500px\";\n  dialogConfig.data = {\n    action: \"view requsitions\",\n    selected: \"\"\n  };\n\n  const dialogRef = this.dialog.open(\n    MonthlyReportByStatusComponent,\n    dialogConfig\n  );\n\n  dialogRef.afterClosed().subscribe((result) => {\n    if (result && result.data.length != 0) {\n      console.log(\"result: \", result.data);\n\n\n    }\n  });\n}\n\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Prepayments'\" [items]=\"['Prepayments']\" [active_item]=\"'All Prepayments'\">\n      </app-breadcrumb>\n    </div>\n\n    <app-gen-widgets></app-gen-widgets>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n          <div class=\"body\">\n            <div class=\"table-responsive\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Prepayments</h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addPrepayment()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"Generate Report\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"generatePrepaymentReport()\">\n                            <mat-icon>description</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"Generate Pending Prepayment Report\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"generatePendingPrepaymentsReport()\">\n                            <mat-icon>receipt</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"table-img tbl-col-width-per-9\">Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-9\">{{row.id}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"prepaymentName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>prepaymentName</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.prepaymentName}}</mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"description\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>description</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.description}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"amount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>amount</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.amount}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"startDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>startDate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.startDate | date: 'MM/dd/yyyy'}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"endDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>endDate</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    {{row.endDate | date: 'MM/dd/yyyy'}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"numberOfPeriods\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>numberOfPeriods</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.numberOfPeriods}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"debitAccount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>debitAccount</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.debitAccount}}</mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"creditAccount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>creditAccount</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.creditAccount}}</mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editPrepayment(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"viewPrepayment(row)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\"></app-feather-icons>\n                    </button>\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deletePrepayment(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewPrepayment(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { Component, Inject, OnInit } from '@angular/core';\nimport { AllPrepaymentsComponent } from '../../all-prepayments/all-prepayments.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpParams } from '@angular/common/http';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { takeUntil, Subscription, Subject } from 'rxjs';\nimport { PrepaymentsService } from 'src/app/erp-prepayment/data/prepayment.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-monthly-report-by-status',\n  templateUrl: './monthly-report-by-status.component.html',\n  styleUrls: ['./monthly-report-by-status.component.sass']\n})\nexport class MonthlyReportByStatusComponent implements OnInit {\n\n  mngForm!: FormGroup;\n  reqStatuses: any[] = [{ name: \"PENDING\" }, { name: \"POSTED\" }]\n  \n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(public dialogRef: MatDialogRef<AllPrepaymentsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private prepaymentsService: PrepaymentsService,\n    private snackbar: SnackbarService,\n    private datepipe: DatePipe) { }\n\n  ngOnInit(): void {\n\n    this.mngForm = this.fb.group({\n      status: [\"\", [Validators.required]],\n      currentDate: [\"\", [Validators.required]],\n    });\n  }\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n\n  subscription!: Subscription;\n  error: string = '';\n  onSubmit() {\n\n    const params = new HttpParams()\n    .set(\"status\", this.mngForm.value.status)\n    .set(\"currentDate\", this.datepipe.transform(this.mngForm.value.currentDate, 'yyyy-MM-dd'))\n\n    console.log(\"params: \", params)\n\n    this.subscription = this.prepaymentsService\n      .getMonthlyExcelReportByStatusAndMonth(params)\n      .subscribe(\n        (response) => {\n          const a = document.createElement(\"a\");\n          document.body.appendChild(a);\n          const blob: any = new Blob([response.data], {\n            type: \"octet/stream\",\n          });\n          const url = window.URL.createObjectURL(blob);\n          a.href = url;\n          a.download = \"PrepaymentReport.xlsx\";\n          a.click();\n          window.URL.revokeObjectURL(url);\n\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            \"Report generated successfully\"\n          );\n        },\n        (err) => {\n          this.error = err;\n\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Excel File could not be generated successfully\"\n          );\n        }\n      );\n\n\n\n  }\n\n}\n","<div class=\"addContainer\">\n\n  <div class=\"contact-details\">\n    <!-- <div class=\"mb-3\">\n      <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n      </mat-progress-bar>\n    </div> -->\n    <div class=\"modalHeader\">\n      <div class=\"contact-details-name mb-1\">Generate Monthly Report</div>\n      <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <div mat-dialog-content>\n      <mat-card-content>\n        <!-- <div>\n          <div class=\"d-flex justify-content-center\">\n            <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n          </div>\n        </div> -->\n        <div class=\"body\">\n          <form class=\"m-4\" [formGroup]=\"mngForm\">\n            <!-- this.mngForm = this.fb.group({\n              status: [\"\", [Validators.required]],\n              currentDate: [\"\", [Validators.required]],\n            }); -->\n            <div class=\"row\">\n              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                  <mat-label>status</mat-label>\n                  <!-- <input matInput formControlName=\"status\" /> -->\n                  <mat-select formControlName=\"status\">\n                    <mat-option *ngFor=\"let reqStatus of reqStatuses\" [value]=\"reqStatus.name\">{{\n                      reqStatus.name }}\n                    </mat-option>\n                  </mat-select>\n\n                  <mat-error *ngIf=\"mngForm.get('status').hasError('required')\">status is\n                    required</mat-error>\n                </mat-form-field>\n              </div>\n\n              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                  <mat-label>CurrentDate</mat-label>\n                  <input matInput [matDatepicker]=\"picker\" formControlName=\"currentDate\" required />\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                  <mat-error *ngIf=\"\n                  mngForm.get('currentDate').hasError('required')\n                    \">\n                    Date is required\n                  </mat-error>\n                 \n                </mat-form-field>\n              </div>\n\n              <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                  <mat-label>currentDate</mat-label>\n                  <input matInput formControlName=\"currentDate\" />\n                  <mat-error *ngIf=\"mngForm.get('currentDate').hasError('required')\">currentDate is\n                    required</mat-error>\n                </mat-form-field>\n              </div> -->\n\n\n              <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                         \n                            <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                              Cancel\n                            </button>\n                            <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                              Submit\n                            </button>\n                   \n                    \n                        </div> -->\n\n            </div>\n\n            \n            <div class=\"row\">\n              <!-- <div class=\"col-6\">\n                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                  (click)=\"onNoClick()\">\n                  Cancel\n                </button>\n              </div> -->\n              <!-- <div class=\"col-6\">\n                <button mat-raised-button color=\"primary\" [disabled]=\"!mngForm.valid\" (click)=\"onSubmit()\">\n                  Submit\n                </button>\n              </div> -->\n              <div class=\"example-button-row\" align=\"end\">\n                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"onNoClick()\">\n                  <mat-icon>cancel</mat-icon>\n                  Cancel\n                </button>\n                <button class=\"btn-space\" [disabled]=\"!mngForm.valid\" (click)=\"onSubmit()\"\n                  mat-raised-button color=\"primary\">\n                  <mat-icon>file_download</mat-icon>\n                  Submit\n                </button>\n              </div>\n\n            </div>\n\n          </form>\n\n        </div>\n      </mat-card-content>\n    </div>\n  </div>\n</div>","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { takeUntil, Subscription, Subject } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { PrepaymentsService } from \"src/app/erp-prepayment/data/prepayment.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { differenceInMonths } from \"date-fns\";\n\n@Component({\n  selector: \"app-manage-prepayments\",\n  templateUrl: \"./manage-prepayments.component.html\",\n  styleUrls: [\"./manage-prepayments.component.sass\"],\n})\nexport class ManagePrepaymentsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"month\",\n    \"startDate\",\n    \"endDate\",\n    \"openingBalance\",\n    \"closingBalance\",\n    \"credit\",\n    \"debit\",\n    \"status\",\n    \"actions\",\n  ];\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  prepaymentId: any;\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n  bgtForm: FormGroup;\n\n  formData: any;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  disableActions = false;\n\n  showMonthlyDistibutionForm: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private prepaymentsService: PrepaymentsService\n  ) {}\n\n  ngOnInit(): void {\n    this.getPage();\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.id) {\n          this.prepaymentId = params.id;\n          console.log(\"ID:\", this.prepaymentId);\n          this.getDataById();\n          this.pageAction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngAfterViewInit() {\n    if (this.pageAction !== \"Add\") {\n      this.getDataById();\n    }\n  }\n\n  pageAction = \"Add\";\n  isLoading: boolean = true;\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.prepaymentId);\n    this.prepaymentsService\n      .getPrepaymentsById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res) {\n            this.formData = res;\n            this.isLoading = false;\n            if (this.pageAction === \"Update\") {\n              this.pageFunction = \"Update\";\n            } else if (this.pageAction === \"View\") {\n              this.pageFunction = \"View\";\n              this.disableActions = true;\n            } else if (this.pageAction === \"Validate\") {\n              this.pageFunction = \"Validate\";\n              this.disableActions = true;\n            }\n\n            // this.formData = JSON.parse(params.additionalData);\n\n            if (this.formData.monthlyReports.length > 0) {\n              this.dataSource = new MatTableDataSource(\n                this.formData.monthlyReports\n              );\n              this.dataSource.paginator = this.paginator;\n              this.dataSource.sort = this.sort;\n            }\n\n            this.showForm = true;\n\n            console.log(\"ID:\", this.prepaymentId);\n            console.log(\"Additional Data:\", this.formData);\n\n            this.getPage();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              \"No Data Available for the Id provided\"\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"No Monthly Matching these parameters!\"\n          );\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n\n  hideSubmit: boolean = false;\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateEmptyForm();\n      this.generateMonthlyForm();\n      // this.calculateMonthlyPeriods();\n    } else if (this.pageFunction === \"Update\") {\n      this.generateFormWithData();\n      this.generateMonthlyForm();\n      // this.calculateMonthlyPeriods();\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.generateDisabledMonthlyForm();\n\n      this.hideSubmit = true;\n    } else if (this.pageFunction === \"Validate\") {\n      this.generateFormWithData();\n      this.generateDisabledMonthlyForm();\n    }\n  }\n\n  generateEmptyForm() {\n    this.mngForm = this.fb.group({\n      amount: [\n        0,\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      creditAccount: [\"\", Validators.required],\n      debitAccount: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n      endDate: [\"\", Validators.required],\n      numberOfPeriods: [0, Validators.required],\n      prepaymentName: [\"\", Validators.required],\n      startDate: [\"\", Validators.required],\n    });\n  }\n  generateFormWithData() {\n    this.mngForm = this.fb.group({\n      id: [this.formData.id, Validators.required],\n      amount: [\n        this.formData.amount,\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n      creditAccount: [this.formData.creditAccount, Validators.required],\n      debitAccount: [this.formData.debitAccount, Validators.required],\n      description: [this.formData.description, Validators.required],\n      endDate: [this.formData.endDate, Validators.required],\n      numberOfPeriods: [this.formData.numberOfPeriods, Validators.required],\n      prepaymentName: [this.formData.prepaymentName, Validators.required],\n      startDate: [this.formData.startDate, Validators.required],\n      monthlyReports: [this.formData.monthlyReports],\n\n      // monthlyAmount: [\n      //   this.formData.monthlyAmount,\n      //   [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      // ],\n      // currentMonthCreditChanged: [false],\n      // currentMonthCredit: [0],\n    });\n  }\n  generateDisabledFormWithData() {\n    this.mngForm = this.fb.group({\n      amount: { value: this.formData.amount, disabled: true },\n      creditAccount: { value: this.formData.creditAccount, disabled: true },\n      debitAccount: { value: this.formData.debitAccount, disabled: true },\n      description: { value: this.formData.description, disabled: true },\n      endDate: { value: this.formData.endDate, disabled: true },\n      numberOfPeriods: { value: this.formData.numberOfPeriods, disabled: true },\n      prepaymentName: { value: this.formData.prepaymentName, disabled: true },\n      startDate: { value: this.formData.startDate, disabled: true },\n    });\n  }\n\n  generateMonthlyForm() {\n    this.bgtForm = this.fb.group({\n      id: [\"\"],\n      closingBalance: [0, Validators.required],\n      credit: [0, Validators.required],\n      debit: [0, Validators.required],\n      month: [\"\", Validators.required],\n      openingBalance: [0, Validators.required],\n      status: [\"\"],\n    });\n  }\n  generateDisabledMonthlyForm() {\n    this.bgtForm = this.fb.group({\n      id: { value: \"\", disabled: true },\n      closingBalance: { value: 0, disabled: true },\n      credit: { value: 0, disabled: true },\n      debit: { value: 0, disabled: true },\n      month: { value: \"\", disabled: true },\n      openingBalance: { value: 0, disabled: true },\n      status: { value: \"\", disabled: true },\n    });\n  }\n\n  calculateMonthlyPeriods(): number {\n    const startDate = this.mngForm.value.startDate;\n    const endDate = this.mngForm.value.endDate;\n\n    if (startDate && endDate) {\n      const monthsDiff = differenceInMonths(endDate, startDate);\n      const numberOfPeriods = Math.abs(monthsDiff) + 1;\n\n      this.mngForm.patchValue({\n        numberOfPeriods: numberOfPeriods,\n      });\n\n      return numberOfPeriods;\n    }\n\n    this.mngForm.patchValue({\n      numberOfPeriods: 0,\n    });\n\n    return 0;\n  }\n\n  //***************************************************************************************************************** */\n\n  editButton: boolean = false;\n  addButton: boolean = true;\n  selectedRowIndex: number = -1; // Track the index of the selected row\n\n  addToArray() {\n    if (this.bgtForm.valid) {\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n      const newRecord = {\n        closingBalance: this.bgtForm.value.closingBalance,\n        credit: this.bgtForm.value.credit,\n        debit: this.bgtForm.value.debit,\n        month: this.bgtForm.value.month,\n        openingBalance: this.bgtForm.value.openingBalance,\n        status: \"PENDING\",\n      };\n\n      this.dataSource.data.push(newRecord);\n      this.dataSource.data = this.dataSource.data.slice();\n      this.bgtForm.reset();\n\n      this.patchItems();\n    }\n  }\n\n  updateMonthlyDetails() {\n    if (this.bgtForm.valid) {\n      console.log(\"this.bgtForm: \", this.bgtForm.value);\n\n      const updatedRecord = {\n        id: this.bgtForm.value.id,\n        closingBalance: this.bgtForm.value.closingBalance,\n        credit: this.bgtForm.value.credit,\n        debit: this.bgtForm.value.debit,\n        month: this.bgtForm.value.month,\n        openingBalance: this.bgtForm.value.openingBalance,\n        status: this.bgtForm.value.status,\n      };\n\n      this.mngForm.patchValue({\n        // currentMonthCreditChanged: true,\n        // currentMonthCredit:  this.bgtForm.value.credit,\n      });\n\n      this.dataSource.data[this.selectedRowIndex] = updatedRecord;\n      this.dataSource.data = this.dataSource.data.slice();\n      this.bgtForm.reset();\n\n      this.editButton = false;\n      this.addButton = true;\n      this.selectedRowIndex = -1; // Reset the selected row index\n    }\n  }\n\n  onEditMonthlyDetails(row: any) {\n    this.editButton = true;\n    this.addButton = false;\n    this.selectedRowIndex = this.dataSource.data.indexOf(row);\n\n    this.bgtForm.patchValue({\n      id: row.id,\n      closingBalance: row.closingBalance,\n      credit: row.credit,\n      debit: row.debit,\n      month: row.month,\n      openingBalance: row.openingBalance,\n      status: row.status,\n    });\n\n    this.patchItems();\n  }\n\n  onDeleteMonthlyDetails(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.dataSource.data = this.dataSource.data.slice();\n  }\n\n  clearForm() {\n    this.bgtForm.reset();\n    this.editButton = false;\n    this.addButton = true;\n    this.selectedRowIndex = -1; // Reset the selected row index\n  }\n\n  patchItems() {\n    this.mngForm.patchValue({\n      monthlyReports: this.dataSource.data,\n    });\n  }\n\n  //************************************************************************************************* */\n  //******************************************************************************************************\n  //Select expense\n  prepaymentDetails: any;\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  selection = new SelectionModel<any>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n  //************************************************************************************************* */\n  // private destroy$: Subject<void> = new Subject<void>(); // Create a subject to handle unsubscribe\n\n  onChangeStatus(status: any) {\n    let selectedRecordIds = [];\n\n    this.selectedRows.forEach((element) => {\n      selectedRecordIds.push(element.id);\n    });\n\n    let updateStatusBody = {\n      monthlyReportIds: selectedRecordIds,\n      status: status,\n    };\n\n    console.log(\"updateStatusBody: \", updateStatusBody);\n\n    this.prepaymentsService\n      .updateMonthlyRecordsStatus(updateStatusBody)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              \"Status Updated Successfully\"\n            );\n            this.getDataById();\n\n            // Reset selectedRows after the update is complete\n            this.selection = new SelectionModel<any>(true, []);\n\n            // Update the data source with the modified data\n            this.dataSource = new MatTableDataSource(\n              this.formData.monthlyReports\n            );\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              \"Error creating Prepayment\"\n            );\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err);\n        },\n        complete: () => {},\n      });\n  }\n\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    if (this.pageFunction === \"Add\") {\n      this.prepaymentsService\n        .addPrepayments(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Prepayment Added Successfully\"\n              );\n\n              console.log(\"res: \", res);\n\n              this.prepaymentId = res.id;\n              this.pageFunction = \"Update\";\n              this.getDataById();\n              //this.ngAfterViewInit();\n\n              // this.router.navigate([\n              //   \"/erp-prepayment/prepayments/all-prepayments\",\n              // ]);\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                \"Error creating Prepayment\"\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err);\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.prepaymentsService\n        .updatePrepayments(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Prepayment Updated Successfully\"\n              );\n\n              this.getDataById();\n\n              // this.router.navigate([\n              //   \"/erp-prepayment/prepayments/all-prepayments\",\n              // ]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    }\n  }\n\n  cancel(): void {\n    this.router.navigate([\"/erp-prepayment/prepayments/all-prepayments\"]);\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Prepayment'\" [items]=\"['Prepayments']\" [active_item]=\"'Manage Prepayment'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"header\">\n              <div class=\"row\">\n                <h2>{{ pageFunction }} Prepayment</h2>\n              </div>\n            </div>\n            <form class=\"mx-4\" [formGroup]=\"mngForm\">\n              <div class=\"row\">\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Prepayment Name</mat-label>\n                    <input matInput formControlName=\"prepaymentName\" required />\n                    <mat-error *ngIf=\"mngForm.get('prepaymentName').hasError('required')\">Prepayment Name is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Description</mat-label>\n                    <input matInput formControlName=\"description\" required />\n                    <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">Description is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Start Date</mat-label>\n                    <input matInput [matDatepicker]=\"startDatePicker\" formControlName=\"startDate\" required\n                      (dateChange)=\"calculateMonthlyPeriods()\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #startDatePicker></mat-datepicker>\n                    <mat-error *ngIf=\"mngForm.get('startDate').hasError('required')\">Start Date is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>End Date</mat-label>\n                    <input matInput [matDatepicker]=\"endDatePicker\" formControlName=\"endDate\" required\n                      (dateChange)=\"calculateMonthlyPeriods()\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #endDatePicker></mat-datepicker>\n                    <mat-error *ngIf=\"mngForm.get('endDate').hasError('required')\">End Date is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Number of Months</mat-label>\n                    <input matInput type=\"number\" formControlName=\"numberOfPeriods\" required />\n                    <mat-error *ngIf=\"\n                        mngForm.get('numberOfPeriods').hasError('required')\n                      \">Number of Months is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Debit Account</mat-label>\n                    <input matInput formControlName=\"debitAccount\" required />\n                    <mat-error *ngIf=\"mngForm.get('debitAccount').hasError('required')\">Debit Account is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Credit Account</mat-label>\n                    <input matInput formControlName=\"creditAccount\" required />\n                    <mat-error *ngIf=\"mngForm.get('creditAccount').hasError('required')\">Credit Account is\n                      required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>Amount</mat-label>\n                    <input matInput formControlName=\"amount\" mask=\"separator\" thousandSeparator=\",\" required />\n                    <mat-error *ngIf=\"mngForm.get('amount').hasError('required')\">Amount is required</mat-error>\n                  </mat-form-field>\n                </div>\n\n                <!-- <div *ngIf=\"pageFunction !=='Add'\" class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                  <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                    <mat-label>MonthlyAmount</mat-label>\n                    <input matInput formControlName=\"monthlyAmount\" mask=\"separator\" thousandSeparator=\",\" required />\n                    <mat-error *ngIf=\"mngForm.get('monthlyAmount').hasError('required')\">MonthlyAmount is required</mat-error>\n                  </mat-form-field>\n                </div> -->\n              </div>\n            </form>\n\n            <div *ngIf=\"pageFunction !== 'Add'\">\n              <hr />\n              <div class=\"header\">\n                <div class=\"row\">\n                  <h2>Monthly Details</h2>\n                </div>\n              </div>\n              <form class=\"mx-4\" [formGroup]=\"bgtForm\" *ngIf=\"showMonthlyDistibutionForm\">\n                <div class=\"row\">\n                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                      <mat-label>Closing Balance</mat-label>\n                      <input matInput formControlName=\"closingBalance\" />\n                      <mat-error *ngIf=\"\n                          bgtForm.get('closingBalance').hasError('required')\n                        \">Closing Balance is required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                      <mat-label>Credit</mat-label>\n                      <input matInput formControlName=\"credit\" />\n                      <mat-error *ngIf=\"bgtForm.get('credit').hasError('required')\">Credit is required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                      <mat-label>Debit</mat-label>\n                      <input matInput formControlName=\"debit\" />\n                      <mat-error *ngIf=\"bgtForm.get('debit').hasError('required')\">Debit is required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                      <mat-label>Month</mat-label>\n                      <input matInput formControlName=\"month\" readonly />\n                      <mat-error *ngIf=\"bgtForm.get('month').hasError('required')\">Month is required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                    <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                      <mat-label>Opening Balance</mat-label>\n                      <input matInput formControlName=\"openingBalance\" />\n                      <mat-error *ngIf=\"\n                          bgtForm.get('openingBalance').hasError('required')\n                        \">Opening Balance is required</mat-error>\n                    </mat-form-field>\n                  </div>\n\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1 float-left\">\n                    <div class=\"float-right\">\n                      <button *ngIf=\"addButton\" [disabled]=\"bgtForm.invalid\" (click)=\"addToArray()\" class=\"btn-space\"\n                        mat-raised-button color=\"primary\">\n                        + Add Monthly details\n                      </button>\n                      <button *ngIf=\"editButton\" [disabled]=\"bgtForm.invalid\" class=\"btn-space\"\n                        (click)=\"updateMonthlyDetails()\" mat-raised-button color=\"primary\">\n                        + Update Monthly details\n                      </button>\n                      <button type=\"button\" (click)=\"clearForm()\" mat-raised-button color=\"warn\">\n                        Clear\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n\n              <div class=\"mx-4 my-4\">\n                <div class=\"materialTableHeader\">\n                  <div class=\"row\">\n                    <div class=\"col-8\">\n                      <ul class=\"header-buttons-left ms-0\">\n                        <li class=\"dropdown\">\n                          <h2>Monthly Records</h2>\n                        </li>\n                        <li class=\"dropdown m-l-20\">\n                          <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                          <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                            class=\"browser-default search-field\" aria-label=\"Search box\" />\n                        </li>\n\n                        <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"POST\" (click)=\"onChangeStatus('POSTED')\">\n                            <button mat-mini-fab color=\"primary\">\n                              <mat-icon class=\"col-white\">send</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                        <li *ngIf=\"this.selectedRows.length > 0\">\n                          <div class=\"m-l-10\" matTooltip=\"PENDING\">\n                            <button mat-mini-fab color=\"primary\" (click)=\"onChangeStatus('PENDING')\">\n                              <mat-icon class=\"col-white\">hourglass_empty</mat-icon>\n                            </button>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"col-4\">\n                      <ul class=\"header-buttons\">\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                exporter.exportTable('xlsx', {\n                                  fileName: 'assets-list',\n                                  sheet: 'sheet1'\n                                })\n                              \" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                            <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                            <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                          </div>\n                        </li>\n                        <li>\n                          <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                            <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                  #exporter=\"matTableExporter\">\n                  <ng-container matColumnDef=\"select\">\n                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"\n                          selection.hasValue() && !isAllSelected()\n                        \" [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                      <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                        [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                      </mat-checkbox>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"id\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-2\">#\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"psl-3 tbl-col-width-per-2\"><span *ngIf=\"row.id\"> #</span>\n                    </mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"month\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">month\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <span> {{ row.month }}</span>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"startDate\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>startDate</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                      {{ row.startDate | date : \"MM/dd/yyyy\" }}</mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"endDate\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>endDate</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">\n                      {{ row.endDate | date : \"MM/dd/yyyy\" }}</mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"openingBalance\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">openingBalance\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <span> {{ row.openingBalance | number : \".2-2\" }}</span>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"closingBalance\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">closingBalance\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <span> {{ row.closingBalance | number : \".2-2\" }}</span>\n                    </mat-cell>\n                  </ng-container>\n                  <ng-container matColumnDef=\"credit\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">credit\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <span> {{ row.credit | number : \".2-2\" }}</span>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"debit\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-28\">debit\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-28\">\n                      <span>{{ row.debit | number : \".2-2\" }}</span>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"status\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                      class=\"column-nowrap psl-3 tbl-col-width-per-10\">Status</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                      (click)=\"$event.stopPropagation()\">\n                      <ng-container [ngSwitch]=\"row.status\">\n                        <button *ngSwitchCase=\"'POSTED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                          <i class=\"fas fa-check-circle\"></i>&nbsp;\n                          {{ row.status }}\n                        </button>\n                        <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                          <i class=\"fas fa-times-circle\"></i>&nbsp;\n                          {{ row.status }}\n                        </button>\n                        <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                          <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                          {{ row.status }}\n                        </button>\n                        <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                          <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                          {{ row.status }}\n                        </button>\n                        <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                          <i class=\"fas fa-question-circle\"></i>&nbsp;\n                          {{ row.status }}\n                        </button>\n                      </ng-container>\n                    </mat-cell>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"actions\">\n                    <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row; let i = index\" class=\"pr-0\">\n                      <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                        (click)=\"onEditMonthlyDetails(row)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                      </button>\n                      <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                        (click)=\"onDeleteMonthlyDetails(i)\" class=\"tbl-action-btn\">\n                        <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                      </button>\n                    </mat-cell>\n                  </ng-container>\n\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                  <mat-row *matRowDef=\"\n                      let row;\n                      let i = index;\n                      columns: displayedColumns\n                    \" (click)=\"onEditMonthlyDetails(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                  </mat-row>\n                </mat-table>\n                <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                  <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                  </mat-progress-spinner>\n                </div>\n\n                <mat-paginator *ngIf=\"showForm\" [pageSize]=\"5\" [pageSizeOptions]=\"[2, 6, 10, 20, 30, 40, 50, 100]\"\n                  aria-label=\"Select page of users\"></mat-paginator>\n              </div>\n            </div>\n\n            <div class=\"row m-t-25\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                <div class=\"example-button-row\" align=\"end\">\n                  <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button (click)=\"cancel()\">\n                    <mat-icon>cancel</mat-icon>\n                    Cancel\n                  </button>\n\n                  <button class=\"btn-space\" [disabled]=\"!mngForm.valid\" [hidden]=\"hideSubmit\" (click)=\"onSubmit()\"\n                    mat-raised-button color=\"primary\">\n                    <mat-icon>file_download</mat-icon>\n                    {{ pageFunction }} Prepayment\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllPrepaymentsComponent } from './pages/all-prepayments/all-prepayments.component';\nimport { ManagePrepaymentsComponent } from './pages/manage-prepayments/manage-prepayments.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\n\nconst routes: Routes = [\n\n   //Prepayments\n   {\n    path: \"all-prepayments\",\n    component: AllPrepaymentsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'PrepaymentModule', requiredPrivilege:[\"All Prepayments\"] },\n  },\n  {\n    path: \"manage-prepayment\",\n    component: ManagePrepaymentsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {  clientName: 'PrepaymentModule', requiredPrivilege:[\"Manage Prepayment\"] },\n  },\n\n \n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PrepaymentsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { PrepaymentsRoutingModule } from './prepayments-routing.module';\nimport { AllPrepaymentsComponent } from './pages/all-prepayments/all-prepayments.component';\nimport { ManagePrepaymentsComponent } from './pages/manage-prepayments/manage-prepayments.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { MonthlyReportByStatusComponent } from './pages/dialogs/monthly-report-by-status/monthly-report-by-status.component';\n\n\n\n@NgModule({\n  declarations: [\n    AllPrepaymentsComponent,\n    ManagePrepaymentsComponent,\n    MonthlyReportByStatusComponent\n  ],\n  imports: [\n    CommonModule,\n    PrepaymentsRoutingModule,\n\n    //Additional imports\n    DashboardModule,\n    MatIconModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    \n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatSortModule,\n    \n    MatSelectModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatTableExporterModule,\n    MatProgressSpinnerModule,\n    \n    MatFormFieldModule,\n    \n    MatButtonModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    ComponentsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    \n    MatSnackBarModule,\n    MatToolbarModule,\n    \n    SharedModule,\n    MatStepperModule,\n    NgxMaskModule,\n\n    \n    \n  ],\n  providers: [DatePipe]\n})\nexport class PrepaymentsModule { }\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}"],"names":[],"sourceRoot":"webpack:///"}