{"version":3,"file":"default-src_app_erp-hr_modules_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/@core/Models/months/months.service.ts","./src/app/erp-hr/data/payroll-services/payroll-analysis.service.ts","./src/app/erp-hr/data/payroll-services/payroll-circle.service.ts","./src/app/erp-hr/data/payroll-services/salary.service.ts","./src/app/erp-hr/modules/dashboard/dashboard-routing.module.ts","./src/app/erp-hr/modules/dashboard/dashboard.module.ts","./src/app/erp-hr/modules/dashboard/pages/components/analytics/analytics.component.ts","./src/app/erp-hr/modules/dashboard/pages/components/analytics/analytics.component.html","./src/app/erp-hr/modules/dashboard/pages/components/core-hr/core-hr.component.ts","./src/app/erp-hr/modules/dashboard/pages/components/core-hr/core-hr.component.html","./src/app/erp-hr/modules/dashboard/pages/components/payroll-dashboard/closure-analysis/closure-analysis.component.ts","./src/app/erp-hr/modules/dashboard/pages/components/payroll-dashboard/closure-analysis/closure-analysis.component.html","./src/app/erp-hr/modules/dashboard/pages/components/payroll-dashboard/payroll-bargraph/payroll-bargraph.component.ts","./src/app/erp-hr/modules/dashboard/pages/components/payroll-dashboard/payroll-bargraph/payroll-bargraph.component.html","./src/app/erp-hr/modules/dashboard/pages/components/payroll-dashboard/payroll-dashboard.component.ts","./src/app/erp-hr/modules/dashboard/pages/components/payroll-dashboard/payroll-dashboard.component.html","./src/app/erp-hr/modules/dashboard/pages/dashboard/dashboard.component.ts","./src/app/erp-hr/modules/dashboard/pages/dashboard/dashboard.component.html","./src/app/erp-hr/modules/dashboard/pages/gen-widgets/gen-widgets.component.ts","./src/app/erp-hr/modules/dashboard/pages/gen-widgets/gen-widgets.component.html","./src/app/erp-inventory/data/services/item-category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MonthsService {\n\n  constructor() { }\n  months() {\n  return  [\n      {\n        value: 1,\n        name: 'JANUARY'\n      },\n      {\n        value: 2,\n        name: 'FEBRUARY'\n      },\n      {\n        value: 3,\n        name: 'MARCH'\n      },\n      {\n        value: 4,\n        name: 'APRIL'\n      },\n      {\n        value: 5,\n        name: 'MAY'\n      },\n      {\n        value: 6,\n        name: 'JUNE'\n      },\n      {\n        value: 7,\n        name: 'JULY'\n      },\n      {\n        value: 8,\n        name: 'AUGUST'\n      },\n      {\n        value: 9,\n        name: 'SEPTEMBER'\n      },\n      {\n        value: 10,\n        name: 'OCTOBER'\n      }, {\n        value: 11,\n        name: 'NOVEMBER'\n      },\n      {\n        value: 12,\n        name: 'DECEMBER'\n      },\n    ]\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayrollAnalysisService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v2/payroll/analysis`;\n\n  constructor(private http: HttpClient) { }\n  \n  findAll(params:any): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL,{params:params, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayrollCircleService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v2/payroll/circle`;\n\n  constructor(private http: HttpClient) { }\n  \n  open(params:any) : Observable<any> {\n    let API_URL = `${this.baseURL}/open`;\n    return this.http.post(API_URL, {},{params:params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  findAll(): Observable<any> {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL,{ withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  close(params:any) : Observable<any> {\n    let API_URL = `${this.baseURL}/close`;\n    return this.http.post(API_URL, {},{params:params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  reopen(params:any) : Observable<any> {\n    let API_URL = `${this.baseURL}/reopen`;\n    return this.http.post(API_URL, {},{params:params, headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalaryService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v2/payroll/`;\n  constructor(private http: HttpClient) { }\n\n  getSalarySummary(params: any): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v2/payroll/summary/per/month&year`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getYearSalarySummary(params: any): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v2/payroll/summary/per/year`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getEmployeeSalarySummary(params: any): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v2/payroll/employee/summary/per/year`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getPayrollYears(): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v2/payroll/years`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  commitEmployeeSalary(id: any): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/hr/commit//${id}`;\n    return this.http.put(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  commitAllEmployeeSalary(): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/commit/all/employee/salary`;\n    return this.http.put(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getEmployeeLastMonthsSalary(employee_id: any): Observable<any> {\n    let API_URL = `${this.baseURL}employee/list/six/months/${employee_id}`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      console.log(API_URL);\n      console.log(res);\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getSalaryByYearAndMonth(params: any): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/salary/detail/per/year/month`;\n    return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getSalary(): Observable<any> {\n    let API_URL = `${this.baseURL}`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  countPaidEmployees(department_id: any): Observable<any> {\n    console.log(\"hey server\", department_id)\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/count/paid/department/employees/${department_id}`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getCurrentMonthSalaryDetail() {\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/salary/current/month/salary/detail`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getUnCommitedSalary(): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/salary/not/commited`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    );\n  }\n  getMonthlySalary(): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/yearly/salary`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getDepartmentMonthlySalary(department_id: any): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/yearly/salary/by/department/${department_id}`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n      return res || {}\n    }),\n      catchError(this.errorMgmt)\n    )\n  }\n  getEmployees() {\n    let API_URL = `${this.baseURL}/all`;\n    return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  find(id: number): Observable<any> {\n    let API_URL = `${this.baseURL}/find/${id}`;\n    return this.http\n      .get(API_URL, {\n        headers: this.headers,\n        withCredentials: false,\n      })\n      .pipe(\n        map((res) => {\n          return res || {};\n        }),\n        catchError(this.errorMgmt)\n      );\n  }\n  getEmployeeId(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/find/${id}`;\n    return this.http.get(API_URL, { withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  updateEmployee(id: string | null, data: any): Observable<any> {\n    return this.http.put(this.baseURL, data, { headers: this.headers })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n  updateBasicSalary(id: any, params: any): Observable<any> {\n    let API_URL = `${environment.baseUrlHR}/api/v1/payroll/update/${id}`;\n    return this.http.put(API_URL, {}, { params: params, withCredentials: false })\n      .pipe(\n        map((res) => {\n          return res || {}\n        }),\n        catchError(this.errorMgmt)\n      )\n  }\n  deleteEmployee(id: any): Observable<any> {\n    var API_URL = `${this.baseURL}/delete/${id}`;\n    return this.http.delete(API_URL, { withCredentials: false })\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { DashboardComponent } from \"./pages/dashboard/dashboard.component\";\nimport { RoutePrivilegeGuard } from \"src/app/erp-procurement/data/services/_AccessControlAuthGuard.service\";\n\nconst routes: Routes = [\n  // { path: \"\", component: DashboardComponent },\n  { path: '', component: DashboardComponent, canActivate: [RoutePrivilegeGuard], data: { clientName: \"HumanResourceModule\", requiredPrivilege: ['Dashboard'] } },];\n\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { GenWidgetsComponent } from './pages/gen-widgets/gen-widgets.component';\n\n\n\n\nimport { NgxEchartsModule } from \"ngx-echarts\";\nimport { ChartsModule as chartjsModule } from \"ng2-charts\";\nimport { NgxChartsModule } from \"@swimlane/ngx-charts\";\nimport { GaugeModule } from \"angular-gauge\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { NgxGaugeModule } from \"ngx-gauge\";\n\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { AnalyticsComponent } from './pages/components/analytics/analytics.component';\nimport { CoreHrComponent } from './pages/components/core-hr/core-hr.component';\nimport { PayrollModule } from '../payroll/payroll.module';\nimport { PayrollBargraphComponent } from './pages/components/payroll-dashboard/payroll-bargraph/payroll-bargraph.component';\nimport { ClosureAnalysisComponent } from './pages/components/payroll-dashboard/closure-analysis/closure-analysis.component';\nimport { PayrollDashboardComponent } from './pages/components/payroll-dashboard/payroll-dashboard.component';\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    GenWidgetsComponent,\n\n    AnalyticsComponent,\n    CoreHrComponent,\n\n    ClosureAnalysisComponent, PayrollBargraphComponent, PayrollDashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    ComponentsModule,\n    SharedModule,\n    \n \n    \n  ],\n  exports: [GenWidgetsComponent,PayrollDashboardComponent]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\n\n\n\n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.sass']\n})\nexport class AnalyticsComponent implements OnInit {\n\n  currentUser: any;\n\n  constructor(private tokenCookieService: TokenCookieService,) { }\n  ngOnInit() {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n  }\n\n}\n","\n\n<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"card\">\n      <div class=\"body\">\n        <div class=\"row align-items-center\">\n          <div class=\"col-md-2 p-2\">\n            <img src=\"assets/images/pngegg8.png\" alt=\"\" width=\"250px\" height=\"170px\" class=\"px-2 mx-2\">\n          </div>\n          \n          <div class=\"col-md-10\">\n            <h4 class=\"font-20 weight-500 mb-2\">\n              Welcome back <div class=\"weight-600 font-30 col-green pt-1\">{{currentUser}}!</div>\n            </h4>\n            <p class=\"font-18 max-width-600\">We strive to offer a seamless payment and invoicing experience to meet your needs. For any inquiries or concerns, please don't hesitate to reach out to us. Thank you for choosing our finance system..</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n<div class=\"card\">\n<mat-tab-group>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon>account_circle</mat-icon> \n      Core HR Statistics\n    </ng-template>\n    <div class=\"\">\n      <app-core-hr></app-core-hr>\n    </div>\n  </mat-tab>\n\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon>monetization_on</mat-icon> \n      Payroll Statistics\n    </ng-template>\n    <div class=\"\">\n      <app-payroll-dashboard></app-payroll-dashboard>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n</div>","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as Highcharts from 'highcharts';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { AnalysisService } from 'src/app/erp-hr/data/configuration-services/analysis.service';\n\n@Component({\n  selector: 'app-core-hr',\n  templateUrl: './core-hr.component.html',\n  styleUrls: ['./core-hr.component.scss']\n})\nexport class CoreHrComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"index\",\n    \"departmentname\",\n    \"totalEmployees\",\n    \"turnoverrate\"\n  ];\n  dataSource!: MatTableDataSource<any>;\n  displayedColumns2: string[] = [\n    \"index\",\n    \"goalsno\",\n    \"classification\"\n  ];\n  dataSource2!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  maleVsFemaleOptions: any;\n  male: any;\n  female: number;\n  activeEmployees: any;\n  leaveRequest: any;\n  newEmployees: any;\n  newOpenings: any;\n  employeeLeaveChart: any;\n  currentDate = new Date();\n  dataResp: any;\n  genderDetails: any;\n  femaleCount: any;\n  maleCount: any;\n  activeEmpPerDepartmentChart: any;\n  joinersAndLeaversChart: any;\n  kpigoalstatusChart: any;\n  year = this.currentDate.getFullYear();\n  loading: boolean;\n  perfomancePerDepartment: any;\n  ageDistribuition: any;\n  dataAgeDistrib: any;\n  constructor(\n    private analysisAPI: AnalysisService,\n    private notificationAPI: NotificationServiceService\n  ) {\n\n  }\n  ngOnInit(): void {\n\n  }\n  ngAfterViewInit(): void {\n    this.getData();\n  }\n  showCharts: boolean = false;\n  getData() {\n    let params = new HttpParams()\n      .set('Year', this.year);\n    this.analysisAPI.getAdminAnalysis(params).subscribe(res => {\n      this.dataResp = res;\n      const xKpiAxis: string[] = [];\n      const seriesKpi1Array: number[] = [];\n      const series2KpiArray: number[] = [];\n      for (const item of this.dataResp.kpigoalstatus) {\n        xKpiAxis.push(item.departmentname);\n        seriesKpi1Array.push(item.submittedcount);\n        series2KpiArray.push(item.pendingcount);\n      }\n      this.showKpigoalstatus(xKpiAxis, seriesKpi1Array, series2KpiArray);\n\n      this.activeEmployees = this.dataResp.activeEmployees;\n      this.leaveRequest = this.dataResp.leaveRequest;\n      this.genderDetails = this.dataResp.genderDetails;\n      this.newEmployees = this.dataResp.newEmployees;\n      this.newOpenings = this.dataResp.newOpenings;\n      this.dataAgeDistrib = this.dataResp.ageDistributions;\n\n\n      const employeeCount: number[] = [];\n      const ageGroup: string[] = [];\n      for (const item of this.dataAgeDistrib) {\n        employeeCount.push(item.count);\n        ageGroup.push(item.agerange);\n      }\n      this.showAgeDistribution(employeeCount, ageGroup);\n\n      this.showMaleVsFemaleOptions(this.genderDetails.female, this.genderDetails.male)\n      const activeArray: number[] = [];\n      const departmentArray: string[] = [];\n      for (const item of this.dataResp.activeEmployeePerDepartment) {\n        activeArray.push(item.active);\n        departmentArray.push(item.departmentname);\n      }\n      this.showActiveEmployeePerDepartment(activeArray, departmentArray);\n      const xAxis: number[] = [];\n      const series1Array: string[] = [];\n      const series2Array: string[] = [];\n      for (const item of this.dataResp.joinersandLeavers) {\n        xAxis.push(item.monthname);\n        series1Array.push(item.joinerscount);\n        series2Array.push(item.leaverscount);\n      }\n      this.showJoinersAndLeaversChart(xAxis, series1Array, series2Array);\n      this.showTurnOverRate(this.dataResp.employeeTurnOverRate);\n      this.showKpiAnaysis(this.dataResp.kpiClassifications);\n      this.showPerfomancePerDepartment(activeArray, departmentArray);\n\n      this.showCharts = true\n    })\n  }\n  barChartoptions: any;\n  employeeMainDash: any;\n  showTurnOverRate(dtDetails) {\n    this.dataSource = new MatTableDataSource(dtDetails);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  showKpiAnaysis(dtDetails) {\n    this.dataSource2 = new MatTableDataSource(dtDetails);\n    this.dataSource2.paginator = this.paginator;\n    this.dataSource2.sort = this.sort;\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  transformMonths(originalData) {\n    const periodmArray = [];\n    for (const item of originalData) {\n      const periodm = item.periodm.trim();\n      periodmArray.push(periodm);\n    }\n    return periodmArray;\n  }\n  transformEmployeeData(originalData: any) {\n    let employeeArray = new Array<any>();\n    for (const item of originalData) {\n      employeeArray.push(Number(item.employeeCount));\n    }\n    return employeeArray;\n  }\n  transformSalaryData(originalData: any) {\n    let salaryArray = new Array<any>();\n    for (const item of originalData) {\n      salaryArray.push(item.grosspay);\n    }\n    return salaryArray;\n  }\n  isValidYear(input: any): boolean {\n    const year = parseInt(input, 10);\n    return year >= 1000 && year <= 9999;\n  }\n  onSelectedYear(event: any) {\n    if (this.isValidYear(event.target.value)) {\n      this.year = event.target.value;\n      this.getData();\n    } else {\n    }\n  }\n  showJoinersAndLeaversChart(yAxisData, series1, series2) {\n    this.joinersAndLeaversChart = {\n      chart: {\n        type: 'column',\n      },\n      title: {\n        text: 'Joiners and Leavers Per Month in an Year',\n      },\n      subtitle: {\n        text: 'API ERP Server',\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: yAxisData,\n        crosshair: true,\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Employee Number',\n        },\n      },\n      tooltip: {\n        headerFormat:\n          '<span style = \"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style = \"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style = \"padding:0\"><b>{point.y:.1f}</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0,\n        },\n      },\n      series: [\n        {\n          name: \"Joiners\",\n          color: '#157d05',\n          data: series1\n        }, {\n          name: \"Leavers\",\n          color: '#fc5203',\n          data: series2\n        },\n      ],\n    };\n    Highcharts.chart('joinersAndLeaversChart', this.joinersAndLeaversChart);\n  }\n  showActiveEmployeePerDepartment(yAxisData, xAxisData) {\n    this.activeEmpPerDepartmentChart = {\n      chart: {\n        type: 'column',\n      },\n      title: {\n        text: 'Average Number of Active Employee per Department',\n      },\n      subtitle: {\n        text: 'API ERP Server',\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: xAxisData,\n        crosshair: true,\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Employee Number',\n        },\n      },\n      tooltip: {\n        headerFormat:\n          '<span style = \"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style = \"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style = \"padding:0\"><b>{point.y:.1f}</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0,\n        },\n      },\n      series: [\n        {\n          name: \"Employees\",\n          color: '#157d05',\n          data: yAxisData\n        },\n      ],\n    };\n    Highcharts.chart('activeEmpPerDepartmentChart', this.activeEmpPerDepartmentChart);\n  }\n  showMaleVsFemaleOptions(fm, mm) {\n    let total = fm + mm;\n    this.male = Math.round((mm / total) * 100);\n    this.female = Math.round((fm / total) * 100);\n    this.maleVsFemaleOptions = {\n      chart: {\n        plotBorderWidth: null,\n        plotShadow: false\n      },\n      title: {\n        text: 'Employee Gender Ratio'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      credits: {\n        enabled: false,\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n\n          dataLabels: {\n            enabled: true\n          },\n          showInLegend: true\n        }\n      },\n      series: [{\n        type: 'pie',\n        name: 'Gender Ratio',\n        data: [\n          {\n            name: 'Male Employees - ' + this.male + '%',\n            y: this.male,\n            color: '#157d05',\n          },\n          {\n            name: 'Female Employees - ' + this.female + '%',\n            y: this.female,\n            color: '#000000',\n          },\n        ]\n      }]\n    };\n    Highcharts.chart('maleVsFemaleOptions', this.maleVsFemaleOptions);\n  }\n  showPerfomancePerDepartment(yAxisData, xAxisData) {\n    this.perfomancePerDepartment = {\n      chart: {\n        type: 'column',\n      },\n      title: {\n        text: 'Distribution Graph based on Average Score per Department',\n      },\n      subtitle: {\n        text: 'API ERP Server',\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: xAxisData,\n        crosshair: true,\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Avg. Score',\n        },\n      },\n      tooltip: {\n        headerFormat:\n          '<span style = \"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style = \"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style = \"padding:0\"><b>{point.y:.1f}</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0,\n        },\n      },\n      series: [\n        {\n          name: \"Departments\",\n          color: '#157d05',\n          data: yAxisData\n        },\n      ],\n    };\n    Highcharts.chart('perfomancePerDepartment', this.perfomancePerDepartment);\n  }\n  showAgeDistribution(yAxisData, xAxisData) {\n    this.ageDistribuition = {\n      chart: {\n        type: 'column',\n      },\n      title: {\n        text: 'Employee Age Distribution (Employee vs Age Group)',\n      },\n      subtitle: {\n        text: 'API ERP Server',\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: xAxisData,\n        crosshair: true,\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Employee Count',\n        },\n      },\n      tooltip: {\n        headerFormat:\n          '<span style = \"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style = \"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style = \"padding:0\"><b>{point.y:.1f}</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0,\n        },\n      },\n      series: [\n        {\n          name: \"Age Group\",\n          color: '#157d05',\n          data: yAxisData\n        },\n      ],\n    };\n    Highcharts.chart('ageDistribuition', this.ageDistribuition);\n  }\n  showKpigoalstatus(yAxisData, series1, series2) {\n    this.kpigoalstatusChart = {\n      chart: {\n        type: 'column',\n      },\n      title: {\n        text: 'KPI Goals - Submited and Unsubmitted per Departments',\n      },\n      subtitle: {\n        text: 'API ERP Server',\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: yAxisData,\n        crosshair: true,\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Department',\n        },\n      },\n      tooltip: {\n        headerFormat:\n          '<span style = \"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style = \"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style = \"padding:0\"><b>{point.y:.1f}</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0,\n        },\n      },\n      series: [\n        {\n          name: \"Submitted\",\n          color: '#157d05',\n          data: series1\n        }, {\n          name: \"Unsubmmitted\",\n          color: '#fc5203',\n          data: series2\n        },\n      ],\n    };\n    Highcharts.chart('kpigoalstatusChart', this.kpigoalstatusChart);\n  }\n}\n\n\n","\n\n<ng-container >\n  <div class=\"row mx-2\">\n    <div class=\"col-md-6 col-sm-12 card\">\n      <div class=\"row\">\n        <div class=\"col-md-4 col-sm-12\" style=\"font-size: 8px\">\n          <input class=\"pull-right form-control\" (keyup)=\"onSelectedYear($event)\" placeholder=\"Year\" #input />\n        </div>\n        <div class=\"col-md-8 col-sm-12\"></div>\n      </div>\n      <hr />\n      <div class=\"row\">\n        <div class=\"col-md-12 col-sm-12\">\n          <div id=\"joinersAndLeaversChart\"></div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-sm-12 card\">\n      <div class=\"mat-elevation-z1\" id=\"maleVsFemaleOptions\"></div>\n    </div>\n  </div>\n  <div class=\"row mx-2\">\n    <div class=\"col-md-6 col-sm-12 card\">\n      <div id=\"activeEmpPerDepartmentChart\"></div>\n    </div>\n    <div class=\"col-md-6 col-sm-12 card\">\n      <div class=\"header\">\n        <h4 class=\"title\">Employee Turnover Rate</h4>\n        <div class=\"filter\">\n          <input class=\"form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\" #input />\n        </div>\n      </div>\n      <hr />\n      <div class=\"content\">\n        <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n          <!-- Index column -->\n          <ng-container matColumnDef=\"index\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n              #\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ i + 1\n              }}</mat-cell>\n          </ng-container>\n  \n          <!-- Department Name column -->\n          <ng-container matColumnDef=\"departmentname\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-40\">Department\n              Name\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-40\">\n              {{ row.departmentname }}\n            </mat-cell>\n          </ng-container>\n  \n          <!-- Total Employees column -->\n          <ng-container matColumnDef=\"totalEmployees\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n              Total Employees\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n              {{ row.totalEmployees }}\n            </mat-cell>\n          </ng-container>\n  \n          <!-- Turnover Rate column -->\n          <ng-container matColumnDef=\"turnoverrate\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">Turnover\n              Rate</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n              <span *ngIf=\"row.turnoverrate < 30\" class=\"badge badge-pill badge-success\">{{ row.turnoverrate }}</span>\n              <span *ngIf=\"row.turnoverrate >= 30 && row.turnoverrate < 50\" class=\"badge badge-pill badge-primary\">{{\n                row.turnoverrate }}</span>\n              <span *ngIf=\"row.turnoverrate >= 50 && row.turnoverrate < 70\" class=\"badge badge-pill badge-warning\">{{\n                row.turnoverrate }}</span>\n              <span *ngIf=\"row.turnoverrate >= 70\" class=\"badge badge-pill badge-danger\">{{ row.turnoverrate }}</span>\n            </mat-cell>\n          </ng-container>\n  \n          <!-- Header row -->\n          <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n          <!-- Data rows -->\n          <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  \n          <!-- No data row -->\n          <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{ input.value }}\"</mat-cell>\n        </mat-table>\n      </div>\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20, 30, 40, 50, 100]\" aria-label=\"Select page\"></mat-paginator>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 col-sm-12 card\">\n        <div class=\"header\">\n          <h4 class=\"title\">KPI Classification</h4>\n          <div class=\"filter\">\n            <input class=\"form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\" />\n          </div>\n        </div>\n        <hr />\n        <div class=\"content\">\n          <mat-table #table matTableExporter [dataSource]=\"dataSource2\" matSort class=\"mat-cell\">\n            <!-- Index column -->\n            <ng-container matColumnDef=\"index\">\n              <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                #\n              </mat-header-cell>\n              <mat-cell *matCellDef=\"let element; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ i + 1\n                }}</mat-cell>\n            </ng-container>\n  \n            <!-- No. of Employees column -->\n            <ng-container matColumnDef=\"goalsno\">\n              <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-25\">No. of\n                Employees\n              </mat-header-cell>\n              <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                {{ row.goalsno }}\n              </mat-cell>\n            </ng-container>\n  \n            <!-- Turnover Rate column -->\n            <ng-container matColumnDef=\"classification\">\n              <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-45\">Turnover\n                Rate</mat-header-cell>\n              <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-45\">\n                <span *ngIf=\"row.classification == 'Exceptional'\" class=\"badge badge-pill badge-success\">{{\n                  row.classification }}</span>\n                <span *ngIf=\"row.classification == 'Exceeds Targets'\" class=\"badge badge-pill badge-primary\">{{\n                  row.classification }}</span>\n                <span *ngIf=\"row.classification == 'Met Targets'\" class=\"badge badge-pill badge-info\">{{\n                  row.classification }}</span>\n                <span *ngIf=\"row.classification == 'Needs Improvement'\" class=\"badge badge-pill badge-warning\">{{\n                  row.classification }}</span>\n                <span *ngIf=\"row.classification == 'Unsatisfactory'\" class=\"badge badge-pill badge-danger\">{{\n                  row.classification }}</span>\n              </mat-cell>\n            </ng-container>\n  \n            <!-- Header row -->\n            <mat-header-row *matHeaderRowDef=\"displayedColumns2\"></mat-header-row>\n  \n            <!-- Data rows -->\n            <mat-row *matRowDef=\"let row; columns: displayedColumns2\"></mat-row>\n  \n            <!-- No data row -->\n            <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{ input.value }}\"</mat-cell>\n          </mat-table>\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20, 30, 40, 50, 100]\" aria-label=\"Select page\"></mat-paginator>\n      </div>\n      <div class=\"col-md-6 col-sm-12 card\">\n        <div id=\"kpigoalstatusChart\"></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6 col-sm-12 card\">\n          <div class=\"mat-elevation-z1\" id=\"ageDistribuition\"></div>\n        </div>\n        <div class=\"col-md-6 col-sm-12\">\n          <!-- <div id=\"kpigoalstatusChart\"></div> -->\n        </div>\n      </div>\n    </div>\n  </div>\n\n</ng-container>","import { HttpParams } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MonthsService } from 'src/@core/Models/months/months.service';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PayrollAnalysisService } from 'src/app/erp-hr/data/payroll-services/payroll-analysis.service';\nimport { PayrollCircleService } from 'src/app/erp-hr/data/payroll-services/payroll-circle.service';\n\n\n@Component({\n  selector: 'app-closure-analysis',\n  templateUrl: './closure-analysis.component.html',\n  styleUrls: ['./closure-analysis.component.scss']\n})\nexport class ClosureAnalysisComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = [\n    \"category\",\n    \"prevPayroll\",\n    \"currPayroll\",\n    \"turnOverRate\"\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  loading: boolean;\n  data: any;\n  monthsArray: any[];\n  yearsArray: any[];\n  month: any;\n  currentYear: any;\n  currentMonth: any;\n  numRows: number;\n  departmentArray = new Array();\n  departmentId = 0;\n  jobGroupFk = 0;\n  jobGroupArray = new Array();\n  formData: FormGroup;\n  dataResp: any;\n  fmData: any;\n  currPeriodY = new Date().getFullYear();\n  currPeriodM = new Date(Date.UTC(0, new Date().getMonth())).toLocaleString('en-US', { month: 'long' }).toUpperCase();\n  currIsFinal = 'N'\n  prevPeriodY = this.currPeriodY - 1;\n  prevMonthINT = (new Date().getMonth() === 0) ? 11 : new Date().getMonth() - 1;\n  prevPeriodM = new Date(Date.UTC(0, this.prevMonthINT)).toLocaleString('en-US', { month: 'long' }).toUpperCase();\n  prevIsFinal = 'Y'\n  constructor(\n    private monthAPI: MonthsService,\n    private payrollAnalysisAPI:PayrollAnalysisService,\n    private router: Router,\n    private notificationAPI: NotificationServiceService,\n    private payrollCircleAPi: PayrollCircleService,\n    private fb: FormBuilder\n  ) {\n    // this.fmData = this.router.getCurrentNavigation().extras.queryParams.fmData;\n    this.initDates();\n    this.getYears();\n    this.getMonths();\n   }\n  ngOnDestroy(): void {\n  }\n  ngOnInit() {\n    this.getPayrollData();\n    this.initFormData();\n  }\n  initDates(){\n    // this.currPeriodY = this.fmData.periodY;\n    // this.currPeriodM = this.fmData.periodM;\n    this.currIsFinal = 'N'\n    this.prevMonthINT = (new Date().getMonth() === 0) ? 11 : new Date().getMonth() - 1;\n    this.prevPeriodM = new Date(Date.UTC(0, this.prevMonthINT)).toLocaleString('en-US', { month: 'long' }).toUpperCase();\n    this.prevIsFinal = 'Y'\n    if(this.prevPeriodM == \"DECEMBER\"){\n      this.prevPeriodY = this.currPeriodY - 1;\n    }else{\n      this.prevPeriodY = this.currPeriodY;\n    }\n  }\n\n \n  initFormData(){\n    this.formData = this.fb.group({\n      remarks:['', Validators.required],\n      validsignature:['', Validators.required]\n    })\n  }\n  selected_date = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day !== 0 && day !== 6;\n  }\n  \n  getMonths() {\n    this.monthsArray = this.monthAPI.months();\n    this.month = this.monthsArray[new Date().getMonth()].name\n  }\n  getYears() {\n    this.yearsArray = Array();\n    this.currentYear = new Date().getFullYear();\n    for (let i = (this.currentYear - 5);\n      i < (this.currentYear + 1); i++) {\n      this.yearsArray.push(i);\n    }\n  }\n  onSelectedYear(event: any) {\n    this.prevPeriodY = event.target.value;\n    this.getPayrollData();\n  }\n  onSelectedMonth(event: any) {\n    this.prevPeriodM = event.target.value;\n    this.getPayrollData();\n  }\n\n  getPayrollData(){\n    let param = new HttpParams()\n    .set('prevPeriodY', this.prevPeriodY)\n    .set('prevPeriodM',this.prevPeriodM)\n    .set('prevIsFinal', this.prevIsFinal)\n    .set('currPeriodY', this.currPeriodY)\n    .set('currPeriodM', this.currPeriodM)\n    .set('currIsFinal', this.currIsFinal);\n    this.payrollAnalysisAPI.findAll(param).subscribe(res=>{\n      this.dataResp = res;\n      this.dataResp = this.dataResp.entity;\n      this.dataSource = new MatTableDataSource(this.dataResp);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n    })\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  onSubmit(){\n    console.log(this.fmData)\n    this.loading = true;\n    if (window.confirm('Are you sure you want to close payroll for this period?')) {\n    if(this.formData.valid){\n      if (this.formData.controls.validsignature.value === 'FINAL ENTRY') {\n        let param = new HttpParams()\n        .set('payrollCircleCode',this.fmData.payrollCircleCode)\n        .set('closingRemarks',this.formData.controls.remarks.value);\n        this.payrollCircleAPi.close(param).subscribe(res=>{\n          this.loading = false;\n          this.dataResp = res;\n          if(this.dataResp.statusCode == 200){\n            this.loading = false;\n            this.notificationAPI.alertSuccess(this.dataResp.message);\n            this.router.navigate([`/administration/payroll/close`], { skipLocationChange: true });\n          }else{\n            this.loading = false;\n            this.notificationAPI.alertSuccess(this.dataResp.message);\n          }\n        })\n      }else{\n        this.loading = false;\n        this.notificationAPI.alertWarning(\"YOU MUST ENTER THE CORRECT APPROVAL\")\n      }\n    }else{\n      this.loading = false;\n      this.notificationAPI.alertWarning(\"INVALID FORM DATA\")\n    }\n  }\n  }\n}\n","\n<div class=\"mat-elevation-z1\">\n    <div class=\"row\">\n        <div *ngIf=\"loading\">\n          <p><small>Loading, please wait...</small></p>\n          <p>\n            <mat-progress-bar mode=\"query\"></mat-progress-bar>\n          </p>\n        </div>\n        <mat-card-header class=\"breadcrumb\">\n          <div>\n            <a routerLink=\"/administration/\" skipLocationChange>Dashboard / </a>\n            <a routerLink=\" \" skipLocationChange>Payroll / </a>\n            <a routerLink=\" \" skipLocationChange>Close </a>\n          </div>\n        </mat-card-header>\n      </div>\n      <div class=\"row mb-2\">\n            <!-- <div class=\"row\">\n              <div class=\"col-md-4 col-sm-12\" style=\"font-size: 8px\">\n                <select class=\"form-select\" (change)=\"onSelectedYear($event)\" aria-label=\"Default select example\">\n                  <option selected>Select Prev Year</option>\n                  <option *ngFor=\"let year of  yearsArray \" [value]=\"year\"> {{ year }}</option>\n                </select>\n              </div>\n              <div class=\"col-md-4 col-sm-12\">\n                <select class=\"form-select\" (change)=\"onSelectedMonth($event)\" aria-label=\"Default select example\">\n                  <option selected>Select Prev Month</option>\n                  <option *ngFor=\"let month of  monthsArray \" [value]=\"month.name\">{{ month.name }}</option>\n                </select>\n              </div>\n              <div class=\"col-md-4 col-sm-12\">\n                <input class=\"pull-right form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\" #input>\n              </div>\n            </div> -->\n              <!-- <br> -->\n              <div class=\"row\">\n                  <div class=\"col-md-12\">\n                      <div class=\"table-row\">\n                          <table mat-table matSort  [dataSource]=\"dataSource\" >\n                            <ng-container matColumnDef=\"category\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"p-3 mb-2 bg-success text-white\"> Category</th>\n                              <td mat-cell *matCellDef=\"let row\" class=\"p-3 mb-2 bg-success text-white\"> {{row.category}} </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"prevPayroll\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"p-3 mb-2 bg-success text-white\">Previous Payroll for {{this.prevPeriodY}} {{this.prevPeriodM}}\n                              <td mat-cell *matCellDef=\"let row\" class=\"p-3 mb-2 bg-primary text-white\"> \n                                <ng-container *ngIf=\"row.category === 'Employee'; else otherStatus\">\n                                  {{row.prevPayroll}}\n                                </ng-container>\n                                <ng-container *ngIf=\"row.category != 'Employee'; else otherStatus\">\n                                  {{row.prevPayroll | currency : 'Ksh.'}} \n                                </ng-container>\n                              </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"currPayroll\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"p-3 mb-2 bg-success text-white\">Current Payroll for {{this.currPeriodY}} {{this.currPeriodM}} </th>\n                              <td mat-cell *matCellDef=\"let row\" class=\"p-3 mb-2 bg-secondary text-white\"> \n                                <ng-container *ngIf=\"row.category === 'Employee'; else otherStatus\">\n                                  {{row.currPayroll}}\n                                </ng-container>\n                                <ng-container *ngIf=\"row.category != 'Employee'; else otherStatus\">\n                                  {{row.currPayroll | currency : 'Ksh.'}} \n                                </ng-container>\n                              </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"turnOverRate\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"p-3 mb-2 bg-success text-white\"> Turnover Rate(%) </th>\n                              <td mat-cell *matCellDef=\"let row\" class=\"p-3 mb-2 bg-warning text-black\"> {{row.turnOverRate}} % </td>\n                            </ng-container>\n                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                            <tr class=\"mat-row\" *matNoDataRow>\n                              <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                            </tr>\n                          </table>\n                      </div>\n                      <mat-paginator [pageSizeOptions]=\"[10, 20, 30, 40, 50, 100]\" aria-label=\"Select page of Payroll\"></mat-paginator>\n                  </div>\n          </div>\n        \n          </div>\n      </div>\n  ","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport * as Highcharts from 'highcharts';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SalaryService } from 'src/app/erp-hr/data/payroll-services/salary.service';\n\n@Component({\n  selector: 'app-payroll-bargraph',\n  templateUrl: './payroll-bargraph.component.html',\n  styleUrls: ['./payroll-bargraph.component.scss']\n})\nexport class PayrollBargraphComponent implements OnInit {\n  highcharts = Highcharts;\n  year: any;\n  params: any;\n  $destroy: Subject<any> = new Subject<any>();\n  resData: any;\n  options: any;\n  barChartoptions: any;\n  years: Object | undefined;\n  needYear = false;\n  needMonth = false;\n  chartDispType: any = ['Year-wise', 'Month-wise', 'Date-wise']\n  monthsArray: any = [\"JANUARY\", \"FEBRUARY\", \"MARCH\", \"APRIL\", \"MAY\", \"JUNE\", \"JULY\", \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"];\n  currentYear = new Date().getFullYear()\n  currentMonth = this.monthsArray[new Date().getMonth()];\n  month: any;\n  yearArray: any;\n  selectedYear: any;\n  constructor(\n    private fb: FormBuilder,\n    private salaryAPI: SalaryService,\n  ) { }\n  ngOnDestroy(): void {\n    this.$destroy.next(true);\n    this.$destroy.complete();\n  }\n  ngOnInit(): void {\n    this.getYears();\n    this.getYearWiseData(2021);\n    this.showChart();\n  }\n  datewiseForm = this.fb.group({\n    period: [''],\n    year: ['2023'],\n    month: [this.currentMonth],\n  })\n  onSelectedYear(e: any){\n\n  }\n  getYears() {\n    this.salaryAPI.getPayrollYears().pipe(takeUntil(this.$destroy)).subscribe(\n      {\n        next: (\n          (res) => {\n            this.yearArray = res;\n          }\n        ),\n        error: (\n          (err) => {\n\n          }\n        ), complete: (\n          () => {\n\n          }\n        )\n      }\n    )\n  }\n  onSelectPeriod(event: any) {\n    this.getYearWiseData(event.value)\n  }\n  getYearWiseData(year: any) {\n    this.selectedYear = year;\n    const monthsArray = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n  ]\n    let params = new HttpParams()\n      .set('period_y', year)\n    this.salaryAPI.getYearSalarySummary(params).pipe(takeUntil(this.$destroy)).subscribe(\n      {\n        next: (\n          (res) => {\n          }\n        ),\n        error: (\n          (err) => {\n\n          }\n        ), complete: (\n          () => {\n\n          }\n        )\n      }\n    );\n\n  }\n\n\n  showChart(){\n    this.barChartoptions = {\n      chart: {\n        type: 'column',\n      },\n      title: {\n        text: 'Average Numer of Employee per Month',\n      },\n      subtitle: {\n        text: 'API Internal Server',\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: ['Jan','Feb','Mar','Apr','May','Jun','Jul',\n        'Aug','Sep','Oct','Nov','Dec'],\n        crosshair: true,\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Employee Number',\n        },\n      },\n      tooltip: {\n        headerFormat:\n          '<span style = \"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style = \"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style = \"padding:0\"><b>{point.y:.1f}</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0,\n        },\n      },\n      series: [\n        {\n          name: 'Period in Months',\n          data:  [49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6,\n            148.5, 216.4, 194.1, 95.6, 54.4]\n        },\n      ],\n    };\n    Highcharts.chart('Account-chart', this.barChartoptions);\n  }\n}\n","<div class=\"mat-elevation-z1 bg-white\">\n    <div class=\"row\">\n        <mat-card-header class=\"breadcrumb\">\n          <div>\n            <a routerLink=\"/administration/\" skipLocationChange>Dashboard / </a>\n            <a routerLink=\" \" skipLocationChange>Payroll / </a>\n            <a routerLink=\" \" skipLocationChange>Chart </a>\n          </div>\n        </mat-card-header>\n      </div>\n    <br>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <input type=\"number\" class=\"pull-right form-control\" (blur)=\"onSelectedYear($event)\" placeholder=\"Year\" #input>\n      </div>\n      <div class=\"col-md-6\"></div>\n      <div class=\"col-md-3\">\n        <p>Data for: {{this.selectedYear}} </p>\n      </div>\n      <div class=\"col-md-8\">\n        <form [formGroup]=\"datewiseForm\" *ngIf=\"this.needYear\">\n          <p>\n            <mat-form-field>\n              <mat-label>Select Year</mat-label>\n              <mat-select  (selectionChange)=\"getMonthWise($event)\" formControlName=\"year\">\n                <mat-option *ngFor=\"let item of this.years\" value=\"{{item.year}}\">{{item.year}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </p>\n      </form>\n\n        <form [formGroup]=\"datewiseForm\" *ngIf=\"this.needMonth\">\n          <div class=\"row\">\n        <div class=\"col-md-6\">\n            <p>\n            <mat-form-field>\n              <mat-label>Select Year</mat-label>\n              <mat-select (selectionChange)=\"getDateWise($event)\" formControlName=\"year\">\n                <mat-option *ngFor=\"let item of this.years\"  value=\"{{item.year}}\">{{item.year}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </p>\n          </div>\n        <div class=\"col-md-6\">\n          <p>\n            <mat-form-field>\n              <mat-label>Select Month</mat-label>\n              <mat-select  (selectionChange)=\"getDateWise($event)\" formControlName=\"month\">\n                <mat-option *ngFor=\"let item of monthsArray\" value=\"{{item}}\">{{item}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </p>\n          </div>\n          </div>\n      </form>\n      </div>\n    </div>\n    <hr>\n    \n    <div class=\"mat-elevation-z1 bg-white\" id=\"Account-chart\"></div>\n  </div>\n","import { HttpParams } from \"@angular/common/http\";\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MonthsService } from \"src/@core/Models/months/months.service\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport * as Highcharts from \"highcharts\";\nimport { PayrollService } from \"src/app/erp-hr/data/payroll-services/payroll.service\";\nimport { DepartmentService } from \"src/app/erp-hr/data/configuration-services/department.service\";\nimport { JobgroupService } from \"src/app/erp-hr/data/configuration-services/jobgroup.service\";\nimport { ReportService } from \"src/app/erp-hr/data/payroll-services/report.service\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-payroll-dashboard\",\n  templateUrl: \"./payroll-dashboard.component.html\",\n  styleUrls: [\"./payroll-dashboard.component.scss\"],\n})\nexport class PayrollDashboardComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = [\n    \"index\",\n    \"payrollId\",\n    \"employeeId\",\n    \"name\",\n    \"empStartDate\",\n    \"workingDays\",\n    \"basicSalary\",\n    \"grossSalary\",\n    \"nhif\",\n    \"nssf\",\n    \"chargeablePay\",\n    \"taxableCharge\",\n    \"insuranceRelief\",\n    \"personalRelief\",\n    \"paye\",\n    \"housingLevy\",\n    \"netSalary\",\n    \"status\",\n  ];\n\n  displayedColumnsAnalysis: string[] = [\n    \"category\",\n    \"prevPayroll\",\n    \"currPayroll\",\n    \"changeRate\",\n  ];\n\n  employeeState: string[] = [\"EXITED\", \"EXISTED\", \"JOINED\"];\n\n  dataSource!: MatTableDataSource<any>;\n  dataSourceAnalysis!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  loading: boolean;\n  data: any;\n  highcharts = Highcharts;\n  monthsArray: any[];\n  // year = new Date().getFullYear();\n  currentMonthIndex = new Date().getMonth();\n  // month: any;\n  currentYear = new Date().getFullYear();\n  currentMonth: any;\n  prevYear = new Date().getFullYear();\n  prevMonth: any;\n  numRows: number;\n  departmentArray = new Array();\n  departmentId = 0;\n  jobGroupFk = 0;\n  jobGroupArray = new Array();\n  isFinal = \"Y\";\n  currIsFinal = \"Y\";\n  prevIsFinal = \"Y\";\n  category = \"EXISTED\";\n  dataResp: any;\n  employeeChartoptions: any;\n  barChartoptions: any;\n\n  active: any = 0;\n  exited: any = 0;\n  joined: any = 0;\n\n  Form: FormGroup\n  months: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  constructor(\n    private monthAPI: MonthsService,\n    private payrollService: PayrollService,\n    private departmentAPI: DepartmentService,\n    private jobGroupAPI: JobgroupService,\n    private notificationAPI: NotificationServiceService,\n    private reportService: ReportService,\n    private fb: FormBuilder\n  ) {\n    // this.getDepartments();\n    // this.getJobGroups();\n    // this.getData();\n  }\n  ngOnDestroy(): void { }\n  ngOnInit() {\n    // this.getMonths();\n    const currentYear = new Date().getFullYear();\n    const currentMonthIndex = new Date().getMonth();\n    const currentMonthName = this.months[currentMonthIndex];\n    this.Form = this.fb.group({\n      prevPeriodY: [currentYear],\n      prevPeriodM: [currentMonthName],\n      prevIsFinal: ['N'],\n      currPeriodY: [currentYear],\n      currPeriodM: [currentMonthName],\n      currIsFinal: ['N'],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n  }\n\n  ngAfterViewInit(): void {\n    this.getData();\n  }\n\n  // getMonths() {\n  //   this.monthsArray = this.monthAPI.months();\n  //   this.currentMonth = this.monthsArray[new Date().getMonth()].name;\n  // }\n  // getDepartments() {\n  //   let params = { status: \"APPROVED\" };\n  //   this.departmentAPI.readByStatus(params).subscribe((res) => {\n  //     let departmentKey = {\n  //       id: 0,\n  //       name: \"All\",\n  //     };\n  //     this.departmentArray.push(departmentKey);\n  //     for (let i = 0; i < res.entity.length; i++) {\n  //       let departmentKey = {\n  //         id: res.entity[i].id,\n  //         name: res.entity[i].departmentName,\n  //       };\n  //       this.departmentArray.push(departmentKey);\n  //     }\n  //   });\n  // }\n  // getJobGroups() {\n  //   this.jobGroupAPI.read().subscribe((res) => {\n  //     let itemKey = {\n  //       id: 0,\n  //       name: \"All\",\n  //     };\n  //     this.jobGroupArray.push(itemKey);\n  //     for (let i = 0; i < res.entity.length; i++) {\n  //       let itemKey = {\n  //         id: res.entity[i].id,\n  //         name: res.entity[i].jobGroupName,\n  //       };\n  //       this.jobGroupArray.push(itemKey);\n  //     }\n  //   });\n  // }\n  // isValidYear(input: any): boolean {\n  //   const year = parseInt(input, 10);\n  //   return year >= 1000 && year <= 9999;\n  // }\n  // onSelectCurrYear(event: any) {\n  //   if (this.isValidYear(event.target.value)) {\n  //     this.currentYear = event.target.value;\n  //     this.getData();\n  //   } else {\n  //     this.notificationAPI.alertWarning(\"Invalid Year\");\n  //   }\n  // }\n  // onSelectedCurrMonth(event: any) {\n  //   this.currentMonth = event.target.value;\n  //   this.getData();\n  // }\n  // onSelectPrevYear(event: any) {\n  //   if (this.isValidYear(event.target.value)) {\n  //     this.prevYear = event.target.value;\n  //     this.getData();\n  //   } else {\n  //     this.notificationAPI.alertWarning(\"Invalid Year\");\n  //   }\n  // }\n  // onSelectedPrevMonth(event: any) {\n  //   this.prevMonth = event.target.value;\n  //   this.getData();\n  // }\n  // onSelectedDepartment(event: any) {\n  //   this.departmentId = event.target.value;\n  //   this.getData();\n  // }\n  // onSelectedJobGroup(event: any) {\n  //   this.jobGroupFk = event.target.value;\n  //   this.getData();\n  // }\n  // onSelectedEmployeeState(event: any) {\n  //   this.category = event.target.value;\n  //   this.getData();\n  // }\n  getData() {\n    this.loading = true;\n\n    let params = new HttpParams()\n      .set(\"prevPeriodY\", this.Form.value.prevPeriodY)\n      .set(\"prevPeriodM\", this.Form.value.prevPeriodM)\n      .set(\"prevIsFinal\", this.Form.value.prevIsFinal)\n      .set(\"currPeriodY\", this.Form.value.currPeriodY)\n      .set(\"currPeriodM\", this.Form.value.currPeriodM)\n      .set(\"currIsFinal\", this.Form.value.currIsFinal);\n    this.payrollService.getAllPayrollsAnalysis(params).subscribe(\n      (res) => {\n        console.log(\"this.datathis.data:: \", this.data)\n        this.data = res;\n        if (this.data.statusCode == \"200\" || this.data.statusCode == \"302\") {\n          this.data = this.data.entity;\n          if (this.data && this.data.payrollcategoriescounts) {\n            this.active = this.data.payrollcategoriescounts.active ?? 0;\n            this.exited = this.data.payrollcategoriescounts.exited ?? 0;\n            this.joined = this.data.payrollcategoriescounts.joined ?? 0;\n          }\n\n          if (this.data && this.data.chartdata) {\n          this.showEmployeeChart(this.data.chartdata);\n          this.showSalaryChart(this.data.chartdata);\n          }\n\n          if (this.data && this.data.payrollAnalaysis) {\n          this.getPayrollData(this.data.payrollAnalaysis);\n          }\n          this.data = this.data.payrolllist;\n          if (this.data && (this.data.length != null || this.data.length > 0)) {\n            if (this.departmentId != 0) {\n              this.data = this.data.filter(\n                (item: any) => item.department_id == this.departmentId\n              );\n            }\n            if (this.jobGroupFk != 0) {\n              this.data = this.data.filter(\n                (item: any) => item.jobGroupFk == this.jobGroupFk\n              );\n            }\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          }\n        } else {\n          this.notificationAPI.alertWarning(this.data.message);\n          this.dataSource = new MatTableDataSource(this.data.entity);\n        }\n        this.loading = false;\n      },\n      (err) => {\n        this.loading = false;\n      }\n    );\n  }\n\n  getPayrollData(data: any) {\n    this.dataSourceAnalysis = new MatTableDataSource(data);\n    this.dataSourceAnalysis.paginator = this.paginator;\n    this.dataSourceAnalysis.sort = this.sort;\n  }\n\n  inputs: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.inputs = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  transformMonths(originalData) {\n    const periodmArray = [];\n    for (const item of originalData) {\n      const periodm = item.periodm.trim();\n      periodmArray.push(periodm);\n    }\n    return periodmArray;\n  }\n  transformEmployeeData(originalData: any) {\n    let employeeArray = new Array<any>();\n    for (const item of originalData) {\n      employeeArray.push(Number(item.employeeCount));\n    }\n    return employeeArray;\n  }\n  transformSalaryData(originalData: any) {\n    let salaryArray = new Array<any>();\n    for (const item of originalData) {\n      salaryArray.push(item.grosspay);\n    }\n    return salaryArray;\n  }\n  showEmployeeChart(originalData: any) {\n    this.employeeChartoptions = {\n      chart: {\n        type: \"column\",\n      },\n      title: {\n        text: \"Average Numer of Employee per Month\",\n      },\n      subtitle: {\n        text: \"API Internal Server\",\n      },\n      credits: {\n        enabled: false,\n      },\n      xAxis: {\n        categories: this.transformMonths(originalData),\n        crosshair: true,\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: \"Employee Number\",\n        },\n      },\n      tooltip: {\n        headerFormat:\n          '<span style = \"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style = \"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style = \"padding:0\"><b>{point.y:.1f}</b></td></tr>',\n        footerFormat: \"</table>\",\n        shared: true,\n        useHTML: true,\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0,\n        },\n      },\n      series: [\n        {\n          name: \"Employee\",\n          data: this.transformEmployeeData(originalData),\n        },\n      ],\n    };\n    Highcharts.chart(\"employeeChartoptions\", this.employeeChartoptions);\n  }\n\n  showSalaryChart(originalData: any) {\n    this.barChartoptions = {\n      chart: {\n        type: \"column\",\n      },\n      title: {\n        text: \"Average Gross Pay of Employee per Month\",\n      },\n      subtitle: {\n        text: \"API Internal Server\",\n      },\n      credits: {\n        enabled: false,\n      },\n      xAxis: {\n        categories: this.transformMonths(originalData),\n        crosshair: true,\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: \"Amount\",\n        },\n      },\n      tooltip: {\n        headerFormat:\n          '<span style = \"font-size:10px\">{point.key}</span><table>',\n        pointFormat:\n          '<tr><td style = \"color:{series.color};padding:0\">{series.name}: </td>' +\n          '<td style = \"padding:0\"><b>{point.y:.1f}</b></td></tr>',\n        footerFormat: \"</table>\",\n        shared: true,\n        useHTML: true,\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0.2,\n          borderWidth: 0,\n        },\n      },\n      series: [\n        {\n          name: \"Salary\",\n          data: this.transformSalaryData(originalData),\n        },\n      ],\n    };\n    Highcharts.chart(\"Account-chart\", this.barChartoptions);\n  }\n\n  downloadAnalysis() {\n    let params = new HttpParams()\n      .set(\"prevYear\", this.prevYear)\n      .set(\"prevMonth\", this.prevMonth)\n      .set(\"currYear\", this.currentYear)\n      .set(\"currMonth\", this.currentMonth)\n      .set(\"category\", this.category)\n      .set(\"prevIsFinal\", this.prevIsFinal)\n      .set(\"currIsFinal\", this.currIsFinal);\n    let filename = \"Report for \" + this.category;\n    this.reportService.generateAnalysis(params).subscribe((data) => {\n      if (data.statusCode == \"404\") {\n        this.notificationAPI.alertWarning(data.message);\n      } else {\n        this.saveToFileSystem(\n          filename,\n          data,\n          this.currentYear,\n          this.currentMonth\n        );\n      }\n      this.loading = false;\n    });\n  }\n  private saveToFileSystem(filename: any, response: any, year, month) {\n    const blob = new Blob([response], { type: \"application/vnd.ms-excel\" });\n    const url = window.URL.createObjectURL(blob);\n    const anchor = document.createElement(\"a\");\n    anchor.download = filename + \"_for_\" + year + \"_\" + month + \".xlsx\";\n    anchor.href = url;\n    anchor.click();\n  }\n}\n","<div class=\"card\">\n  <div class=\"mx-4\">\n    <div class=\"row\">\n      <div *ngIf=\"loading\">\n        <p><small>Loading, please wait...</small></p>\n        <p>\n          <mat-progress-bar mode=\"query\"></mat-progress-bar>\n        </p>\n      </div>\n      <!-- <mat-card-header class=\"breadcrumb\">\n        <div>\n          <a routerLink=\"/administration/\" skipLocationChange>Dashboard /\n          </a>\n          <a routerLink=\" \" skipLocationChange>Payroll / </a>\n          <a routerLink=\" \" skipLocationChange> Dashboard </a>\n        </div>\n      </mat-card-header> -->\n    </div>\n\n    <div class=\"row mt-2\">\n      <div class=\"col-xl-4 col-lg-6\">\n        <div class=\"card l-bg-green-dark\">\n          <div class=\"card-statistic-3\">\n            <div class=\"card-icon card-icon-large\"><i class=\"fa fa-briefcase\"></i></div>\n            <div class=\"card-content\">\n              <h4 class=\"card-title\">Employees who Joined</h4>\n              <span class=\"data-1\">{{ joined }}</span>\n              <mat-progress-bar mode=\"determinate\"\n                class=\"progress-m progress-round progress-shadow l-orange-progress mt-2 mb-2\" value=\"40\">\n              </mat-progress-bar>\n              <p class=\"mb-0 text-sm\">\n                <span class=\"mr-2\"><i class=\"fa fa-arrow-up\"></i></span>\n                <span class=\"text-nowrap\"> Employees</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-4 col-lg-6\">\n        <div class=\"card l-bg-cyan-dark\">\n          <div class=\"card-statistic-3\">\n            <div class=\"card-icon card-icon-large\"><i class=\"fas fa-users\"></i></div>\n            <div class=\"card-content\">\n              <h4 class=\"card-title\">Active Employee</h4>\n              <span class=\"data-1\">{{active}}</span>\n              <mat-progress-bar mode=\"determinate\"\n                class=\"progress-m progress-round progress-shadow l-purple-progress mt-2 mb-2\" value=\"40\">\n              </mat-progress-bar>\n              <p class=\"mb-0 text-sm\">\n                <span class=\"mr-2\"><i class=\"fa fa-arrow-up\"></i> </span>\n                <span class=\"text-nowrap\"> Employees</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-4 col-lg-6\">\n        <div class=\"card l-bg-purple-dark\">\n          <div class=\"card-statistic-3\">\n            <div class=\"card-icon card-icon-large\"><i class=\"fa fa-globe\"></i></div>\n            <div class=\"card-content\">\n              <h4 class=\"card-title\">Employees who Exited</h4>\n              <span class=\"data-1\">{{exited}}</span>\n              <mat-progress-bar mode=\"determinate\"\n                class=\"progress-m progress-round progress-shadow l-green-progress mt-2 mb-2\" value=\"40\">\n              </mat-progress-bar>\n              <p class=\"mb-0 text-sm\">\n                <span class=\"mr-2\"><i class=\"fa fa-arrow-up\"></i> </span>\n                <span class=\"text-nowrap\"> Employees</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- <div class=\"col-md-4 cols-sm-12\">\n        <div class=\"card p-3 mb-2 bg-primary text-white\">\n          <div class=\"card-header\">Employees who Joined</div>\n          <div class=\"card-body\">\n            <i class=\"material-icons monitorIconSize\">fiber_new</i>\n            <h1 class=\"pull-right\">{{ this.joined }}</h1>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4 cols-sm-12\">\n        <div class=\"card p-3 mb-2 bg-success text-white\">\n          <div class=\"card-header\">Active Employee</div>\n          <div class=\"card-body\">\n            <i class=\"material-icons monitorIconSize\">reorder</i>\n            <h1 class=\"pull-right\">{{ this.active }}</h1>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-4 cols-sm-12\">\n        <div class=\"card p-3 mb-2 bg-secondary text-white\">\n          <div class=\"card-header\">Employees who Exited</div>\n          <div class=\"card-body\">\n            <i class=\"material-icons monitorIconSize\">line_weight</i>\n            <h1 class=\"pull-right\">\n              {{ this.exited }}\n            </h1>\n          </div>\n        </div>\n      </div> -->\n    </div>\n  \n    \n    <!-- <br />\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"mat-elevation-z1 bg-white\" id=\"employeeChartoptions\"></div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"mat-elevation-z1 bg-white\" id=\"Account-chart\"></div>\n      </div>\n    </div>\n    <br /> -->\n\n\n    <div class=\"table-responsive\">\n      <div class=\"materialTableHeader mt-0\">\n\n        <form [formGroup]=\"Form\">\n          <div class=\"row\">\n            <div class=\"col-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Prev Period Year</mat-label>\n                <input matInput formControlName=\"prevPeriodY\" />\n                <mat-error *ngIf=\"\n                Form.get('prevPeriodY').hasError('required')\n              \">\n                  Please Enter previous period year\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Previous Month</mat-label>\n                <mat-select formControlName=\"prevPeriodM\">\n                  <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{\n                    month }}</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"Form.get('prevPeriodM').hasError('required')\">Please select\n                  a previous Period Month</mat-error>\n              </mat-form-field>\n            </div>\n  \n            <div class=\"col-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Current Period Year</mat-label>\n                <input matInput formControlName=\"currPeriodY\" />\n                <mat-error *ngIf=\"\n                Form.get('currPeriodY').hasError('required')\n              \">\n                  Please Enter Current period year\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Current Month</mat-label>\n                <mat-select formControlName=\"currPeriodM\">\n                  <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{\n                    month }}</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"Form.get('currPeriodM').hasError('required')\">Please select\n                  a current Period Month</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </form>\n  \n      </div>\n\n      <div class=\"materialTableHeader mt-2\">\n        <div class=\"row\">\n          <div class=\"col-5\">\n            <ul class=\"header-buttons-left ms-0\">\n              <li class=\"dropdown\">\n                <h2>Payroll Close</h2>\n              </li>\n              <li class=\"dropdown m-l-20\">\n                <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                  class=\"browser-default search-field\" aria-label=\"Search box\">\n              </li>\n\n            </ul>\n          </div>\n          <div class=\"col-2\">\n\n          </div>\n          <div class=\"col-2\">\n\n          </div>\n          <div class=\"col-3\">\n            <ul class=\"header-buttons\">\n              <li>\n                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                  <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                    (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                </div>\n              </li>\n              <li>\n                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                  <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                </div>\n              </li>\n              <li>\n                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                  <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                </div>\n              </li>\n              <li>\n                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                  <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <mat-table #table matTableExporter [dataSource]=\"dataSourceAnalysis\" matSort class=\"mat-cell\"\n        #exporter=\"matTableExporter\">\n        <ng-container matColumnDef=\"category\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            Category\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            {{ row.category }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"prevPayroll\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            Previous Payroll\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            {{ row.prevPayroll }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"currPayroll\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            Current Payroll\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            {{ row.currPayroll }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"changeRate\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            Change Rate\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            {{ row.changeRate }}\n          </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumnsAnalysis\">\n        </mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumnsAnalysis;\" [style.cursor]=\"'pointer'\" matRipple>\n        </mat-row>\n\n        <tr *matNoDataRow>\n          <td colspan=\"{{ displayedColumnsAnalysis.length }}\">\n            No data matching the filter \"{{ inputs }}\"\n          </td>\n        </tr>\n      </mat-table>\n\n      <div *ngIf=\"loading\">\n        <p><small>Loading, please wait...</small></p>\n        <p>\n          <mat-progress-bar mode=\"query\"></mat-progress-bar>\n        </p>\n      </div>\n\n      <mat-paginator [pageSizeOptions]=\"[10, 20, 30, 40, 50, 100]\" aria-label=\"Select page of Payroll\"></mat-paginator>\n    </div>\n\n    <br />\n    <br />\n\n    <div class=\"table-responsive\">\n      <div class=\"materialTableHeader\">\n        <div class=\"row\">\n          <div class=\"col-5\">\n            <ul class=\"header-buttons-left ms-0\">\n              <li class=\"dropdown\">\n                <h2>Pension Report</h2>\n              </li>\n              <li class=\"dropdown m-l-20\">\n                <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                  class=\"browser-default search-field\" aria-label=\"Search box\" />\n              </li>\n            </ul>\n          </div>\n          <div class=\"col-2\">\n            <select class=\"form-select\" aria-label=\"Default select example\">\n              <option selected>Select Type</option>\n              <option *ngFor=\"let element of this.employeeState\" [value]=\"element\">\n                {{ element }}\n              </option>\n            </select>\n          </div>\n          <div class=\"col-2\">\n            <button class=\"btn btn-small btn-block\" mat-raised-button color=\"primary\" (click)=\"downloadAnalysis()\">\n              <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>DOWNLOAD\n            </button>\n          </div>\n          <div class=\"col-3\">\n            <ul class=\"header-buttons\">\n              <li>\n                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                  <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                      exporter.exportTable('xlsx', {\n                        fileName: 'assets-list',\n                        sheet: 'sheet1'\n                      })\n                    \" />\n                </div>\n              </li>\n              <li>\n                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                  <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                </div>\n              </li>\n              <li>\n                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                  <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                </div>\n              </li>\n              <li>\n                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                  <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <hr />\n      <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n        #exporter=\"matTableExporter\">\n        <ng-container matColumnDef=\"index\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-5\">\n            Index\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-5\">\n            {{ row.index + 1 }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"payrollId\">\n          <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n            Payroll ID\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n            {{ row.payrollId }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"employeeId\">\n          <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n            Employee ID\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n            {{ row.employeeId }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n          <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            Name\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n            {{ row.name }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"empStartDate\">\n          <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n            Start Date\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n            {{ row.empStartDate }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"workingDays\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            Working Days\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.workingDays }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"basicSalary\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            Basic Salary\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.basicSalary }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"grossSalary\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            GrossSalary\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.grossSalary }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"nhif\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            NHIF\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.nhif }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"nssf\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            NSSF</mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.nssf }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"chargeablePay\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            ChargeablePay</mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.chargeablePay }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"taxableCharge\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            TaxableCharge\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.taxableCharge }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"insuranceRelief\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            InsuranceRelief\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.insuranceRelief }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"personalRelief\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            PersonalRelief\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.personalRelief }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"paye\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            PAYE\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.paye }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"housingLevy\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            HousingLevy\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.housingLevy }}\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"netSalary\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            NetSalary\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.netSalary }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n          <mat-header-cell *matHeaderCellDef class=\"tbl-col-width-per-10\">\n            Status\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let row\" class=\"tbl-col-width-per-10\">\n            {{ row.status }}\n          </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n        </mat-row>\n\n        <tr *matNoDataRow>\n          <td colspan=\"{{ displayedColumns.length }}\">\n            No data matching the filter \"{{ inputs }}\"\n          </td>\n        </tr>\n      </mat-table>\n      <div *ngIf=\"loading\">\n        <p><small>Loading, please wait...</small></p>\n        <p>\n          <mat-progress-bar mode=\"query\"></mat-progress-bar>\n        </p>\n      </div>\n      <mat-paginator [pageSizeOptions]=\"[7, 20, 30, 40, 50, 100]\" aria-label=\"Select page of Payroll\"></mat-paginator>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { NavigationStart, Router } from \"@angular/router\";\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexFill,\n  ApexGrid,\n  ApexLegend,\n  ApexNonAxisChartSeries,\n  ApexPlotOptions,\n  ApexResponsive,\n  ApexStroke,\n  ApexTooltip,\n  ApexXAxis,\n  ApexYAxis,\n  ChartComponent,\n} from \"ng-apexcharts\";\n\n\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { element } from \"protractor\";\nimport { ItemCategoryService } from \"src/app/erp-inventory/data/services/item-category.service\";\n\nexport type chartOptions = {\n  series: ApexAxisChartSeries;\n  radialseries: ApexNonAxisChartSeries;\n  series2: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  tooltip: ApexTooltip;\n  grid: ApexGrid;\n  stroke: ApexStroke;\n  legend: ApexLegend;\n  colors: string[];\n  responsive: ApexResponsive[];\n  labels: string[];\n};\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.sass\"],\n})\nexport class DashboardComponent implements OnInit {\n\n\n  passwordFlag: any;\n  isPageReloaded = false;\n  currentUser: any;\n\n\n  constructor(\n    private tokenCookieService: TokenCookieService,\n    private dialog: MatDialog,\n    private itemCatMan: ItemCategoryService,\n  )\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.passwordFlag = this.tokenCookieService.getUser().systemGenPassword;\n    this.currentUser = this.tokenCookieService.getUser().username;\n     \n\n\n  }\n\n\n  reLoadPage() {\n    // Perform password reset logic here\n    location.reload();\n  }\n\n\n\n\n\n  \n\n\n     \n      \n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Dashboard'\" [items]=\"['Home']\" [active_item]=\"'Dashboard'\">\n      </app-breadcrumb>\n    </div>\n    <!-- Widgets -->\n   <app-gen-widgets></app-gen-widgets>\n    <!-- #END# Widgets -->\n\n    <div class=\"row\">\n      <app-analytics></app-analytics>\n    </div>\n  </div>\n</section>\n","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject, Subscription } from 'rxjs';\nimport { MonthsService } from \"src/@core/Models/months/months.service\";\nimport { AnalysisService } from \"src/app/erp-hr/data/configuration-services/analysis.service\";\nimport { SupplierCategoriesService } from \"src/app/erp-suppliersmanagement/data/supplier-categories.service\";\n\n\n@Component({\n  selector: \"app-gen-widgets\",\n  templateUrl: \"./gen-widgets.component.html\",\n  styleUrls: [\"./gen-widgets.component.scss\"],\n})\nexport class GenWidgetsComponent implements OnInit {\n  resData: any;\n  getYear: number;\n  getMonth: any;\n  year: any;\n  month: any;\n  totalNssf: any;\n  totalNhif: any;\n  totalPaye: any;\n  totalGrosspay: any;\n  totalNetpay: any;\n  totalEmployees: any;\n  currentDate = new Date();\n  $destroy: Subject<boolean> = new Subject<boolean>();\n  loading: boolean = false;\n  dataResp: any;\n  activeEmployees: number = 0;\n  leaveRequest: number = 0;\n  newEmployees: number = 0;\n  newOpenings: number = 0;\n  constructor(\n    private monthAPI: MonthsService,\n    private analysisAPI: AnalysisService,\n  ) {\n    this.getYear = this.currentDate.getFullYear();\n    this.getMonth = this.monthAPI.months()[this.currentDate.getMonth()];\n  }\n  ngOnDestroy(): void {\n    this.$destroy.next(true);\n    this.$destroy.complete();\n  }\n  ngOnInit() {\n    this.getData();\n  }\n  getData() {\n    let params = new HttpParams()\n      .set('Year', this.currentDate.getFullYear());\n    this.analysisAPI.getAdminAnalysis(params).subscribe(res => {\n      this.dataResp = res;\n\n      this.activeEmployees = this.dataResp.activeEmployees || 0;\n      this.leaveRequest = this.dataResp.leaveRequest || 0;\n      this.newEmployees = this.dataResp.newEmployees || 0;\n      this.newOpenings = this.dataResp.newOpenings || 0;\n\n\n    })\n  }\n\n\n\n  onEmployees() {\n    console.log(\"Employees card clicked\");\n  }\n\n  onLeaveRequests() {\n    console.log(\"Leave Requests card clicked\");\n  }\n\n  onNewEmployees() {\n    console.log(\"New Employees card clicked\");\n  }\n\n  onNewOpenings() {\n    console.log(\"New Openings card clicked\");\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xl-3 col-lg-6\" (click)=\"onEmployees()\">\n        <div class=\"card bg-better-green\">\n            <div class=\"card-statistic-3\">\n                <div class=\"card-icon card-icon-large\"><i class=\"fas fa-users\"></i></div>\n                <div class=\"card-content\">\n                    <h4 class=\"card-title\">Employees</h4>\n                    <span class=\"data-1\">{{activeEmployees}}</span>\n                    <mat-progress-bar mode=\"determinate\"\n                        class=\"progress-m progress-round progress-shadow l-orange-progress mt-2 mb-2\" value=\"40\">\n                    </mat-progress-bar>\n                    \n                    <p class=\"mb-0 text-sm\">\n                        <span class=\"mr-2\"><i class=\"fa fa-arrow-up\"></i> </span>\n                        <span class=\"text-nowrap\"> Click for more details!</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-xl-3 col-lg-6\" (click)=\"onLeaveRequests()\">\n        <div class=\"card bg-better-green\">\n            <div class=\"card-statistic-3\">\n                <div class=\"card-icon card-icon-large\"><i class=\"far fa-calendar-check\"></i></div>\n                <div class=\"card-content\">\n                    <h4 class=\"card-title\">Leave Requests</h4>\n                    <span class=\"data-1\">{{leaveRequest}}</span>\n                    <mat-progress-bar mode=\"determinate\"\n                        class=\"progress-m progress-round progress-shadow l-orange-progress mt-2 mb-2\" value=\"40\">\n                    </mat-progress-bar>\n                    \n                    <p class=\"mb-0 text-sm\">\n                        <span class=\"mr-2\"><i class=\"fa fa-arrow-up\"></i> </span>\n                        <span class=\"text-nowrap\"> Click for more details!</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-xl-3 col-lg-6\" (click)=\"onNewEmployees()\">\n        <div class=\"card bg-better-green\">\n            <div class=\"card-statistic-3\">\n                <div class=\"card-icon card-icon-large\"><i class=\"fas fa-user-plus\"></i></div>\n                <div class=\"card-content\">\n                    <h4 class=\"card-title\">New Employees</h4>\n                    <span class=\"data-1\">{{newEmployees}}</span>\n                    <mat-progress-bar mode=\"determinate\"\n                        class=\"progress-m progress-round progress-shadow l-orange-progress mt-2 mb-2\" value=\"40\">\n                    </mat-progress-bar>\n                    \n                    <p class=\"mb-0 text-sm\">\n                        <span class=\"mr-2\"><i class=\"fa fa-arrow-up\"></i> </span>\n                        <span class=\"text-nowrap\"> Click for more details!</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-xl-3 col-lg-6\" (click)=\"onNewOpenings()\">\n        <div class=\"card bg-better-green\">\n            <div class=\"card-statistic-3\">\n                <div class=\"card-icon card-icon-large\"><i class=\"fas fa-briefcase\"></i></div>\n                <div class=\"card-content\">\n                    <h4 class=\"card-title\">New Openings</h4>\n                    <span class=\"data-1\">{{newOpenings}}</span>\n                    <mat-progress-bar mode=\"determinate\"\n                        class=\"progress-m progress-round progress-shadow l-orange-progress mt-2 mb-2\" value=\"40\">\n                    </mat-progress-bar>\n                    \n                    <p class=\"mb-0 text-sm\">\n                        <span class=\"mr-2\"><i class=\"fa fa-arrow-up\"></i> </span>\n                        <span class=\"text-nowrap\"> Click for more details!</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemCategoryService {\n\n  constructor(private http: HttpClient) { }\n\n  getItemCategories(): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/all`;\n    return this.http.get<any[]>(ItemCatUrl);\n  }\n\n  getItemCategoriesId(id: any): Observable<any> {\n    return this.http.get<any>(`${environment.baseUrlProcurement}/api/v1/ItemCategory/getById/${id}`);\n  }\n\n  addItemCategories(data: any): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/create`;\n    return this.http.post<any>(ItemCatUrl, data);\n  }\n\n  updateItemCategories(TaxesDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/update/`;\n    return this.http.put<any>(updateBillUrl, TaxesDetails)\n  }\n\n\n  deleteItemCategoriesPemanently(params: any): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/delete`;\n    return this.http.delete<any>(ItemCatUrl, {params});\n  }\n\n\n  uploadBatchItemCats(excelUpload: any[]): Observable<any> {\n    const ItemCatUrl = `${environment.baseUrlProcurement}/api/v1/ItemCategory/uploadBulk`;\n    return this.http.post<any>(ItemCatUrl, excelUpload);\n  }\n\n  // ********************************************************************************************************************\n\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}