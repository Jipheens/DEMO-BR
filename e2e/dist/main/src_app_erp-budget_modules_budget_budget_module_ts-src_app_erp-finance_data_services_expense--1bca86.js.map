{"version":3,"file":"src_app_erp-budget_modules_budget_budget_module_ts-src_app_erp-finance_data_services_expense--1bca86.js","mappings":"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","sources":["./src/app/erp-budget/data/services/budget-reports.service.ts","./src/app/erp-budget/modules/budget/budget-routing.module.ts","./src/app/erp-budget/modules/budget/budget.module.ts","./src/app/erp-budget/modules/budget/pages/budget-imports/budget-exp/budget-exp.component.ts","./src/app/erp-budget/modules/budget/pages/budget-imports/budget-exp/budget-exp.component.html","./src/app/erp-budget/modules/budget/pages/budget-imports/budget/budget.component.ts","./src/app/erp-budget/modules/budget/pages/budget-imports/budget/budget.component.html","./src/app/erp-budget/modules/budget/pages/budget-imports/mng-budget-dialog/mng-budget-dialog.component.ts","./src/app/erp-budget/modules/budget/pages/budget-imports/mng-budget-dialog/mng-budget-dialog.component.html","./src/app/erp-budget/modules/budget/pages/budget-reports/budget-reports.component.ts","./src/app/erp-budget/modules/budget/pages/budget-reports/budget-reports.component.html","./src/app/erp-budget/modules/budget/pages/budget/all-budgets/all-budgets.component.ts","./src/app/erp-budget/modules/budget/pages/budget/all-budgets/all-budgets.component.html","./src/app/erp-budget/modules/budget/pages/budget/manage-budgets/manage-budgets.component.ts","./src/app/erp-budget/modules/budget/pages/budget/manage-budgets/manage-budgets.component.html","./src/app/erp-budget/modules/budget/pages/dialogs/budget-report-dialog/budget-report-dialog.component.ts","./src/app/erp-budget/modules/budget/pages/dialogs/budget-report-dialog/budget-report-dialog.component.html","./src/app/erp-budget/modules/budget/pages/dialogs/budget-validation/budget-validation.component.ts","./src/app/erp-budget/modules/budget/pages/dialogs/budget-validation/budget-validation.component.html","./src/app/erp-finance/data/services/expense-management.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\n\nexport class BudgetReportsService {\n  constructor(private http: HttpClient) { }\n\n  // Download variance Excel report\n  downloadVarianceExcelReport(params: any): Observable<any> {\n    const headers = new HttpHeaders().set('Accept', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    const requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: 'arraybuffer', \n      withCredentials: false,\n    };\n    const API_URL = `${environment.baseUrlFinance}/api/v1/report/download/budget/variance`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: ArrayBuffer) => { \n        return {\n          filename: 'Variance_Report.xlsx',\n          data: new Blob([response], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' }),\n        };\n      })\n    );\n  }\n\n  // Download budget balance Excel report\n  downloadBudgetBalanceReport(params: any): Observable<any> {\n    const headers = new HttpHeaders().set('Accept', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    const requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: 'arraybuffer', \n      withCredentials: false,\n    };\n    const API_URL = `${environment.baseUrlFinance}/api/v1/report/download/budget/balance`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: ArrayBuffer) => { \n        return {\n          filename: 'Budget_Balance_Report.xlsx',\n          data: new Blob([response], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' }),\n        };\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\nimport { AllBudgetsComponent } from './pages/budget/all-budgets/all-budgets.component';\nimport { ManageBudgetsComponent } from './pages/budget/manage-budgets/manage-budgets.component';\nimport { BudgetReportsComponent } from './pages/budget-reports/budget-reports.component';\n\nconst routes: Routes = [\n   //Budgets\n   {\n    path: \"all-budgets\",\n    component: AllBudgetsComponent,\n    canActivate: [RoutePrivilegeGuard],\n   data: {  clientName: 'BudgetModule', requiredPrivilege: [\"All Budgets\"] },\n  },\n  {\n    path: \"manage-budgets\",\n    component: ManageBudgetsComponent,\n    canActivate: [RoutePrivilegeGuard],\n   data: {  clientName: 'BudgetModule', requiredPrivilege: [\"Manage Budgets\"] },\n  },\n  {\n    path: \"budget-reports\",\n    component: BudgetReportsComponent,\n    canActivate: [RoutePrivilegeGuard],\n   data: {  clientName: 'BudgetModule', requiredPrivilege: [\"Dashboard\"] },\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BudgetRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\n\nimport { BudgetRoutingModule } from './budget-routing.module';\nimport { ManageBudgetsComponent } from './pages/budget/manage-budgets/manage-budgets.component';\nimport { AllBudgetsComponent } from './pages/budget/all-budgets/all-budgets.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { BudgetValidationComponent } from './pages/dialogs/budget-validation/budget-validation.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { BudgetComponent } from './pages/budget-imports/budget/budget.component';\nimport { BudgetExpComponent } from './pages/budget-imports/budget-exp/budget-exp.component';\nimport { MngBudgetDialogComponent } from './pages/budget-imports/mng-budget-dialog/mng-budget-dialog.component';\nimport { BudgetReportsComponent } from './pages/budget-reports/budget-reports.component';\nimport { BudgetReportDialogComponent } from './pages/dialogs/budget-report-dialog/budget-report-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AllBudgetsComponent,\n    ManageBudgetsComponent,\n    BudgetValidationComponent,\n    BudgetComponent,\n    BudgetExpComponent,\n    MngBudgetDialogComponent,\n    BudgetReportsComponent,\n    BudgetReportDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    BudgetRoutingModule,\n\n\n     //Additional imports\n     DashboardModule,\n     MatIconModule,\n     NgApexchartsModule,\n     PerfectScrollbarModule,\n     MatMenuModule,\n     MatTooltipModule,\n     MatProgressBarModule,\n \n     MatTableModule,\n     MatPaginatorModule,\n     MatInputModule,\n     MatSortModule,\n \n     MatSelectModule,\n     MatTabsModule,\n     MatCheckboxModule,\n     MatTableExporterModule,\n     MatProgressSpinnerModule,\n \n     MatFormFieldModule,\n \n     MatButtonModule,\n     MatDialogModule,\n     MatDatepickerModule,\n     ComponentsModule,\n     MatCardModule,\n     ReactiveFormsModule,\n \n     MatSnackBarModule,\n     MatToolbarModule,\n \n     SharedModule,\n     MatStepperModule,\n     NgxMaskModule,\n     MatChipsModule,\n \n     FormsModule,\n     MatBadgeModule,\n     MatAutocompleteModule,\n     MatBottomSheetModule,\n     MatListModule,\n     MatSidenavModule,\n     MatExpansionModule,\n     MatSliderModule,\n     NgbModule,\n     MatRadioModule\n     \n  ],\n  providers: [DatePipe]\n})\nexport class BudgetModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-budget-exp',\n  templateUrl: './budget-exp.component.html',\n  styleUrls: ['./budget-exp.component.scss']\n})\nexport class BudgetExpComponent implements OnInit {\n\n  @Input() budgetExp: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"budgetExp: \", this.budgetExp)\n\n  }\n\n}\n","<div class=\"budget-exp\">\n    <h3>{{ budgetExp.name }}</h3>\n    <ul>\n      <li *ngFor=\"let distribution of budgetExp.budgetdistributions\">\n        <span>{{ distribution.month }} {{ distribution.year }}:</span> <span>{{ distribution.amount }}</span>\n      </li>\n    </ul>\n  </div>\n  ","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { AllBudgetsComponent } from \"../../budget/all-budgets/all-budgets.component\";\nimport { request } from \"http\";\nimport { send } from \"process\";\nimport { MngBudgetDialogComponent } from \"../mng-budget-dialog/mng-budget-dialog.component\";\n\n@Component({\n  selector: \"app-budget\",\n  templateUrl: \"./budget.component.html\",\n  styleUrls: [\"./budget.component.scss\"],\n})\nexport class BudgetComponent implements OnInit {\n  @Input() budgets: any[];\n  @Output() refreshData: EventEmitter<any> = new EventEmitter<any>();\n\n  displayedColumns: string[] = [\"name\", \"budgetexps\"];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  months: string[] = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    console.log(\"budgets: \", this.budgets);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource = new MatTableDataSource(this.budgets);\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getAmountForMonth(budgetItem: any, month: string): number {\n    if (budgetItem && budgetItem.budgetdistributions) {\n      const budgetDistribution = budgetItem.budgetdistributions.find(\n        (distribution: any) => distribution.month === month\n      );\n      return budgetDistribution\n        ? parseFloat(budgetDistribution.amount.toFixed(4))\n        : 0;\n    } else {\n      return 0;\n    }\n  }\n\n  calculateTotal(budgetexps: any[], index: number, month: string): number {\n    let total = 0;\n    for (let i = 0; i <= index; i++) {\n      total += this.getAmountForMonth(budgetexps[i], month);\n    }\n    return total;\n  }\n\n  calculateCategoryTotal(budget: any, month: string): number {\n    let total = 0;\n    if (budget && budget.budgetexps) {\n      for (const budgetexp of budget.budgetexps) {\n        const budgetDistribution = budgetexp.budgetdistributions.find(\n          (distribution: any) => distribution.month === month\n        );\n        if (budgetDistribution) {\n          total += budgetDistribution.amount;\n        }\n      }\n    }\n    return total;\n  }\n  calculateGrandTotal(month: string): number {\n    let grandTotal = 0;\n    this.budgets.forEach((budget) => {\n      budget.budgetexps.forEach((budgetexp) => {\n        budgetexp.budgetdistributions.forEach((distribution) => {\n          if (distribution.month === month) {\n            grandTotal += distribution.amount;\n          }\n        });\n      });\n    });\n    return grandTotal;\n  }\n\n  getYears(): number[] {\n    const years: number[] = [];\n    if (this.budgets && this.budgets.length > 0) {\n      this.budgets[0].budgetexps[0].budgetdistributions.forEach(\n        (distribution) => {\n          years.push(distribution.year);\n        }\n      );\n    }\n    return years;\n  }\n\n  //\n  getDates(): any[] {\n    const dates: any[] = [];\n    if (this.budgets && this.budgets.length > 0) {\n      this.budgets[0].budgetexps[0].budgetdistributions.forEach(\n        (distribution) => {\n          dates.push(distribution.date);\n        }\n      );\n    }\n    return dates;\n  }\n  mngBudgetRecord(selectedRecord: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"Edit Budget\",\n      selected: selectedRecord,\n    };\n    const dialogRef = this.dialog.open(MngBudgetDialogComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      this.refreshData.emit();\n    });\n  }\n}\n","<div id=\"new-orders\" class=\"budget-table media-list\" style=\"position: relative; max-height: 800px\">\n  <table id=\"new-orders-table\" class=\"table table-hover table-xl mb-0\">\n    <tbody>\n      <tr class=\"sticky-row\">\n        <th></th>\n        <th>P&L BUDGET</th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <ng-container *ngFor=\"let year of getYears()\">\n          <th>{{ year }}</th>\n        </ng-container>\n        <th scope=\"col\" class=\"sticky-column\">Action</th>\n      </tr>\n\n      <tr class=\"sticky-row\">\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <ng-container *ngFor=\"let month of months\">\n          <th>{{ month }}</th>\n        </ng-container>\n        <th scope=\"col\" class=\"sticky-column\"></th>\n      </tr>\n      <tr class=\"sticky-row\">\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <ng-container *ngFor=\"let month of months\">\n          <th></th>\n        </ng-container>\n        <th scope=\"col\" class=\"sticky-column\"></th>\n      </tr>\n      <tr class=\"sticky-row\">\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <ng-container *ngFor=\"let date of getDates()\">\n          <th>{{ date | date : \"short\" }}</th>\n        </ng-container>\n        <th scope=\"col\" class=\"sticky-column\"></th>\n      </tr>\n      <ng-container *ngFor=\"let budget of budgets; let i = index\">\n        <tr>\n          <th></th>\n          <th>{{ budget.name }}</th>\n          <th>Budget Exp Name</th>\n          <!-- <th>Expense Code</th>\n          <th>Expense Name</th> -->\n          <th>Override?</th>\n\n          <th></th>\n          <ng-container *ngFor=\"let month of months\">\n            <th></th>\n          </ng-container>\n          <th scope=\"col\" class=\"sticky-column\"></th>\n        </tr>\n        <ng-container *ngFor=\"let budgetexp of budget.budgetexps; let j = index\">\n          <!-- allowOverride -->\n          <!-- expenseCode -->\n          <!-- expenseName -->\n          <tr>\n            <th></th>\n            <th></th>\n            <th>{{ budgetexp.name }}</th>\n            <!-- <th>{{ budgetexp.expenseCode }}</th>\n            <th>{{ budgetexp.expenseName }}</th> -->\n            <th>{{ budgetexp.allowOverride }}</th>\n            <th></th>\n            <ng-container *ngFor=\"let month of months\">\n              <th>{{ getAmountForMonth(budgetexp, month) }}</th>\n            </ng-container>\n            <th scope=\"col\" class=\"sticky-column\">\n              <button class=\"edit-button\" (click)=\"mngBudgetRecord(budgetexp)\">\n                <i class=\"fas fa-edit\"></i> Edit\n              </button>\n            </th>\n          </tr>\n        </ng-container>\n        <tr class=\"totals-row\">\n          <th></th>\n          <th></th>\n          <th>Total</th>\n          <th></th>\n          <!-- <th></th>\n          <th></th> -->\n          <th></th>\n          <ng-container *ngFor=\"let month of months\">\n            <th>{{ calculateCategoryTotal(budget, month) }}</th>\n          </ng-container>\n          <th scope=\"col\" class=\"sticky-column\"></th>\n        </tr>\n      </ng-container>\n      <tr>\n        <th></th>\n        <th></th>\n        <th></th>\n        <th></th>\n        <!-- <th></th>\n        <th></th> -->\n        <th></th>\n        <ng-container *ngFor=\"let month of months\">\n          <th></th>\n        </ng-container>\n        <th scope=\"col\" class=\"sticky-column\"></th>\n      </tr>\n      <!-- Grand Totals row -->\n      <tr class=\"totals-row\">\n        <th></th>\n        <th>Grand Totals</th>\n        <th></th>\n        <th></th>\n        <!-- <th></th>\n        <th></th> -->\n        <th></th>\n        <ng-container *ngFor=\"let month of months\">\n          <th>{{ calculateGrandTotal(month) }}</th>\n        </ng-container>\n        <th scope=\"col\" class=\"sticky-column\"></th>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { BudgetComponent } from \"../budget/budget.component\";\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialogConfig,\n  MatDialog,\n} from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { BudgetsService } from \"src/app/erp-budget/data/services/budget.service\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { ExpenseLookupComponent } from \"src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component\";\n\n@Component({\n  selector: \"app-mng-budget-dialog\",\n  templateUrl: \"./mng-budget-dialog.component.html\",\n  styleUrls: [\"./mng-budget-dialog.component.sass\"],\n})\nexport class MngBudgetDialogComponent implements OnInit {\n  pageFunction = \"Update\";\n  formData: any;\n  mngForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<BudgetComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private budgetService: BudgetsService,\n    private snackbar: SnackbarService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.formData = this.data.selected;\n\n    this.generateForm(this.formData);\n  }\n\n  generateForm(formData?): void {\n    this.mngForm = this.fb.group({\n      id: [formData?.id || \"\"],\n      // expCode: [formData?.expenseCode || \"\", [Validators.required]],\n      // expName: [formData?.expenseName || \"\"],\n      allowOverride: [formData?.allowOverride || \"\"],\n    });\n  }\n\n  selectedExpenseItem: any[] = [];\n  expenseLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"Single Expense\",\n      selected: this.selectedExpenseItem,\n    };\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          expCode: element.expenseCode,\n          expName: element.expenseName,\n        });\n      });\n    });\n  }\n  budgetOverride(event: any) {\n    if (event.value == \"Yes\") {\n    }\n  }\n  hasOverridePrivilege: boolean = true;\n  hasAccess: boolean;\n\n  checkBudgetOverridePrivilege() {\n    let privilege = \"Manage Budget Override\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"BudgetModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      this.hasOverridePrivilege = true;\n    } else {\n      this.hasOverridePrivilege = false;\n    }\n  }\n  isLoading: boolean = false;\n  posting: boolean = false;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  response: any;\n  submit() {\n    this.posting = true;\n    if (this.pageFunction === \"Update\") {\n\n      console.log(\"this.mngForm.value :: \", this.mngForm.value);\n\n\n      this.budgetService\n        .updateBudgets(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            this.onNoClick();\n          },\n        }),\n        Subscription;\n    }\n  }\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>{{ pageFunction }} Budget Record</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"isLoading || posting\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <ng-container>\n            <!-- <h6 class=\"mx-2\">General Details</h6> -->\n            <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n                <div class=\"row\">\n                    \n          \n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                        <section class=\"example-section\">\n                          <span class=\"example-margin\">Allow Override?\n                          </span>\n                          <mat-radio-group formControlName=\"allowOverride\" (change)=\"budgetOverride($event)\">\n                            <mat-radio-button class=\"example-margin\" [disabled]=\"!hasOverridePrivilege\"\n                              value=\"Y\">Yes</mat-radio-button>\n                            <mat-radio-button class=\"example-margin\" [disabled]=\"!hasOverridePrivilege\"\n                              value=\"N\">No\n                            </mat-radio-button>\n                          </mat-radio-group>\n                        </section>\n                      </div>\n                    <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Allow Override</mat-label>\n                            <mat-select formControlName=\"allowOverride\" required>\n                                <mat-option value=\"true\">True</mat-option>\n                                <mat-option value=\"false\">False</mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"mngForm.get('allowOverride').hasError('required')\">Allow Override is required</mat-error>\n                        </mat-form-field>\n                    </div> -->\n                </div>\n            \n                <div class=\"row\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                        <div class=\"example-button-row\" align=\"end\">\n                            <ng-container>\n                                <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                    [class.auth-spinner]=\"posting\"\n                                    [disabled]=\"!mngForm.valid || posting\"\n                                    (click)=\"submit()\">\n                                    {{ pageFunction }} Budget Line\n                                </button>\n                            </ng-container>\n            \n                            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                                Cancel\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            \n\n        </ng-container>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { BudgetReportDialogComponent } from '../dialogs/budget-report-dialog/budget-report-dialog.component';\n\n@Component({\n  selector: 'app-budget-reports',\n  templateUrl: './budget-reports.component.html',\n  styleUrls: ['./budget-reports.component.scss']\n})\nexport class BudgetReportsComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  generateReport(type: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      type: type,\n    };\n    const dialogRef = this.dialog.open(BudgetReportDialogComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      // result.data.forEach((element) => {\n      // });\n    });\n  }\n\n  previewReport(type: any) {\n    if (type === \"ProfitAndLoss\") {\n      let route = \"/erp-finance/finance-management/preview-profit-loss\";\n      this.router.navigate([route], {\n        queryParams: {\n          action: \"View\",\n        },\n      });\n    } else if (type === \"BalanceSheet\") {\n      let route = \"/erp-finance/finance-management/preview-balance-sheet\";\n      this.router.navigate([route], {\n        queryParams: {\n          action: \"View\",\n        },\n      });\n    }else if (type === \"TrialBalance\") {\n      let route = \"/erp-finance/finance-management/preview-trial-balance\";\n      this.router.navigate([route], {\n        queryParams: {\n          action: \"View\",\n        },\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Budget Reports'\" [items]=\"['Reports']\" [active_item]=\"'Reports'\"></app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"card\">\n                    <div class=\"header\">\n                        <h2>Budget Reports</h2>\n                    </div>\n                    <div class=\"body\">\n                        <div class=\"doc-file-type\">\n                            <ul class=\"list-unstyled\">\n\n\n                                <li class=\"d-flex mb-3\" (click)=\"generateReport('BudgetVariance')\">\n                                    <span class=\"msr-3 align-self-center img-icon primary-rgba text-primary\"><i\n                                            class=\"far fa-file-word\"></i></span>\n                                    <div class=\"set-flex\">\n                                        <h5 class=\"font-16 mb-1\">Budget Variance</h5>\n                                        <p>.pdf document</p>\n                                    </div>\n                                    <div class=\"ms-auto\">\n                                        <i class=\"far fa-arrow-alt-circle-down\"\n                                            (click)=\"generateReport('BudgetVariance')\"></i>\n\n                                    </div>\n                                </li>\n\n\n                                <li class=\"d-flex mb-3\" (click)=\"generateReport('BudgetBalance')\">\n                                    <span class=\"msr-3 align-self-center img-icon success-rgba text-success\"><i\n                                            class=\"far fa-file-excel\"></i></span>\n                                    <div class=\"set-flex\">\n                                        <h5 class=\"font-16 mb-1\">Budget Balance</h5>\n                                        <p>.pdf document</p>\n                                    </div>\n                                    <div class=\"ms-auto\">\n                                        <td>\n                                            <i class=\"far fa-arrow-alt-circle-down\"\n                                                (click)=\"generateReport('BalanceSheet')\"></i>\n\n                                        </td>\n                                    </div>\n                                </li>\n\n\n\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subscription, Subject, takeUntil } from \"rxjs\";\nimport { BudgetsService } from \"src/app/erp-budget/data/services/budget.service\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\n\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { BudgetValidationComponent } from \"../../dialogs/budget-validation/budget-validation.component\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MngBudgetDialogComponent } from \"../../budget-imports/mng-budget-dialog/mng-budget-dialog.component\";\n\n@Component({\n  selector: \"app-all-budgets\",\n  templateUrl: \"./all-budgets.component.html\",\n  styleUrls: [\"./all-budgets.component.scss\"],\n})\nexport class AllBudgetsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"id\",\n    \"budgetCode\",\n    \"expenseCategory\",\n    \"expenseCode\",\n    \"expenseName\",\n    \"expenseBudgetAmount\",\n    \"status\",\n    \"action\",\n  ];\n\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: \"0px\", y: \"0px\" };\n  subscription!: Subscription;\n  selection = new SelectionModel<any>(true, []);\n  data: any;\n  error: any;\n  formData: any;\n  isLoading = true;\n  pageFunction = \"Update\";\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  Form: FormGroup;\n  currentYear: number;\n  constructor(\n    private router: Router,\n    private snackbar: SnackbarService,\n    private budgetsService: BudgetsService,\n    private accessControlService: AccessControlService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {\n    this.currentYear = new Date().getFullYear();\n  }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      year: [this.currentYear, Validators.required],\n    });\n\n    this.getData();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n\n  budgets = [];\n  getData() {\n    this.isLoading = true;\n\n    let params = { year: this.Form.value.year };\n    this.budgetsService\n      .getBudgetsByYear(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.data :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.budgets = this.data.entity;\n            this.isLoading = false;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {            this.isLoading = false;\n        },\n      }),\n      Subscription;\n  }\n\n  refresh() {\n    this.getData();\n  }\n  refreshData() {\n    this.getData();\n  }\n  // ****************************************************************************************************************************\n\n  addBudget() {\n    this.router.navigate([\"/erp-budget/budget/manage-budgets\"]);\n  }\n\n  editBudget(data: any) {\n    let route = \"/erp-budget/budget/manage-budgets\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"Update\" },\n    });\n  }\n  viewBudget(data: any) {\n    let route = \"/erp-budget/budget/manage-budgets\";\n    this.router.navigate([route], {\n      queryParams: { id: data.id, action: \"View\" },\n    });\n  }\n\n  //verify Budget\n  validateBudget(data: any) {\n    let route = \"/erp-budget/budget/manage-budgets\";\n    this.router.navigate([route], {\n      queryParams: {\n        id: data.id,\n        action: \"Verify\",\n      },\n    });\n  }\n\n  deleteBudget(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you really want to delete this Budget?\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Delete Budget!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = { id: id };\n\n        this.budgetsService\n          .deleteBudgetTemporarily(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            },\n            error: (err) => {\n              this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            },\n            complete: () => {\n              this.getData();\n            },\n          }),\n          Subscription;\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n  //*************************************************************************************************************** */\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'All Budgets'\" [items]=\"['Budgets']\" [active_item]=\"'All Budgets'\">\n      </app-breadcrumb>\n    </div>\n    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n      <div class=\"card\">\n        <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n          <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n          </mat-progress-bar>\n        </div>\n        <div class=\"header\">\n          <h2>Budget Allocations</h2>\n        </div>\n        <div class=\"body\">\n          <div class=\"materialTableHeaderCustom mx-0 mt-1\">\n            <div class=\"row mx-2\">\n              <div class=\"col-lg-1 col-md-4 col-sm-12 col-xs-12 mb-0\">\n                <h2>Fetch By Year:</h2>\n              </div>\n              <div class=\"col-lg-11 col-md-8 col-sm-12 col-xs-12 mb-0\">\n                <form [formGroup]=\"Form\">\n                  <div class=\"row mt-2\">\n\n                    <div class=\"col-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                        <mat-label>Year</mat-label>\n                        <input matInput formControlName=\"year\" required>\n                        <mat-error *ngIf=\"Form.get('year').hasError('required')\">Please enter year</mat-error>\n                      </mat-form-field>\n                    </div>\n                    <div class=\"col-2\">\n                      <button class=\"btn-space\" mat-raised-button color=\"primary\" (click)=\"getData()\"  [class.auth-spinner]=\"isLoading\" [disabled]=\"isLoading\">\n                        <mat-icon>cloud_download</mat-icon> Fetch Budget\n                    </button>\n                    \n                    <!-- <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                                [class.auth-spinner]=\"posting\" [disabled]=\"!mngForm.valid\" (click)=\"onSubmit()\">\n                                Submit Imprest\n                              </button> -->\n\n\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n\n          <mat-tab-group>\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <img src=\"assets/images/user/user1.jpg\" alt=\"user\">Budget\n              </ng-template>\n              <!-- year -->\n\n             \n\n\n              <app-budget *ngIf=\"budgets.length > 0\" class=\"m-2\" [budgets]=\"budgets\"\n                (refreshData)=\"refreshData()\"></app-budget>\n\n              <!-- <div class=\"table-responsive mt-3\">\n              </div> -->\n            </mat-tab>\n\n\n          </mat-tab-group>\n        </div>\n      </div>\n    </div>\n    <!-- <app-gen-widgets></app-gen-widgets> -->\n\n\n  </div>\n</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- <div class=\"table-responsive\">\n\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n\n                    <ul class=\"header-buttons-left ms-0\">\n                      <li class=\"dropdown\">\n                        <h2>Budgets</h2>\n                      </li>\n\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\">\n                          <i class=\"material-icons search-icon\">\n                            search\n                          </i>\n                        </label>\n                        <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                          class=\"browser-default search-field\" aria-label=\"Search box\">\n                      </li>\n\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addBudget()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <li>\n                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('APPROVED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">check</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                          <button mat-mini-fab color=\"warn\" (click)=\"processMultipleRows('REJECTED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">cancel</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li *ngIf=\"this.selectedRows.length > 0\">\n                        <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                          <button mat-mini-fab color=\"accent\" (click)=\"processMultipleRows('RETURNED')\"\n                            class=\"mat-button-custom\">\n                            <mat-icon class=\"col-white\">undo</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n\n\n\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                          <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                            (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                        </div>\n                      </li>\n\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                          <img src=\"assets/images/icons/csv.png\" alt=\"\" (click)=\"exporter.exportTable('csv')\" />\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                          <img src=\"assets/images/icons/json.png\" alt=\"\" (click)=\"exporter.exportTable('json')\" />\n                        </div>\n                      </li>\n\n                      <li>\n                        <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                          <img src=\"assets/images/icons/txt.png\" alt=\"\" (click)=\"exporter.exportTable('txt')\" />\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"materialTableHeader mt-2\">\n                <div class=\"row\">\n                  <div class=\"col-1\">\n                    <li class=\"dropdown\">\n                      <h2>HOD Status:</h2>\n                    </li>\n                  </div>\n                  <div class=\"col-5\">\n                    <div class=\"button-container mt-1\">\n                      <button mat-raised-button [class.active]=\"selectedHodStatus === 'PENDING'\"\n                        class=\"mat-button pending\" (click)=\"getHodSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedHodStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getHodSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <button mat-raised-button [class.active]=\"selectedHodStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getHodSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedHodStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getHodSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n\n                  <div class=\"col-1\">\n                    <li class=\"dropdown\">\n                      <h2>Finance Status:</h2>\n                    </li>\n                  </div>\n                  <div class=\"col-5\">\n                    <div class=\"button-container mt-1\">\n                      <button mat-raised-button [class.active]=\"selectedFinanceStatus === 'PENDING'\"\n                        class=\"mat-button pending\" (click)=\"getFinanceSelectedStatus('PENDING')\">\n                        <mat-icon>pending</mat-icon>\n                        PENDING\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedFinanceStatus === 'APPROVED'\"\n                        class=\"mat-button approved\" (click)=\"getFinanceSelectedStatus('APPROVED')\">\n                        <mat-icon>thumb_up</mat-icon>\n                        APPROVED\n                      </button>\n                      <button mat-raised-button [class.active]=\"selectedFinanceStatus === 'RETURNED'\"\n                        class=\"mat-button returned\" (click)=\"getFinanceSelectedStatus('RETURNED')\">\n                        <mat-icon>reply</mat-icon>\n                        RETURNED\n                      </button>\n\n                      <button mat-raised-button [class.active]=\"selectedFinanceStatus === 'REJECTED'\"\n                        class=\"mat-button rejected\" (click)=\"getFinanceSelectedStatus('REJECTED')\">\n                        <mat-icon>cancel</mat-icon>\n                        REJECTED\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n\n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\"\n                      (change)=\"expSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-img tbl-col-width-per-3\">\n                    #\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-3\">\n                    {{row.id}}\n                  </mat-cell>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"budgetCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Budget Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.budgetCode}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"expenseCategory\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    ExpenseCategory\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                    {{row.expenseCategory}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"expenseCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    ExpenseCode\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{row.expenseCode}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"expenseName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                    ExpenseName\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                    {{row.expenseName}}\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"expenseBudgetAmount\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    Budget Amount\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                    {{\n                    row.expenseAmount\n                    | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                    }}\n                  </mat-cell>\n                </ng-container>\n\n\n\n\n                <ng-container matColumnDef=\"status\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header\n                    class=\"column-nowrap psl-3 tbl-col-width-per-10\">Status</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                    (click)=\"$event.stopPropagation()\">\n                    <ng-container [ngSwitch]=\"row.status\">\n                      <button *ngSwitchCase=\"'APPROVED'\" class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                        <i class=\"fas fa-check-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'REJECTED'\" class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                        <i class=\"fas fa-times-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'RETURNED'\" class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                        <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchCase=\"'PENDING'\" class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                        <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                      <button *ngSwitchDefault class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                        <i class=\"fas fa-question-circle\"></i>&nbsp;\n                        {{ row.status }}\n                      </button>\n                    </ng-container>\n                  </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"action\">\n                  <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-10 pr-0\"\n                    *matHeaderCellDef>Action</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i = index\" class=\"column-nowrap psl-3 tbl-col-width-per-10 pr-0\">\n\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\" (click)=\"editBudget(row)\"\n                      class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                    </button>\n\n\n                    <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteBudget(row.id)\" class=\"tbl-action-btn\">\n                      <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewBudget(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\"> No data matching the filter \"{{input.value}}\"</mat-cell>\n              </mat-table>\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2,5,10,20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div> -->","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription, tap, startWith } from \"rxjs\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { AccessControlService } from \"src/app/erp-procurement/data/services/_AccessControlService.service\";\nimport { BudgetValidationComponent } from \"../../dialogs/budget-validation/budget-validation.component\";\nimport { BudgetsService } from \"src/app/erp-budget/data/services/budget.service\";\nimport * as XLSX from \"xlsx\";\nimport { NotificationService } from \"src/app/erp-procurement/data/services/notification.service\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { ExpCCentreLookupComponent } from \"src/app/erp-finance/data/lookups/exp-c-centre-lookup/exp-c-centre-lookup.component\";\nimport { ExpenseLookupComponent } from \"src/app/erp-finance/data/lookups/expense-lookup/expense-lookup.component\";\nimport { MatDatepickerInputEvent } from \"@angular/material/datepicker\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { DepartmentLookupComponent } from \"src/app/erp-finance/data/lookups/department-lookup/department-lookup.component\";\nimport { parseExcelToJSON } from \"src/app/erp-budget/data/parseExcelToJSON\";\n\n@Component({\n  selector: \"app-manage-budgets\",\n  templateUrl: \"./manage-budgets.component.html\",\n  styleUrls: [\"./manage-budgets.component.sass\"],\n})\nexport class ManageBudgetsComponent implements OnInit {\n  // ****************************************************************************************************************************\n\n  // define the needed variables\n  showForm = false;\n  pageFunction = \"Add\";\n  mngForm!: FormGroup;\n  mnhForm!: FormGroup;\n  currentUser: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  id: any;\n  hideSubmit = false;\n  disableActions = false;\n  hideApprovals = false;\n\n  //Arrays containing cost centres and expenses\n  expenses: any;\n  costCentres: any;\n\n  // ****************************************************************************************************************************\n  //displayed Columns for monthly distributions table\n\n  displayedColumns = [\"id\", \"month\", \"amount\", \"actions\"];\n\n  //table binding\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  //months datasource\n  dataSourceMonths = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginatorMonths!: MatPaginator;\n  @ViewChild(MatSort) sortMonths!: MatSort;\n\n  // ************************************************************\n\n  //excel upload variables\n  excelFileAccepted = false;\n  uploadedData: any;\n  headerRows: any;\n\n  //excel columns\n  excelHeaderRef: any[] = [\"expenseGlCode\", \"expenseName\", \"expenseType\"];\n  isLoading: any;\n\n  hasOverridePrivilege: boolean = true;\n\n  // ****************************************************************************************************************************\n\n  expenseCategories = [\n    { name: \"INTEREST INCOME\" },\n    { name: \"INTEREST EXPENSE\" },\n    { name: \"PROCESSING FEES\" },\n    { name: \"Other Fees And Commissions\" },\n    { name: \"Forex Income\" },\n    { name: \"Other Income\" },\n    { name: \"Staff Cost\" },\n    { name: \"Directors’ emoluments- fees\" },\n    { name: \"Administration Costs\" },\n    { name: \"Rent Exp (IFRS 16)\" },\n    { name: \"Legal and professional fees\" },\n    { name: \"Consultancy & Audit Fees\" },\n    { name: \"Depreciation and Amortization\" },\n    { name: \"Loan Loss Provision\" },\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private tokenStorageService: TokenStorageService,\n    private budgetManService: BudgetsService,\n    private snackbar: SnackbarService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private accessControlService: AccessControlService,\n    private notificationAPI: NotificationService,\n    private http: HttpClient\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n  }\n\n  // ****************************************************************************************************************************\n  //define actions on component initiaalization\n  ngOnInit(): void {\n    this.getPage();\n    this.showForm = true;\n\n    this.route.queryParams.subscribe((params) => {\n      //  Confirm the received params from the parent component in path\n      console.log(\"res\", params);\n\n      if (params.hasOwnProperty(\"id\")) {\n        const action = params[\"action\"];\n        if (action == \"Update\") {\n          this.pageFunction = \"Update\";\n        } else if (action == \"View\") {\n          this.pageFunction = \"View\";\n        } else if (action === \"Verify\") {\n          this.pageFunction = \"Verify\";\n          this.disableActions = true;\n        }\n\n        this.id = params[\"id\"];\n        this.getDataById();\n      }\n    });\n    this.checkBudgetOverridePrivilege();\n  }\n\n  //\n\n  checkBudgetOverridePrivilege() {\n    let privilege = \"Manage Budget Override\";\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"BudgetModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      this.hasOverridePrivilege = true;\n    } else {\n      this.hasOverridePrivilege = false;\n    }\n  }\n  // ****************************************************************************************************************************\n  //definition of data destruction ones data utility is complete\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  budgets = [];\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.id);\n    this.budgetManService\n      .getBudgetsById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.budgets = res.entity;\n\n            this.showForm = true;\n\n            this.getPage();\n\n            console.log(\"this.budgets :\", this.budgets);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      }),\n      Subscription;\n  }\n  //definition of necessary functions based on action in params\n  getPage(): void {\n    console.log(\"RES\", this.formData);\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateForm(this.formData);\n    } else if (this.pageFunction === \"View\") {\n      this.generateDisabledFormWithData();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Verify\") {\n      this.generateDisabledFormWithData();\n      this.hideApprovals = false;\n      this.hideSubmit = true;\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //defining the pages behaviour based on action in params\n  generateForm(formData?): void {\n    this.mngForm = this.fb.group({\n      id: formData?.id ?? \"\",\n      year: [formData?.year, [Validators.required]],\n      expenseCategory: [formData?.expenseCategory, [Validators.required]],\n      expenseCode: [formData?.expenseCode, [Validators.required]],\n      expenseName: [formData?.expenseName, [Validators.required]],\n      expenseBudgetAmount: [\n        formData?.expenseBudgetAmount,\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n\n      allowOverride: [formData?.allowOverride || \"N\", [Validators.required]],\n    });\n\n    this.mnhForm = this.fb.group({\n      month: [\"\", [Validators.required]],\n      amount: [\n        \"\",\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n    });\n  }\n\n  generateDisabledFormWithData(): void {\n    this.mngForm = this.fb.group({\n      id: [{ value: this.formData.id, disabled: true }],\n      year: [{ value: this.formData.id, disabled: true }],\n      expenseName: [{ value: this.formData.year, disabled: true }],\n      expenseCode: [{ value: this.formData.expenseCode, disabled: true }],\n      expenseCategory: [{ value: this.formData.expenseCode, disabled: true }],\n      expenseBudgetName: [\n        { value: this.formData.expenseBudgetName, disabled: true },\n        [Validators.required],\n      ],\n      expenseBudgetAmount: [\n        { value: this.formData.expenseBudgetAmount, disabled: true },\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n    });\n\n    this.mnhForm = this.fb.group({\n      month: [\"\", [Validators.required]],\n      amount: [\n        \"\",\n        [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n      ],\n    });\n\n    this.dataSource.data = this.formData.monthlyDistributions;\n  }\n\n  //****************************************************************************************************************************** */\n\n  // onDateChange(event: MatDatepickerInputEvent<Date>) {\n  //   const date = event.value;\n  //   this.getMonths();\n\n  //   console.log(\"monthsArray: \", this.months);\n  // }\n\n  // months: string[] = [];\n\n  // getMonths() {\n  //   const fromDate = new Date(this.mngForm.value.fromDate);\n  //   const toDate = new Date(this.mngForm.value.toDate);\n\n  //   if (fromDate <= toDate) {\n  //     while (fromDate < toDate) {\n  //       const month = fromDate.toLocaleString(\"default\", { month: \"long\" });\n\n  //       // Check if the month already exists in the dataSource\n  //       const existingRecord = this.dataSource.data.find(\n  //         (record) => record.month === month\n  //       );\n\n  //       if (existingRecord) {\n  //         // If the month already exists, do nothing\n  //         console.log(`Month ${month} already exists in the dataSource`);\n  //       } else {\n  //         // If the month doesn't exist, create a new record with amount 0\n  //         const monthlyRecord = { id: \"\", month: month, amount: 0.0 };\n\n  //         this.dataSource.data.push(monthlyRecord);\n  //         this.dataSource.data = this.dataSource.data.slice();\n\n  //         console.log(`Added new record for month ${month} to the dataSource`);\n  //       }\n\n  //       fromDate.setMonth(fromDate.getMonth() + 1);\n  //     }\n  //   }\n  // }\n\n  budgetOverride(event: any) {\n    if (event.value == \"Yes\") {\n    }\n  }\n\n  // ****************************************************************************************************************************\n  //mnhForm management variables\n\n  selectedRowIndex: number = -1;\n  showAddButton: boolean = false;\n  showUpdateButton: boolean = false;\n  addToMonthlyDistribution() {\n    this.showEditForm = true;\n    this.showAddButton = true;\n    this.showUpdateButton = false;\n  }\n\n  //adding the monthly distribution values to an array\n  onAddMonthlyDistribution() {\n    if (this.mnhForm.valid) {\n      const newRecord = {\n        amount: this.mnhForm.value.amount,\n        month: this.mnhForm.value.month,\n      };\n\n      console.log(\"newRecord: \", newRecord);\n\n      //push the array into a table\n      this.dataSource.data.push(newRecord);\n      this.dataSource.data = this.dataSource.data.slice();\n      this.mnhForm.reset();\n      this.showEditForm = false;\n      this.showAddButton = true;\n      this.showEditForm = false;\n    }\n  }\n\n  showEditForm: boolean = false;\n\n  updateMonthlyDistribution() {\n    if (this.mnhForm.valid) {\n      console.log(\"this.bgtForm: \", this.mnhForm.value);\n\n      const updatedRecord = {\n        id: this.mnhForm.value.id,\n        month: this.mnhForm.value.month,\n        amount: this.mnhForm.value.amount,\n      };\n\n      this.dataSource.data[this.selectedRowIndex] = updatedRecord;\n      this.dataSource.data = this.dataSource.data.slice();\n      this.mnhForm.reset();\n\n      this.showEditForm = false;\n      this.selectedRowIndex = -1;\n    }\n  }\n  onEditMonthlyDistribution(row: any) {\n    this.showEditForm = true;\n    this.showAddButton = false;\n    this.showUpdateButton = true;\n\n    this.selectedRowIndex = this.dataSource.data.indexOf(row);\n\n    this.mnhForm.patchValue({\n      id: row.id,\n      month: row.month,\n      amount: row.amount,\n    });\n  }\n\n  //filtering through the array\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  onDeleteMonthlyDistribution(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.dataSource.data = this.dataSource.data.slice();\n  }\n\n  //clearing the form\n  clearForm() {\n    this.mnhForm.reset();\n    this.selectedRowIndex = -1; //resets the selected row index\n  }\n\n  // ****************************************************************************************************************************\n  //cancel button function\n  cancel(): void {\n    this.router.navigate([\"/erp-budget/budget/all-budgets\"]);\n  }\n\n  // ****************************************************************************************************************************\n\n  // *************************************************************************************************************************************\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        this.items = jsonData;\n\n        // this.items = [\n        //   {\n        //     costCenterName: \"rrewrew\",\n        //     costCenterCode: \"33343\",\n        //   },\n        // ];\n\n        console.log(\" this.items :\", this.items);\n\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    // {\n    //   \"expenseCategory\": \"string\",\n    //   \"expenseCode\": \"string\",\n    //   \"expenseBudgetName\": \"string\",\n    //   \"january\": 0,\n    //   \"february\": 0,\n    //   \"march\": 0,\n    //   \"april\": 0,\n    //   \"may\": 0,\n    //   \"june\": 0,\n    //   \"july\": 0,\n    //   \"august\": 0,\n    //   \"september\": 0,\n    //   \"october\": 0,\n    //   \"november\": 0,\n    //   \"december\": 0,\n    //   \"expenseBudgetAmount\": 0\n    // }\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        // costCenterCode: [item.costCenterCode, [Validators.required]],\n        // departmentCode: [item.departmentCode, [Validators.required]],\n        // departmentName: [item.departmentName, [Validators.required]],\n\n        //expenseBudgetName: [item.expenseBudgetName, [Validators.required]],\n\n        expenseName: [item.expenseName, [Validators.required]],\n        expenseCategory: [item.expenseCategory, [Validators.required]],\n\n        expenseCode: [item.expenseCode, [Validators.required]],\n        expenseBudgetAmount: [\n          item.expenseBudgetAmount,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n\n        january: [\n          item.january,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        february: [\n          item.february,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        march: [\n          item.march,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        april: [\n          item.april,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        may: [\n          item.may,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        june: [\n          item.june,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        july: [\n          item.july,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        august: [\n          item.august,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        september: [\n          item.september,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        october: [\n          item.october,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        november: [\n          item.november,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n        december: [\n          item.december,\n          [Validators.required, Validators.pattern(/^\\d+(\\.\\d{1,2})?$/)],\n        ],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"BudgetTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n  // ***************************************************************************************************************************\n  // Validation\n\n  hasAccess: boolean;\n  onValidate(userType) {\n    let privilege = \"\";\n\n    switch (userType) {\n      case \"HOD\":\n        privilege = \"HOD Budget Validation\";\n        break;\n      case \"Finance\":\n        privilege = \"Finance Budget Validation\";\n        break;\n      default:\n        return;\n    }\n\n    this.hasAccess = this.accessControlService.hasPrivilege(\"BudgetModule\", [\n      privilege,\n    ]);\n\n    if (this.hasAccess) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        data: this.formData,\n        userType: userType,\n      };\n\n      const dialogRef = this.dialog.open(\n        BudgetValidationComponent,\n        dialogConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.router.navigate([\"/erp-budget/budget/all-budgets\"]);\n      });\n    }\n  }\n\n  // ****************************************************************************************************************************\n  // Loook Ups\n  selectedCostCenterItem: any[] = [];\n  costCenterLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"600px\";\n    dialogConfig.data = {\n      action: \"View CostCenters\",\n      selected: this.selectedCostCenterItem,\n    };\n    const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          costCenterCode: element.costCenterCode,\n        });\n      });\n    });\n  }\n\n  selectedExpenseItem: any[] = [];\n  expenseLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Expense\",\n      selected: this.selectedExpenseItem,\n    };\n    const dialogRef = this.dialog.open(ExpenseLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          expenseCode: element.expenseCode,\n          expenseName: element.expenseName,\n        });\n      });\n    });\n  }\n\n  selectedDepartmentItem: any[] = [];\n  departmentLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"View Departments\",\n      selected: this.selectedDepartmentItem,\n    };\n    const dialogRef = this.dialog.open(DepartmentLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      res.data.forEach((element) => {\n        this.mngForm.patchValue({\n          departmentCode: element.departmentCode,\n        });\n      });\n    });\n  }\n\n  // ****************************************************************************************************************************\n  // submit button function\n\n  posting: boolean = false;\n\n  submit() {\n    this.posting = true;\n\n    let upload = this.mngForm.value;\n    upload.monthlyDistributions = this.dataSource.data;\n\n    console.log(upload);\n\n    if (this.pageFunction === \"Add\") {\n      this.budgetManService\n        .addBudget(upload)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"RESPONSE:: => \", res);\n\n            if (res.statusCode === 201) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\"/erp-budget/budget/all-budgets\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.budgetManService\n        .updateBudgets(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.router.navigate([\"/erp-budget/budget/all-budgets\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  //Uploading a batch of items\n  submitBatch() {\n    this.posting = true;\n    if (this.pageFunction === \"Add\" && this.selectedFile) {\n      let params = { sheetIndex: 4 };\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n\n      this.budgetManService\n        .extractBulkBudgets(params, formData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"resresres::: \", res);\n            if (\n              res.statusCode == 201 ||\n              res.statusCode == 200 ||\n              res.statusCode == 302\n            ) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        });\n    }\n  }\n\n  selectedFile: File;\n  onFileSelected(event): void {\n    this.selectedFile = event.target.files[0];\n  }\n}\n","<section class=\"content\">\n  <div class=\"content-block\">\n    <div class=\"block-header\">\n      <!-- breadcrumb -->\n      <app-breadcrumb [title]=\"'Manage Budgets'\" [items]=\"['Budgets']\" [active_item]=\"'Manage Budgets'\">\n      </app-breadcrumb>\n    </div>\n\n    <div class=\"row clearfix\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"card\">\n          <div class=\"body\" *ngIf=\"showForm\">\n            <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"bg-color\">\n                  <div class=\"chat\">\n                    <div class=\"chat-header clearfix\">\n                      <div class=\"row\">\n                        <!-- HOD Approval -->\n                        <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod\">\n                                    {{ formData.hodApprovalStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">HOD Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-hod-approved\">\n                                    {{ formData.hodApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>HOD Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.hodApprovalReason\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- Finance Approval -->\n                        <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\n                          <div class=\"row\">\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approval</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance\">\n                                    {{ formData.financeApprovalStatus }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-6\">\n                              <div class=\"chat-about\">\n                                <div class=\"chat-with\">Finance Approved By</div>\n                                <div class=\"chat-num-messages mt-2\">\n                                  <div class=\"badge badge-finance-approved\">\n                                    {{ formData.financeApprovedBy }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-12\">\n                              <div class=\"chat-about mt-2\">\n                                <div class=\"chat-with remarks\">\n                                  <strong>Finance Remarks:</strong>\n                                  <span class=\"remarks-content mx-2\">{{\n                                    formData.financeApprovalReason\n                                    }}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mx-2\">\n              <mat-tab-group animationDuration=\"1000ms\" #tabGroup>\n              \n                <mat-tab label=\"UPLOAD BUDGET\" *ngIf=\"pageFunction === 'Add'\">\n                  <div [hidden]=\"hideSubmit\">\n                    <div class=\"row clearfix mx-2\">\n                      <div class=\"mt-4\">\n                        <div class=\"row clearfix\">\n                          <h5>Upload Excel File</h5>\n                        </div>\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-xl-10 col-lg-10 col-md-8 col-sm-6\">\n                            <app-file-upload (change)=\"onFileSelected($event)\"></app-file-upload>\n                          </div>\n                          <div class=\"col-xl-1 col-lg-1 col-md-4 col-sm-6\">\n\n\n                            <button class=\"btn-space mb-1\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                            (click)=\"cancel()\">\n                            Cancel\n                          </button>\n                          <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"posting\" (click)=\"submitBatch()\">\n                            Submit Batch\n                          </button>\n                          </div>\n                        </div>\n                        \n                        <!-- <div class=\"mt-4 mx-0\">\n       \n\n                          <div class=\"card\">\n                            <div class=\"header\">\n                              <h2>Budget</h2>\n                            </div>\n\n                            <app-budget *ngIf=\"budgets.length > 0\" class=\"m-2\" [budgets]=\"budgets\"></app-budget>\n\n                            \n\n                          </div>\n                        </div> -->\n                      </div>\n                    </div>\n                  </div>\n\n                  <hr />\n\n                 \n                </mat-tab>\n              </mat-tab-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- <mat-tab label=\"{{ pageFunction }} A BUDGET\">\n  <div class=\"row clearfix mx-2\">\n    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n      <div class=\"header\">\n        <div class=\"row\">\n          <h2>{{ pageFunction }} Budgets</h2>\n        </div>\n      </div>\n\n      <div>\n        <form class=\"mx-4\" [formGroup]=\"mngForm\">\n          <div class=\"row\">\n           \n\n            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label> Year </mat-label>\n                <input matInput formControlName=\"year\" />\n\n                <mat-error *ngIf=\"\n                    mngForm.get('year').hasError('required')\n                  \">\n                  Year is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label> Expense Code </mat-label>\n                <input matInput formControlName=\"expenseCode\" />\n                <mat-icon matSuffix (click)=\"expenseLookup()\">search</mat-icon>\n                <mat-error *ngIf=\"\n                    mngForm\n                      .get('expenseCode')\n                      .hasError('required')\n                  \">\n                  Expense Code is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-2\">\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label> Expense Name </mat-label>\n                <input matInput formControlName=\"expenseName\" readonly />\n                <mat-icon matSuffix (click)=\"expenseLookup()\">search</mat-icon>\n                <mat-error *ngIf=\"\n                    mngForm\n                      .get('expenseName')\n                      .hasError('required')\n                  \">\n                  Expense Name is required\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-3\">\n              <mat-form-field class=\"example-full-width mb-1\" appearance=\"outline\">\n                <mat-label>Expense Category</mat-label>\n\n                <mat-select formControlName=\"expenseCategory\">\n                  <mat-option *ngFor=\"\n                      let expenseCategory of expenseCategories\n                    \" [value]=\"expenseCategory.name\">{{ expenseCategory.name }}</mat-option>\n                </mat-select>\n\n                <mat-error *ngIf=\"\n                    mngForm\n                      .get('expenseCategory')\n                      .hasError('required')\n                  \">Type is required</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n              <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                <mat-label>Expense Budget Amount </mat-label>\n                <input matInput formControlName=\"expenseBudgetAmount\" mask=\"separator\"\n                  thousandSeparator=\",\" />\n\n                <mat-error *ngIf=\"\n                    mngForm\n                      .get('expenseBudgetAmount')\n                      .hasError('required') &&\n                    mngForm.get('expenseBudgetAmount').touched\n                  \">\n                  Please enter unit amount!\n                </mat-error>\n                <mat-error *ngIf=\"\n                    mngForm\n                      .get('expenseBudgetAmount')\n                      .hasError('pattern') &&\n                    mngForm.get('expenseBudgetAmount').touched\n                  \">\n                  Please ensure amount does not exceed 2 decimal\n                  values!\n                </mat-error>\n                <mat-error *ngIf=\"\n                    mngForm\n                      .get('expenseBudgetAmount')\n                      .hasError('max') &&\n                    mngForm.get('expenseBudgetAmount').touched\n                  \">\n                  Please ensure expenseBudgetAmount does not\n                  exceed 1 billion!\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n          \n            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-2\">\n              <section class=\"example-section\">\n                <span class=\"example-margin\">Override Budget?\n                </span>\n                <mat-radio-group formControlName=\"allowOverride\" (change)=\"budgetOverride($event)\">\n                  <mat-radio-button class=\"example-margin\" [disabled]=\"!hasOverridePrivilege\"\n                    value=\"Y\">Yes</mat-radio-button>\n                  <mat-radio-button class=\"example-margin\" [disabled]=\"!hasOverridePrivilege\"\n                    value=\"N\">No\n                  </mat-radio-button>\n                </mat-radio-group>\n              </section>\n            </div>\n          </div>\n        </form>\n\n        <hr />\n\n        <div class=\"mt-1\">\n          <div class=\"header\">\n            <div class=\"row\">\n              <h2>Monthly Allocations</h2>\n            </div>\n          </div>\n\n          <form class=\"mx-4\" [formGroup]=\"mnhForm\" *ngIf=\"showEditForm\">\n            <div class=\"row\">\n              <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label> Month Name </mat-label>\n                  <input matInput formControlName=\"month\" />\n\n                  <mat-error *ngIf=\"\n                      mnhForm.get('month').hasError('required')\n                    \">\n                    Month is required\n                  </mat-error>\n                </mat-form-field>\n              </div>\n\n              <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\n                  <mat-label>Allocated Amount </mat-label>\n                  <input matInput formControlName=\"amount\" mask=\"separator\" thousandSeparator=\",\" />\n\n                  <mat-error *ngIf=\"\n                      mnhForm\n                        .get('amount')\n                        .hasError('required') &&\n                      mnhForm.get('amount').touched\n                    \">\n                    Please enter unit amount!\n                  </mat-error>\n                  <mat-error *ngIf=\"\n                      mnhForm\n                        .get('amount')\n                        .hasError('pattern') &&\n                      mnhForm.get('amount').touched\n                    \">\n                    Please ensure amount does not exceed 2\n                    decimal values!\n                  </mat-error>\n                  <mat-error *ngIf=\"\n                      mnhForm.get('amount').hasError('max') &&\n                      mnhForm.get('amount').touched\n                    \">\n                    Please ensure amount does not exceed 1\n                    billion!\n                  </mat-error>\n                </mat-form-field>\n              </div>\n\n              <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-2 float-left\">\n                <div class=\"float-right\">\n                  <button *ngIf=\"showAddButton\" [disabled]=\"mnhForm.invalid\" class=\"btn-space\"\n                    (click)=\"onAddMonthlyDistribution()\" mat-raised-button color=\"primary\">\n                    + Add Monthly Distribution\n                  </button>\n                  <button *ngIf=\"showUpdateButton\" [disabled]=\"mnhForm.invalid\" class=\"btn-space\"\n                    (click)=\"updateMonthlyDistribution()\" mat-raised-button color=\"primary\">\n                    + Update Monthly Distribution\n                  </button>\n                 \n                </div>\n              </div>\n            </div>\n          </form>\n\n          <div class=\"table-responsive mx-4\">\n            <div class=\"materialTableHeader\">\n              <div class=\"row\">\n                <div class=\"col-8\">\n                  <ul class=\"header-buttons-left ms-0\">\n                    <li class=\"dropdown\">\n                      <h2>Monthly Distributions</h2>\n                    </li>\n                    <li class=\"dropdown m-l-20\">\n                      <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                      <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\" #filter\n                        class=\"browser-default search-field\" aria-label=\"Search box\" />\n                    </li>\n                    <li>\n                      <div class=\"m-l-10\" matTooltip=\"ADD\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"addToMonthlyDistribution()\">\n                          <mat-icon class=\"col-white\">add</mat-icon>\n                        </button>\n                      </div>\n                    </li>\n                   \n                  </ul>\n                </div>\n                <div class=\"col-4\">\n                  <ul class=\"header-buttons\">\n                    <li>\n                      <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                        <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                            exporter.exportTable('xlsx', {\n                              fileName: 'assets-list',\n                              sheet: 'sheet1'\n                            })\n                          \" />\n                      </div>\n                    </li>\n                    <li>\n                      <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                        <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                          (click)=\"exporter.exportTable('csv')\" />\n                      </div>\n                    </li>\n                    <li>\n                      <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                        <img src=\"assets/images/icons/json.png\" alt=\"\"\n                          (click)=\"exporter.exportTable('json')\" />\n                      </div>\n                    </li>\n                    <li>\n                      <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                        <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                          (click)=\"exporter.exportTable('txt')\" />\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell mt-3\"\n              #exporter=\"matTableExporter\">\n              <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header\n                  class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                  #\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                  <span *ngIf=\"!row.id; else showId\">#</span>\n                  <ng-template #showId>{{\n                    row.id\n                    }}</ng-template>\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"month\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header\n                  class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                  Month\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"\n                  class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-30\">\n                  <span *ngIf=\"row.month\">\n                    {{ row.month }}\n                  </span>\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"amount\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header\n                  class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                  Amount\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let row\"\n                  class=\"column-nowrap column-nowrap psl-3 tbl-col-width-per-30\">\n                  <span>\n                    {{\n                    row.amount\n                    | currency : \"KSH \" : \"symbol\" : \"1.2-2\"\n                    }}\n                  </span>\n                </mat-cell>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions</mat-header-cell>\n                <mat-cell *matCellDef=\"let row; let i = index\" class=\"pr-0\">\n                  <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                    (click)=\"onEditMonthlyDistribution(row)\" class=\"tbl-action-btn\">\n                    <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\"></app-feather-icons>\n                  </button>\n\n                  <button mat-icon-button color=\"accent\" [disabled]=\"disableActions\"\n                    (click)=\"onDeleteMonthlyDistribution(i)\" class=\"tbl-action-btn\">\n                    <app-feather-icons [icon]=\"'trash-2'\"\n                      [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                  </button>\n                </mat-cell>\n              </ng-container>\n\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n              </mat-header-row>\n              <mat-row *matRowDef=\"\n                  let row;\n                  let i = index;\n                  columns: displayedColumns\n                \" (click)=\"onEditMonthlyDistribution(row)\" [style.cursor]=\"'pointer'\" matRipple>\n              </mat-row>\n            </mat-table>\n          \n            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[\n                2, 5, 10, 20, 30, 40, 50, 100\n              ]\" aria-label=\"Select page of users\"></mat-paginator>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n              <div mat-dialog-action [align]=\"'end'\">\n                <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                  (click)=\"onValidate('HOD')\" mat-raised-button color=\"primary\">\n                  <mat-icon> done_outline </mat-icon>\n                  HOD APPROVE\n                </button>\n\n                <button class=\"btn-space\" *ngIf=\"!hideApprovals\" [hidden]=\"hideApprovals\"\n                  (click)=\"onValidate('Finance')\" mat-raised-button color=\"primary\">\n                  <mat-icon> done_outline </mat-icon>\n                  FINANCE APPROVE\n                </button>\n\n                <button class=\"btn-space\" type=\"button\" mat-raised-button color=\"warn\" mat-button\n                  (click)=\"cancel()\">\n                  Cancel\n                </button>\n                <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                  [disabled]=\"!mngForm.valid || posting\" [hidden]=\"hideSubmit\" (click)=\"submit()\">\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</mat-tab> -->","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { BudgetReportsService } from 'src/app/erp-budget/data/services/budget-reports.service';\nimport { GlsLookupComponent } from 'src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component';\nimport { PurchaseOrderAcknowledgementComponent } from 'src/app/erp-procurement/modules/requisition/pages/purchase-order-acknowledgement/purchase-order-acknowledgement.component';\nimport { FilesService } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-budget-report-dialog',\n  templateUrl: './budget-report-dialog.component.html',\n  styleUrls: ['./budget-report-dialog.component.sass']\n})\nexport class BudgetReportDialogComponent implements OnInit {\n\n  mngForm: FormGroup;\n  hide3 = true;\n  agree3 = false;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadposting: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n\n  posting: boolean = false;\n\n  types = [{ name: \"PDF\" }];\n\n  // , { name: \"EXCEL\" }\n  months: any[] = [\n    { value: 1, viewValue: 'January' },\n    { value: 2, viewValue: 'February' },\n    { value: 3, viewValue: 'March' },\n    { value: 4, viewValue: 'April' },\n    { value: 5, viewValue: 'May' },\n    { value: 6, viewValue: 'June' },\n    { value: 7, viewValue: 'July' },\n    { value: 8, viewValue: 'August' },\n    { value: 9, viewValue: 'September' },\n    { value: 10, viewValue: 'October' },\n    { value: 11, viewValue: 'November' },\n    { value: 12, viewValue: 'December' }\n  ];\n\n  constructor(\n    public dialogRef: MatDialogRef<PurchaseOrderAcknowledgementComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private budgetReportsService: BudgetReportsService,\n    private snackbar: SnackbarService,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.mngForm = this.createReportForm();\n  }\n\n  createReportForm(): FormGroup {\n    return this.fb.group({\n      type: [\"EXCEL\", Validators.required],\n      month: [\"\"],\n      year: [\"\"],\n    });\n  }\n\n  ngAfterViewInit() { }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  // **********************************************************************************************************************************************************\n\n  response: any;\n  subscription: Subscription\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n\n    this.posting = true;\n\n    let params = {\n      year: this.mngForm.value.year,\n      month: this.mngForm.value.month\n    }\n    if (this.data.type === \"BudgetVariance\") {\n      let type = this.mngForm.value.type;\n      if (type == \"EXCEL\") {\n        this.subscription = this.budgetReportsService\n          .downloadVarianceExcelReport(params)\n          .subscribe(\n            (response) => {\n\n              const a = document.createElement('a');\n              document.body.appendChild(a);\n              const blob: any = new Blob([response.data], { type: 'octet/stream' });\n              const url = window.URL.createObjectURL(blob);\n              a.href = url;\n              a.download = \"BudgetVariance.xlsx\"\n              a.click();\n              window.URL.revokeObjectURL(url);\n\n              this.posting = false;\n\n              this.dialogRef.close();\n\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Report generated successfully\"\n              );\n            },\n            (err) => {\n              this.posting = false;\n\n              this.dialogRef.close();\n\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            }\n          );\n      }\n    } else if (this.data.type === \"BudgetBalance\") {\n      let type = this.mngForm.value.type;\n      if (type == \"EXCEL\") {\n        this.subscription = this.budgetReportsService\n          .downloadBudgetBalanceReport(params)\n          .subscribe(\n            (response) => {\n\n              const a = document.createElement('a');\n              document.body.appendChild(a);\n              const blob: any = new Blob([response.data], { type: 'octet/stream' });\n              const url = window.URL.createObjectURL(blob);\n              a.href = url;\n              a.download = \"BudgetBalance.xlsx\"\n              a.click();\n              window.URL.revokeObjectURL(url);\n\n              this.posting = false;\n\n              this.dialogRef.close();\n\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Report generated successfully\"\n              );\n            },\n            (err) => {\n              this.posting = false;\n\n              this.dialogRef.close();\n\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            }\n          );\n      }\n    }\n  }\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong> Set Report Parameters</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"posting\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <!-- <h6 class=\"mx-2\">General Details</h6> -->\n        <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n\n\n            <div class=\"row\">\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Month</mat-label>\n                        <mat-select formControlName=\"month\" required>\n                            <mat-option *ngFor=\"let month of months\" [value]=\"month.viewValue\">\n                                {{ month.viewValue }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('month').hasError('required')\">\n                            Please select Month\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                \n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Year</mat-label>\n                        <input matInput type=\"number\" min=\"1900\" max=\"2100\" formControlName=\"year\" required />\n                        <mat-error *ngIf=\"mngForm.get('year').hasError('required')\">\n                            Please select Year\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n\n                <!-- <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Select type</mat-label>\n                        <mat-select formControlName=\"type\" required disabled>\n                            <mat-option *ngFor=\"let type of types\" [value]=\"type.name\">\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('type').hasError('required')\">\n                            type is required\n                        </mat-error>\n                    </mat-form-field>\n                </div> -->\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\" *ngIf=\"data.type === 'TrialBalance'\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Gl types</mat-label>\n                        <mat-select formControlName=\"glType\" required>\n                            <mat-option *ngFor=\"let glType of glTypes\" [value]=\"glType.name\">\n                                {{ glType.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"mngForm.get('glType').hasError('required')\">\n                            GlType is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                    <div class=\"example-button-row\" align=\"end\">\n                        <button class=\"btn-space\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" (click)=\"submit()\">\n                            Generate\n                        </button>\n\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\n\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { BudgetsService } from 'src/app/erp-budget/data/services/budget.service';\nimport { ManageRfqsComponent } from 'src/app/erp-procurement/modules/rfqs/pages/manage-rfqs/manage-rfqs.component';\n\n\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-budget-validation',\n  templateUrl: './budget-validation.component.html',\n  styleUrls: ['./budget-validation.component.sass']\n})\nexport class BudgetValidationComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  action!: string;\n\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  returned: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageRfqsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private budgetManService: BudgetsService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n  }\n\n  //***************************************************************************************************** */\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    if (this.postedBy === this.currentUser) {\n\n      this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n      this.canVerify = false;\n\n    } \n    \n    else {\n      this.canVerify = true;\n    }\n\n    console.log(\"this.billDet: \", this.data);\n\n    console.log(\"Data: \", this.Data);\n\n    this.statusForm = this.createStatusForm();\n  }\n\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"REJECTED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.action = \"RETURNED\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.action = \"APPROVED\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n  \n\n//     userType *\n// string\n// (query)\t\n// userType\n\n// userType - userType\n// remarks *\n \n    const params = new HttpParams()\n\n      // .set(\"id\", this.Data.id)\n      // .set(\"postedBy\", this.currentUser)\n      // .set(\"action\", this.action)\n      // .set(\"approvedDate\", todayDate)\n      .set(\"remarks\", this.statusForm.value.reason)\n      .set(\"userType\", this.data.userType)\n      \n    //   id\": 0,\n    // \"status\": \"string\"\n  let body = [{id: this.Data.id, status: this.action}]\n\n    console.log(\"Form = \", params);\n    console.log(\"body = \", body);\n  \n  \n    // this.budgetManService\n    //   .validateBudget(params,body)\n    //   .pipe(takeUntil(this.destroy$))\n    //   .subscribe({\n    //     next: (res) => {\n\n    //       this.snackbar.showNotification(\n    //         \"snackbar-success\",\n    //         \"Updates successfully\"\n    //       );\n    //       if (res) {\n            \n            \n    //       }\n          \n    //     },\n    //     error: (err) => {\n    //       console.log(\"err = \", err);\n    //       this.snackbar.showNotification(\n    //         \"snackbar-danger\",\n    //         \"Server Error: \" + err.message\n    //       );\n    //     },\n    //     complete: () => {\n    //       this.dialogRef.close();\n    //       this.router.navigate([\"/erp-budget/budget/all-budgets\"]);\n    //     }\n    //   });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Validate Budget</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n            \n            <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">Budget Code:</dt>\n                <dd>{{Data.budgetCode}}</dd>\n                <dt class=\"pull-left me-2\">Budget Name:</dt>\n                <dd> {{ Data.budgetName }}</dd>\n                <dt class=\"pull-left me-2\">Expense Name:</dt>\n                <dd> {{ Data.expenseName }}</dd>\n              </dl>\n            </div>\n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <!-- Approve -->\n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n\n              <!-- Return -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n\n              <!-- Reject -->\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n              \n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ExpenseManagementService {\n  constructor(private http: HttpClient) {}\n\n  // ****************************************************************************************************************************\n\n  getExpenses(): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/all`;\n    return this.http.get<any[]>(expenseUrl);\n  }\n\n  addExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create`;\n    return this.http.post<any[]>(expenseUrl, data);\n  }\n\n  updateExpense(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update`;\n    return this.http.put<any[]>(expenseUrl, data);\n  }\n\n  deleteExpenseTemporarily(params: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/delete`;\n    return this.http.delete<any[]>(expenseUrl, {params});\n  }\n\n  uploadBatchExpenses(data: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/create/bulk`;\n    return this.http.post<any>(expenseUrl, data);\n  }\n\n  getCostCentersByExpenseCode(expenseGlCode: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/expenses/allCostCenters?expenseCode=${expenseGlCode}`;\n    return this.http.get<any>(expenseUrl, expenseGlCode);\n  }\n\n  getExpensesByStatus(params): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/fetchbyStatus`;\n    return this.http.get<any[]>(expenseUrl, { params });\n  }\n  getExpenseById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/expenses/find/by/id`,\n      { params }\n    );\n  }\n\n  validateBulkExpense(processedRows: any): Observable<any> {\n    const expenseUrl = `${environment.baseUrlFinance}/api/v1/expenses/update/state`;\n    return this.http.put(expenseUrl, processedRows);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}