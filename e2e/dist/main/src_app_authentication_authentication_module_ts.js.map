{"version":3,"file":"src_app_authentication_authentication_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACuD;AACK;AACA;AAC0B;AAC1B;AACG;AACA;AACZ;AAC2D;AACzD;;;AACrD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,qEAAe;KAC3B;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,4DAAY;QACvB,WAAW,EAAE,CAAC,6DAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,qEAAe;KAC3B;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,sHAAwB;KACpC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,+FAAuB;KACnC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,qEAAe;KAC3B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,wEAAgB;KAC5B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,wEAAgB;KAC5B;CACF,CAAC;AAKK,MAAM,2BAA2B;;sGAA3B,2BAA2B;wHAA3B,2BAA2B;4HAH7B,CAAC,mEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,0DAAY;mIAEX,2BAA2B,qFAF5B,0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDuB;AACF;AACiC;AACf;AACA;AACH;AACA;AACA;AAC0B;AACjC;AACa;AACT;AACF;AACI;AAER;AAC2D;AAC3B;;AAiC5E,MAAM,oBAAoB;;wFAApB,oBAAoB;kHAApB,oBAAoB;sHAhBtB;YACP,0DAAY;YACZ,wDAAW;YACX,gEAAmB;YACnB,uFAA2B;YAC3B,6EAAkB;YAClB,oEAAc;YACd,kEAAa;YACb,sEAAe;YACf,kBAAkB;SAEnB;oIAKU,oBAAoB,mBA1B7B,wEAAgB;QAChB,wEAAgB;QAChB,qEAAe;QACf,qEAAe;QACf,qEAAe;QACf,+FAAuB;QACvB,4DAAY;QACZ,sHAAwB;QACxB,4FAAsB,aAGtB,0DAAY;QACZ,wDAAW;QACX,gEAAmB;QACnB,uFAA2B;QAC3B,6EAAkB;QAClB,oEAAc;QACd,kEAAa;QACb,sEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCiD;AAEZ;;;;;;;;;;;;;ICuBtC,4EAA6G;IAC3G,+FACF;IAAA,4DAAY;;ADhBvB,MAAM,uBAAuB;IAalC,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,QAAyB,EACzB,kBAAsC;QALtC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAjBhD,cAAS,GAAG,KAAK,CAAC;QAGlB,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,EAAE,CAAC;QACX,SAAI,GAAG,IAAI,CAAC;QAGZ,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,EAAE,CAAC;QAwBlB,eAAe;QACf,2BAA2B;QAC3B,oCAAoC;QACpC,iCAAiC;QACjC,cAAc;QACd,aAAa;QACb,iDAAiD;QACjD,MAAM;QACN,IAAI;QAGJ,eAAe;QACf,2BAA2B;QAC3B,yBAAyB;QACzB,qBAAqB;QACrB,iCAAiC;QACjC,wCAAwC;QACxC,cAAc;QACd,aAAa;QACb,wCAAwC;QAExC,MAAM;QACN,IAAI;QAEF,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;IAxC9B,CAAC;IACJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,YAAY,EAAE;gBACZ,EAAE;gBACF,CAAC,+DAAmB,EAAE,4DAAgB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC;aACjE;SACF,CAAC,CAAC;QACH,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACvE,CAAC;IACD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAChC,CAAC;IA6BD,QAAQ;QACP,wBAAwB;QAExB,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC;QAEpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YAEvB,IAAI,CAAC,WAAW;iBACb,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;iBACnC,IAAI,CAAC,+CAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAE1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;wBAEzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,OAAO,CACZ,CAAC;wBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;qBAClD;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;qBAChE;oBAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC;oBAC3B,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC1B,iBAAiB,EACjB,gDAAgD,CACnD,CAAC;qBACL;yBAAK;wBACF,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;qBACH;oBAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;aACnB,CAAC;gBACF,8CAAY,CAAC;YAEf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAClC;IACH,CAAC;;8FApHU,uBAAuB;qHAAvB,uBAAuB;QCbpC,yEAA4B;QAKtB,oEAA0H;QAC5H,4DAAM;QACN,yEAAwC;QAIhC,oEAA4F;QAC9F,4DAAM;QAEN,wEAAoC;QAAA,2EAAe;QAAA,4DAAK;QAExD,yEAAmD;QAAA,2EAAe;QAAA,4DAAI;QACtE,4EAAmD;QAI3C,kGACF;QAAA,4DAAO;QACP,sFAAgE;QACnD,iEAAK;QAAA,4DAAY;QAC5B,wEAAwD;QACxD,gFAAoB;QAAA,gEAAI;QAAA,4DAAW;QACnC,kIAEY;QACd,4DAAiB;QAGrB,2EAA0C;QAEW,gJAAS,cAAU,IAAC;QACrE,+EACF;QAAA,4DAAS;QAEX,2EAAuC;QAGjC,oEACF;QAAA,4DAAI;;QA1BkB,2DAAsB;QAAtB,mFAAsB;QAU9B,2DAA+F;QAA/F,mKAA+F;QAOvE,0DAA8B;QAA9B,sFAA8B;QAAC,iFAAoB;;;;;;;;;;;;;;;;;;;;;;;;;AChCrC;;;;;;;;;;;IC+BlD,4EAAiE;IAC/D,iFACF;IAAA,4DAAY;;ADzBvB,MAAM,eAAe;IAM1B,YACU,WAAwB,EACxB,MAAc,EACd,WAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAPlC,cAAS,GAAG,KAAK,CAAC;QAGlB,SAAI,GAAG,IAAI,CAAC;IAKT,CAAC;IACJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;QAEH,wDAAwD;QACxD,sBAAsB;QACtB,kDAAkD;QAClD,UAAU;QACV,gDAAgD;QAChD,IAAI,CAAC,OAAO,GAAG,8IAA8I,CAAC;QAC9J,IAAI,CAAC,YAAY;YACf,MAAM;gBACN,KAAK,CAAC;IAGV,CAAC;IACD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAChC,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACzB,OAAO;SACR;aAAM;YACL,wBAAwB;YACxB,kDAAkD;YAClD,qDAAqD;YACrD,uCAAuC;YACvC,mDAAmD;YACnD,qCAAqC;YACrC,iDAAiD;YACjD,WAAW;YACX,sDAAsD;YACtD,IAAI;SACL;IACH,CAAC;;8EAhDU,eAAe;6GAAf,eAAe;QCV5B,yEAA4B;QAGtB,oEACM;QACR,4DAAM;QACN,yEAAwC;QAGiB,2IAAY,cAAU,IAAC;QACxE,yEAAyB;QAErB,sEAAgC;QAClC,4DAAM;QAER,4EAA8C;QAC5C,wDACF;QAAA,4DAAO;QACP,2EAAyB;QAErB,oEACF;QAAA,4DAAI;QAEN,2EAAiB;QAGX,uFACF;QAAA,4DAAO;QACP,sFAAgE;QACnD,oEAAQ;QAAA,4DAAY;QAC/B,wEAAwF;QACxF,gFAA2C;QAAvB,kKAAsB;QACxC,wDAA0C;QAAA,4DAAW;QACvD,0HAEY;QACd,4DAAiB;QAGrB,2EAA0C;QAEtC,+EACF;QAAA,4DAAS;QAEX,2EAA8C;QAGxC,wEACF;QAAA,4DAAI;;QAvCkB,0DAAsB;QAAtB,mFAAsB;QAGvC,0DAAe;QAAf,oJAAe;QAItB,0DACF;QADE,4FACF;QAaiD,2DAAmC;QAAnC,gGAAmC;QAE5E,0DAA0C;QAA1C,qHAA0C;QAChC,0DAAmD;QAAnD,mHAAmD;QAOL,0DAA6B;QAA7B,yFAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCvD;AAEkB;AAOZ;;;;;;;;AAYjD,MAAM,YAAY;IAavB,YACU,EAAe,EACf,kBAAsC,EACtC,MAAc,EACd,WAAwB,EAExB,QAAyB;QALzB,OAAE,GAAF,EAAE,CAAa;QACf,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAExB,aAAQ,GAAR,QAAQ,CAAiB;QAlBnC,uBAAkB,GAAkC,KAAK,CAAC;QAC1D,qBAAgB,GAAgC,KAAK,CAAC;QAOpD,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QAgDjC,eAAe;QACf,gDAAgD;QAChD,gCAAgC;QAChC,cAAc;QACd,MAAM;QAEN,4CAA4C;QAE5C,kDAAkD;QAClD,IAAI;QACJ,YAAO,GAAY,KAAK,CAAC;IAjDtB,CAAC;IAEJ,QAAQ;QACN,4CAA4C;QAC5C,0DAA0D;QAC1D,sDAAsD;QACtD,IAAI;QACJ,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,KAAK,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,+DAA+D;QAC/D,iEAAiE;QAEjE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;QAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;QAE9D,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;QAChC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEpC,MAAM,cAAc,GAClB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YAC/B,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACvC,MAAM,WAAW,GAAG,cAAc,GAAG,MAAM,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,+BAA+B;IAC3D,CAAC;IAcD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC;YAC5B,OAAO;SACR;aAAM;YACL,MAAM,QAAQ,GAAG,MAAM,CACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;gBAC/B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK;gBAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;gBACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CACrC,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtB,MAAM,MAAM,GAAG,IAAI,4DAAU,EAAE;gBAC7B,uBAAuB;iBACtB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;iBACjC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAE5B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAEhC,6CAA6C;YAE7C,6CAA6C;YAG7C,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC;YAGnD,IAAI,CAAC,WAAW;iBACb,SAAS,CAAC,MAAM,CAAC;iBACjB,IAAI,CAAC,+CAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAE1B,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;wBACzB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC7C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC;wBACvC,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;wBAC/E,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;wBAE1D,6CAA6C;wBAE7C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,kBAAkB,CACnB,CAAC;wBACF,+EAA+E;wBAE/E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;qBAClD;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;qBAChE;oBAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;oBACF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;aACnB,CAAC;gBACF,8CAAY,CAAC;SAChB;IACH,CAAC;IAED,sBAAsB;IACtB,mBAAmB;IACnB,yEAAyE;IAEzE,uCAAuC;IACvC,mDAAmD;IACnD,yDAAyD;IACzD,4CAA4C;IAC5C,iDAAiD;IAEjD,yCAAyC;IACzC,uCAAuC;IAEvC,mCAAmC;IACnC,6DAA6D;IAC7D,YAAY;IACZ,UAAU;IACV,UAAU;IACV,QAAQ;IACR,IAAI;IAEJ,eAAe;QACb,MAAM,MAAM,GACV,QAAQ,CAAC,gBAAgB,CAAmB,oBAAoB,CAAC,CAAC;QAEpE,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAC9B,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACxC,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;gBAChD,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBACnC,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;gBAExC,IAAI,WAAW,KAAK,SAAS,EAAE;oBAC7B,MAAM,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;oBAE5B,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;wBACpB,MAAM,CAAC,SAAS,CAAsB,CAAC,KAAK,EAAE,CAAC;qBACjD;iBACF;YACH,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACxC,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;gBAChD,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,qCAAqC;YAC1D,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACxC,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;gBAChD,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,4CAA4C;YACjE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;wEAjMU,YAAY;0GAAZ,YAAY;QCrBzB,yEAA2B;QAKjB,oEAA4F;QAC9F,4DAAM;QACN,gEAAM;QACN,qEAAI;QACF,+FAAmC;QAAA,gEAAM;QACzC,oFACF;QAAA,4DAAK;QACL,iEAAM;QAEN,uEAAK;QACG,oFAAwB;QAAA,4DAAO;QACrC,yEAAO;QAAA,wDAAiB;QAAA,4DAAQ;QAGlC,iEAAM;QAEN,2EAAoD;QAAxB,yIAAY,cAAU,IAAC;QACjD,0EAAgE;QAC9D,uEAAyG;QAI3G,4DAAM;QACN,2EAAuB;QAGnB,sEACF;QAAA,4DAAS;QAGb,iEAAM;QACR,4DAAM;;QApBK,2DAAiB;QAAjB,gFAAiB;QAKpB,0DAAqB;QAArB,kFAAqB;QAQmB,0DAA8B;QAA9B,sFAA8B;QAAC,iFAAoB;;;;;;;;;;;;;;;;;;;;;;;;ACvBlG,MAAM,gBAAgB;IAC3B,gBAAe,CAAC;IAChB,QAAQ,KAAI,CAAC;;gFAFF,gBAAgB;8GAAhB,gBAAgB;QCN7B,yEAA4B;QAGtB,oEACM;QACR,4DAAM;QACN,yEAAwC;QAK9B,gEACF;QAAA,4DAAO;QACP,2EAAqC;QACnC,sHACF;QAAA,4DAAO;QACP,0EAA0C;QAEtC,6EACF;QAAA,4DAAS;QAEX,2EAA8C;QAGxC,wEACF;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBgD;AAGqB;AAIjC;;;;;;;;;;;;;;ICetC,4EAAiE;IAC/D,iFACF;IAAA,4DAAY;;;IAeZ,4EAAiE;IAC/D,iFACF;IAAA,4DAAY;;;IASlB,0EAAwD;IACtD,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,wFACF;;ADrCL,MAAM,eACX,SAAQ,mGAA2B;IAuBnC,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,kBAAsC,EACtC,MAAiB,EACjB,QAAyB;QAEjC,KAAK,EAAE,CAAC;QARA,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAiB;QAxBnC,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,EAAE,CAAC;QACX,SAAI,GAAG,IAAI,CAAC;QAEZ,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,EAAE,CAAC;QAClB,UAAK,GAAa,EAAE,CAAC;QAGnB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QAc/B,IAAI,CAAC,MAAM,CAAC,mBAAmB,GAAG,QAAQ,CAAC;IAC7C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,QAAQ;QACP,wBAAwB;QACvB,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACzB,IAAI,CAAC,KAAK,GAAG,kCAAkC,CAAC;YAChD,OAAO;SACR;aAAM;YACL,IAAI,CAAC,WAAW;iBACb,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;iBAC1B,IAAI,CAAC,+CAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC;gBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;oBAE/B,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,GAAG,EAAE;wBAE9B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAElD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,GAAG,CAAC,IAAI,CAAC,OAAO,CACjB,CAAC;wBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;qBAC/C;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACrE;oBAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC;oBAC3B,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC1B,iBAAiB,EACjB,qEAAqE,CACxE,CAAC;qBACL;yBAAK;wBACF,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;qBACH;oBAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;aACnB,CAAC;gBACF,8CAAY,CAAC;YAEf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAClC;IACH,CAAC;;8EApGU,eAAe;6GAAf,eAAe;QCjB5B,yEAA2C;QAM/B,oEAA4F;QAC9F,4DAAM;QAGN,wEAAiB;QAAA,uEAAY;QAAA,4DAAK;QAMlC,qEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,2EAA2E;QAAxB,4IAAY,cAAU,IAAC;QACxE,0EAAiB;QAGA,oEAAQ;QAAA,4DAAY;QAC/B,wEAA6C;QAC7C,gFAAoB;QAAA,gEAAI;QAAA,4DAAW;QACnC,0HAEY;QACd,4DAAiB;QAGrB,0EAAiB;QAGA,oEAAQ;QAAA,4DAAY;QAC/B,wEAAiF;QACjF,yEACiE;QADG,2JAAsB;QAExF,4EAAU;QAAA,wDAEN;QAAA,4DAAW;QAEjB,0HAEY;QACd,4DAAiB;QAOrB,sEAA0E;QAC1E,8GAEM;QAEN,2EAAqC;QAS/B,mEACF;QAAA,4DAAS;QAGb,2EAA8C;QAC2B,4EAAgB;QAAA,4DAAI;QAG/F,0EAA+B;QAAA,8DAAE;QAAA,4DAAK;QACtC,0EAAgD;QAG1C,oEAA6B;QAC/B,4DAAI;QAEN,0EAA6B;QAEzB,oEAAiC;QACnC,4DAAI;QAEN,0EAA6B;QAEzB,oEAA8B;QAChC,4DAAI;QAEN,0EAA6B;QAEzB,oEAAkC;QACpC,4DAAI;QAKV,2EAA0C;QAEqC,2FACpE;QAAA,4DAAI;;QApFe,2DAAsB;QAAtB,mFAAsB;QAO9B,0DAAmD;QAAnD,mHAAmD;QAU/C,0DAAmC;QAAnC,gGAAmC;QAEjD,0DAAmC;QAAnC,wFAAmC;QACzB,0DAEN;QAFM,2GAEN;QAEM,0DAAmD;QAAnD,mHAAmD;QAW/D,0DAAW;QAAX,2EAAW;QAWa,0DAA8B;QAA9B,sFAA8B;QAAC,iFAAoB;;;;;;;;;;;;;;;;;;;;;;;;AC7DzB;;;;;;;;;;ICkBlD,4EAAiE;IAC/D,iFACF;IAAA,4DAAY;;;IAUZ,4EAA+F;IAC7F,+FACF;IAAA,4DAAY;;;IAWZ,4EAAiE;IAC/D,iFACF;IAAA,4DAAY;;;IAWZ,4EAAkE;IAChE,yFACF;IAAA,4DAAY;;ADpDvB,MAAM,eAAe;IAM1B,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAPxB,cAAS,GAAG,KAAK,CAAC;QAElB,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAG,IAAI,CAAC;IAKV,CAAC;IACJ,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACnC,KAAK,EAAE;gBACL,EAAE;gBACF,CAAC,+DAAmB,EAAE,4DAAgB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC;aACjE;YACD,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACrC,CAAC,CAAC;QACH,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACvE,CAAC;IACD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAChC,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACzB,OAAO;SACR;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;SACjD;IACH,CAAC;;8EAnCU,eAAe;6GAAf,eAAe;QCR5B,yEAA4B;QAGtB,oEAA0F;QAC5F,4DAAM;QACN,yEAAwC;QAIhC,oEAAsE;QACxE,4DAAM;QACN,wEAAwB;QAAC,qEAAQ;QAAA,4DAAK;QAEtC,4EAA2E;QAAxB,4IAAY,cAAU,IAAC;QACxE,2EAAiB;QAGA,oEAAQ;QAAA,4DAAY;QAC/B,wEAAoD;QACpD,gFAAoB;QAAA,gEAAI;QAAA,4DAAW;QACnC,0HAEY;QACd,4DAAiB;QAGrB,2EAAiB;QAGA,iEAAK;QAAA,4DAAY;QAC5B,wEAAiD;QACjD,gFAAoB;QAAA,gEAAI;QAAA,4DAAW;QACnC,0HAEY;QACd,4DAAiB;QAGrB,2EAAiB;QAGA,oEAAQ;QAAA,4DAAY;QAC/B,wEAAwF;QACxF,gFAA2C;QAAvB,kKAAsB;QACxC,wDAA0C;QAAA,4DAAW;QACvD,0HAEY;QACd,4DAAiB;QAGrB,2EAAiB;QAGA,4EAAgB;QAAA,4DAAY;QACvC,wEAA0F;QAC1F,gFAA6C;QAAzB,oKAAwB;QAC1C,wDAA2C;QAAA,4DAAW;QACxD,0HAEY;QACd,4DAAiB;QAGrB,2EAAsC;QAE5B,gFAAoB;QAAA,yEAAuC;QAC7D,mEACF;QAAA,4DAAI;QAGV,2EAAqC;QAEjC,sEACF;QAAA,4DAAS;QAGb,0EAA+B;QAAA,8DAAE;QAAA,4DAAK;QACtC,0EAAgD;QAE1C,oEAA6B;QAC/B,4DAAI;QACN,0EAA6B;QACzB,oEAAiC;QACnC,4DAAI;QACN,0EAA6B;QACzB,oEAA8B;QAChC,4DAAI;QACN,0EAA6B;QACzB,oEAAkC;QACpC,4DAAI;;QA7EoB,2DAAsB;QAAtB,mFAAsB;QAO9B,0DAAmD;QAAnD,mHAAmD;QAYnD,0DAAiF;QAAjF,qJAAiF;QAUlD,0DAAmC;QAAnC,gGAAmC;QAE5E,0DAA0C;QAA1C,qHAA0C;QAChC,0DAAmD;QAAnD,mHAAmD;QAUnB,0DAAoC;QAApC,iGAAoC;QAE9E,0DAA2C;QAA3C,sHAA2C;QACjC,0DAAoD;QAApD,oHAAoD;QAcN,0DAA6B;QAA7B,yFAA6B","sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/locked/locked.component.ts","./src/app/authentication/locked/locked.component.html","./src/app/authentication/otp/otp.component.ts","./src/app/authentication/otp/otp.component.html","./src/app/authentication/page500/page500.component.ts","./src/app/authentication/page500/page500.component.html","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { SigninComponent } from \"./signin/signin.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\nimport { LockedComponent } from \"./locked/locked.component\";\nimport { Page404Component } from \"./page404/page404.component\";\nimport { Page500Component } from \"./page500/page500.component\";\nimport { OtpComponent } from \"./otp/otp.component\";\nimport { CommonDashboardComponent } from \"../erp-dashboard/Pages/common-dashboard/common-dashboard.component\";\nimport { AuthGuard } from \"../core/guard/auth.guard\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"signin\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"signin\",\n    component: SigninComponent,\n  },\n  {\n    path: \"OTP\",\n    component: OtpComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"signup\",\n    component: SignupComponent,\n  },\n  {\n    path: \"common-dashboard\",\n    component: CommonDashboardComponent,\n  },\n  {\n    path: \"forgot-password\",\n    component: ForgotPasswordComponent,\n  },\n  {\n    path: \"locked\",\n    component: LockedComponent,\n  },\n  {\n    path: \"page404\",\n    component: Page404Component,\n  },\n  {\n    path: \"page500\",\n    component: Page500Component,\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AuthenticationRoutingModule } from \"./authentication-routing.module\";\nimport { Page500Component } from \"./page500/page500.component\";\nimport { Page404Component } from \"./page404/page404.component\";\nimport { SigninComponent } from \"./signin/signin.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\nimport { LockedComponent } from \"./locked/locked.component\";\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { OtpComponent } from './otp/otp.component';\nimport { CommonDashboardComponent } from '../erp-dashboard/Pages/common-dashboard/common-dashboard.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    Page500Component,\n    Page404Component,\n    SigninComponent,\n    SignupComponent,\n    LockedComponent,\n    ForgotPasswordComponent,\n    OtpComponent,\n    CommonDashboardComponent,\n    ResetPasswordComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationRoutingModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    // MatDialogModule\n\n  ],\n\n\n\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"src/app/core/service/auth.service\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\n\n@Component({\n  selector: \"app-forgot-password\",\n  templateUrl: \"./forgot-password.component.html\",\n  styleUrls: [\"./forgot-password.component.scss\"],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  authForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n\n  loading = false;\n  error = \"\";\n  hide = true;\n\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService\n\n\n  ) {}\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      emailAddress: [\n        \"\",\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n    });\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n  }\n  get f() {\n    return this.authForm.controls;\n  }\n  // onSubmit() {\n  //   this.submitted = true;\n  //   // stop here if form is invalid\n  //   if (this.authForm.invalid) {\n  //     return;\n  //   } else {\n  //     this.router.navigate([\"/dashboard/main\"]);\n  //   }\n  // }\n\n\n  // onSubmit() {\n  //   this.submitted = true;\n  //   this.loading = true;\n  //   this.error = \"\";\n  //   if (this.authForm.invalid) {\n  //     this.error = \"Email not valid !\";\n  //     return;\n  //   } else {\n  //     console.log(this.authForm.value);\n\n  //   }\n  // }\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  onSubmit() {\n   // localStorage.clear();\n\n   this.tokenCookieService.deleteUser();\n\n    this.submitted = true;\n    this.loading = true;\n    this.error = \"\";\n    if (this.authForm.valid) {\n   \n      this.authService\n        .forgotPassword(this.authForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 200) {\n              \n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n              this.router.navigate([\"/authentication/signin\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n\n            this.loading = false;\n          },\n          error: (err) => {\n            console.log(\"err::: \", err)\n            if (err.status === 401) {\n              this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  \"Failed: Please check your email and try again.\"\n              );\n          } else{\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            }\n            \n            this.loading = false;\n          },\n          complete: () => {},\n        }),\n        Subscription;\n\n      console.log(this.authForm.value);\n    }\n  }\n}\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n      <!-- <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-03.png);\">\n      </div> -->\n      <img class=\"text-center\" src=\"assets/images/conv.png\" style=\"margin: 100px; padding: 20px;\" width=\"900px\" height=\"900px\"/>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <div class=\"text-center\">\n            <img src=\"assets/images/PBlogo.png\" width=\"400px\" height=\"350px\" class=\"px-2 mx-2\" alt=\"\" />\n          </div>\n\n          <h2 class=\"welcome-msg text-center\">Reset Password </h2>\n         \n          <p class=\"auth-signup-text text-muted text-center\">Let Us Help You</p>\n          <form class=\"validate-form\" [formGroup]=\"authForm\">\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\n                  Enter your registered email address.\n                </span>\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Email</mat-label>\n                  <input matInput formControlName=\"emailAddress\" required>\n                  <mat-icon matSuffix>mail</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('emailAddress').hasError('required') || authForm.get('emailAddress').touched\">\n                    Please enter a valid email address\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"container-auth-form-btn mt-5\">\n              <button mat-flat-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\n              class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" (click)=\"onSubmit()\" >\n                Reset My Password\n              </button>\n            </div>\n            <div class=\"w-full p-t-25 text-center\">\n              <div>\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\n                  Login?\n                </a>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"src/app/core/service/auth.service\";\nimport { Role } from \"src/app/core/models/role\";\n@Component({\n  selector: \"app-locked\",\n  templateUrl: \"./locked.component.html\",\n  styleUrls: [\"./locked.component.scss\"],\n})\nexport class LockedComponent implements OnInit {\n  authForm: FormGroup;\n  submitted = false;\n  userImg: string;\n  userFullName: string;\n  hide = true;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      password: [\"\", Validators.required],\n    });\n\n    // this.userImg = this.authService.currentUserValue.img;\n    // this.userFullName =\n    //   this.authService.currentUserValue.firstName +\n    //   \" \" +\n    //   this.authService.currentUserValue.lastName;\n    this.userImg = \"https://w1.pngwing.com/pngs/386/684/png-transparent-face-icon-user-icon-design-user-profile-share-icon-avatar-black-and-white-silhouette.png\";\n    this.userFullName =\n      \"John\" +\n      \"Doe\";\n\n\n  }\n  get f() {\n    return this.authForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.authForm.invalid) {\n      return;\n    } else {\n      // const role = \"Admin\";\n      // if (role === Role.All || role === Role.Admin) {\n      //   this.router.navigate([\"/admin/dashboard/main\"]);\n      // } else if (role === Role.Employee) {\n      //   this.router.navigate([\"/employee/dashboard\"]);\n      // } else if (role === Role.Client) {\n      //   this.router.navigate([\"/client/dashboard\"]);\n      // } else {\n      //   this.router.navigate([\"/authentication/signin\"]);\n      // }\n    }\n  }\n}\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\n      </div>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"auth-locked\">\n              <div class=\"image\">\n                <img src={{userImg}} alt=\"User\">\n              </div>\n            </div>\n            <span class=\"auth-locked-title p-b-34 p-t-27\">\n              {{userFullName}}\n            </span>\n            <div class=\"text-center\">\n              <p class=\"txt1 p-b-20\">\n                Locked\n              </p>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\n                  Enter your password here.\n                </span>\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Password</mat-label>\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\n                    Password is required\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"container-auth-form-btn mt-5\">\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\n                Reset My Password\n              </button>\n            </div>\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\n              <div>\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\n                  Need Help?\n                </a>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\n\nimport { AuthService } from \"src/app/core/service/auth.service\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { userJSON } from \"src/app/erp-procurement/data/types/userJSON\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-otp\",\n  templateUrl: \"./otp.component.html\",\n  styleUrls: [\"./otp.component.scss\"],\n})\nexport class OtpComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  otpForm: FormGroup;\n  currentEmail: any;\n  maskedEmail: any;\n  currentUser: any;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private tokenCookieService: TokenCookieService,\n    private router: Router,\n    private authService: AuthService,\n\n    private snackbar: SnackbarService\n  ) {}\n\n  ngOnInit(): void {\n    // if (!this.tokenCookieService.getUser()) {\n    //   // If not authenticated, navigate to the sign-in page\n    //   this.router.navigate([\"/authentication/signin\"]);\n    // }\n    this.getEmail();\n\n    this.otpForm = this.fb.group({\n      first: [\"\", Validators.required],\n      second: [\"\", Validators.required],\n      third: [\"\", Validators.required],\n      fourth: [\"\", Validators.required],\n    });\n  }\n\n  getEmail() {\n    // this.currentEmail = this.tokenCookieService.getUser().email;\n    // this.currentUser = this.tokenCookieService.getUser().username;\n\n    this.currentEmail = this.tokenCookieService.getUser().email;\n    this.currentUser = this.tokenCookieService.getUser().username;\n\n    console.log(\"this.currentEmail: \", this.currentEmail);\n    const email = this.currentEmail;\n    const atIndex = email.indexOf(\"@\");\n    const username = email.slice(0, atIndex);\n    const domain = email.slice(atIndex);\n\n    const maskedUsername =\n      username.charAt(0) +\n      \"*\".repeat(username.length - 2) +\n      username.charAt(username.length - 1);\n    const maskedEmail = maskedUsername + domain;\n    this.maskedEmail = maskedEmail;\n    console.log(maskedEmail); // Output: s********n@gmail.com\n  }\n\n  // onSubmit() {\n  //   this.router.navigate([\"/admin/dashboard\"]);\n  //   if (this.otpForm.invalid) {\n  //     return;\n  //   }\n\n  //   // TODO: Add logic to validate OTP code\n\n  //   console.log('OTP Code:', this.otpForm.value);\n  // }\n  loading: boolean = false;\n  error: any;\n  onSubmit() {\n    this.loading = true;\n    this.error = \"\";\n    if (this.otpForm.invalid) {\n      this.error = \"Invalid OTP!\";\n      return;\n    } else {\n      const otpValue = Number(\n        this.otpForm.controls.first.value +\n          this.otpForm.controls.second.value +\n          this.otpForm.controls.third.value +\n          this.otpForm.controls.fourth.value\n      );\n\n      console.log(otpValue);\n\n      const params = new HttpParams()\n        // .set(\"format\", type)\n        .set(\"username\", this.currentUser)\n        .set(\"otpCode\", otpValue);\n\n      console.log(\"params: \", params);\n\n      //this.tokenCookieService.saveUser(userJSON);\n\n      //this.router.navigate([\"/admin/dashboard\"]);\n\n      \n      this.tokenCookieService.clearSharedTokenOrCookie();\n\n\n      this.authService\n        .verifyOTP(params)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 200) {\n              this.tokenCookieService.saveUser(res.entity);\n              console.log(\"res.entity: \", res.entity)\n              this.tokenCookieService.setSharedRefreshTokenToCookie(res.entity.refreshToken);\n              console.log(\"set refreshToken: \", res.entity.refreshToken)\n\n              //this.tokenCookieService.saveUser(userJSON);\n\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                \"Login Successful\"\n              );\n              // this.router.navigate([\"/erp-dashboard/main\"], { skipLocationChange: true });\n\n              this.router.navigateByUrl(\"/erp-dashboard/main\");\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n\n            this.loading = false;\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              err.message\n            );\n            this.loading = false;\n          },\n          complete: () => {},\n        }),\n        Subscription;\n    }\n  }\n\n  // ngAfterViewInit() {\n  //   const inputs =\n  //     document.querySelectorAll<HTMLInputElement>('input[type=\"text\"]');\n\n  //   inputs.forEach((input, index) => {\n  //     input.addEventListener(\"input\", (event) => {\n  //       const target = event.target as HTMLInputElement;\n  //       const maxLength = target.maxLength;\n  //       const inputLength = target.value.length;\n\n  //       if (inputLength === maxLength) {\n  //         const nextIndex = index + 1;\n\n  //         if (inputs[nextIndex]) {\n  //           (inputs[nextIndex] as HTMLInputElement).focus();\n  //         }\n  //       }\n  //     });\n  //   });\n  // }\n\n  ngAfterViewInit() {\n    const inputs =\n      document.querySelectorAll<HTMLInputElement>('input[type=\"text\"]');\n\n    inputs.forEach((input, index) => {\n      input.addEventListener(\"input\", (event) => {\n        const target = event.target as HTMLInputElement;\n        const maxLength = target.maxLength;\n        const inputLength = target.value.length;\n\n        if (inputLength === maxLength) {\n          const nextIndex = index + 1;\n\n          if (inputs[nextIndex]) {\n            (inputs[nextIndex] as HTMLInputElement).focus();\n          }\n        }\n      });\n\n      input.addEventListener(\"click\", (event) => {\n        const target = event.target as HTMLInputElement;\n        target.value = \"\"; // Clear the input field when clicked\n      });\n\n      input.addEventListener(\"focus\", (event) => {\n        const target = event.target as HTMLInputElement;\n        target.value = \"\"; // Clear the input field when it gains focus\n      });\n    });\n  }\n}\n","<div class=\"otpBackground\">\n  <div class=\"container height-100 d-flex justify-content-center align-items-center\">\n    <div class=\"position-relative\">\n      <div class=\"card text-center\">\n        <div class=\"text-center\">\n          <img src=\"assets/images/PBlogo.png\" width=\"260px\" height=\"200px\" class=\"px-2 mx-2\" alt=\"\" />\n        </div>\n        <br />\n        <h6>\n          Please enter the one time password <br />\n          to verify your account\n        </h6>\n        <br />\n\n        <div>\n          <span>A code has been sent to </span>\n          <small>{{ maskedEmail }}</small>\n        </div>\n        \n        <br />\n\n        <form [formGroup]=\"otpForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"inputs d-flex flex-row justify-content-center mt-2\">\n            <input class=\"mx-3 text-center form-control rounded\" type=\"text\" formControlName=\"first\" maxlength=\"1\" />\n            <input class=\"mx-3 text-center form-control rounded\" type=\"text\" formControlName=\"second\" maxlength=\"1\" />\n            <input class=\"mx-3 text-center form-control rounded\" type=\"text\" formControlName=\"third\" maxlength=\"1\" />\n            <input class=\"mx-3 text-center form-control rounded\" type=\"text\" formControlName=\"fourth\" maxlength=\"1\" />\n          </div>\n          <div class=\"mt-4 px-2\">\n            <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\n            class=\"auth-form-btn dark-green-button\" [disabled]=\"!otpForm.valid\" type=\"submit\" style=\"display: block; width: 100%\">\n              Validate\n            </button>\n          </div>\n        </form>\n        <br />\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\n@Component({\n  selector: \"app-page500\",\n  templateUrl: \"./page500.component.html\",\n  styleUrls: [\"./page500.component.scss\"],\n})\nexport class Page500Component implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n}\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-05.png);\">\n      </div>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <form>\n            <span class=\"error-header p-b-45\">\n              500\n            </span>\n            <span class=\"error-subheader2 p-b-5\">\n              Oops, Something went wrong. Please try after some times.\n            </span>\n            <div class=\"container-auth-form-btn mt-5\">\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" type=\"submit\">\n                Go To Home Page\n              </button>\n            </div>\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\n              <div>\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\n                  Need Help?\n                </a>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, HostListener, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"src/app/core/service/auth.service\";\nimport { Role } from \"src/app/core/models/role\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\nimport { TokenCookieService } from \"src/app/core/service/token-storage-cookies.service\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { ResetPasswordComponent } from \"src/app/admin/modules/dashboard/pages/components/reset-password/reset-password.component\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\n@Component({\n  selector: \"app-signin\",\n  templateUrl: \"./signin.component.html\",\n  styleUrls: [\"./signin.component.scss\"],\n})\nexport class SigninComponent\n  extends UnsubscribeOnDestroyAdapter\n  implements OnInit\n{\n\n\n  authForm: FormGroup;\n  submitted = false;\n  loading = false;\n  error = \"\";\n  hide = true;\n\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = \"\";\n  roles: string[] = [];\n\n  passwordFlag: any;\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  private reloadExecuted: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private tokenCookieService: TokenCookieService,\n    private dialog: MatDialog,\n    private snackbar: SnackbarService\n  ) {\n    super();\n    this.router.onSameUrlNavigation = \"reload\";\n  }\n\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n\n    this.tokenCookieService.deleteUser();\n  }\n\n  onSubmit() {\n   // localStorage.clear();\n    this.tokenCookieService.deleteUser();\n    this.submitted = true;\n    this.loading = true;\n    this.error = \"\";\n    if (this.authForm.invalid) {\n      this.error = \"Username or Password not valid !\";\n      return;\n    } else {\n      this.authService\n        .login(this.authForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res.body);\n\n            if (res.body.statusCode == 200) {\n\n              this.tokenCookieService.saveUser(res.body.entity);\n              \n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.body.message\n              );\n              this.router.navigate([\"/authentication/OTP\"]);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.body.message);\n            }\n\n            this.loading = false;\n          },\n          error: (err) => {\n            console.log(\"err::: \", err)\n            if (err.status === 401) {\n              this.snackbar.showNotification(\n                  \"snackbar-danger\",\n                  \"Authentication failed: Please check your credentials and try again.\"\n              );\n          } else{\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                err.message\n              );\n            }\n            \n            this.loading = false;\n          },\n          complete: () => {},\n        }),\n        Subscription;\n\n      console.log(this.authForm.value);\n    }\n  }\n\n  \n}\n","<div class=\"auth-container authBackground\">\n  <div class=\"row auth-main\">\n    <div class=\"col form-box\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <div class=\"text-center\">\n            <img src=\"assets/images/PBlogo.png\" width=\"260px\" height=\"200px\" class=\"px-2 mx-2\" alt=\"\" />\n          </div>\n\n          <!-- <h2 class=\"mb-4\">Welcome to Kingdom Bank</h2> -->\n          <h2 class=\"mb-4\">ERP SOLUTION</h2>\n\n          <!-- <small><strong><h6 class=\"mb-4\">ENTERPRISE RESOURCE PLANNING</h6></strong></small> -->\n\n          <!-- <p style=\"color: #423f3f\">Enter credentials below:</p> -->\n\n          <h3>Sign in</h3>\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                  <mat-label>Username</mat-label>\n                  <input matInput formControlName=\"username\" />\n                  <mat-icon matSuffix>face</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\n                    Username is required\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                  <mat-label>Password</mat-label>\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" />\n                  <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\n                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{\n                      hide ? \"visibility_off\" : \"visibility\"\n                      }}</mat-icon>\n                  </a>\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\n                    Password is required\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <!-- <div class=\"badge col-blue\"><a routerLink=\"/authentication/forgot-password\">Forgot Password?</a></div> -->\n\n           \n\n            <div class=\"d-flex justify-content-between align-items-center mb-1\"></div>\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-1 mb-1\">\n              {{ error }}\n            </div>\n\n            <div class=\"container-auth-form-btn\">\n              <div style=\"text-align: center\">\n                <!-- <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\n                  class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" type=\"submit\">\n                  Login\n                </button> -->\n\n                <button mat-raised-button [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\n                  class=\"auth-form-btn dark-green-button\" [disabled]=\"!authForm.valid\" type=\"submit\">\n                  Login\n                </button>\n              </div>\n            </div>\n            <div class=\"badge badge-solid-green m-3 mt-3\">\n              <a routerLink=\"/authentication/forgot-password\" style=\"color: #000000\">Forgot Password?</a>\n            </div>\n          </form>\n          <h6 class=\"social-login-title\">OR</h6>\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\n            <li class=\"list-inline-item\">\n              <a href=\"javascript:void(0)\" class=\"rounded\">\n                <i class=\"fab fa-google\"></i>\n              </a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\n                <i class=\"fab fa-facebook-f\"></i>\n              </a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a href=\"javascript:void(0)\" class=\"rounded\">\n                <i class=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a href=\"javascript:void(0)\" class=\"rounded\">\n                <i class=\"fab fa-linkedin-in\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"badge badge-solid-green mt-3\">\n          <small>\n            <a href=\"https://emtechhouse.co.ke\" target=\"_blank\" style=\"color: #000000\">Powered by E&M Technology\n              House</a>\n          </small>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.scss\"],\n})\nexport class SignupComponent implements OnInit {\n  authForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n  hide = true;\n  chide = true;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      username: [\"\", Validators.required],\n      email: [\n        \"\",\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      password: [\"\", Validators.required],\n      cpassword: [\"\", Validators.required],\n    });\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n  }\n  get f() {\n    return this.authForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.authForm.invalid) {\n      return;\n    } else {\n      this.router.navigate([\"/admin/dashboard/main\"]);\n    }\n  }\n}\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\" >\n      <img src=\"assets/images/sign-in.jpg\" style=\"margin: 100px;\" width=\"700px\" height=\"600px\"/>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <div class=\"text-center\">\n            <img src=\"assets/images/em.jpg\" width=\"100px\" height=\"100px\" alt=\"\" />\n          </div>\n          <h2 class=\"welcome-msg\"> Sign Up </h2>\n          <!-- <p class=\"auth-signup-text text-muted\">Enter details to create your account</p> -->\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Username</mat-label>\n                  <input matInput formControlName=\"username\" required>\n                  <mat-icon matSuffix>face</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\n                    Username is required\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Email</mat-label>\n                  <input matInput formControlName=\"email\" required>\n                  <mat-icon matSuffix>mail</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\n                    Please enter a valid email address\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Password</mat-label>\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\n                    Password is required\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Confirm Password</mat-label>\n                  <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('cpassword').hasError('required')\">\n                    Confirm Password is required\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"flex-sb-m w-full  p-b-20\">\n              <div>\n                <span>Already Registered? <a routerLink=\"/authentication/signin\">\n                    Login\n                  </a></span>\n              </div>\n            </div>\n            <div class=\"container-auth-form-btn\">\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\n                Register\n              </button>\n            </div>\n          </form>\n          <h6 class=\"social-login-title\">OR</h6>\n          <ul class=\"list-unstyled social-icon mb-0 mt-3\">\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\n                <i class=\"fab fa-google\"></i>\n              </a></li>\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded flex-c-m\">\n                <i class=\"fab fa-facebook-f\"></i>\n              </a></li>\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\n                <i class=\"fab fa-twitter\"></i>\n              </a></li>\n            <li class=\"list-inline-item\"><a href=\"javascript:void(0)\" class=\"rounded\">\n                <i class=\"fab fa-linkedin-in\"></i>\n              </a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}