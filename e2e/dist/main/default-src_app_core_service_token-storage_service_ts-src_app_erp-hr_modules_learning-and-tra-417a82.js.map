{"version":3,"file":"default-src_app_core_service_token-storage_service_ts-src_app_erp-hr_modules_learning-and-tra-417a82.js","mappings":"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","sources":["./src/app/core/service/token-storage.service.ts","./src/app/erp-hr/data/learning-and-training/learningandtraining.service.ts","./src/app/erp-hr/modules/learning-and-training/training-sessions/manage-learning-and-training/manage-learning-and-training.component.ts","./src/app/erp-hr/modules/learning-and-training/training-sessions/manage-learning-and-training/manage-learning-and-training.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\nimport { Observable, map, tap } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\nconst TOKEN_KEY = \"auth-token\";\nconst USER_KEY = \"auth-user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TokenStorageService {\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n  constructor(\n    private http: HttpClient,\n  \n  ) {}\n\n  public getToken(): string | null {\n    // get the name of the cookie to retrieve\n    const name = \"accessToken\";\n    // split the document.cookie string into an array of individual cookies\n    const cookieArray = document.cookie.split(\";\");\n    // loop through the cookies to find the one with the matching name\n    for (let i = 0; i < cookieArray.length; i++) {\n      let cookie = cookieArray[i];\n      //console.log(\"cookieArray: \", cookieArray)\n      // remove any leading spaces from the cookie string\n      while (cookie.charAt(0) === \" \") {\n        cookie = cookie.substring(1);\n      }\n      // if the cookie name matches the desired name, return the cookie value\n      if (cookie.indexOf(name) === 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n    // if the cookie was not found, return null\n    return null;\n  }\n\n  public saveUser(user: any): void {\n    window.localStorage.removeItem(USER_KEY);\n    window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.localStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return null;\n  }\n  public getEmppf(){\n    return this.getUser().empPfNo\n  }\n  \n}\n","import { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map, catchError, throwError } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LearningAndTrainingMngtService {\n    headers = new HttpHeaders().set('Content-Type', 'application/json');\n    baseURL = `${environment.baseUrlHR}/api/v1/employee_training`;\n\n    constructor(private http: HttpClient) { }\n\n    create(data: any): Observable<any> {\n        let API_URL = `${this.baseURL}/create`;\n        return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n\n    createBulk(data: any): Observable<any> {\n        let API_URL = `${this.baseURL}/create/bulk`;\n        return this.http.post(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n    read(): Observable<any> {\n        let API_URL = `${this.baseURL}/all`;\n        return this.http.get(API_URL, { headers: this.headers, withCredentials: false })\n            .pipe(\n                map((res) => {\n                    return res || {}\n                }),\n                catchError(this.errorMgmt)\n            )\n    }\n    readByEmPf(params: any): Observable<any> {\n        let API_URL = `${this.baseURL}/all/by-emppf`;\n        return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n            .pipe(\n                map((res) => {\n                    return res || {}\n                }),\n                catchError(this.errorMgmt)\n            )\n    }\n\n      readByStatus(params: any): Observable<any> {\n        let API_URL = `${this.baseURL}/fetchbyStatus`;\n        return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n          .pipe(\n            map((res) => {\n              return res || {}\n            }),\n            catchError(this.errorMgmt)\n          )\n      }\n    readEmployeesByDepartmentAndRole(params: any): Observable<any> {\n        let API_URL = `${this.baseURL}/all/employees`;\n        return this.http.get(API_URL, { params: params, headers: this.headers, withCredentials: false })\n            .pipe(\n                map((res) => {\n                    return res || {}\n                }),\n                catchError(this.errorMgmt)\n            )\n    }\n\n\n\n    findById(params: any): Observable<any> {\n        let API_URL = `${this.baseURL}/find/by/id`;\n        return this.http.get(API_URL, { params:params, withCredentials: false })\n            .pipe(\n                map((res) => {\n                    return res || {}\n                }),\n                catchError(this.errorMgmt)\n            )\n    }\n    update(data: any): Observable<any> {\n        let API_URL = `${this.baseURL}/update`;\n        return this.http.put(API_URL, data, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n\n    verify(dataToProcess: any): Observable<any> {\n        let API_URL = `${this.baseURL}/update/state`;\n        return this.http.put(API_URL, dataToProcess, { headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n    delete(params: any): Observable<any> {\n        let API_URL = `${this.baseURL}/delete`;\n        return this.http.delete(API_URL, { params: params, headers: this.headers, withCredentials: false }).pipe(map(res => {\n            return res || {}\n        }),\n            catchError(this.errorMgmt)\n        );\n    }\n    errorMgmt(error: HttpErrorResponse) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            errorMessage = error.error.message;\n        } else {\n            errorMessage = `${error.error.message}`;\n        }\n        return throwError(errorMessage);\n    }\n}\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { EmployeesLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { AllEmployeesComponent } from '../../../employees/all-employees/all-employees.component';\nimport { LearningAndTrainingMngtService } from 'src/app/erp-hr/data/learning-and-training/learningandtraining.service';\n\n@Component({\n  selector: 'app-manage-learning-and-training',\n  templateUrl: './manage-learning-and-training.component.html',\n  styleUrls: ['./manage-learning-and-training.component.sass']\n})\nexport class ManageLearningAndTrainingComponent implements OnInit {\n\n  mngForm: FormGroup;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n  isLoading: boolean = true;\n\n  trainingTypes: string[] = [\"Physical\", \"Virtual\"];\n\n  constructor(\n    public dialogRef: MatDialogRef<AllEmployeesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private learningAndTrainingMngtService: LearningAndTrainingMngtService,\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.formData = this.data.record;\n    this.generateForm(this.formData);\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n    console.log(\"this.data.action :\", this.data.action);\n    if (this.data.action === \"Add\") {\n      this.isLoading = false;\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"Update\") {\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"View\") {\n      this.generateForm(this.data.record);\n      this.activateViewMode();\n    }\n    this.isLoading = false;\n\n    if(this.formData.trainingattendees.length>0){\n      this.dataSource.data = this.formData.trainingattendees\n      this.refresh()\n    }\n  }\n\n  formData: any;\n  generateForm(formData?): void {\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      trainingName: [formData?.trainingName ?? \"\", [Validators.required]],\n      trainingType: [formData?.trainingType ?? \"\", [Validators.required]],\n      trainingLink: [formData?.trainingLink ?? \"\"],\n      trainingLocation: [formData?.trainingLocation ?? \"\"],\n      startDate: [formData?.startDate ?? \"\", [Validators.required]],\n      endDate: [formData?.endDate ?? \"\", [Validators.required]],\n\n      trainingattendees: [formData?.trainingattendees ?? []],\n\n    });\n\n    this.updateValidators(formData?.trainingType);\n  }\n\n  subscribeToTrainingTypeChanges(): void {\n    this.mngForm.get('trainingType').valueChanges.subscribe((value) => {\n      this.updateValidators(value);\n    });\n  }\n\n  updateValidators(trainingType: string): void {\n    if (trainingType === 'Physical') {\n      this.mngForm.get('trainingLocation').setValidators(Validators.required);\n      this.mngForm.get('trainingLocation').updateValueAndValidity();\n      this.mngForm.get('trainingLink').clearValidators();\n      this.mngForm.get('trainingLink').setValue('');\n      this.mngForm.get('trainingLink').updateValueAndValidity();\n    } else if (trainingType === 'Virtual') {\n      this.mngForm.get('trainingLink').setValidators(Validators.required);\n      this.mngForm.get('trainingLink').updateValueAndValidity();\n      this.mngForm.get('trainingLocation').clearValidators();\n      this.mngForm.get('trainingLocation').setValue('');\n      this.mngForm.get('trainingLocation').updateValueAndValidity();\n    }\n  }\n\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n\n  //********************************************************************************************************************** */\n\n  //********************************************************************************************************************** */\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  displayedColumns: string[] = [\"id\", \"empPf\", \"empName\", \"action\"];\n  tranForm: FormGroup;\n  showParTranForm = false;\n  parTranAction: string = \"\";\n  selectedParTranIndex: number;\n  debitTotal: number = 0;\n  creditTotal: number = 0;\n  balance: number = 0;\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  // generateSubForm(formData?): void {\n  //   this.tranForm = this.fb.group({\n  //     id: [formData?.id ?? \"\"],\n  //     description: [formData?.narration ?? \"\", [Validators.required]],\n  //   });\n  // }\n  resetFormAndHide() {\n    this.mngForm.patchValue({\n      trainingAttendees: this.dataSource.data,\n    });\n    this.tranForm.reset();\n    this.showParTranForm = false;\n  }\n\n  addParTran() {\n    // this.parTranAction = \"Add\";\n    // this.showParTranForm = true;\n    this.employeeLookup();\n  }\n\n  refresh() {\n    this.dataSource.data = [...this.dataSource.data];\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.mngForm.patchValue({\n      trainingattendees: this.dataSource.data,\n    });\n  }\n\n  editParTran(data: any, index: number) {\n    this.parTranAction = \"Update\";\n    this.selectedParTranIndex = index;\n   // this.generateSubForm(data);\n    this.showParTranForm = true;\n  }\n\n  pushToDataSource() {\n    if (this.parTranAction === \"Add\") {\n      this.dataSource.data.push(this.tranForm.value);\n    } else if (this.parTranAction === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.tranForm.value.id) {\n        indexToUpdate = this.dataSource.data.findIndex(\n          (item) => item.id === this.tranForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource.data[indexToUpdate] = this.tranForm.value;\n      }\n    }\n\n    this.resetFormAndHide();\n    this.refresh();\n  }\n\n  cancelParTran() {\n    this.resetFormAndHide();\n  }\n\n  deleteParTran(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.refresh();\n  }\n\n  // **************************************************************************************************\n\n  posting: boolean = false;\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.learningAndTrainingMngtService\n        .create(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"res: \", res);\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.learningAndTrainingMngtService\n        .update(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n\n//   {\n//     \"id\": 52,\n//     \"status\": \"APPROVED\",\n//     \"postedFlag\": \"Y\",\n//     \"postedBy\": \"KBUser2\",\n//     \"postedTime\": \"2024-05-27T08:48:13.006027\",\n//     \"modifiedFlag\": \"Y\",\n//     \"modifiedBy\": \"KBUser2\",\n//     \"modifiedTime\": \"2024-05-27T09:48:59.451783\",\n//     \"verifiedFlag\": \"Y\",\n//     \"verifiedBy\": \"KBUser\",\n//     \"verifiedTime\": \"2024-05-27T09:49:45.825571\",\n//     \"verifierStatus\": \"PENDING\",\n//     \"verifierRemarks\": \"okay\",\n//     \"supervisorVerifierBy\": null,\n//     \"supervisorVerifiedFlag\": \"N\",\n//     \"supervisorVerifierTime\": null,\n//     \"supervisorVerifierStatus\": \"PENDING\",\n//     \"supervisorVerifierRemarks\": null,\n//     \"hrVerifierBy\": null,\n//     \"hrVerifiedFlag\": \"N\",\n//     \"hrVerifierTime\": null,\n//     \"hrVerifierStatus\": \"PENDING\",\n//     \"hrVerifierRemarks\": null,\n//     \"seniorHrVerifierBy\": null,\n//     \"seniorHrVerifiedFlag\": \"N\",\n//     \"seniorHrVerifierTime\": null,\n//     \"seniorHrVerifierStatus\": \"PENDING\",\n//     \"seniorHrVerifierRemarks\": null,\n//     \"hodVerifierBy\": null,\n//     \"hodVerifiedFlag\": \"N\",\n//     \"hodVerifierTime\": null,\n//     \"hodVerifierStatus\": \"PENDING\",\n//     \"hodVerifierRemarks\": null,\n//     \"deletedFlag\": \"N\",\n//     \"deletedBy\": null,\n//     \"deletedTime\": null,\n//     \"empNo\": \"4\",\n//     \"hasPfNo\": \"Y\",\n//     \"costCenterCode\": \"CST9\",\n//     \"firstName\": \"ALBERT\",\n//     \"middleName\": \"KIMEU\",\n//     \"lastName\": \"KITONGA\",\n//     \"gender\": \"male\",\n//     \"religion\": \"Christian\",\n//     \"nationalId\": \"55667733\",\n//     \"postalAddress\": \"990\",\n//     \"postalCode\": \"00100\",\n//     \"city\": \"NAIROBI\",\n//     \"personalPhone\": \"0788990077\",\n//     \"specialNeeds\": \"No\",\n//     \"specialNeedsCertificate\": null,\n//     \"specialNeedDescription\": null,\n//     \"nationality\": \"Kenyan\",\n//     \"county\": \"NAIROBI\",\n//     \"subCounty\": \"WESTLANDS\",\n//     \"residentialCountry\": \"Kenya\",\n//     \"residentialCounty\": \"NAIROBI\",\n//     \"residentialSubCounty\": \"WESTLANDS\",\n//     \"homeAddress\": null,\n//     \"alternativePhone\": \"\",\n//     \"personalEmail\": \"jessepan474@gmail.com\",\n//     \"alternativeEmail\": \"jessepan474@gmail.com\",\n//     \"highestEducation\": \"PHD\",\n//     \"courseProgram\": \"CRIMINOLOGY\",\n//     \"enrollmentStatus\": \"Contract\",\n//     \"educationEnrollment\": \"Full Time\",\n//     \"enrollmentStartDate\": \"2024-01-07\",\n//     \"enrollmentEndDate\": \"2100-11-11\",\n//     \"timeTaken\": null,\n//     \"firstRefName\": \"DAN\",\n//     \"firstRefCompany\": \"KENTRACO corportaion\",\n//     \"firstRefEmail\": \"mwangiajohn@gmail.com\",\n//     \"firstRefPhone\": \"0111151347\",\n//     \"secondRefName\": \"PETER\",\n//     \"secondRefCompany\": \"KCC\",\n//     \"secondRefEmail\": \"levi.j@gmail.com\",\n//     \"secondRefPhone\": \"0722391365\",\n//     \"bankName\": \"KINGDOM BANK\",\n//     \"bankAccount\": \"123456787\",\n//     \"kraNo\": \"87654\",\n//     \"nssfNo\": \"5456765\",\n//     \"nhifNo\": \"345654\",\n//     \"basicSalary\": 80000,\n//     \"mortgage\": 0,\n//     \"grossSalary\": 0,\n//     \"totalNonCashBenefit\": 0,\n//     \"bonus\": 0,\n//     \"valueOfQuarters\": 0,\n//     \"ownerOccupiedInterests\": 0,\n//     \"personalRelief\": 0,\n//     \"insuranceRelief\": 0,\n//     \"dcrsActualE2\": 0,\n//     \"reportingToPf\": \"1\",\n//     \"reportingToFullname\": \"MOSES JUMA BABA\",\n//     \"occupation\": null,\n//     \"jobGroupId\": 41,\n//     \"jobGroupName\": \"Grade X\",\n//     \"departmentId\": 40,\n//     \"departmentName\": \"CUSTOMER SERVICE\",\n//     \"branchId\": 27,\n//     \"isHeadOfDepartment\": false,\n//     \"isAssistantHeadOfDepartment\": false,\n//     \"branchName\": \"KISUMU BRANCH\",\n//     \"isHeadOfBranch\": false,\n//     \"disabledRegNo\": \"\",\n//     \"isDisabled\": false,\n//     \"cashPaymentAmount\": 0,\n//     \"cashPaymentMeans\": \"Cash\",\n//     \"isSalaryClosed\": false,\n//     \"permanentlyCleared\": false,\n//     \"haveAccount\": false,\n//     \"isActivated\": false,\n//     \"hrmApproved\": false,\n//     \"supervisorApproved\": false,\n//     \"directorApproved\": false,\n//     \"requestedResignation\": false,\n//     \"isEvaluationEnrolled\": false,\n//     \"cashPaymentReason\": null,\n//     \"isSaccoEnrolled\": false,\n//     \"saccoDeductionPercentage\": 0,\n//     \"enrolledToSaccoOn\": null,\n//     \"uniqueIdentifier\": null,\n//     \"maritalStatus\": \"Married\",\n//     \"dob\": \"2016-01-04\",\n//     \"workMail\": \"jessepan474@gmail.com\",\n//     \"annualLeaveDaysTaken\": 0,\n//     \"reasonForDeletion\": null,\n//     \"reasonForHold\": null,\n//     \"organizationRoleId\": 1,\n//     \"organizationRole\": \"BRANCH MANAGER\",\n//     \"ciscoNo\": null,\n//     \"overRideSalaryRanges\": false,\n//     \"dependants\": [\n//         {\n//             \"id\": 52,\n//             \"dependantName\": \"ken keno\",\n//             \"dependantDob\": \"2017-02-06\",\n//             \"birthCertNo\": \"2345678\",\n//             \"dependantPhone\": \"071433224444\",\n//             \"dependantEmail\": \"leonard.tsotsi@yahoo.com\"\n//         }\n//     ],\n//     \"nextOfKins\": [\n//         {\n//             \"id\": 52,\n//             \"name\": \"MELI\",\n//             \"phoneNumber\": \"0727889933\",\n//             \"email\": \"meli.j@gmail.com\",\n//             \"address\": \"\",\n//             \"relationship\": \"BROTHER\"\n//         }\n//     ],\n//     \"employeeEducations\": [\n//         {\n//             \"id\": 52,\n//             \"institutionLevel\": null,\n//             \"institutionName\": \"MOI\",\n//             \"awardCertificate\": \"DEGREE\",\n//             \"gpaScore\": \"Second Class (Upper division)\",\n//             \"enrollOn\": \"2020-01-04T21:00:00.000Z\",\n//             \"graduatedOn\": \"2023-01-31T21:00:00.000Z\",\n//             \"certNo\": \"12345\",\n//             \"certificateFile\": null\n//         }\n//     ],\n//     \"employeeWorkExperiences\": [\n//         {\n//             \"id\": 52,\n//             \"companyName\": \"KENTRACO corportaion\",\n//             \"workPosition\": \"MANAGER\",\n//             \"startDate\": \"2023-02-06\",\n//             \"endDate\": \"2024-03-03\"\n//         }\n//     ],\n//     \"ourBranchID\": \"u1w3g\",\n//     \"webServiceStatus\": \"SUCCESS\",\n//     \"currencyID\": \"KSH\",\n//     \"accountName\": \"ALBERT KIMEU KITONGA\"\n// }\n\n  selectedItem: any;\n  employeeLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"MultipleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(EmployeesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        res.data.forEach((employeeInfo) => {\n          const empName =\n            employeeInfo.firstName +\n            \" \" +\n            employeeInfo.middleName +\n            \" \" +\n            employeeInfo.lastName;\n          const empPf = employeeInfo.empNo;\n\n          if (this.dataSource.data) {\n            const existingItemIndex = this.dataSource.data.findIndex(\n              (item) => item.empPf === empPf || item.empName === empName\n            );\n\n            if (existingItemIndex !== -1) {\n              this.dataSource.data[existingItemIndex] = {\n                ...this.dataSource.data[existingItemIndex],\n                empPf,\n                empName,\n              };\n            } else {\n              this.dataSource.data.push({\n                empPf,\n                empName,\n              });\n            }\n          }\n        });\n\n        this.refresh();\n        console.log(\"this.Datasource: \", this.dataSource.data)\n      }\n    });\n    // dialogRef.afterClosed().subscribe((res) => {\n    //   if (res && res.data && res.data.length > 0) {\n    //     res.data.forEach((employeeInfo) => {\n    //       const { empPf, empName } = employeeInfo;\n\n    //       if (this.dataSource.data) {\n    //         const existingItemIndex = this.dataSource.data.findIndex(\n    //           (item) => item.empPf === empPf || item.empName === empName\n    //         );\n\n    //         if (existingItemIndex !== -1) {\n    //           this.dataSource.data[existingItemIndex] = {\n    //             ...this.dataSource.data[existingItemIndex],\n    //             empPf,\n    //             empName,\n    //           };\n    //         } else {\n    //           this.dataSource.data.push({\n    //             empPf,\n    //             empName,\n    //           });\n    //         }\n    //       }\n\n    //     });\n\n    //     this.refresh();\n    //   }\n    // });\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>{{ pageFunction }} Learning And Training</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <ng-container>\n\n            <mat-horizontal-stepper [linear]=\"true\" #stepper>\n                <mat-step>\n                    <ng-template matStepLabel>Learning And Training Information</ng-template>\n                    <form [formGroup]=\"mngForm\">\n\n                        <div class=\"row\">\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Training Name</mat-label>\n                                    <input matInput formControlName=\"trainingName\" />\n                                    <mat-error\n                                        *ngIf=\"mngForm.get('trainingName').invalid && mngForm.get('trainingName').touched\">\n                                        Training Name is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Training Type</mat-label>\n                                    <mat-select formControlName=\"trainingType\">\n                                        <mat-option *ngFor=\"let type of trainingTypes\" [value]=\"type\">{{ type\n                                            }}</mat-option>\n                                    </mat-select>\n                                    <mat-error\n                                        *ngIf=\"mngForm.get('trainingType').invalid && mngForm.get('trainingType').touched\">\n                                        Training Type is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\"\n                                *ngIf=\"mngForm.get('trainingType').value === 'Physical'\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Training Location</mat-label>\n                                    <input matInput formControlName=\"trainingLocation\" />\n                                    <mat-error\n                                        *ngIf=\"mngForm.get('trainingLocation').invalid && mngForm.get('trainingLocation').touched\">\n                                        Training Location is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\"\n                                *ngIf=\"mngForm.get('trainingType').value === 'Virtual'\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Training Link</mat-label>\n                                    <input matInput formControlName=\"trainingLink\" />\n                                    <mat-error\n                                        *ngIf=\"mngForm.get('trainingLink').invalid && mngForm.get('trainingLink').touched\">\n                                        Training Link is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Start Date</mat-label>\n                                    <input matInput [matDatepicker]=\"startDatePicker\" formControlName=\"startDate\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #startDatePicker></mat-datepicker>\n                                    <mat-error\n                                        *ngIf=\"mngForm.get('startDate').invalid && mngForm.get('startDate').touched\">\n                                        Start Date is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>End Date</mat-label>\n                                    <input matInput [matDatepicker]=\"endDatePicker\" formControlName=\"endDate\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #endDatePicker></mat-datepicker>\n                                    <mat-error *ngIf=\"mngForm.get('endDate').invalid && mngForm.get('endDate').touched\">\n                                        End Date is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n\n                        </div>\n\n\n                        <div>\n                            <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\n                        </div>\n                    </form>\n                </mat-step>\n\n\n\n                <mat-step>\n                    <ng-template matStepLabel>Training Attendees</ng-template>\n\n                    <ng-container>\n\n\n                        <mat-tab-group>\n                            <mat-tab>\n                                <ng-template mat-tab-label>\n                                    <mat-icon>receipt</mat-icon> Attendee Details\n                                </ng-template>\n\n                                <div class=\"row m-1\">\n                                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                        <div class=\"tabl-responsiv\">\n                                            <div class=\"materialTableHeader\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <ul class=\"header-buttons-left ms-0\">\n                                                            <li class=\"dropdown\">\n                                                                <h2>Attendees</h2>\n                                                            </li>\n                                                            <li class=\"dropdown m-l-20\">\n                                                                <label for=\"search-input\"><i\n                                                                        class=\"material-icons search-icon\">search</i></label>\n                                                                <input placeholder=\"Filter...\" type=\"text\"\n                                                                    (keyup)=\"applyFilter($event)\" #filter\n                                                                    class=\"browser-default search-field\"\n                                                                    aria-label=\"Search box\" />\n                                                            </li>\n                                                            <li>\n                                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                                    <button mat-mini-fab color=\"primary\"\n                                                                        (click)=\"addParTran()\">\n                                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                                    </button>\n                                                                </div>\n                                                            </li>\n                                                            <li>\n                                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                                    <button mat-mini-fab color=\"primary\"\n                                                                        (click)=\"refresh()\">\n                                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                                    </button>\n                                                                </div>\n                                                            </li>\n\n\n                                                        </ul>\n                                                    </div>\n\n\n                                                </div>\n                                            </div>\n\n                                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                                                class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                                <ng-container matColumnDef=\"id\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">ID</mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                        {{ row.id ? row.id : \"#\" }}\n                                                    </mat-cell>\n                                                </ng-container>\n                                                <ng-container matColumnDef=\"empPf\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50\">Emp Pf\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50\">{{\n                                                        row.empPf\n                                                        }}</mat-cell>\n                                                </ng-container>\n                                                <ng-container matColumnDef=\"empName\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50\">EmpName\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50\">{{\n                                                        row.empName\n                                                        }}</mat-cell>\n                                                </ng-container>\n\n                                                <ng-container matColumnDef=\"action\">\n                                                    <mat-header-cell\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                                        *matHeaderCellDef>\n                                                        Action\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                                        <button mat-icon-button color=\"accent\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"editParTran(row, i)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                                            </app-feather-icons>\n                                                        </button>\n                                                        <button mat-icon-button color=\"accent\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"deleteParTran(i)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                                [class]=\"'tbl-fav-delete'\">\n                                                            </app-feather-icons>\n                                                        </button>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                                    (click)=\"onSelect(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                                </mat-row>\n                                                <mat-cell *matNoDataRow colspan=\"8\">\n                                                    No data matching the filter \"{{ input.value }}\"</mat-cell>\n                                            </mat-table>\n                                            <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\"\n                                                    mode=\"indeterminate\">\n                                                </mat-progress-spinner>\n                                            </div>\n                                            <mat-paginator [pageSize]=\"10\"\n                                                [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                                aria-label=\"Select page of users\"></mat-paginator>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-tab>\n\n\n                        </mat-tab-group>\n                    </ng-container>\n                    <div>\n                        <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                        <button [hidden]=\"viewMode\"  class=\"mx-2\" mat-raised-button color=\"warn\" (click)=\"stepper.reset()\">Reset</button>\n                        <button class=\"mx-0\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" [hidden]=\"viewMode\" (click)=\"submit()\">{{\n                            pageFunction }} Learning And Training</button>\n                    </div>\n\n                </mat-step>\n            </mat-horizontal-stepper>\n\n\n\n\n\n        </ng-container>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}