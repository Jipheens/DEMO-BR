{"version":3,"file":"default-src_app_erp-finance_modules_finance-management_transactions_dialogs_accounting-journa-16bbf9.js","mappings":"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","sources":["./src/app/erp-finance/data/services/transactions.service.ts","./src/app/erp-finance/modules/finance-management/transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component.ts","./src/app/erp-finance/modules/finance-management/transactions/dialogs/accounting-journal-transactions/accounting-journal-transactions.component.html","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, map } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TransactionsService {\n  constructor(private http: HttpClient) { }\n\n  getTransactions(): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/all`;\n    return this.http.get<any[]>(TransactionsUrl);\n  }\n  getTransactionsByStatus(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/all/by/fetchbyStatus`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n  getTransactionsByRefCodeAndTransactionType(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/find/by/refcodeandtransactiontype`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n  getTransactionsByTranCode(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/find/by/trancode`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n  getTransactionsByStatusTransactionType(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/find/by/statusandtransactiontype`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n  getTransactionsById(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/find/by/id`;\n\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n\n  addTransactions(data: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/add`;\n    return this.http.post<any>(TransactionsUrl, data);\n  }\n\n  updateTransactions(TransactionsDetails: any): Observable<any> {\n    const updateBillUrl = `${environment.baseUrlFinance}/api/v1/transactions/update`;\n    return this.http.put<any>(updateBillUrl, TransactionsDetails);\n  }\n\n  deleteTransactionsTemporarily(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/delete`;\n    return this.http.delete<any>(TransactionsUrl, { params });\n  }\n\n\n  validateTransactions(params: any, dataToValidate: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/transactions/update/state`;\n    return this.http.put<any>(TransactionsUrl, dataToValidate, {params});\n  }\n\n  // ********************************************************************************************************************\n\n  updateAccountingTransactionDetailsStatus(params): Observable<any> {\n    const Url = `${environment.baseUrlFinance}/api/v1/transactions/update/record/on/transaction`;\n    return this.http.put<any>(Url, {}, { params });\n  }\n\n  updateAccountingTransactionDetailsForImprestStatus(params): Observable<any> {\n    const Url = `${environment.baseUrlFinance}/api/v1/transactions/update/record/on/imprest/transaction`;\n    return this.http.put<any>(Url, {}, { params });\n  }\n\n  \n  //************************************************************************************************************************ */\n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  AbstractControl,\n  FormArray,\n} from \"@angular/forms\";\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogConfig,\n} from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription, BehaviorSubject } from \"rxjs\";\nimport { GlsLookupComponent } from \"src/app/erp-finance/data/lookups/gls-lookup/gls-lookup.component\";\nimport { TransactionsService } from \"src/app/erp-finance/data/services/transactions.service\";\nimport { PurchaseOrderAcknowledgementComponent } from \"src/app/erp-procurement/modules/requisition/pages/purchase-order-acknowledgement/purchase-order-acknowledgement.component\";\nimport {\n  FilesService,\n  SelectedFiles,\n} from \"src/app/shared/services/files.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\n\nimport * as XLSX from \"xlsx\";\n\n@Component({\n  selector: \"app-accounting-journal-transactions\",\n  templateUrl: \"./accounting-journal-transactions.component.html\",\n  styleUrls: [\"./accounting-journal-transactions.component.sass\"],\n})\nexport class AccountingJournalTransactionsComponent implements OnInit {\n  mngForm: FormGroup;\n  tranForm: FormGroup;\n  hide3 = true;\n  agree3 = false;\n\n  displayedColumns: string[] = [\n    \"id\",\n    \"drAcName\",\n    \"drAcId\",\n    \"drAcCurrencyCode\",\n    \"crAcName\",\n    \"crAcId\",\n    \"crAcCurrencyCode\",\n    \"amount\",\n    \"narration\",\n    \"action\",\n  ];\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(false, []);\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n\n  tranTypes: any[] = [{ name: \"Debit\" }, { name: \"Credit\" }];\n\n  transactionTypes: any[] = [\n    { name: \"Receiving\" },\n    { name: \"Inventory\" },\n    { name: \"FixedAssets\" },\n    { name: \"SupplierInvoice\" },\n    { name: \"CustomerInvoice\" },\n    { name: \"SupplierPayment\" },\n    { name: \"CustomerPayment\" },\n    { name: \"Standard\" },\n    { name: \"ImprestApplication\" },\n    { name: \"ImprestClearance\" },\n    { name: \"Salaries\" },\n    { name: \"Journals\" },\n  ];\n  imprestAccountingStatuses: any[] = [\n    { name: \"Full\" },\n    { name: \"Partial\" },\n    { name: \"Return\" },\n  ];\n\n  constructor(\n    public dialogRef: MatDialogRef<PurchaseOrderAcknowledgementComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private transactionService: TransactionsService,\n    private dialog: MatDialog,\n    private filesService: FilesService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.selection = new SelectionModel<any>(true, []);\n\n    this.generateForm();\n    this.generateTransactionForm();\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n      this.refresh();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n\n    if (this.data.action === \"Add\" || this.data.action === \"Preview\") {\n      this.isLoading = false;\n      if (\n        this.data.transactionType === \"Receiving\" ||\n        this.data.transactionType === \"Invoice\" ||\n        this.data.transactionType === \"Payment\" ||\n        this.data.transactionType === \"Inventory\" ||\n        this.data.transactionType === \"CustomerInvoice\" ||\n        this.data.transactionType === \"SupplierInvoice\" ||\n        this.data.transactionType === \"SupplierPayment\" ||\n        this.data.transactionType === \"CustomerPayment\" ||\n        this.data.transactionType === \"Standard\" ||\n        this.data.transactionType === \"Journals\" ||\n        this.data.transactionType === \"ImprestApplication\" ||\n        this.data.transactionType === \"ImprestClearance\" ||\n        this.data.transactionType === \"Salaries\"\n      ) {\n        console.log(\"this.data.bodyForAdd:: \", this.data.bodyForAdd);\n\n        this.generateForm(this.data.bodyForAdd);\n        this.dataSource.data = this.data.bodyForAdd.parttrans;\n        this.refresh();\n\n        this.mngForm.patchValue({\n          paymentattachements: [],\n        });\n      }\n      this.mngForm.patchValue({\n        paymentattachements: [],\n      });\n    } else if (this.data.action === \"Update\") {\n      this.getDataByParameters();\n    } else if (this.data.action === \"View\") {\n      this.getDataByParameters();\n      this.activateViewMode();\n    } else if (this.data.action === \"View Salary\") {\n      this.isLoading = false;\n      if (this.data.transactionType === \"Salaries\") {\n        console.log(\"this.data.bodyForAdd: \", this.data.bodyForAdd);\n\n        this.formData = this.data.bodyForAdd;\n\n        this.generateForm(this.formData);\n        this.dataSource.data = this.data.bodyForAdd.parttrans;\n        this.refresh();\n      }\n    }\n  }\n\n  formData: any;\n  getDataByParameters() {\n    this.isLoading = true;\n    const params = new HttpParams().set(\"tranCode\", this.data.tranCode);\n    this.transactionService\n      .getTransactionsByTranCode(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"res :\", res);\n          if (res.entity) {\n            this.formData = res.entity;\n            if (\n              this.formData &&\n              this.formData.paymentattachements &&\n              this.formData.paymentattachements.length > 0\n            ) {\n              this.isFileDataLoading = false;\n              this.formData.paymentattachements.forEach((element) => {\n                const newRow = this.fb.group({\n                  file: [element.file],\n                  fileName: [element.fileName],\n                  fileType: [element.fileType],\n                });\n                this.rows.push(newRow);\n              });\n              this.updateView();\n            }\n\n            this.generateForm(this.formData);\n            this.dataSource.data = this.formData.parttrans;\n            this.refresh();\n\n            console.log(\"this.formData :\", this.formData);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      }),\n      Subscription;\n  }\n\n  generateForm(formData?): void {\n    console.log(\"generateForm formData :: \", formData);\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      description: [formData?.description ?? \"\", [Validators.required]],\n      itemCode: [formData?.itemCode ?? \"\"],\n      referenceCode: [formData?.referenceCode ?? \"\"],\n      transactionType: [formData?.transactionType ?? \"\", [Validators.required]],\n      prCode: [formData?.prCode ?? \"\"],\n      imprestAccountingStatus: [formData?.imprestAccountingStatus ?? \"\"],\n      parttrans: [formData?.parttrans ?? \"\", [Validators.required]],\n      paymentattachements: [[]],\n    });\n\n    if (\n      formData &&\n      formData.paymentattachements &&\n      formData.paymentattachements.length > 0\n    ) {\n      this.mngForm.patchValue({\n        paymentattachements: formData.paymentattachements,\n      });\n    }\n  }\n\n  generateTransactionForm(formData?): void {\n    this.tranForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      drAcCurrencyCode: [\n        formData?.drAcCurrencyCode ?? \"\",\n        [Validators.required],\n      ],\n      drAcName: [formData?.drAcName ?? \"\", [Validators.required]],\n      drAcId: [formData?.drAcId ?? \"\", [Validators.required]],\n\n      crAcCurrencyCode: [\n        formData?.crAcCurrencyCode ?? \"\",\n        [Validators.required],\n      ],\n      crAcName: [formData?.crAcName ?? \"\", [Validators.required]],\n      crAcId: [formData?.crAcId ?? \"\", [Validators.required]],\n\n      amount: [\n        formData?.amount ?? 0,\n        [\n          Validators.required,\n          Validators.max(1000000000),\n          Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n          Validators.min(0),\n        ],\n      ],\n      narration: [formData?.narration ?? \"\", [Validators.required]],\n    });\n  }\n\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  //*********************************************************************************************************************************************************** */\n  // Form&Table Logic\n  //*********************************************************************************************************************************************************** */\n  isLoading: boolean = true;\n  showParTranForm = false;\n  parTranAction: string = \"\";\n  selectedParTranIndex: number;\n  debitTotal: number = 0;\n  creditTotal: number = 0;\n  balance: number = 0;\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  resetFormAndHide() {\n    this.mngForm.patchValue({\n      parttrans: this.dataSource.data,\n    });\n    this.tranForm.reset();\n    this.showParTranForm = false;\n  }\n\n  addParTran() {\n    this.parTranAction = \"Add\";\n    this.showParTranForm = true;\n    this.showImport = false;\n  }\n\n  refresh() {\n    this.dataSource.data = [...this.dataSource.data];\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    const { debitTotal, creditTotal, balance } = this.calculateTotals();\n    this.debitTotal = debitTotal;\n    this.creditTotal = creditTotal;\n    this.balance = balance;\n  }\n\n  editParTran(data: any, index: number) {\n    this.parTranAction = \"Update\";\n    this.selectedParTranIndex = index;\n    this.generateTransactionForm(data);\n    this.showParTranForm = true;\n    this.showImport = false;\n  }\n\n  pushToDataSource() {\n    if (this.parTranAction === \"Add\") {\n      this.dataSource.data.push(this.tranForm.value);\n    } else if (this.parTranAction === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.tranForm.value.id) {\n        indexToUpdate = this.dataSource.data.findIndex(\n          (item) => item.id === this.tranForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource.data[indexToUpdate] = this.tranForm.value;\n      }\n    }\n\n    this.resetFormAndHide();\n    this.refresh();\n  }\n  pushBulkToDataSource() {\n    this.dataSource.data.push(...this.items);\n\n    this.resetFormAndHide();\n    this.refresh();\n  }\n\n  deleteParTran(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.refresh();\n  }\n\n  cancelParTran() {\n    this.resetFormAndHide();\n  }\n\n  calculateTotals(): {\n    debitTotal: number;\n    creditTotal: number;\n    balance: number;\n  } {\n    let debitTotal = 0;\n    let creditTotal = 0;\n\n    this.dataSource.data.forEach((element) => {\n      if (element.partTranstype === \"Debit\") {\n        debitTotal += element.amount;\n      } else if (element.partTranstype === \"Credit\") {\n        creditTotal += element.amount;\n      }\n    });\n\n    const balance = creditTotal - debitTotal;\n\n    return { debitTotal, creditTotal, balance };\n  }\n\n  //******************************************************************************************************************************************************** */\n  // Look ups\n  selectedItem: any[] = [];\n  glsLookUp(accType: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"700px\";\n    dialogConfig.data = {\n      action: \"Single GL Account\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(GlsLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(\"result:::\", result);\n      result.data.forEach((element) => {\n        switch (accType) {\n          case \"drAcId\":\n            this.tranForm.patchValue({\n              drAcId: element.accountID,\n              drAcName: element.description,\n              drAcCurrencyCode: element.currencyID,\n            });\n            break;\n\n          case \"crAcId\":\n            this.tranForm.patchValue({\n              crAcId: element.accountID,\n              crAcName: element.description,\n              crAcCurrencyCode: element.currencyID,\n            });\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  // **********************************************************************************************************************************************************\n  //UploadDocuments\n\n  attachementsDataSource = new BehaviorSubject<AbstractControl[]>([]);\n  displayColumns = [\n    \"id\",\n    \"fileName\",\n    \"fileType\",\n    \"selectFile\",\n    \"download\",\n    \"action\",\n  ];\n  rows: FormArray = this.fb.array([]);\n  documentsForm: FormGroup = this.fb.group({ filedetails: this.rows });\n\n  isFileDataLoading: boolean = true;\n\n  fileForm: FormGroup;\n  fileInputs: FormArray;\n\n  createFileForm() {\n    this.fileForm = this.fb.group({\n      files: this.fb.array([]),\n    });\n    //this.fileInputs = this.fileForm.get('files') as FormArray;\n    this.addFileRow();\n  }\n\n  addFileRow() {\n    this.isFileDataLoading = false;\n    const row = this.fb.group({\n      file: [\"\", Validators.required],\n      fileType: [\"\", Validators.required],\n      fileName: [\"\", Validators.required],\n    });\n    //this.fileInputs.push(row);\n    this.rows.push(row);\n    this.attachementsDataSource.next(this.rows.controls);\n  }\n\n  updateView() {\n    this.attachementsDataSource.next(this.rows.controls);\n    this.mngForm.patchValue({\n      paymentattachements: this.documentsForm.value.filedetails,\n    });\n  }\n\n  deleteCall(row: AbstractControl) {\n    const dataArray = this.attachementsDataSource.getValue(); // Get the underlying array\n    const index = dataArray.indexOf(row); // Find the index of the row\n\n    if (index !== -1) {\n      dataArray.splice(index, 1); // Remove 1 item at the specified index\n      this.attachementsDataSource.next(dataArray); // Update the BehaviorSubject with the modified array\n    }\n  }\n\n  public selectedFiles: SelectedFiles[] = [];\n  public isFileLoading = new BehaviorSubject(false);\n\n  currFile: string;\n  currfileName: any;\n  currType: any;\n\n  onSelectFile(files, selectedRow, index) {\n    console.log(\"row: \", selectedRow.value, index);\n    this.isFileLoading.next(true);\n    this.selectedFiles = [];\n    this.filesService.toBase64(files, this.selectedFiles).subscribe((res) => {\n      if (res) {\n        this.isFileLoading.next(false);\n\n        this.selectedFiles = res;\n        console.log(\"selectedFiles: \", this.selectedFiles);\n\n        console.log(\"this.selectedFiles[0].name: \", this.selectedFiles[0].name);\n\n        this.currFile = this.selectedFiles[0].base64;\n\n        const fileName = this.selectedFiles[0].name;\n        const fileParts = fileName.split(\".\");\n        const name = fileParts.slice(0, -1).join(\".\"); // Join all parts except the last one\n        const extension = fileParts[fileParts.length - 1];\n\n        console.log(\"Name:\", name); // Output: Lease Armotization (3)\n        console.log(\"Extension:\", extension); // Output: xlsx\n\n        this.currfileName = name;\n        this.currType = extension;\n\n        this.rows.at(index).patchValue({\n          file: this.currFile,\n          fileName: this.currfileName,\n          fileType: this.currType,\n        });\n        this.updateView();\n      }\n    });\n  }\n\n  downloadDocument(row: any) {\n    let file = row.value.file;\n    let fileName = row.value.fileName;\n    let fileType = row.value.fileType;\n\n    // Download PDF in Chrome etc.\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  //*************************************************************************************************** */\n\n  posting: boolean = false;\n  cleanUpIds(formData: any): any {\n    const cleanRecursive = (data: any): any => {\n      if (data === null || typeof data !== \"object\") {\n        return data;\n      }\n      if (Array.isArray(data)) {\n        // If it's an array, recursively clean each element\n        return data.map((element) => cleanRecursive(element));\n      }\n\n      // Remove \"id\" field if it is null, undefined, or an empty string\n      const cleanedData: any = {};\n      for (const [key, value] of Object.entries(data)) {\n        if (\n          key === \"id\" &&\n          (value === null || value === undefined || value === \"\")\n        ) {\n          continue; // Skip \"id\" field\n        }\n        cleanedData[key] = cleanRecursive(value);\n      }\n      return cleanedData;\n    };\n    // Clone the form data to avoid modifying the original object\n    const cleanedData = cleanRecursive({ ...formData });\n\n    return cleanedData;\n  }\n\n  response: any;\n  submit() {\n    const cleanedFormData = this.cleanUpIds(this.mngForm.value);\n\n    console.log(\"Both: \", cleanedFormData);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.transactionService\n        .addTransactions(cleanedFormData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"res: \", res);\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            this.onNoClick();\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.transactionService\n        .updateTransactions(cleanedFormData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 201 || 200 || 302) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            this.onNoClick();\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  // *********************************************************************************************************************************************\n  showImport: boolean = false;\n  import() {\n    this.showImport = true;\n    this.showParTranForm = false;\n  }\n  //Import from Excel\n  @ViewChild(\"fileInput\") fileInput: any;\n\n  items: any[] = []; // Array to store\n  itemsForm: FormGroup;\n  itemErrors: { [key: string]: string }[] = [];\n\n  handleFileInput(files: FileList) {\n    const file = files.item(0);\n\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        const arrayBuffer = e.target.result;\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { raw: true });\n\n        // Trim the keys in each object of jsonData\n        const trimmedData = jsonData.map((item: any) => {\n          const trimmedItem: any = {};\n          Object.keys(item).forEach((key) => {\n            trimmedItem[key.trim()] = item[key];\n          });\n          return trimmedItem;\n        });\n\n        this.items = trimmedData;\n        this.pushBulkToDataSource();\n        console.log(\" this.items :\", this.items);\n\n        // Initialize the form\n        this.itemsForm = this.fb.group({\n          items: this.fb.array([]), // Array of items\n        });\n\n        // Call the function to validate the items\n        this.validateItems();\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  validateItems() {\n    this.itemErrors = [];\n    const items = this.items;\n\n    const itemsFormArray = this.itemsForm.get(\"items\") as FormArray;\n\n    for (const item of items) {\n      const formGroup = this.fb.group({\n        drAcCurrencyCode: [item.drAcCurrencyCode, [Validators.required]],\n        drAcName: [item.drAcName, [Validators.required]],\n        drAcId: [item.drAcId, [Validators.required]],\n        crAcCurrencyCode: [item.crAcCurrencyCode, [Validators.required]],\n        crAcName: [item.crAcName, [Validators.required]],\n        crAcId: [item.crAcId, [Validators.required]],\n\n        amount: [\n          item.amount,\n          [\n            Validators.required,\n            Validators.max(1000000000),\n            Validators.pattern(/^\\d+(\\.\\d{1,2})?$/),\n            Validators.min(0),\n          ],\n        ],\n        narration: [item.narration],\n      });\n\n      itemsFormArray.push(formGroup);\n      this.collectErrors(formGroup);\n\n      if (formGroup.valid) {\n      }\n    }\n  }\n\n  collectErrors(control: AbstractControl, path: string = \"\") {\n    if (control instanceof FormGroup) {\n      Object.keys(control.controls).forEach((key) => {\n        const subControl = control.get(key);\n        const subPath = this.getErrorPath(path, key);\n        this.collectErrors(subControl, subPath);\n      });\n    } else {\n      const errors = control.errors;\n      if (errors) {\n        const itemError = {\n          field: path,\n          message: this.getErrorMessage(errors),\n        };\n        this.itemErrors.push(itemError);\n      }\n    }\n  }\n\n  getErrorPath(path: string, key: string): string {\n    return path ? `${path}.${key}` : key;\n  }\n\n  getErrorMessage(errors: any): string {\n    if (errors.required) {\n      return \"This field is required.\";\n    } else if (errors.pattern) {\n      return \"Invalid value.\";\n    }\n    return \"\";\n  }\n\n  private readonly templateFilename = \"JournalsTemplate.xlsx\";\n\n  downloadTemplate() {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = `/assets/templates/${this.templateFilename}`;\n    link.download = this.templateFilename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>{{ pageFunction }} Transaction</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"isLoading || posting\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <ng-container>\n            <h6 class=\"mx-2\">General Details</h6>\n            <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n                <div class=\"row\" *ngIf=\"pageFunction !== 'Preview'\">\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Transaction Type</mat-label>\n                            <mat-select formControlName=\"transactionType\" required [disabled]=\"disableTransactionType\">\n                                <mat-option *ngFor=\"let transactionType of transactionTypes\"\n                                    [value]=\"transactionType.name\">{{ transactionType.name }}\n                                </mat-option>\n                            </mat-select>\n\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('transactionType').hasError('required')\">\n                                Transaction Type is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\"\n                        *ngIf=\"data.transactionType !== 'Standard'|| data.transactionType !== 'Journals'\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Reference Code</mat-label>\n                            <input matInput formControlName=\"referenceCode\" readonly/>\n                            <mat-icon matSuffix>local_offer</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('referenceCode').hasError('required')\">\n                                Reference Code is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\" *ngIf=\"\n              data.transactionType === 'Receiving' ||\n              data.transactionType === 'Receiving'\n            \">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>PR Code</mat-label>\n                            <input matInput formControlName=\"prCode\" />\n                            <mat-icon matSuffix>receipt</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('prCode').hasError('required')\">\n                                PR Code is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\" *ngIf=\"\n              data.transactionType === 'Receiving' ||\n              data.transactionType === 'Receiving'\n            \">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Item Code</mat-label>\n                            <input matInput formControlName=\"itemCode\" />\n                            <mat-icon matSuffix>confirmation_number</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('itemCode').hasError('required')\">\n                                Item Code is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mb-1\"\n                        *ngIf=\"data.transactionType === 'ImprestApplication' || data.transactionType === 'ImprestClearance'\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label> Imprest Accounting Status </mat-label>\n                            <mat-select formControlName=\"imprestAccountingStatus\">\n                                <mat-option *ngFor=\"let imprestAccountingStatus of imprestAccountingStatuses\"\n                                    [value]=\"imprestAccountingStatus.name\">{{ imprestAccountingStatus.name\n                                    }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"\n                              mngForm\n                                .get('imprestAccountingStatus')\n                                .hasError('required')\n                            \">\n                                Imprest Accounting Status is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div> -->\n\n                    <div class=\"col-xl-7 col-lg-7 col-md-12 col-sm-12 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Description</mat-label>\n                            <textarea matInput formControlName=\"description\" required></textarea>\n\n                            <mat-icon matSuffix>description</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('description').hasError('required')\">\n                                Description is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n\n                <ng-container *ngIf=\"showParTranForm\">\n                    <hr />\n\n                    <h6 class=\"mx-0\">Transaction Details</h6>\n                    <form class=\"register-form mx-0\" [formGroup]=\"tranForm\">\n                        <div class=\"row\">\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Dr Account</mat-label>\n                                    <input matInput formControlName=\"drAcId\" required />\n                                    <!-- <mat-icon matSuffix>account_box</mat-icon> -->\n                                    <mat-icon matSuffix (click)=\"glsLookUp('drAcId')\">search</mat-icon>\n\n                                    <mat-error *ngIf=\"tranForm.get('drAcId').hasError('required')\">\n                                        Dr Account ID is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Dr Ac CurCode</mat-label>\n                                    <input matInput formControlName=\"drAcCurrencyCode\" required />\n                                    <mat-icon matSuffix>account_balance</mat-icon>\n                                    <mat-error *ngIf=\"tranForm.get('drAcCurrencyCode').hasError('required')\">\n                                        Dr Account Currency Code is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Dr AccountName</mat-label>\n                                    <input matInput formControlName=\"drAcName\" required />\n                                    <mat-icon matSuffix>account_circle</mat-icon>\n                                    <mat-error *ngIf=\"tranForm.get('drAcName').hasError('required')\">\n                                        Dr Account Name is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Cr Account</mat-label>\n                                    <input matInput formControlName=\"crAcId\" required />\n                                    <!-- <mat-icon matSuffix>account_box</mat-icon> -->\n                                    <mat-icon matSuffix (click)=\"glsLookUp('crAcId')\">search</mat-icon>\n\n                                    <mat-error *ngIf=\"tranForm.get('crAcId').hasError('required')\">\n                                        Cr Account ID is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Cr Ac CurCode</mat-label>\n                                    <input matInput formControlName=\"crAcCurrencyCode\" required />\n                                    <mat-icon matSuffix>account_balance</mat-icon>\n                                    <mat-error *ngIf=\"tranForm.get('crAcCurrencyCode').hasError('required')\">\n                                        Cr Account Currency Code is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Cr AccountName</mat-label>\n                                    <input matInput formControlName=\"crAcName\" required />\n                                    <mat-icon matSuffix>account_circle</mat-icon>\n                                    <mat-error *ngIf=\"tranForm.get('crAcName').hasError('required')\">\n                                        Cr Account Name is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n\n\n                            <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Amount</mat-label>\n                                    <input matInput formControlName=\"amount\" mask=\"separator\" thousandSeparator=\",\" />\n                                    <mat-icon matSuffix>attach_money</mat-icon>\n                                    <mat-error *ngIf=\"\n                      tranForm.get('amount').hasError('required') &&\n                      tranForm.get('amount').touched\n                    \">\n                                        Please enter unit amount!\n                                    </mat-error>\n                                    <mat-error *ngIf=\"\n                      tranForm.get('amount').hasError('pattern') &&\n                      tranForm.get('amount').touched\n                    \">\n                                        Please ensure amount does not exceed 2 decimal values!\n                                    </mat-error>\n                                    <mat-error *ngIf=\"\n                      tranForm.get('amount').hasError('max') &&\n                      tranForm.get('amount').touched\n                    \">\n                                        Please ensure amount does not exceed 1 billion!\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Narration</mat-label>\n                                    <input matInput formControlName=\"narration\" required />\n                                    <mat-icon matSuffix>record_voice_over</mat-icon>\n                                    <mat-error *ngIf=\"tranForm.get('narration').hasError('required')\">\n                                        Narration is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                <div class=\"example-button-row\" align=\"start\">\n                                    <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                        [class.auth-spinner]=\"posting\" [disabled]=\"!tranForm.valid || posting\"\n                                        [hidden]=\"viewMode\" (click)=\"pushToDataSource()\">\n                                        {{ parTranAction }} ParTran\n                                    </button>\n\n                                    <button mat-raised-button color=\"warn\" (click)=\"cancelParTran()\" tabindex=\"-1\">\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </ng-container>\n\n\n                <div style=\"\n                display: flex;\n                flex-wrap: wrap;\n                margin-right: 10px;\n                margin-bottom: 10px;\n              \">\n              <mat-chip-list aria-label=\"Fish selection\">\n                <mat-chip color=\"accent\" selected *ngFor=\"\n                    let itemError of itemErrors;\n                    let i = index\n                  \">\n                  <span>{{ i + 1 }}. </span>\n                  {{ itemError.field }}: {{ itemError.message }}\n                  <mat-icon>error</mat-icon>\n                </mat-chip>\n              </mat-chip-list>\n            </div>\n                <div *ngIf=\"showImport\" class=\"row align-items-center\">\n                    <div class=\"col-xl-10 col-lg-10 col-md-10 col-sm-10\">\n                      <app-file-upload (change)=\"handleFileInput($event.target.files)\"></app-file-upload>\n                    </div>\n                    <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2\">\n                      <button mat-raised-button color=\"primary\" [hidden]=\"hideSubmit\"\n                        (click)=\"downloadTemplate()\">\n                        <i class=\"fa fa-download\"></i> Excel Template\n                      </button>\n                    </div>\n                  </div>\n\n                <mat-tab-group>\n                    <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>receipt</mat-icon> System Transaction\n                        </ng-template>\n\n                        <div class=\"row m-1\">\n                            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                <div class=\"table-responsiv\">\n                                    <div class=\"materialTableHeader\">\n                                        <div class=\"row\">\n                                            <div class=\"col-8\">\n                                                <ul class=\"header-buttons-left ms-0\">\n                                                    <li class=\"dropdown\">\n                                                        <h2>Tran Records</h2>\n                                                    </li>\n                                                    <li class=\"dropdown m-l-20\">\n                                                        <label for=\"search-input\"><i\n                                                                class=\"material-icons search-icon\">search</i></label>\n                                                        <input placeholder=\"Filter...\" type=\"text\"\n                                                            (keyup)=\"applyFilter($event)\" #filter\n                                                            class=\"browser-default search-field\"\n                                                            aria-label=\"Search box\" />\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                            <button mat-mini-fab color=\"primary\" (click)=\"addParTran()\">\n                                                                <mat-icon class=\"col-white\">add</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                            <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                                <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div *ngIf=\"data.transactionType === 'Journals'\" class=\"m-l-10\" matTooltip=\"IMPORT FROM EXCEL\">\n                                                            <button mat-mini-fab color=\"primary\" (click)=\"import()\">\n                                                                <mat-icon class=\"col-white\">cloud_upload</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </li>\n                                                    \n                                                </ul>\n                                            </div>\n\n                                            <div class=\"col-4\">\n                                                <ul class=\"header-buttons\">\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                            <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                  exporter.exportTable('xlsx', {\n                                    fileName: 'assets-list',\n                                    sheet: 'sheet1'\n                                  })\n                                \" />\n                                                        </div>\n                                                    </li>\n                                                    <li>\n                                                        <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                            <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                                (click)=\"exporter.exportTable('csv')\" />\n                                                        </div>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                                        class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                        <!-- ID Column -->\n                                        <ng-container matColumnDef=\"id\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-6\">ID</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                                {{ row.id ? row.id : \"#\" }}\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <!-- Account No Column -->\n                                        <ng-container matColumnDef=\"drAcName\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">Dr AcName\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.drAcName\n                                                }}</mat-cell>\n                                        </ng-container>\n\n                                        <!-- Account Name Column -->\n                                        <ng-container matColumnDef=\"drAcId\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-18\">Dr Ac\n                                                No</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-18\">{{ row.drAcId\n                                                }}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"drAcCurrencyCode\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-6\">Cur\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-6\">{{ row.drAcCurrencyCode\n                                                }}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"crAcName\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">Cr AcName\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.crAcName\n                                                }}</mat-cell>\n                                        </ng-container>\n\n                                        <!-- Account Name Column -->\n                                        <ng-container matColumnDef=\"crAcId\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-18\">Cr Ac\n                                                No</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-18\">{{ row.crAcId\n                                                }}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"crAcCurrencyCode\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-6\">Cur\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-6\">{{ row.crAcCurrencyCode\n                                                }}</mat-cell>\n                                        </ng-container>\n\n                                        <!-- Amount Column -->\n                                        <ng-container matColumnDef=\"amount\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">Amount</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">\n                                                {{\n                                                row.amount\n                                                | currency\n                                                : row.accountCurrencyCode\n                                                : \"symbol\"\n                                                : \"1.2-2\"\n                                                }}\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <!-- Part Transaction Type Column -->\n                                        <ng-container matColumnDef=\"partTranstype\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">Trans\n                                                Type</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.partTranstype\n                                                }}</mat-cell>\n                                        </ng-container>\n\n                                        <!-- Narration Column -->\n                                        <ng-container matColumnDef=\"narration\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">Narration</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15\">{{ row.narration\n                                                }}</mat-cell>\n                                        </ng-container>\n\n                                        <!-- Action Buttons -->\n                                        <ng-container matColumnDef=\"action\">\n                                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                                *matHeaderCellDef>\n                                                Action\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let i = index\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                                <!-- Edit Button -->\n                                                <button mat-icon-button color=\"accent\"\n                                                    (click)=\"$event.stopPropagation()\" (click)=\"editParTran(row, i)\"\n                                                    class=\"tbl-action-btn\">\n                                                    <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                                    </app-feather-icons>\n                                                </button>\n\n                                                <!-- Delete Button -->\n                                                <button mat-icon-button color=\"accent\"\n                                                    (click)=\"$event.stopPropagation()\" (click)=\"deleteParTran(i)\"\n                                                    class=\"tbl-action-btn\">\n                                                    <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                                    </app-feather-icons>\n                                                </button>\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"onSelect(row)\"\n                                            [style.cursor]=\"'pointer'\" matRipple>\n                                        </mat-row>\n                                        <mat-cell *matNoDataRow colspan=\"8\">\n                                            No data matching the filter \"{{ input.value }}\"</mat-cell>\n                                    </mat-table>\n                                    <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                        </mat-progress-spinner>\n                                    </div>\n                                    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                        aria-label=\"Select page of users\"></mat-paginator>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-tab>\n\n                    <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>attach_file</mat-icon> Transaction Attachments\n                        </ng-template>\n\n                        <form [formGroup]=\"documentsForm\">\n                            <div class=\"mx-1 p-1\">\n                                <div class=\"table-responsiv\">\n                                    <div class=\"materialTableHeader\">\n                                        <div class=\"row\">\n                                            <div class=\"col-8\">\n                                                <ul class=\"header-buttons-left ms-0\">\n                                                    <li class=\"dropdown\">\n                                                        <h2>Upload Documents</h2>\n                                                    </li>\n                                                    <li class=\"dropdown m-l-20\">\n                                                        <label for=\"search-input\"><i\n                                                                class=\"material-icons search-icon\">search</i></label>\n                                                        <input placeholder=\"Filter...\" type=\"text\"\n                                                            (keyup)=\"applyFilter($event)\" #filter\n                                                            class=\"browser-default search-field\"\n                                                            aria-label=\"Search box\" />\n                                                    </li>\n\n                                                    <li>\n                                                        <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                            <button mat-mini-fab color=\"primary\" (click)=\"addFileRow()\">\n                                                                <mat-icon class=\"col-white\">add</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                            <div class=\"col-4\"></div>\n                                        </div>\n                                    </div>\n\n                                    <!-- <table mat-table [dataSource]=\"dataSource\" formArrayName=\"filedetails\"> -->\n                                    <mat-table #table matTableExporter [dataSource]=\"attachementsDataSource\"\n                                        formArrayName=\"filedetails\" matSort class=\"mat-cell\"\n                                        #exporter=\"matTableExporter\">\n                                        <!-- ID Column -->\n                                        <ng-container matColumnDef=\"id\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-6\">Id</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-6\">\n                                                {{ index + 1 }}\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"fileName\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileName</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                                <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                                    <mat-label>fileName</mat-label>\n                                                    <input matInput type=\"text\" formControlName=\"fileName\"\n                                                        placeholder=\"fileName\" maxlength=\"50\" />\n                                                </mat-form-field>\n                                            </mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"fileType\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">FileType</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-50 fileName-cell\">\n                                                <mat-form-field class=\"example-full-width mt-2 mr-5\" appearance=\"fill\">\n                                                    <mat-label>fileType</mat-label>\n                                                    <input matInput type=\"text\" formControlName=\"fileType\"\n                                                        placeholder=\"fileType\" maxlength=\"50\" />\n                                                </mat-form-field>\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"selectFile\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-65 selectfile-cell\">Select\n                                                File</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let index = index\" [formGroupName]=\"index\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-65 selectfile-cell\">\n                                                <input #file type=\"file\" [disabled]=\"isLoading | async\"\n                                                    (change)=\"onSelectFile(file.files, row, index)\"\n                                                    [multiple]=\"'multiple'\" />\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"download\">\n                                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                                *matHeaderCellDef>Download</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let i = index\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                                <button mat-icon-button color=\"primary\"\n                                                    (click)=\"$event.stopPropagation()\" (click)=\"downloadDocument(row)\"\n                                                    class=\"tbl-action-btn\">\n                                                    <mat-icon aria-label=\"Download\">file_download</mat-icon>\n                                                </button>\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"action\">\n                                            <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-30\"\n                                                *matHeaderCellDef>Action</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row; let i = index\"\n                                                class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                                <button mat-icon-button color=\"accent\"\n                                                    (click)=\"$event.stopPropagation()\" (click)=\"deleteCall(row)\"\n                                                    class=\"tbl-action-btn\">\n                                                    <app-feather-icons [icon]=\"'trash-2'\"\n                                                        [class]=\"'tbl-fav-delete'\"></app-feather-icons>\n                                                </button>\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <!-- Row definitions -->\n                                        <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"\n                        let row;\n                        let i = index;\n                        columns: displayColumns\n                      \" [style.cursor]=\"'pointer'\" matRipple></mat-row>\n                                        <mat-cell *matNoDataRow colspan=\"4\">No data matching the filter \"{{ input.value\n                                            }}\"</mat-cell>\n                                    </mat-table>\n\n                                    <!-- Loading spinner -->\n                                    <div *ngIf=\"isFileDataLoading\" class=\"tbl-spinner\">\n                                        <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                        </mat-progress-spinner>\n                                    </div>\n                                    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                        aria-label=\"Select page of users\"></mat-paginator>\n                                </div>\n                            </div>\n                        </form>\n                    </mat-tab>\n\n                    <!-- <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>receipt</mat-icon>  Core Banking Transaction\n                        </ng-template>\n\n                        <div class=\"row m-1\">\n                            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                               \n                            </div>\n                        </div>\n                    </mat-tab> -->\n                </mat-tab-group>\n\n                <div class=\"row\" *ngIf=\"pageFunction !== 'Preview'\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                        <div class=\"example-button-row\" align=\"end\">\n                            <ng-container *ngIf=\"data.action === 'View Salary'\">\n                                <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                    [class.auth-spinner]=\"posting\"\n                                    [disabled]=\"!mngForm.valid || posting || balance !== 0\" [hidden]=\"viewMode\"\n                                    (click)=\"postSalary()\">\n                                    Post Salary\n                                </button>\n                            </ng-container>\n\n                            <ng-container *ngIf=\"data.action !== 'View Salary'\">\n                                <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                    [class.auth-spinner]=\"posting\"\n                                    [disabled]=\"!mngForm.valid || posting || balance !== 0\" [hidden]=\"viewMode\"\n                                    (click)=\"submit()\">\n                                    {{ pageFunction }} Transaction\n                                </button>\n                            </ng-container>\n\n                            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                                Cancel\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </ng-container>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}