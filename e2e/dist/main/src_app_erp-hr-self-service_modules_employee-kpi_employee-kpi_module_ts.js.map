{"version":3,"file":"src_app_erp-hr-self-service_modules_employee-kpi_employee-kpi_module_ts.js","mappings":"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","sources":["./src/@core/Models/Notification/notification-service.service.ts","./src/app/erp-hr-self-service/modules/employee-kpi/dialogs/manage-kpi-goal-achievement/manage-kpi-goal-achievement.component.ts","./src/app/erp-hr-self-service/modules/employee-kpi/dialogs/manage-kpi-goal-achievement/manage-kpi-goal-achievement.component.html","./src/app/erp-hr-self-service/modules/employee-kpi/dialogs/manage-kpi-goal/manage-kpi-goal.component.ts","./src/app/erp-hr-self-service/modules/employee-kpi/dialogs/manage-kpi-goal/manage-kpi-goal.component.html","./src/app/erp-hr-self-service/modules/employee-kpi/employee-kpi-routing.module.ts","./src/app/erp-hr-self-service/modules/employee-kpi/employee-kpi.module.ts","./src/app/erp-hr-self-service/modules/employee-kpi/kpi-details-page/kpi-details-page.component.ts","./src/app/erp-hr-self-service/modules/employee-kpi/kpi-details-page/kpi-details-page.component.html","./src/app/erp-hr/data/payroll-services/report.service.ts","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class NotificationServiceService {\n//   showSuccessNotification(arg0: string) {\n//     throw new Error('Method not implemented.');\n//   }\n//   showSuccess(arg0: string) {\n//     throw new Error('Method not implemented.');\n//   }\n//   showError(message: any) {\n//     throw new Error('Method not implemented.');\n//   }\n\n//   horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n//   verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n//   constructor(\n//     private snackBar: MatSnackBar\n//   ) {\n//    }\n//   alertSuccess(message:any){\n//     this.snackBar.open(message, \"OK\", {\n//       horizontalPosition: this.horizontalPosition,\n//       verticalPosition: this.verticalPosition,\n//       duration: 5000,\n//       panelClass: ['mat-toolbar', 'green-snackbar']\n//     });\n//   }\n//   alertWarning(message:any){\n//     this.snackBar.open(message, \"X\", {\n//       horizontalPosition: this.horizontalPosition,\n//       verticalPosition: this.verticalPosition,\n//       duration: 5000,\n//       panelClass: ['mat-toolbar', 'red-snackbar']\n//     });\n//   }\n// }\n\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition, MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationServiceService {\n  showSuccessNotification(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  showSuccess(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  showError(message: any) {\n    throw new Error('Method not implemented.');\n  }\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'end';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) {\n   }\n  alertSuccess(message:any){\n    this.snackBar.open(message, \"OK\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'snackbar-success']\n    });\n  }\n  alertWarning(message:any){\n    this.snackBar.open(message, \"X\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 5000,\n      panelClass: ['mat-toolbar', 'snackbar-danger']\n    });\n  }\n  alertWarningByDuration(message:any, duration:number){\n    this.snackBar.open(message, \"X\", {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: duration,\n      panelClass: ['mat-toolbar', 'snackbar-danger']\n    });\n  }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { KpiGoalService } from 'src/app/erp-hr/data/kpi-services/kpi-goal.service';\nimport { AllJobApplicationsComponent } from 'src/app/erp-hr/modules/jobs/job-applications/all-job-applications/all-job-applications.component';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-kpi-goal-achievement',\n  templateUrl: './manage-kpi-goal-achievement.component.html',\n  styleUrls: ['./manage-kpi-goal-achievement.component.sass']\n})\nexport class ManageKpiGoalAchievementComponent implements OnInit {\n\n  Data: any;\n\n  displayedColumns: string[] = [\"index\", \"filename\", \"filetype\", \"action\"];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  pageFunction: any = \"Add\";\n\n  mngForm: FormGroup\n\n  quantitative = 'Y';\n  strategicObjective: any;\n  tacticalPerfomance: any;\n  weight: any;\n  maxScore: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<AllJobApplicationsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private kpiGoalService: KpiGoalService,\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n\n\n  ) {}\n\n  ngOnInit(): void {\n    this.pageFunction = this.data.action;\n    this.Data = this.data.record;\n\n    this.quantitative = this.Data.isQuantitative\n    this.strategicObjective = this.Data.strategicObjective;\n    this.tacticalPerfomance = this.Data.tacticalPerfomance;\n    this.weight = this.Data.weight\n    this.maxScore = this.weight * 2;\n\n    this.mngForm = this.fb.group({\n      id: [this.Data.id],\n      nonQuantitativeAchieved: ['N/A'],\n      employeeScore: [''],\n      quantitativeAchieved: ['0']\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  percentageValidator(control) {\n    const value = control.value;\n    const maxAchieved = this.weight * 2;\n    if (value && (isNaN(value) || value < 0 || value > maxAchieved)) {\n      this.notificationAPI.alertWarning(\"You maximum value for this is \"+maxAchieved);\n      return { 'invalidPercentage': true };\n    }\n    return null;\n  }\n  onScore($event){\n    this.percentageValidator(this.mngForm.controls.score)\n  }\n\n\n  posting: Boolean = false;\n  submit(){\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n\n    let params = new HttpParams()\n    .set('id',this.mngForm.controls.id.value)\n    .set('nonQuantitativeAchieved',this.mngForm.controls.nonQuantitativeAchieved.value)\n    .set('employeeScore',this.mngForm.controls.employeeScore.value)\n    .set('quantitativeAchieved',this.mngForm.controls.quantitativeAchieved.value);\n \n    \n      this.kpiGoalService\n        .appraisal(params)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.onNoClick();\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.posting = false;\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n  }\n  response: any\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n}\n","<div class=\"addContainer\">\n    <div *ngIf=\"Data\" class=\"contact-details\">\n        <div class=\"modalHeader\">\n            <div class=\"contact-details-name mb-1\">\n                <strong>Goal Results</strong>\n            </div>\n            <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <mat-card-content>\n\n                <ng-container>\n                    <div class=\"row mt-1\" style=\"width: 98%; margin-left: 20px\">\n                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-5 m-b-10\">Strategic Objective:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ strategicObjective }}</div>\n                                <div class=\"col-5 m-b-10\">Tactical Performance:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ tacticalPerfomance }}</div>\n                                \n\n                            </div>\n                        </div>\n                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\n                            <div class=\"row\">\n                                <div class=\"col-5 m-b-10\">Weight:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ weight }}</div>\n\n                                <div class=\"col-5 m-b-10\">Max Score:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ maxScore }}</div>\n\n                               \n\n                            </div>\n                        </div>\n                    </div>\n\n                    <hr />\n                </ng-container>\n\n                <ng-container>\n                    <h6 class=\"mx-2\">Results & Scores</h6>\n\n                    <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n                        <div class=\"row\">\n                            <div *ngIf=\"quantitative == 'N'\" class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                  <mat-label>Non-Quantitative Achieved</mat-label>\n                                  <input matInput formControlName=\"nonQuantitativeAchieved\" required />\n                                  <mat-error *ngIf=\"mngForm.get('nonQuantitativeAchieved').hasError('required')\">\n                                    This field is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n                              <div *ngIf=\"quantitative == 'N'\" class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                  <mat-label>Employee Score</mat-label>\n                                  <input matInput formControlName=\"employeeScore\" type=\"number\" (blur)=\"onScore($event)\"/>\n                                  <mat-error *ngIf=\"mngForm.get('employeeScore').hasError('required')\">\n                                    This field is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n                              <div  *ngIf=\"quantitative == 'Y'\"class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                  <mat-label>Quantitative Achieved</mat-label>\n                                  <input matInput formControlName=\"quantitativeAchieved\" type=\"number\" />\n                                  <mat-error *ngIf=\"mngForm.get('quantitativeAchieved').hasError('required')\">\n                                    This field is required\n                                  </mat-error>\n                                </mat-form-field>\n                              </div>\n                              \n\n\n                        </div>\n                    </form>\n\n                    <div class=\"row\" *ngIf=\"!viewMode\">\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                            <div class=\"example-button-row\" align=\"end\">\n                                <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                    [class.auth-spinner]=\"posting\" [disabled]=\"!mngForm.valid || posting\"\n                                    (click)=\"submit()\">\n                                    Submit\n                                </button>\n                                <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                                    Cancel\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </mat-card-content>\n        </div>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { KpiGoalService } from 'src/app/erp-hr/data/kpi-services/kpi-goal.service';\nimport { AllEmployeesComponent } from 'src/app/erp-hr/modules/employees/all-employees/all-employees.component';\nimport { FilesService } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\n\n@Component({\n  selector: 'app-manage-kpi-goal',\n  templateUrl: './manage-kpi-goal.component.html',\n  styleUrls: ['./manage-kpi-goal.component.sass']\n})\nexport class ManageKpiGoalComponent implements OnInit {\n\n  mngForm: FormGroup;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n  isLoading: boolean = true;\n\n  quarterArray: any[] = ['Quarter 1','Quarter 2','Quarter 3','Quarter 4']\n\n\n  constructor(\n    public dialogRef: MatDialogRef<AllEmployeesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private kpiGoalService: KpiGoalService,\n    private dialog: MatDialog,\n    private filesService: FilesService,\n    private tokenStorageService: TokenStorageService,\n  ) {}\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.formData = this.data.record\n    this.generateForm(this.formData);\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n    console.log(\"this.data.action :\", this.data.action);\n    if (this.data.action === \"Add\") {\n      this.isLoading = false;\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"Update\") {\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"View\") {\n      this.generateForm(this.data.record);\n      this.activateViewMode();\n    }\n    this.isLoading = false;\n  }\n\n\n  quantitativeChange(event:any){\n    if(event.value=='Y'){\n      this.mngForm.controls.nonQuantitativeTarget.setValue('');\n    }else{\n      this.mngForm.controls.quantitativeTarget.setValue('');\n    }\n  }\n\n  // {\n  //   \"id\": 0,\n  //   \"empPf\": \"string\",\n  //   \"departmentCode\": \"string\",\n  //   \"quarter\": \"string\",\n  //   \"strategicObjective\": \"string\",\n  //   \"tacticalPerfomance\": \"string\",\n  //   \"nonQuantitativeTarget\": \"string\",\n  //   \"quantitativeTarget\": 0,\n  //   \"weight\": 0,\n  //   \"isQuantitative\": \"string\",\n  //   \"costcentercode\": \"string\"\n  // }\n  formData: any;\n  generateForm(formData?): void {\n    console.log(\"generateForm formData :: \", formData);\n    this.mngForm = this.fb.group({\n      departmentCode: [formData?.departmentCode ?? this.tokenStorageService.getUser().departmentCode, Validators.required],\n      costcentercode: [formData?.departmentCode ?? this.tokenStorageService.getUser().costCenterCode, Validators.required],\n      empPf: [formData?.empPf ?? this.tokenStorageService.getEmppf(), Validators.required],\n      isQuantitative: [formData?.isQuantitative ?? 'Y', Validators.required],\n      nonQuantitativeTarget: [formData?.nonQuantitativeTarget ?? ''],\n      quantitativeTarget: [formData?.quantitativeTarget ?? 0],\n      quarter: [formData?.quarter ?? '', Validators.required],\n      strategicObjective: [formData?.strategicObjective ?? '', Validators.required],\n      tacticalPerfomance: [formData?.tacticalPerfomance ?? '', Validators.required],\n      weight: [formData?.weight ?? '', Validators.required]\n    });\n  }\n  \n\n  \n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  posting: boolean = false;\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction === \"Add\") {\n      this.kpiGoalService.create(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"res: \", res);\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction === \"Update\") {\n      this.kpiGoalService.update(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            this.response = res;\n            console.log(\"resres:: \", res);\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\n                \"snackbar-success\",\n                res.message\n              );\n            } else {\n              this.snackbar.showNotification(\n                \"snackbar-danger\",\n                res.message\n              );\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          },\n          complete: () => {\n            this.posting = false;\n            setTimeout(() => {\n              this.onNoClick();\n            }, 3000);\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n\n \n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>{{ pageFunction }} Goal</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <ng-container>\n            <h6 class=\"mx-2\">Goal Details</h6>\n            <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n                <div class=\"row\">\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Employee PF</mat-label>\n                            <input matInput formControlName=\"empPf\" required readonly />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('empPf').hasError('required')\">\n                                Employee PF is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Department Code</mat-label>\n                            <input matInput formControlName=\"departmentCode\" required readonly />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('departmentCode').hasError('required')\">\n                                Department Code is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Quarter</mat-label>\n                            <mat-select formControlName=\"quarter\" required>\n                                <mat-option *ngFor=\"let quarter of quarterArray\"\n                                    [value]=\"quarter\">{{quarter}}</mat-option>\n                            </mat-select>\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('quarter').hasError('required')\">\n                                Quarter is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <section class=\"example-section\">\n                            <label class=\"example-margin\">Is Quantitative?</label>\n                            <mat-radio-group formControlName=\"isQuantitative\" (change)=\"quantitativeChange($event)\">\n                                <mat-radio-button class=\"example-margin\" value=\"Y\">Yes</mat-radio-button>\n                                <mat-radio-button class=\"example-margin\" value=\"N\">No</mat-radio-button>\n                            </mat-radio-group>\n                        </section>\n\n                        <mat-error *ngIf=\"\n        mngForm.get('isQuantitative').invalid &&\n        mngForm.get('isQuantitative').touched\n      \">\n                            Please select an option for Is Quantitative\n                        </mat-error>\n                    </div>\n\n\n                    <div *ngIf=\"mngForm.get('isQuantitative').value === 'N'\"\n                        class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Non-Quantitative Target</mat-label>\n                            <input matInput formControlName=\"nonQuantitativeTarget\" />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"mngForm.get('isQuantitative').value === 'Y'\"\n                        class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Quantitative Target</mat-label>\n                            <input matInput formControlName=\"quantitativeTarget\" />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                        </mat-form-field>\n                    </div>\n\n\n\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Strategic Objective</mat-label>\n                            <input matInput formControlName=\"strategicObjective\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('strategicObjective').hasError('required')\">\n                                Strategic Objective is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Tactical Performance</mat-label>\n                            <input matInput formControlName=\"tacticalPerfomance\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('tacticalPerfomance').hasError('required')\">\n                                Tactical Performance is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Weight</mat-label>\n                            <input matInput formControlName=\"weight\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('weight').hasError('required')\">\n                                Weight is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n\n                </div>\n            </form>\n            <div class=\"row\" *ngIf=\"!viewMode\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                    <div class=\"example-button-row\" align=\"end\">\n                        <button class=\"btn-space\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" (click)=\"submit()\">\n                            {{ pageFunction }} Goal\n                        </button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { KpiDetailsPageComponent } from './kpi-details-page/kpi-details-page.component';\nimport { RoutePrivilegeGuard } from 'src/app/erp-procurement/data/services/_AccessControlAuthGuard.service';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: KpiDetailsPageComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"EmployeePortalModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeKpiRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeKpiRoutingModule } from './employee-kpi-routing.module';\nimport { KpiDetailsPageComponent } from './kpi-details-page/kpi-details-page.component';\nimport { ManageKpiGoalComponent } from './dialogs/manage-kpi-goal/manage-kpi-goal.component';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { ManageKpiGoalAchievementComponent } from './dialogs/manage-kpi-goal-achievement/manage-kpi-goal-achievement.component';\n\n\n@NgModule({\n  declarations: [\n    KpiDetailsPageComponent,\n    ManageKpiGoalComponent,\n    ManageKpiGoalAchievementComponent\n  ],\n  imports: [\n    CommonModule,\n    EmployeeKpiRoutingModule,\n\n    DashboardModule,\n    ComponentsModule,\n    SharedModule,\n  ]\n})\nexport class EmployeeKpiModule { }\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\nimport { CcentreLookupComponent } from \"src/app/erp-finance/data/lookups/ccentre-lookup/ccentre-lookup.component\";\nimport { KpiGoalService } from \"src/app/erp-hr/data/kpi-services/kpi-goal.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ManageKpiGoalComponent } from \"../dialogs/manage-kpi-goal/manage-kpi-goal.component\";\nimport { ReportService } from \"src/app/erp-hr/data/payroll-services/report.service\";\nimport { ManageKpiGoalAchievementComponent } from \"../dialogs/manage-kpi-goal-achievement/manage-kpi-goal-achievement.component\";\n\n@Component({\n  selector: \"app-kpi-details-page\",\n  templateUrl: \"./kpi-details-page.component.html\",\n  styleUrls: [\"./kpi-details-page.component.sass\"],\n})\nexport class KpiDetailsPageComponent implements OnInit {\n  displayedColumns: string[] = [\n    //\"select\",\n    // \"id\",\n    \"empPf\",\n    \"year\",\n    \"quarter\",\n    \"strategicObjective\",\n    \"tacticalPerfomance\",\n    \"isQuantitative\",\n    \"target\",\n    \"weight\",\n    \"goalSubmited\",\n    \"appraisalSubmited\",\n    \"achieved\",\n    \"employeeScore\",\n    \"finalScore\",\n    \"appraisedApprovedBy\",\n    // \"status\",\n    \"action\",\n  ];\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n\n  Form: FormGroup;\n  months: string[] = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  currentUser: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private kpiGoalService: KpiGoalService,\n    private snackbar: SnackbarService,\n    private fb: FormBuilder,\n    private router: Router,\n    private tokenStorageService: TokenStorageService,\n    private reportAPI: ReportService\n  ) {}\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    const currentMonthIndex = new Date().getMonth();\n    const currentMonthName = this.months[currentMonthIndex];\n\n    this.currentUser = this.tokenStorageService.getUser();\n\n    this.Form = this.fb.group({\n      empPf: [this.currentUser.empPfNo, Validators.required],\n      year: [currentYear.toString(), Validators.required],\n      quarter: [\"Quarter 1\"],\n      status: [\"PENDING\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //************************************************************************************************ */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"SUBMITTED\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n    { name: \"APPRAISAL\" },\n    { name: \"COMPLETED\" },\n  ];\n\n  quarterArray: any[] = [\"Quarter 1\", \"Quarter 2\", \"Quarter 3\", \"Quarter 4\"];\n\n  selectedStatus: string = \"ALL\";\n\n  getSelectSelectedStatus() {\n    //this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n\n    //this.getData();\n  }\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n\n    let params = new HttpParams()\n      .set(\"empPf\", this.Form.value.empPf)\n      .set(\"year\", this.Form.value.year)\n      .set(\"quarter\", this.Form.value.quarter)\n      .set(\"status\", this.Form.value.status);\n\n    console.log(\"this.params:: \", params);\n\n    this.kpiGoalService\n      .getEmployeeKPIsData(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"KPI Goals displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error:  \" + err.message);\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    if (action === \"Upload Results\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: action,\n        record: record,\n      };\n      const dialogRef = this.dialog.open(\n        ManageKpiGoalAchievementComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"result:::\", result);\n\n        this.getData();\n      });\n    } else {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: action,\n        record: record,\n      };\n      const dialogRef = this.dialog.open(ManageKpiGoalComponent, dialogConfig);\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"result:::\", result);\n\n        this.getData();\n      });\n    }\n  }\n\n  deleteRecord(id: number) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.kpiGoalService\n          .deleteKPI(id)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //******************************************************************************************************************************** */\n  onCostCenterLookup(type: any) {\n    if (type === \"Search\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: \"SingleCostCenter\",\n      };\n      const dialogRef = this.dialog.open(CcentreLookupComponent, dialogConfig);\n      dialogRef.afterClosed().subscribe((res) => {\n        if (res && res.data && res.data.length > 0) {\n          this.Form.patchValue({\n            costCenterCode: res.data[0].costCenterCode,\n          });\n        }\n      });\n    } else if (type === \"All\") {\n      this.Form.patchValue({\n        costCenterCode: \"All\",\n      });\n\n      this.getData();\n    }\n  }\n  // ****************************************************************************************************************************\n  onSubmit() {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Are you sure you want to submit the goals for this quarter?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, submit!\",\n      cancelButtonText: \"No, cancel\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let params = new HttpParams()\n          .set(\"empPf\", this.Form.value.empPf)\n          .set(\"quarter\", this.Form.value.quarter);\n        this.kpiGoalService.submit(params).subscribe(\n          (res) => {\n            if (res.statusCode === 200) {\n              this.notificationAPI.alertSuccess(res.message);\n              this.getData();\n            } else {\n              this.notificationAPI.alertWarning(res.message);\n            }\n          },\n          (err) => {\n            this.notificationAPI.alertWarning(\"Server error: \" + err.message);\n          }\n        );\n      }\n    });\n  }\n\n  // ****************************************************************************************************************************\n\n  downloadingQuarterly: boolean = false;\n  downloadQuarterlyKpiGoals() {\n    this.downloadingQuarterly = true;\n    const params = new HttpParams()\n      .set(\"empPf\", this.Form.value.empPf)\n      .set(\"year\", this.Form.value.year)\n      .set(\"quarter\", this.Form.value.quarter)\n      .set(\"status\", this.selectedStatus);\n    this.reportAPI.employeeKPIQuarterly(params).subscribe({\n      next: (value) => {\n        this.downloadingQuarterly = false;\n        this.notificationAPI.alertSuccess(\"Downloading KPI Report\");\n        let url = window.URL.createObjectURL(value.data);\n        let a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.setAttribute(\"style\", \"display: none\");\n        a.setAttribute(\"target\", \"blank\");\n        a.href = url;\n        a.download = value.filename;\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n      },\n      error: (err) => {\n        this.downloadingQuarterly = false;\n        this.notificationAPI.alertWarning(\"NO REPORT FOUND\");\n      },\n      complete: () => {},\n    });\n  }\n  downloadingAnnual: boolean = false;\n\n  downloadAnnualyKpiGoals() {\n    this.downloadingAnnual = true;\n    const params = new HttpParams()\n      .set(\"empPf\", this.Form.value.empPf)\n      .set(\"year\", this.Form.value.year);\n    this.reportAPI.employeeKPIAnnualy(params).subscribe({\n      next: (value) => {\n        this.downloadingAnnual = false;\n        this.notificationAPI.alertSuccess(\"Downloading Annual KPI Report\");\n        let url = window.URL.createObjectURL(value.data);\n        let a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.setAttribute(\"style\", \"display: none\");\n        a.setAttribute(\"target\", \"blank\");\n        a.href = url;\n        a.download = value.filename;\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n      },\n      error: (err) => {\n        this.downloadingAnnual = false;\n        this.notificationAPI.alertWarning(\"NO REPORT FOUND\");\n      },\n      complete: () => {},\n    });\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All KPI Goals'\" [items]=\"['KPI Goals']\" [active_item]=\"'All KPI Goals'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Employees with KPI Goals</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\">\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add','')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"SUBMIT GOALS\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"onSubmit()\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('xlsx', {fileName:'assets-list', sheet: 'sheet1'})\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"materialTableHeader mt-2\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row\">\n\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Status</mat-label>\n\n                                                    <mat-select formControlName=\"status\"\n                                                        (selectionChange)=\"getSelectSelectedStatus()\">\n                                                        <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                            [value]=\"reqStatus.name\">{{ reqStatus.name }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                        Please select Status\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </form>\n                                        </div>\n\n                                        <div class=\"col-10\">\n                                            <div class=\"button-container mt-1\">\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                    class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                    <mat-icon>check_circle</mat-icon>\n                                                    ALL\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'Pending'\"\n                                                    class=\"mat-button pending\" (click)=\"getSelectedStatus('Pending')\">\n                                                    <mat-icon>pending_actions</mat-icon>\n                                                    Pending\n                                                </button>\n                                                <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'SUBMITTED'\"\n                                                    class=\"mat-button submitted\"\n                                                    (click)=\"getSelectedStatus('SUBMITTED')\">\n                                                    <mat-icon>send</mat-icon>\n                                                    SUBMITTED\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                    class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                    <mat-icon>thumb_up</mat-icon>\n                                                    APPROVED\n                                                </button>\n                                                <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                    class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                    <mat-icon>cancel</mat-icon>\n                                                    REJECTED\n                                                </button>\n\n                                                <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'APPRAISAL'\"\n                                                    class=\"mat-button appraisal\"\n                                                    (click)=\"getSelectedStatus('APPRAISAL')\">\n                                                    <mat-icon>assignment</mat-icon>\n                                                    APPRAISAL\n                                                </button>\n                                                <button mat-raised-button\n                                                    [class.active]=\"selectedStatus === 'COMPLETED'\"\n                                                    class=\"mat-button completed\"\n                                                    (click)=\"getSelectedStatus('COMPLETED')\">\n                                                    <mat-icon>cancel</mat-icon>\n                                                    COMPLETED\n                                                </button>\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n                                </form>\n                            </div>\n                            <div class=\"materialTableHeader mt-2\">\n                                <form [formGroup]=\"Form\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2\">\n                                            <form [formGroup]=\"Form\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Quarter Selection</mat-label>\n\n                                                    <mat-select formControlName=\"quarter\"\n                                                        (selectionChange)=\"getSelectSelectedStatus()\">\n                                                        <mat-option *ngFor=\"let quarter of quarterArray\"\n                                                            [value]=\"quarter\">{{ quarter\n                                                            }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-error *ngIf=\"Form.get('quarter').hasError('required')\">\n                                                        Please select quarter\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </form>\n                                        </div>\n\n                                        <div class=\"col-2\">\n                                            <div class=\"row\">\n\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Year</mat-label>\n                                                    <input matInput formControlName=\"year\" />\n                                                    <mat-error *ngIf=\"Form.get('year').hasError('required')\">\n                                                        Please Enter Year\n                                                    </mat-error>\n                                                </mat-form-field>\n\n                                            </div>\n                                        </div>\n                                        <div class=\"col-2\">\n                                            <button class=\"btn-space col-12\" mat-raised-button color=\"primary\"\n                                                [class.auth-spinner]=\"downloadingQuarterly\"\n                                                [disabled]=\"downloadingQuarterly\" (click)=\"downloadQuarterlyKpiGoals()\">\n                                                <mat-icon>description</mat-icon>\n                                                Quarterly KPI Report\n                                            </button>\n                                        </div>\n\n                                        <div class=\"col-2\">\n                                            <button class=\"btn-space col-12\" mat-raised-button color=\"primary\"\n                                                [class.auth-spinner]=\"downloadingAnnual\" [disabled]=\"downloadingAnnual\"\n                                                (click)=\"downloadAnnualyKpiGoals()\">\n                                                <mat-icon>description</mat-icon>\n                                                Annual KPI Report\n                                            </button>\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n\n\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"empPf\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Employee PF\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.empPf }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"year\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Year\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.year }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"quarter\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Quarter\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.quarter }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"strategicObjective\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Strategic Objective\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.strategicObjective }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"tacticalPerfomance\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Tactical Performance\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.tacticalPerfomance }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"isQuantitative\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Is Quantitative\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.isQuantitative }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"target\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Target\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        <span *ngIf=\"row.isQuantitative == 'N'\">\n                                            {{row.nonQuantitativeTarget}}\n                                        </span>\n                                        <span *ngIf=\"row.isQuantitative == 'Y'\">\n                                            {{row.quantitativeTarget}}\n                                        </span>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"weight\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Weight\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.weight }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"goalSubmited\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Goal Submitted\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.goalSubmited }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"appraisalSubmited\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Appraisal Submitted\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.appraisalSubmited }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"achieved\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        Achieved\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-7\">\n                                        <span *ngIf=\"row.isQuantitative == 'N'\">\n                                            {{row.nonQuantitativeAchieved}}\n                                        </span>\n                                        <span *ngIf=\"row.isQuantitative == 'Y'\">\n                                            {{row.quantitativeAchieved}}\n                                        </span>\n                                    </mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"employeeScore\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Employee Score\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.employeeScore }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"finalScore\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Final Score\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.finalScore }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"appraisedApprovedBy\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Appraised Approved By\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.appraisedApprovedBy ||'N.A' }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'SUBMITTED'\"\n                                                class=\"badge custom-badge-solid-yellow btn btn-sm m-1\">\n                                                <i class=\"fas fa-paper-plane\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'APPRAISAL'\"\n                                                class=\"badge custom-badge-solid-purple btn btn-sm m-1\">\n                                                <i class=\"fas fa-clipboard-check\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'COMPLETED'\"\n                                                class=\"badge custom-badge-solid-teal btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-double\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                        *matHeaderCellDef>\n                                        Action\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n\n                                        <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Update',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button> -->\n\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('View',row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'eye'\" [class]=\"'tbl-fav-eye'\">\n                                            </app-feather-icons>\n                                        </button>\n\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Upload Results', row)\" class=\"tbl-action-btn\">\n                                            <mat-icon>assessment</mat-icon>\n                                        </button>\n                                        <!-- \n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"lockOrUnlockAccount(row)\" class=\"tbl-action-btn\">\n                                            <mat-icon>{{ row.isAcctActive === 'Y' ? 'lock' : 'lock_open' }}</mat-icon>\n                                        </button> -->\n\n                                        <!-- <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"deleteRecord(row.id)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                            </app-feather-icons>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"viewRecord(row)\"\n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\"> No data matching the filter \"{{ input\n                                        }}\"</td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL = `${environment.baseUrlHR}/api/v1/reports`;\n  baseExcelURL = `${environment.baseUrlHR}/api/v1/reports/export`;\n  constructor(private http: HttpClient) { }\n\n  generate(params: any): Observable<any> {\n    let API_URL = `${this.baseExcelURL}/generate`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'arraybuffer', withCredentials: false })\n  }\n  generateRegister(params: any): Observable<any> {\n    let API_URL = `${this.baseExcelURL}/generate/company-register`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'arraybuffer', withCredentials: false })\n  }\n  generateMasterRegister(params: any): Observable<any> {\n    let API_URL = `${this.baseExcelURL}/generate/master-register`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'arraybuffer', withCredentials: false })\n  }\n  generateAnalysis(params: any): Observable<any> {\n    let API_URL = `${this.baseExcelURL}/generate/analysis`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'arraybuffer', withCredentials: false })\n  }\n  payslip(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/payslip/${id}`;\n    return this.http.get(API_URL, { headers: this.headers, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'payslip.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n  employeeKPIQuarterly(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/kpi/employee`;\n    return this.http.get(API_URL, {params:params, headers: this.headers, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'Quarterly KPI Report.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n  employeeKPIAnnualy(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/kpi/employee/annual`; \n    return this.http.get(API_URL, {params:params, headers: this.headers, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'Annualy KPI Report.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n\n  generateP9form(id: any): Observable<any> {\n    let API_URL = `${this.baseURL}/p9form/${id}`;\n    return this.http.get(API_URL, { headers: this.headers, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'Employee_P9_Form.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n \n  generateEmployeeP9form(params: any): Observable<any> {\n    let API_URL = `${this.baseURL}/employee/p9form`;\n    return this.http.get(API_URL, { headers: this.headers, params: params, responseType: 'blob', withCredentials: false })\n      .pipe(map((response) => {\n        return {\n          filename: 'Employee_P9_Form.pdf',\n          data: new Blob([response], { type: 'application/pdf' })\n        };\n      }));\n  }\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}