{"version":3,"file":"default-src_app_erp-finance_data_lookups_customer-lookup_customer-lookup_component_ts-src_app-c88ec5.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA0D;AAGe;AAEd;AACV;AACY;AACL;;;;;;;;;;;;;;;;;;;ICLlD,0EAAoC;IAClC,kFACmB;IACrB,4DAAM;;;IASF,sEAAuB;IAEnB,qEAAuG;IACzG,4DAAM;;;;IAIN,wEAAiC;IAC/B,0EAAiG;IAI5C,sTAAS,2BAAmB,IAAC;IAA1E,4DACW;IAGf,0EAAwB;IAGmB,kTAAS,iBAAS,IAAC;IAEtD,gFAA4B;IAAA,qEAAS;IAAA,4DAAW;IAO9D,qEAAe;;;IAVe,0DAAgC;IAAhC,gGAAgC;IACO,0DAAyC;IAAzC,oGAAyC;IAChG,+FAA+B;;;;IAevC,sFAAsE;IACtC,2UAAmB,sBAAc,GAAG,IAAI,IAAC,oQAG3D,qBAAa,IAH8C;IAIvE,4DAAe;;;IALkB,2FAAkC;IAEjE,0DAAmD;IAAnD,0HAAmD;;;;IAKvD,+EAAmE;IACnC,uKAAS,wBAAwB,IAAC,uUAC3C,iCAAqB,GAAG,IAAI,IADe,6PAES,qBAAa,IAFtB;IAGhE,4DAAe;;;;IAJe,2FAAkC;IAEb,0DAAqC;IAArC,yGAAqC;;;IAQ1F,sFAAoG;IAClG,0EACF;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC/E,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,gGACF;;;IAKA,sFAAoG;IACpG,0EACA;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC/E,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,gGACF;;;IAKE,sFAAoG;IACpG,2EACA;IAAA,4DAAkB;;;IAClB,+EAAiF;IAC/E,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,gGACF;;;IAGJ,4EAAqE;;;IAErE,yEACU;;IAD+C,8EAA0B;;;IAEnF,+EAAoC;IAClC,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,+HACF;;;IAIF,0EAA2C;IACzC,sFACuB;IACzB,4DAAM;;IAFkC,0DAAe;IAAf,wEAAe;;;ADxF9D,MAAM,uBAAuB;IAsBlC,YACS,SAAwD,EAC/B,IAAI,EAC5B,EAAe,EACf,QAAyB,EACzB,kBAA6C;QAJ9C,cAAS,GAAT,SAAS,CAA+C;QAC/B,SAAI,GAAJ,IAAI;QAC5B,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAA2B;QAzBvD,qBAAgB,GAAa;YAC3B,QAAQ;YACR,cAAc;YACd,cAAc;YACd,cAAc;SACf,CAAC;QAKF,cAAS,GAAG,IAAI,oEAAc,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;QAC/C,iBAAY,GAAU,EAAE,CAAC;QACzB,uBAAkB,GAAY,KAAK,CAAC;QACpC,2BAAsB,GAAU,EAAE,CAAC;QACnC,aAAQ,GAAU,EAAE,CAAC;QACnB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QACjC,cAAS,GAAY,IAAI,CAAC;QAqF1B,iBAAY,GAAU,EAAE,CAAC;IA7ErB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,EAAE,CAAC;IAEjB,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACxD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC7B,IAAI,IAAI,KAAK,OAAO,CAAC,EAAE,EAAE;oBACvB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBAChC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACvE,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,gFAAgF;IAChF,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,YAAY;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,mDAAmD;IACnD,aAAa,CAAC,GAAS;QACrB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,QAAQ,GAAG,CAAC,QAAQ,GAAG,CACrF,EAAE,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC9C,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IACpE,CAAC;IACM,UAAU,KAAW,CAAC;IAI7B,wGAAwG;IACxG,OAAO;QACL,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE;aAChD,IAAI,CAAC,+CAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAC;oBACxB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iBAClC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;iBACH;YACH,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,GAAG,CAAC,OAAO,CACZ,CAAC;YACJ,CAAC;YACD,QAAQ,EAAE,GAAE,EAAE,GAAE,CAAC;SAClB,CAAC,EAAE,8CAAY,CAAC;IACnB,CAAC;;8FAtIU,uBAAuB,uMAwBxB,qEAAe;qHAxBd,uBAAuB;kEASvB,sEAAY;kEACZ,4DAAO;;;;;;QC5BpB,yEAA0B;QAGpB,mHAGM;QACN,yEAAyB;QACgB,2EAAgB;QAAA,4DAAM;QAC7D,4EAA8E;QAAtD,+IAAS,qBAAiB,IAAC;QACjD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAG9B,yEAAwB;QAEpB,qHAIM;QACN,0EAAoB;QAElB,wIAqBe;QAGb,qFAC+B;QAE7B,6EAAoC;QAClC,8IAMkB;QAClB,gIAKW;QACb,qEAAe;QAGf,6EAA0C;QACxC,8IAEkB;QAClB,gIAEW;QACb,qEAAe;QAGf,6EAA0C;QACxC,8IAEkB;QAClB,gIAEW;QACb,qEAAe;QAGb,6EAA0C;QACxC,8IAEkB;QAClB,gIAEW;QACb,qEAAe;QAEjB,4IAAqE;QAErE,8HACU;QACV,gIAEW;QACb,4DAAY;QAGZ,sHAGM;QACN,gFACoD;QACtD,4DAAM;;QA5GO,0DAAe;QAAf,+EAAe;QAYxB,0DAAe;QAAf,+EAAe;QAOJ,0DAAgB;QAAhB,gFAAgB;QAwBM,0DAAyB;QAAzB,sFAAyB;QAiDzC,2DAAiC;QAAjC,iGAAiC;QAEpB,0DAAyB;QAAzB,kGAAyB;QAQnD,0DAAe;QAAf,+EAAe;QAIN,0DAAc;QAAd,uEAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GO;AAEkB;AACK;AAG/B;;;;;;;;;;;;;;;;ICLpC,0EAA8C;IAC5C,kFAA0E;IAC5E,4DAAM;;;;IAkCA,0EAAkE;IAGpD,iTAAS,gBAAS,IAAC;IACD,kEAAO;IAAA,4DAAS;IAG9C,0EAAmB;IAEP,iTAAS,eAAQ,IAAC;IACA,iEAAM;IAAA,4DAAS;IAG7C,0EAAmB;IAEP,kTAAS,eAAQ,IAAC;IACA,kEAAM;IAAA,4DAAS;;;IAZvC,0DAAuB;IAAvB,uFAAuB;IAMvB,0DAAuB;IAAvB,uFAAuB;IAMvB,0DAAuB;IAAvB,uFAAuB;;;IAUvB,4EAAiE;IAAA,6EAAkB;IAAA,4DAAY;;;;IALrG,yEAAkC;IAGjB,+EAAoB;IAAA,4DAAY;IAC3C,0EAAuD;IACvD,yJAA+F;IACjG,4DAAiB;IAEnB,0EAAyE;IAErE,0TAAS,qBAAc,IAAC;IAAC,iEAAM;IAAA,4DAAS;;;IAL5B,0DAAmD;IAAnD,sHAAmD;IAIvB,0DAA+B;IAA/B,+FAA+B;;;IAV/E,2EAAiF;IAC/E,wIAYM;IACR,4DAAO;;;IAdiD,wFAAwB;IAC5D,0DAAc;IAAd,iFAAc;;ADxCvC,MAAM,kCAAkC;IA6B7C,YACS,SAAwD,EAC/B,IAAI,EAC5B,EAAe,EACf,QAAyB,EACzB,kBAAsC,EACtC,yBAAkD,EAClD,MAAc,EACd,QAAkB;QAPnB,cAAS,GAAT,SAAS,CAA+C;QAC/B,SAAI,GAAJ,IAAI;QAC5B,OAAE,GAAF,EAAE,CAAa;QACf,aAAQ,GAAR,QAAQ,CAAiB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,8BAAyB,GAAzB,yBAAyB,CAAyB;QAClD,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAnC5B,uBAAkB,GAAkC,KAAK,CAAC;QAC1D,qBAAgB,GAAgC,KAAK,CAAC;QAYtD,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAG1B,cAAS,GAAY,KAAK,CAAC;QAE3B,wBAAmB,GAAY,KAAK,CAAC;QACrC,mBAAc,GAAG,KAAK,CAAC;QAGrB,aAAQ,GAAqB,IAAI,yCAAO,EAAW,CAAC;QAEtD,oBAAe,GAAY,KAAK,CAAC;QAY/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAG7B,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;QAE9D,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAG3C,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,mBAAmB,EAAE;YAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;QAID,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,4CAA4C;QAE5C,8FAA8F;QAE9F,4BAA4B;QAE5B,WAAW;QACX,2BAA2B;QAC3B,IAAI;QAEJ,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QAEhD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5C,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAGD,gBAAgB;QACd,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,EAAE;YAClC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,EAAE;YAClC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IAEH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,MAAM,EAAE,IAAI;SACb,CAAC;QAEF,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAID,YAAY;QACV,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrC,IAAI,IAAI,EAAE,EACV,qBAAqB,CACtB,CAAC;QAGF,MAAM,MAAM,GAAG,IAAI,4DAAU,EAAE;aAE5B,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;aAC5C,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aACnC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC;aAC1B,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAE/C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAE/B,IAAI,CAAC,yBAAyB;aAC3B,uBAAuB,CAAC,MAAM,CAAC;aAC/B,IAAI,CAAC,+CAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,kBAAkB,EAClB,yCAAyC,CAC1C,CAAC;iBAEH;gBACD,SAAS;gBACT,oEAAoE;gBACpE,IAAI;YACN,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC5B,iBAAiB,EACjB,gBAAgB,GAAG,GAAG,CAAC,OAAO,CAC/B,CAAC;YACJ,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iDAAiD,CAAC,CAAC,CAAC;YAC5E,CAAC;SACF,CAAC,CAAC;IACP,CAAC;;oHAtKU,kCAAkC,uMA+BnC,qEAAe;gIA/Bd,kCAAkC;QCnB/C,yEAA0B;QAEpB,8HAEM;QACN,yEAAyB;QACwB,oFAAyB;QAAA,4DAAS;QACjF,4EAA8E;QAAtD,0JAAS,qBAAiB,IAAC;QACjD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAG9B,0EAAwB;QAMhB,mEAAmD;QACrD,4DAAM;QAGN,2EAAwB;QAEO,yEAAa;QAAA,4DAAK;QAC7C,sEAAI;QAAA,wDAAuB;QAAA,4DAAK;QAChC,0EAA2B;QAAA,0EAAc;QAAA,4DAAK;QAC9C,sEAAI;QAAC,wDAA0B;QAAA,4DAAK;QACpC,0EAA2B;QAAA,0EAAc;QAAA,4DAAK;QAC9C,sEAAI;QAAC,wDAA0B;QAAA,4DAAK;QAO1C,2EAAc;QACZ,iEAAM;QAEN,kIAmBM;QACN,mIAcO;QACT,4DAAM;;QAvES,0DAAyB;QAAzB,yFAAyB;QAsB9B,2DAAuB;QAAvB,wFAAuB;QAEtB,0DAA0B;QAA1B,mGAA0B;QAE1B,0DAA0B;QAA1B,mGAA0B;QAU7B,0DAAqB;QAArB,qFAAqB;QAoBpB,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;;;;;;;AC1DuB;AAExB;AACyB;;;AAKzD,MAAM,uBAAuB;IAElC,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEL,sBAAsB;QACpB,MAAM,kBAAkB,GAAG,GAAG,yFAA0B,kCAAkC,CAAC;QAC3F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,kBAAkB,CAAC,CAAC;IAClD,CAAC;IACD,0CAA0C,CAAC,MAAW;QACpD,MAAM,eAAe,GAAG,GAAG,yFAA0B,uCAAuC,CAAC;QAC7F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,eAAe,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IACzD,CAAC;IACD,8BAA8B;QAC5B,MAAM,kBAAkB,GAAG,GAAG,yFAA0B,uDAAuD,CAAC;QAChH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,kBAAkB,CAAC,CAAC;IAClD,CAAC;IAED,mBAAmB,CAAC,QAAa;QAC/B,MAAM,kBAAkB,GAAG,GAAG,yFAA0B,gCAAgC,CAAC;QACzF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,kBAAkB,EAAE,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,qBAAqB,CAAC,MAAW;QAC/B,MAAM,kBAAkB,GAAG,GAAG,yFAA0B,gCAAgC,CAAC;QACzF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,kBAAkB,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,qBAAqB,CAAC,QAAa;QACjC,MAAM,kBAAkB,GAAG,GAAG,yFAA0B,gCAAgC,CAAC;QACzF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,kBAAkB,EAAE,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAED,uBAAuB,CAAC,MAAW;QACjC,MAAM,kBAAkB,GAAG,GAAG,yFAA0B,sCAAsC,CAAC;QAC/F,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,kBAAkB,EAClB,EAAE,EACF;YACE,MAAM,EAAE,MAAM;SACf,CAAC;IACN,CAAC;IACD,wBAAwB,CAAC,MAAW,EAAE,cAAmB;QACvD,MAAM,UAAU,GAAG,GAAG,yFAA0B,sBAAsB,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,UAAU,EAAE,cAAc,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IAClE,CAAC;IACD,2BAA2B,CAAC,KAAU;QACpC,MAAM,kBAAkB,GAAG,GAAG,yFAA0B,MAAM,CAAC;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,kBAAkB,EAAE,KAAK,CAAC;IACvD,CAAC;IAED,gBAAgB,CAAC,MAAW;QAC1B,IAAI,OAAO,GAAG,IAAI,6DAAW,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;QAC5C,IAAI,cAAc,GAAQ;YACxB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;YAChB,YAAY,EAAE,MAAM;YACpB,eAAe,EAAE,KAAK;SACvB,CAAC;QACF,IAAI,OAAO,GAAG,GAAG,yFAA0B,0CAA0C,CAAC;QACtF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,IAAI,CAChD,yCAAG,CAAC,CAAC,QAAkB,EAAE,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;YACjD,OAAO;gBACL,QAAQ,EAAE,QAAQ;gBAClB,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;aACxD,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,MAAW;QACrB,MAAM,kBAAkB,GAAG,GAAG,6FAA8B,gDAAgD,CAAC;QAC7G,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,kBAAkB,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IACjE,CAAC;IACD,yGAAyG;IACzG,+EAA+E;IAC/E,6GAA6G;IAC7G,oDAAoD;IACpD,IAAI;IAGJ,sBAAsB,CAAC,MAAW;QAChC,MAAM,QAAQ,GAAG,GAAG,yFAA0B,oCAAoC,CAAC;QAEnF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5D,CAAC;;8FAxFU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;;ACH4C;;;AAKzD,MAAM,yBAAyB;IACpC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,eAAe;QACb,MAAM,WAAW,GAAG,GAAG,yFAA0B,sBAAsB,CAAC;QACxE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,WAAW,CAAC,CAAC;IAC3C,CAAC;IACD,gBAAgB,CAAC,MAAW;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,yFAA0B,6BAA6B,EAC1D,EAAC,MAAM,EAAC,CACT,CAAC;IACJ,CAAC;IAED,oBAAoB,CAAC,MAAM;QACzB,MAAM,WAAW,GAAG,GAAG,yFAA0B,gCAAgC,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,WAAW,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,uBAAuB;QACrB,MAAM,WAAW,GAAG,GAAG,yFAA0B,sBAAsB,CAAC;QACxE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,YAAY,CAAC,QAAa;QACxB,MAAM,WAAW,GAAG,GAAG,yFAA0B,yBAAyB,CAAC;QAC3E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,WAAW,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED,cAAc,CAAC,MAAW;QACxB,MAAM,WAAW,GAAG,GAAG,yFAA0B,yBAAyB,CAAC;QAC3E,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,WAAW,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,eAAe,CAAC,QAAa;QAC3B,MAAM,WAAW,GAAG,GAAG,yFAA0B,yBAAyB,CAAC;QAC3E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,WAAW,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,iBAAiB,CAAC,cAAmB;QACnC,MAAM,UAAU,GAAG,GAAG,yFAA0B,+BAA+B,CAAC;QAChF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,UAAU,EAAE,cAAc,CAAC,CAAC;IACxD,CAAC;IAED,oBAAoB,CAAC,KAAU;QAC7B,MAAM,WAAW,GAAG,GAAG,yFAA0B,8BAA8B,CAAC;QAChF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,WAAW,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;;kGA/CU,yBAAyB;0HAAzB,yBAAyB,WAAzB,yBAAyB,mBAFxB,MAAM","sources":["./src/app/erp-finance/data/lookups/customer-lookup/customer-lookup.component.ts","./src/app/erp-finance/data/lookups/customer-lookup/customer-lookup.component.html","./src/app/erp-finance/data/lookups/validation/customer-invoice-validation/customer-invoice-validation.component.ts","./src/app/erp-finance/data/lookups/validation/customer-invoice-validation/customer-invoice-validation.component.html","./src/app/erp-finance/data/services/customer-invoices.service.ts","./src/app/erp-finance/data/services/customer-management.service.ts"],"sourcesContent":["import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { ManageCustomerInvoicesComponent } from 'src/app/erp-finance/modules/finance-management/account-receivables/customerInvoices/manage-customer-invoices/manage-customer-invoices.component';\nimport { CustomerManagementService } from '../../services/customer-management.service';\n\n@Component({\n  selector: 'app-customer-lookup',\n  templateUrl: './customer-lookup.component.html',\n  styleUrls: ['./customer-lookup.component.sass']\n})\nexport class CustomerLookupComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    \"select\",\n    \"customerCode\",\n    \"customerName\",\n    \"customerType\",\n  ];\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  contextMenu: MatMenuTrigger;\n  selection = new SelectionModel<any>(false, []);\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  dataSourceFilteredList: any[] = [];\n  glsArray: any[] = [];\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCustomerInvoicesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private customerManService: CustomerManagementService\n  ) { }\n\n  ngOnInit(): void {\n    this.selection = new SelectionModel<any>(true, []);\n    this.getData();\n\n  }\n\n  ngAfterViewInit() {\n    console.log(\"Finally: \", this.dataSourceFilteredList);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  filter() {\n    this.dataSource.data.forEach((element) => {\n      this.glsArray.forEach((item) => {\n        if (item === element.id) {\n          this.selection.select(element);\n        }\n      });\n    });\n    console.log(\"dataSourceFilteredList::\", this.dataSourceFilteredList);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  //******************************************************************************************************\n  //Select stock items\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  glsSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n  }\n\n  proceed() {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.selectedRows });\n  }\n  public confirmAdd(): void { }\n\n  tableDetails: any[] = [];\n\n  //******************************************************************************************************\n  getData(){\n    this.customerManService.getAllApprovedCustomers()\n    .pipe(takeUntil(this.destroy$))\n    .subscribe({\n      next: (res) => {\n        if (res.statusCode == 302){\n          this.data = res.entity;\n          this.isLoading = false;\n          this.dataSource = new MatTableDataSource(this.data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        } else {\n          this.snackbar.showNotification(\n            \"snackbar-danger\", \n            res.message\n          );\n        }\n      }, \n      error: (err) => {\n        this.snackbar.showNotification(\n          \"snackbar-danger\",\n          err.message\n        );\n      }, \n      complete: ()=> {},\n    }), Subscription;\n  }\n}\n","<div class=\"addContainer\">\n\n    <div class=\"contact-details\">\n      <div class=\"mb-3\" *ngIf=\"isLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n        </mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\">Select Customer </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n          <div *ngIf=\"isLoading\">\n            <div class=\"d-flex justify-content-center\">\n              <img src=\"assets/images/loading.gif\" style=\"display: block; margin: auto; width: 60px; height: 60px\" />\n            </div>\n          </div>\n          <div   class=\"body\">\n          <div class=\"table-responsi m-t-5\">\n            <ng-container *ngIf=\"!isLoading\">\n              <div class=\"table-header py-3\" style=\"background-color: rgba(219, 218, 218, 0.836); margin: 5px\">\n                <div class=\"row\">\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <input class=\"pull-left search form-control\" (keyup)=\"applyFilter($event)\" placeholder=\"Filter...\"\n                        #input />\n                    </div>\n                  </div>\n                  <div class=\"col-6 px-4\">\n                    <div class=\"mx-auto\">\n                      <div class=\"m-l-10\" [hidden]=\"!selection.hasValue()\">\n                        <button mat-mini-fab color=\"primary\" (click)=\"proceed()\" [class.auth-spinner]=\"multimodifyloading\"\n                          [disabled]=\"multimodifyloading\">\n                          <mat-icon class=\"col-white\">done_all </mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n  \n  \n              <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                #exporter=\"matTableExporter\">\n  \n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\"\n                      (change)=\"glsSelected()\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-10'\">\n                    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                      (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\n                      [ngClass]=\"'tbl-checkbox'\" [aria-label]=\"checkboxLabel(row)\" (change)=\"glsSelected()\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n\n                <!-- Customer Code -->\n                <ng-container matColumnDef=\"customerCode\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Customer Code\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.customerCode }}\n                  </mat-cell>\n                </ng-container>\n  \n                <!-- Customer Name -->\n                <ng-container matColumnDef=\"customerName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                  Customer Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    {{ row.customerName }}\n                  </mat-cell>\n                </ng-container>\n\n                  <!-- Customer Tyepe -->\n                  <ng-container matColumnDef=\"customerType\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                    Customer Tyepe\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-50\">\n                      {{ row.customerType }}\n                    </mat-cell>\n                  </ng-container>\n  \n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  \n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n                <mat-cell *matNoDataRow colspan=\"4\">\n                  No data matching the filter \"{{ input.value }}\"\n                </mat-cell>\n              </mat-table>\n  \n              <!-- Loading spinner -->\n              <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <mat-paginator [pageSize]=\"8\" [pageSizeOptions]=\"[1,2, 5, 10, 20, 30, 40, 50, 100]\"\n                aria-label=\"Select page of users\"></mat-paginator>\n            </div>\n          </div>\n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { DatePipe } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { TokenCookieService } from 'src/app/core/service/token-storage-cookies.service';\nimport { ManageCustomerInvoicesComponent } from 'src/app/erp-finance/modules/finance-management/account-receivables/customerInvoices/manage-customer-invoices/manage-customer-invoices.component';\nimport { RequisitionService } from 'src/app/erp-procurement/data/services/requisition.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { CustomerInvoicesService } from '../../../services/customer-invoices.service';\n\n@Component({\n  selector: 'app-customer-invoice-validation',\n  templateUrl: './customer-invoice-validation.component.html',\n  styleUrls: ['./customer-invoice-validation.component.sass']\n})\nexport class CustomerInvoiceValidationComponent implements OnInit {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = \"end\";\n  verticalPosition: MatSnackBarVerticalPosition = \"top\";\n\n\n\n  Data: any;\n\n  status!: string;\n\n  resData: any;\n\n  statusForm: FormGroup;\n\n  rejected: boolean = false;\n  approved: boolean = false;\n  currentUser: any;\n  postedBy: any;\n  canVerify: boolean = false;\n\n  validationIsLoading: boolean = false;\n  hideValidation = false;\n  dataArray: any;\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ManageCustomerInvoicesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data, \n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private tokenCookieService: TokenCookieService,\n    private customerInvoiceManService: CustomerInvoicesService,\n    private router: Router,\n    private datepipe: DatePipe,\n  ) {\n    this.Data = this.data.data;\n    \n  \n  }\n  ngOnInit(): void {\n    this.currentUser = this.tokenCookieService.getUser().username;\n    \n    console.log(\"userType\", this.Data.currency)\n\n\n    if (this.data.action === 'deletedOrRejected') {\n      this.hideValidation = true;\n    }\n\n\n\n    this.postedBy = this.Data.postedBy;\n\n    this.canVerify = true;\n\n    // if (this.postedBy === this.currentUser) {\n\n    //   this.snackbar.showNotification(\"snackbar-danger\", \"You cannot verify this transaction!\");\n\n    //   this.canVerify = false;\n\n    // } else {\n    //   this.canVerify = true;\n    // }\n\n    console.log(\"this.billDet: \", this.data.currency);\n\n    console.log(\"Data: \", this.Data[0].invoiceCode);\n\n    this.statusForm = this.createStatusForm();\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n\n  createStatusForm(): FormGroup {\n    return this.fb.group({\n      reason: [\"\", [Validators.required]],\n    });\n  }\n\n  reject() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"REJECT\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n  }\n  return() {\n    this.rejected = true;\n    this.approved = false;\n\n    this.status = \"RETURN\";\n    if (!this.statusForm.value == null) {\n      this.changeStatus();\n    }\n\n  }\n  approve() {\n    this.approved = true;\n    this.rejected = false;\n\n    this.status = \"APPROVE\";\n    this.statusForm.patchValue({\n      reason: \"NA\"\n    })\n\n    this.changeStatus();\n  }\n\n\n\n  changeStatus() {\n    this.validationIsLoading = true;\n  \n    let todayDate = this.datepipe.transform(\n      new Date(),\n      \"yyyy-MM-ddTHH:mm:ss\"\n    );\n\n\n    const params = new HttpParams()\n\n      .set(\"invoiceCode\", this.Data[0].invoiceCode)\n      .set(\"userType\", this.data.userType)\n      .set(\"action\", this.status)\n      .set(\"reason\", this.statusForm.value.reason);\n  \n    console.log(\"Form = \", params);\n  \n    this.customerInvoiceManService\n      .validateCustomerInvoice(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res) {\n            this.snackbar.showNotification(\n              \"snackbar-success\",\n              \"Customer Invoice validated successfully\"\n            );\n            \n          }\n          // else {\n          //   this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          // }\n        },\n        error: (err) => {\n          console.log(\"err = \", err);\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            \"Server Error: \" + err.message\n          );\n        },\n        complete: () => {\n          this.dialogRef.close();\n          this.router.navigate([\"/erp-finance/finance-management/all-cusInvoices\"]);\n        }\n      });\n  }\n\n  \n\n}\n","<div class=\"addContainer\">\n    <div class=\"contact-details\">\n      <div class=\"m-10\" *ngIf=\"validationIsLoading\">\n        <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n      </div>\n      <div class=\"modalHeader\">\n        <div class=\"contact-details-name mb-1\"><strong>Validate Customer Invoice</strong></div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n      <div mat-dialog-content>\n        <mat-card-content>\n  \n          <div class=\"row\">\n            <!--Gift Icon-->\n            <div class=\"col text-center my-2\">\n              <i class=\"fas fa-check-circle fa-6x col-green\"></i>\n            </div>\n            <!--Modal Text-->\n            \n            <div class=\"col-8 my-2\">\n              <dl class=\"dl-horizontal\">\n                <dt class=\"pull-left me-2\">Invoice Code:</dt>\n                <dd>{{Data[0].invoiceCode}}</dd>\n                <dt class=\"pull-left me-2\">Customer Code:</dt>\n                <dd> {{ Data[0].customerCode }}</dd>\n                <dt class=\"pull-left me-2\">Customer Name:</dt>\n                <dd> {{ Data[0].customerName }}</dd>\n              </dl>\n            </div>\n  \n           \n          </div>\n  \n          <div class=\"\">\n            <hr />\n  \n            <div *ngIf=\"!hideValidation\" class=\"row\" style=\"margin-top: 10px\">\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"approve()\" type=\"button\" class=\"badge badge-solid-green btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Approve</button>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"return()\" type=\"button\" class=\"badge badge-solid-brown btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Return</button>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"row m-1\">\n                  <button (click)=\"reject()\" type=\"button\" class=\"badge badge-solid-red btn btn-lg btn-block m-1\"\n                    [disabled]=\"!canVerify\">Reject</button>\n                </div>\n              </div>\n            </div>\n            <form *ngIf=\"!hideValidation\" class=\"register-form m-4\" [formGroup]=\"statusForm\">\n              <div class=\"row\" *ngIf=\"rejected\">\n                <div class=\"col-10 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Reason for rejection</mat-label>\n                    <textarea formControlName=\"reason\" matInput></textarea>\n                    <mat-error *ngIf=\"statusForm.get('reason').hasError('required')\">Reason is required</mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-2 d-flex align-items-center justify-content-center mb-2\">\n                  <button mat-raised-button color=\"primary\" [disabled]=\"statusForm.invalid\" tabindex=\"-1\"\n                    (click)=\"changeStatus()\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n  \n  \n        </mat-card-content>\n      </div>\n    </div>\n  </div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerInvoicesService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllcustomerInvoices(): Observable<any> {\n    const customerInvoiceUrl = `${environment.baseUrlFinance}/api/v1/CustomerInvoice/fetchAll`;\n    return this.http.get<any[]>(customerInvoiceUrl);\n  }\n  getCustomerInvoicesByStatusAndApprovalType(params: any): Observable<any> {\n    const TransactionsUrl = `${environment.baseUrlFinance}/api/v1/CustomerInvoice/fetchbyStatus`;\n    return this.http.get<any>(TransactionsUrl, { params });\n  }\n  getAllApprovedCustomerInvoices(): Observable<any> {\n    const customerInvoiceUrl = `${environment.baseUrlFinance}/api/v1/CustomerInvoice/fetchApprovedCustomerInvoices`;\n    return this.http.get<any[]>(customerInvoiceUrl);\n  }\n\n  addcustomerInvoices(dataBody: any): Observable<any> {\n    const customerInvoiceUrl = `${environment.baseUrlFinance}/api/v1/CustomerInvoice/create`;\n    return this.http.post<any[]>(customerInvoiceUrl, dataBody);\n  }\n\n  deleteCustomerInvoice(params: any): Observable<any> {\n    const customerInvoiceUrl = `${environment.baseUrlFinance}/api/v1/CustomerInvoice/delete`;\n    return this.http.delete<any[]>(customerInvoiceUrl, { params });\n  }\n\n  updateCustomerInvoice(dataBody: any): Observable<any> {\n    const customerInvoiceUrl = `${environment.baseUrlFinance}/api/v1/CustomerInvoice/modify`;\n    return this.http.put<any[]>(customerInvoiceUrl, dataBody);\n  }\n\n  validateCustomerInvoice(params: any): Observable<any> {\n    const customerInvoiceUrl = `${environment.baseUrlFinance}/api/v1/CustomerInvoice/modifyStatus`;\n    return this.http.put<any>(\n      customerInvoiceUrl,\n      {},\n      {\n        params: params,\n      })\n  }\n  validateCustomerInvoices(params: any, dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate, {params});\n  }\n  uploadBatchcustomerInvoices(items: any,): Observable<any> {\n    const customerInvoiceUrl = `${environment.baseUrlFinance}/api`;\n    return this.http.post<any>(customerInvoiceUrl, items)\n  }\n\n  downloadInvoices(params: any): Observable<any> {\n    let headers = new HttpHeaders();\n    headers.append(\"Accept\", \"application/pdf\");\n    let requestOptions: any = {\n      params: params,\n      headers: headers,\n      responseType: \"blob\",\n      withCredentials: false,\n    };\n    let API_URL = `${environment.baseUrlFinance}/api/v1/report/download/customer_invoice`;\n    return this.http.get(API_URL, requestOptions).pipe(\n      map((response: BlobPart) => {\n        console.log(\"Hey this is download PO\", response);\n        return {\n          filename: \"Report\",\n          data: new Blob([response], { type: \"application/pdf\" }),\n        };\n      })\n    );\n  }\n\n  sendInvoice(params: any): Observable<any> {\n    const customerInvoiceUrl = `${environment.baseUrlProcurement}/api/v1/report/download/customer_invoice/email`;\n    return this.http.post<any>(customerInvoiceUrl, {}, { params });\n  }\n  //**************************************************************************************************** */\n  // updateCustomerInvoicesAccountingTransactionStatus(params): Observable<any> {\n  //   const Url = `${environment.baseUrlProcurement}/api/v1/purchaseRequisition/update/record/on/transaction`;\n  //   return this.http.put<any>(Url, {}, { params });\n  // }\n\n\n  getCustomerInvoiceById(params: any): Observable<any> {\n    const rfqssUrl = `${environment.baseUrlFinance}/api/v1/CustomerInvoice/find/by/id`;\n\n    return this.http.get<any[]>(rfqssUrl, { params: params });\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment.prod\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CustomerManagementService {\n  constructor(private http: HttpClient) {}\n\n  getAllCustomers(): Observable<any> {\n    const customerUrl = `${environment.baseUrlFinance}/api/v1/Customer/all`;\n    return this.http.get<any[]>(customerUrl);\n  }\n  getCustomersById(params: any): Observable<any> {\n    return this.http.get<any>(\n      `${environment.baseUrlFinance}/api/v1/Customer/find/by/id`,\n      {params}\n    );\n  }\n\n  getCustomersByStatus(params): Observable<any> {\n    const customerUrl = `${environment.baseUrlFinance}/api/v1/Customer/fetchbyStatus`;\n    return this.http.get<any[]>(customerUrl, { params });\n  }\n  \n  getAllApprovedCustomers(): Observable<any> {\n    const customerUrl = `${environment.baseUrlFinance}/api/v1/Customer/all`;\n    return this.http.get<any[]>(customerUrl);\n  }\n\n  addCustomers(dataBody: any): Observable<any> {\n    const customerUrl = `${environment.baseUrlFinance}/api/v1/Customer/create`;\n    return this.http.post<any[]>(customerUrl, dataBody);\n  }\n\n  deleteCustomer(params: any): Observable<any> {\n    const customerUrl = `${environment.baseUrlFinance}/api/v1/Customer/delete`;\n    return this.http.delete<any[]>(customerUrl, { params });\n  }\n\n  updateCustomers(dataBody: any): Observable<any> {\n    const customerUrl = `${environment.baseUrlFinance}/api/v1/Customer/update`;\n    return this.http.put<any[]>(customerUrl, dataBody);\n  }\n\n  validateCustomers(dataToValidate: any): Observable<any> {\n    const imprestUrl = `${environment.baseUrlFinance}/api/v1/Customer/update/state`;\n    return this.http.put<any>(imprestUrl, dataToValidate);\n  }\n\n  uploadBatchCustomers(items: any): Observable<any> {\n    const customerUrl = `${environment.baseUrlFinance}/api/v1/Customer/create/bulk`;\n    return this.http.post<any>(customerUrl, items);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}