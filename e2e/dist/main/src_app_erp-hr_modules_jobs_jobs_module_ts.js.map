{"version":3,"file":"src_app_erp-hr_modules_jobs_jobs_module_ts.js","mappings":"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","sources":["./src/app/erp-hr/data/job-services/job-interviews.service.ts","./src/app/erp-hr/modules/jobs/job-applications/all-job-applications/all-job-applications.component.ts","./src/app/erp-hr/modules/jobs/job-applications/all-job-applications/all-job-applications.component.html","./src/app/erp-hr/modules/jobs/job-applications/dialogs/application-details/application-details.component.ts","./src/app/erp-hr/modules/jobs/job-applications/dialogs/application-details/application-details.component.html","./src/app/erp-hr/modules/jobs/job-applications/manage-job-applications/manage-job-applications.component.ts","./src/app/erp-hr/modules/jobs/job-applications/manage-job-applications/manage-job-applications.component.html","./src/app/erp-hr/modules/jobs/job-details/all-jobs/all-jobs.component.ts","./src/app/erp-hr/modules/jobs/job-details/all-jobs/all-jobs.component.html","./src/app/erp-hr/modules/jobs/job-details/manage-jobs/manage-jobs.component.ts","./src/app/erp-hr/modules/jobs/job-details/manage-jobs/manage-jobs.component.html","./src/app/erp-hr/modules/jobs/job-interviews/all-job-interviews/all-job-interviews.component.ts","./src/app/erp-hr/modules/jobs/job-interviews/all-job-interviews/all-job-interviews.component.html","./src/app/erp-hr/modules/jobs/job-interviews/manage-job-interview-results/manage-job-interview-results.component.ts","./src/app/erp-hr/modules/jobs/job-interviews/manage-job-interview-results/manage-job-interview-results.component.html","./src/app/erp-hr/modules/jobs/job-interviews/manage-job-interviews/manage-job-interviews.component.ts","./src/app/erp-hr/modules/jobs/job-interviews/manage-job-interviews/manage-job-interviews.component.html","./src/app/erp-hr/modules/jobs/jobs-routing.module.ts","./src/app/erp-hr/modules/jobs/jobs.module.ts","./src/app/shared/services/files.service.ts","./node_modules/rxjs/dist/esm/internal/AsyncSubject.js"],"sourcesContent":["import { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobInterviewAPIService {\n  // baseURL3: `${environment.baseUrlHR}/api/v1/job/interviews`\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  baseURL3 = `${environment.baseUrlHR}/api/v1/job/application`;\n\n  constructor(private http: HttpClient) { }\n\n  scheduleInterview( data: any): Observable<any> {\n    let API_URL = `${this.baseURL3}/interview_schedule`;\n    return this.http.put(API_URL, data, { withCredentials: false }).pipe(\n      map(res => res || {}),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  interviewResults( data: any): Observable<any> {\n    let API_URL = `${this.baseURL3}/interview_result`;\n    return this.http.put(API_URL, data, { withCredentials: false }).pipe(\n      map(res => res || {}),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `${error.error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { JobApplicationAPIService } from \"src/app/erp-hr/data/job-services/job-applications.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ApplicationDetailsComponent } from \"../dialogs/application-details/application-details.component\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { JobLookupComponent } from \"src/app/erp-hr/hr-lookups/jobs-lookups/job-lookup/job-lookup.component\";\nimport { ManageJobInterviewsComponent } from \"../../job-interviews/manage-job-interviews/manage-job-interviews.component\";\nimport { ManageJobInterviewResultsComponent } from \"../../job-interviews/manage-job-interview-results/manage-job-interview-results.component\";\n\n@Component({\n  selector: \"app-all-job-applications\",\n  templateUrl: \"./all-job-applications.component.html\",\n  styleUrls: [\"./all-job-applications.component.sass\"],\n})\nexport class AllJobApplicationsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"name\",\n    \"jobRefNumber\",\n    \"applicationNumber\",\n    \"jobTitle\",\n    \"emailAddress\",\n    \"applicationType\",\n    \"status\",\n    \"action\",\n  ];\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n  Form: FormGroup;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private jobApplicationAPIService: JobApplicationAPIService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"ALL\"],\n      refNumber: [\"JD1\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //****************************************************************************************** */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"SHORTLISTED\" },\n    { name: \"INTERVIEWING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n\n  selectedStatus: string = \"ALL\";\n\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n  }\n\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n\n    let params = {\n      status: this.Form.value.status,\n      jobRefNumber: this.Form.value.refNumber,\n    };\n    this.jobApplicationAPIService\n      .readByStatusAndJobNumber(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Data displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error: \" + err.message);\n        },\n        complete: () => { },\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    console.log(\"this.action:; \", action);\n    console.log(\"this.record:; \", record);\n\n    if (action === \"View\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: action,\n        record: record,\n      };\n      const dialogRef = this.dialog.open(\n        ApplicationDetailsComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"result:::\", result);\n\n        this.getData();\n      });\n    } else if (action === \"Schedule\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: action,\n        record: record,\n      };\n      const dialogRef = this.dialog.open(\n        ManageJobInterviewsComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"result:::\", result);\n\n        this.getData();\n      });\n    }\n    else if (action === \"InterviewResults\") {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: action,\n        record: record,\n      };\n      const dialogRef = this.dialog.open(\n        ManageJobInterviewResultsComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"result:::\", result);\n\n        this.getData();\n      });\n    }\n\n    \n  }\n\n  // deleteRecord(id: number) {\n  //   Swal.fire({\n  //     title: \"Are you sure?\",\n  //     text: \"THIS RECORD WILL BE DELETED PERMANENTLY!!\",\n  //     icon: \"warning\",\n  //     showCancelButton: true,\n  //     confirmButtonColor: \"#3085d6\",\n  //     cancelButtonColor: \"#d33\",\n  //     confirmButtonText: \"Yes, delete it!\",\n  //   }).then((result) => {\n  //     if (result.isConfirmed) {\n  //       this.loading = true;\n  //       this.jobApplicationAPIService\n  //         .deleteJob(id)\n  //         .pipe(takeUntil(this.destroy$))\n  //         .subscribe({\n  //           next: (res) => {\n  //             if (res.statusCode == 200) {\n  //               this.getData();\n  //               this.loading = false;\n  //               this.notificationAPI.alertSuccess(\n  //                 \"RECORD DELETED SUCCESSFULLY\"\n  //               );\n  //             } else {\n  //               this.getData();\n  //               this.loading = false;\n  //               this.notificationAPI.alertWarning(res.message);\n  //             }\n  //           },\n  //           error: (err) => {\n  //             this.loading = false;\n  //             this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n  //           },\n  //           complete: () => {},\n  //         });\n  //     }\n  //   });\n  // }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    // this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n    //   privilege,\n    // ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.jobApplicationAPIService\n            .verify(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                  this.selection.clear();\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n\n  //********************************************************************************************** */\n  jobsLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleJob\",\n    };\n    const dialogRef = this.dialog.open(JobLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.Form.patchValue({\n          refNumber: res.data[0].jobRefNumber,\n        });\n      }\n    });\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Job Applications'\" [items]=\"['Job Applications']\"\n                [active_item]=\"'All Job Applications'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Job Applications</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n                                            <!-- <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add', '')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li> -->\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"SHORTLIST\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"processMultipleRows('SHORTLISTED')\" class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check_circle</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            \n                                            \n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            \n\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Ref Number</mat-label>\n                                                <input matInput formControlName=\"refNumber\" />\n                                                <mat-icon matSuffix (click)=\"jobsLookup()\">search</mat-icon>\n                                            </mat-form-field>\n                                        </form>\n                                    </div>\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n                                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                <mat-label>Status</mat-label>\n\n                                                <mat-select formControlName=\"status\">\n                                                    <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                        [value]=\"reqStatus.name\">{{ reqStatus.name }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                    Please select Status\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </form>\n                                    </div>\n                                    <div class=\"col-8\">\n                                        <div class=\"button-container mt-1\">\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                ALL\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'SHORTLISTED'\"\n                                                class=\"mat-button shortlisted\"\n                                                (click)=\"getSelectedStatus('SHORTLISTED')\">\n                                                <mat-icon>done</mat-icon>\n                                                SHORTLISTED\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'INTERVIEWING'\"\n                                                class=\"mat-button interviewing\"\n                                                (click)=\"getSelectedStatus('INTERVIEWING')\">\n                                                <mat-icon>event_note</mat-icon>\n                                                INTERVIEWING\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"refNumber\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-8\">\n                                        Ref Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-8\">\n                                        {{ row.refNumber }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"title\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                        Title\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                        {{ row.jobTitle }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- <ng-container matColumnDef=\"department\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    <mat-header-cell *matHeaderCellDef> Department </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"> {{row.department}} </mat-cell>\n                                </ng-container> -->\n\n                                <ng-container matColumnDef=\"name\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.firstName }} {{ row.lastName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"jobRefNumber\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Job Ref Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.jobRefNumber }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"applicationNumber\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Application Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.applicationNumber }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"jobTitle\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Job Title\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.jobTitle }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"emailAddress\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Email Address\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.emailAddress }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"applicationType\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Application Type\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.applicationType }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'SHORTLISTED'\"\n                                                class=\"badge badge-solid-orange btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n\n                                            <button *ngSwitchCase=\"'INTERVIEWING'\"\n                                                class=\"badge badge-solid-purple btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-calendar-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell *matHeaderCellDef\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <button matTooltip=\"APPLICANT DETAILS\" mat-icon-button color=\"primary\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"mngRecord('View', row)\">\n                                            <mat-icon>remove_red_eye</mat-icon>\n                                        </button>\n                                        <button matTooltip=\"SCHEDULE INTERVIEW\" mat-icon-button color=\"primary\"\n                                            (click)=\"$event.stopPropagation()\" (click)=\"mngRecord('Schedule', row)\">\n                                            <mat-icon>event_available</mat-icon>\n                                        </button>\n                                        <button matTooltip=\"INTERVIEW RESULTS\" mat-icon-button color=\"primary\"\n                                            (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('InterviewResults', row)\">\n                                            <mat-icon>assessment</mat-icon>\n                                        </button>\n\n                                        <!-- <button mat-icon-button color=\"warn\" (click)=\"deleteJobById(row.id)\">\n                                            <mat-icon>delete</mat-icon>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                    (click)=\"mngRecord('View', row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\">\n                                        No data matching the filter \"{{ input }}\"\n                                    </td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { AllJobApplicationsComponent } from \"../../all-job-applications/all-job-applications.component\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { DocumentManagementSystemService } from \"src/app/erp-hr/data/job-services/document-management-system.service\";\nimport { HttpParams } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-application-details\",\n  templateUrl: \"./application-details.component.html\",\n  styleUrls: [\"./application-details.component.sass\"],\n})\nexport class ApplicationDetailsComponent implements OnInit {\n  Data: any;\n\n  displayedColumns: string[] = [\"index\", \"filename\", \"filetype\", \"action\"];\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  pageFunction: any = \"Add\";\n  constructor(\n    public dialogRef: MatDialogRef<AllJobApplicationsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private dmsAPI: DocumentManagementSystemService\n  ) {}\n\n  ngOnInit(): void {\n    this.pageFunction = this.data.action;\n    this.Data = this.data.record;\n    this.getData();\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  isLoading: boolean = false;\n  getData(page?: number, size?: number) {\n    this.isLoading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    let params = new HttpParams().set(\n      \"referenceIdentifier\",\n      this.Data.emailAddress\n    );\n    console.log(\"this.params :\", params);\n    this.dmsAPI\n      .getDocByIdentifier(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          console.log(\"this.res :\", res);\n          if (res.statusCode === 302) {\n            this.data = res;\n            this.isLoading = false;\n            this.dataSource = new MatTableDataSource(this.data.entity);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            console.log(\"this.data :\", this.data);\n          } else {\n            this.snackbar.showNotification(\n              \"snackbar-danger\",\n              res.message\n            );\n            this.isLoading = false;\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          this.isLoading = false;\n        },\n        complete: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n  base64StringData: any;\n\n  getDocById(id: any) {\n    this.isLoading = true;\n    this.dmsAPI\n      .getApplicantDocsBase64ById(id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.base64StringData = res.entity;\n          console.log(\n            \"the fetched document in base 64  format  \",\n            this.base64StringData\n          );\n\n          this.downloadDocument(this.base64StringData);\n\n          this.isLoading = false;\n        },\n        error: (err) => {\n          this.isLoading = false;\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      });\n  }\n\n  downloadDocument(fileToDownload: any) {\n    let file = fileToDownload.file;\n    let fileName = fileToDownload.filename;\n    let fileType = fileToDownload.filetype;\n\n    const source = `${file}`;\n    const link = document.createElement(\"a\");\n    link.href = source;\n    link.download = `${fileName}.${fileType}`;\n    link.click();\n  }\n\n  submit(){\n    \n  }\n}\n","<div class=\"addContainer\">\n    <div *ngIf=\"Data\" class=\"contact-details\">\n        <div class=\"modalHeader\">\n            <div class=\"contact-details-name mb-1\">\n                <strong *ngIf=\"pageFunction !== 'ViewDocuments'\">Job Application Details</strong>\n                <strong *ngIf=\"pageFunction === 'ViewDocuments'\">Documents Details</strong>\n            </div>\n            <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <div mat-dialog-content>\n            <mat-card-content>\n                <ng-container *ngIf=\"pageFunction !== 'ViewDocuments'\">\n                    <div class=\"row mt-1\" style=\"width: 98%; margin-left: 20px\">\n                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-5 m-b-10\">First Name:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.firstName }}</div>\n                                <div class=\"col-5 m-b-10\">Last Name:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.lastName }}</div>\n                                <div class=\"col-5 m-b-10\">Email Address:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.emailAddress }}</div>\n                                <div class=\"col-5 m-b-10\">Phone Number:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.phoneNumber }}</div>\n                                <div class=\"col-5 m-b-10\">Job Title:</div>\n                                <div class=\"col-7 pro-left m-b-10\">{{ Data.jobTitle }}</div>\n                                <div class=\"col-5 m-b-10\">Application Type:</div>\n                                <div class=\"col-7 pro-left m-b-10\">\n                                    {{ Data.applicationType }}\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\n                            <div class=\"row\">\n                                <div class=\"col-5 m-b-10\">Is Rejected:</div>\n                                <div class=\"col-7 pro-left m-b-10\">\n                                    <button *ngIf=\"Data.isRejected\" class=\"badge badge-solid-red btn btn btn-sm\">\n                                        <i class=\"fas fa-times\"></i>&nbsp; Yes\n                                    </button>\n                                    <button *ngIf=\"!Data.isRejected\" class=\"badge badge-solid-green btn btn btn-sm\">\n                                        <i class=\"far fa-check-square\"></i>&nbsp; No\n                                    </button>\n                                </div>\n                                <div class=\"col-5 m-b-10\">Is Invited:</div>\n                                <div class=\"col-7 pro-left m-b-10\">\n                                    <button *ngIf=\"Data.isInvited\" class=\"badge badge-solid-green btn btn btn-sm\">\n                                        <i class=\"fas fa-check-circle\"></i>&nbsp; Yes\n                                    </button>\n                                    <button *ngIf=\"!Data.isInvited\" class=\"badge badge-solid-orange btn btn btn-sm\">\n                                        <i class=\"fas fa-hourglass-half\"></i>&nbsp; No\n                                    </button>\n                                </div>\n                                <div class=\"col-5 m-b-10\">Progress Status:</div>\n                                <div class=\"col-7 pro-left m-b-10\">\n                                    <button *ngIf=\"Data.applicationProgressStatus === 'Received'\"\n                                        class=\"badge badge-solid-blue btn btn btn-sm\">\n                                        <i class=\"fas fa-envelope\"></i>&nbsp; Received\n                                    </button>\n                                    <button *ngIf=\"Data.applicationProgressStatus === 'Shortlisted'\"\n                                        class=\"badge badge-solid-green btn btn btn-sm\">\n                                        <i class=\"fas fa-check-circle\"></i>&nbsp; Shortlisted\n                                    </button>\n                                    <button *ngIf=\"Data.applicationProgressStatus === 'Accepted'\"\n                                        class=\"badge badge-solid-purple btn btn btn-sm\">\n                                        <i class=\"fas fa-check-circle\"></i>&nbsp; Accepted\n                                    </button>\n                                    <button *ngIf=\"Data.applicationProgressStatus === 'Invited'\"\n                                        class=\"badge badge-solid-orange btn btn btn-sm\">\n                                        <i class=\"fas fa-envelope-open\"></i>&nbsp; Invited\n                                    </button>\n                                    <button *ngIf=\"Data.applicationProgressStatus === 'Rejected'\"\n                                        class=\"badge badge-solid-red btn btn btn-sm\">\n                                        <i class=\"fas fa-times-circle\"></i>&nbsp; Rejected\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <hr />\n                </ng-container>\n\n                <div class=\"table-responsive m-t-5\">\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"row\" style=\"\n                  background-color: rgba(231, 231, 231, 0.979);\n                  margin: 5px;\n                \">\n                                <div class=\"col-6 d-flex align-items-center\">\n                                    <h6 style=\"margin: 5px\">\n                                        <strong>Attached Documents</strong>\n                                    </h6>\n                                </div>\n                                <div class=\"col-6\">\n                                    <div id=\"plist\" class=\"people-list\">\n                                        <div class=\"form-line m-b-10 m-t-10 m-l-2 m-r-2\">\n                                            <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                #filter class=\"form-control\" placeholder=\"Search...\" />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <ng-container matColumnDef=\"index\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">Index\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">{{ i + 1 }}</mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"filename\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                                        Filename\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{\n                                        row.filename }}</mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"filetype\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-25\">\n                                        File Type\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-25\">{{\n                                        row.filetype }}</mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell *matHeaderCellDef\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <button mat-icon-button color=\"primary\" (click)=\"getDocById(row.id)\">\n                                            <mat-icon>cloud_download</mat-icon>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\" [style.cursor]=\"'pointer'\"\n                                    matRipple></mat-row>\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\">\n                                        No data matching the filter \"{{ input }}\"\n                                    </td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"isLoading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <!-- Loading spinner -->\n                            <div *ngIf=\"isLoading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n                            <mat-paginator #paginatorBill=\"matPaginator\" [pageSize]=\"2\"\n                                [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\" aria-label=\"Select page\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </mat-card-content>\n        </div>\n    </div>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subject, Subscription, takeUntil } from 'rxjs';\nimport { NotificationServiceService } from 'src/@core/Models/Notification/notification-service.service';\nimport { BranchService } from 'src/app/erp-hr/data/configuration-services/branch.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport Swal from 'sweetalert2';\nimport { ManageBranchesComponent } from '../../../configurations/branches/dialogs/manage-branches/manage-branches.component';\nimport { HttpParams } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TokenStorageService } from 'src/app/core/service/token-storage.service';\nimport { JobManagementService } from 'src/app/erp-hr/data/job-services/job-management.service';\nimport { DepartmentsLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/departments-lookup/departments-lookup.component';\nimport { JobRolesLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/job-roles-lookup/job-roles-lookup.component';\n\n@Component({\n  selector: 'app-manage-job-applications',\n  templateUrl: './manage-job-applications.component.html',\n  styleUrls: ['./manage-job-applications.component.sass']\n})\nexport class ManageJobApplicationsComponent implements OnInit {\n\n  showForm = false;\n  isLoading = true;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n  currentUserCode: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  requestCode: any;\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  applicationTypeArray: any[] = [\"EXTERNAL-JOB\", \"INTERNAL-JOB\", \"OPEN-JOB\"];\n  jobTermArray: any = [\n    \"Permanent\",\n    \"Contract\",\n    \"Intern\",\n    \"Attachment\",\n    \"Secondment\",\n  ];\n  jobLevelArray: any = [\n    \"Executive Position\",\n    \"Lead Position\",\n    \"Technical Engineer\",\n    \"Technical Assistant\",\n    \"Intermediate Position\",\n    \"Entry Level\",\n    \"Internship Level\",\n    \"Attachment Level\",\n  ];\n  jobShiftArray: any = [\"Day Shift\", \"Night Shift\"];\n  jobRolesColumns: string[] = [\"index\", \"description\", \"actions\"];\n\n  constructor(\n    private fb: FormBuilder,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private jobManagementService: JobManagementService,\n    private dialog: MatDialog\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n    this.currentUserCode = this.tokenStorageService.getUser().empPfNo;\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.getPage();\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.requestCode) {\n          this.requestCode = params.requestCode;\n          this.getDataById();\n          this.pageFunction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"requestCode\", this.requestCode);\n    this.jobManagementService\n      .readById(this.requestCode)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.entity) {\n            //in thsi res, I cant access anything beyond res.entity. Why???\n            this.formData = res.entity;\n            console.log(\"this.formData: \", this.formData);\n            if (this.pageFunction === \"View\") {\n              this.activateViewMode();\n            }\n\n            if (res && res.entity && res.entity.jobQualifications) {\n              this.dataSource.data = res.entity.jobQualifications;\n              this.refresh();\n            }\n\n            this.showForm = true;\n            this.getPage();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      });\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.generateSubForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateForm(this.formData);\n      this.generateSubForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateForm(this.formData);\n      this.generateSubForm();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n  }\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n  generateForm(formData?: any): void {\n    console.log(\"generateForm formData :: \", formData);\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      jobTitle: [formData?.jobTitle ?? \"\", Validators.required],\n      deadlineDate: [formData?.deadlineDate ?? new Date(), Validators.required],\n      location: [formData?.location ?? \"\", Validators.required],\n      jobTerm: [formData?.jobTerm ?? \"\", Validators.required],\n      jobLevel: [formData?.jobLevel ?? \"\", Validators.required],\n      jobShift: [formData?.jobShift ?? \"\", Validators.required],\n      vacantPositions: [formData?.vacantPositions ?? \"\", Validators.required],\n      departmentId: [formData?.departmentId ?? \"\", Validators.required],\n      jobGroupName: [formData?.jobGroupName ?? \"\", Validators.required],\n      minSalary: [formData?.minSalary ?? \"\", Validators.required],\n      //midSalary: [formData?.midSalary ?? \"\", Validators.required],\n      maxSalary: [formData?.maxSalary ?? \"\", Validators.required],\n\n      organizationRoleId: [\n        formData?.organizationRoleId ?? \"\",\n        Validators.required,\n      ],\n\n      applicationType: [formData?.applicationType ?? \"\", Validators.required],\n      numberOfInterviews: [\n        formData?.numberOfInterviews ?? \"\",\n        Validators.required,\n      ],\n      whyJobIsNeeded: [formData?.whyJobIsNeeded ?? \"\", Validators.required],\n      applicationProcess: [\n        formData?.applicationProcess ?? \"\",\n        Validators.required,\n      ],\n      jobDescription: [formData?.jobDescription ?? \"\", Validators.required],\n\n      //jobRoles: [formData?.jobRoles ?? []],\n      //jobQualifications: [formData?.jobQualifications ?? []],\n\n      //jobDuration\n      //departmentId\n      jdAttachment: [formData?.jdAttachment ?? \"\", Validators.required],\n    });\n  }\n\n  //*************************************************************************************************************************************** */\n  //Lookups\n  selectedItem: any;\n  jobRoleLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(JobRolesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          //midSalary: res.data[0].midSalary,\n          minSalary: res.data[0].minSalary,\n          maxSalary: res.data[0].maxSalary,\n          organizationRoleId: res.data[0].id,\n          jobGroupName: res.data[0].jobGroupName,\n          jobLevel: res.data[0].roleName,\n        });\n      }\n    });\n  }\n  departmentLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleBDepartment\",\n      selected: \"\",\n    };\n    const dialogRef = this.dialog.open(\n      DepartmentsLookupComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          departmentId: res.data[0].id,\n        });\n      }\n    });\n  }\n  // **************************************************************************************************\n  //JobRequirements\n  displayedColumns: string[] = [\"id\", \"description\", \"action\"];\n  tranForm: FormGroup;\n  showParTranForm = false;\n  parTranAction: string = \"\";\n  selectedParTranIndex: number;\n  debitTotal: number = 0;\n  creditTotal: number = 0;\n  balance: number = 0;\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  generateSubForm(formData?): void {\n    this.tranForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      description: [formData?.narration ?? \"\", [Validators.required]],\n    });\n  }\n  resetFormAndHide() {\n    this.mngForm.patchValue({\n      jobQualifications: this.dataSource.data,\n    });\n    this.tranForm.reset();\n    this.showParTranForm = false;\n  }\n\n  addParTran() {\n    this.parTranAction = \"Add\";\n    this.showParTranForm = true;\n  }\n\n  refresh() {\n    this.dataSource.data = [...this.dataSource.data];\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  editParTran(data: any, index: number) {\n    this.parTranAction = \"Update\";\n    this.selectedParTranIndex = index;\n    this.generateSubForm(data);\n    this.showParTranForm = true;\n  }\n\n  pushToDataSource() {\n    if (this.parTranAction === \"Add\") {\n      this.dataSource.data.push(this.tranForm.value);\n    } else if (this.parTranAction === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.tranForm.value.id) {\n        indexToUpdate = this.dataSource.data.findIndex(\n          (item) => item.id === this.tranForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource.data[indexToUpdate] = this.tranForm.value;\n      }\n    }\n\n    this.resetFormAndHide();\n    this.refresh();\n  }\n\n  cancelParTran() {\n    this.resetFormAndHide();\n  }\n\n  deleteParTran(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.refresh();\n  }\n\n  // **************************************************************************************************\n  //Showing the submit button\n  posting: boolean = false;\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction == \"Add\") {\n      this.jobManagementService\n        .create(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.cancel();\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.posting = false;\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Update\") {\n      this.jobManagementService\n        .update(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.cancel();\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.posting = false;\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-hr/jobs/all-jobs\"]);\n  }\n\n  // *********************************************************************************************\n\n  // **********************************************************************************************\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Manage Job Application'\" [items]=\"['Job Application']\" [active_item]=\"'Manage Job Application'\">\n            </app-breadcrumb>\n        </div>\n\n        <div class=\"row clearfix\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"body\" *ngIf=\"showForm\">\n                        <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                <div class=\"bg-color\">\n                                    <div class=\"chat\">\n                                        <div class=\"chat-header clearfix\">\n                                            <div class=\"row\">\n                                                <!-- HOD Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">HOD Approval</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-hod\">\n                                                                        {{ formData.hodVerifierStatus }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-hod-approved\">\n                                                                        {{ formData.hodVerifierBy }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.hodVerifierRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Finance Manager Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Finance Approval</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-finance\">\n                                                                        {{ formData.financeManagerVerifiedStatus }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-finance-approved\">\n                                                                        {{ formData.financeManagerVerifiedBy }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong> Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.financeManagerVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Head of Finance and Strategy Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">\n                                                                    Head Finance\n                                                                </div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement\">\n                                                                        {{\n                                                                        formData.headFinanceAndStrategyVerifiedStatus\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement-approved\">\n                                                                        {{\n                                                                        formData.headFinanceAndStrategyVerifiedBy\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.headFinanceAndStrategyVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Senior Finance Manager Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">\n                                                                    Senior Manager\n                                                                </div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement\">\n                                                                        {{\n                                                                        formData.seniorFinanceManagerVerifiedStatus\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement-approved\">\n                                                                        {{\n                                                                        formData.seniorFinanceManagerVerifiedBy\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.seniorFinanceManagerVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Managing Director and CEO Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">\n                                                                    Managing Director\n                                                                </div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement\">\n                                                                        {{\n                                                                        formData.managingDirectorAndCEOVerifiedStatus\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement-approved\">\n                                                                        {{\n                                                                        formData.managingDirectorAndCEOVerifiedBy\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.managingDirectorAndCEOVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Post Job Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">\n                                                                    Post Job\n                                                                </div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement\">\n                                                                        {{ formData.postJobVerifiedStatus }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Verified By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement-approved\">\n                                                                        {{ formData.postJobVerifiedBy }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.postJobVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"mx-2\">\n\n                            <mat-horizontal-stepper [linear]=\"true\" #stepper>\n                                <mat-step>\n                                    <ng-template matStepLabel>Basic Information</ng-template>\n                                    <form [formGroup]=\"mngForm\">\n\n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Title</mat-label>\n                                                    <input matInput formControlName=\"jobTitle\" />\n                                                    <mat-icon matSuffix>compare_arrows</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobTitle').invalid && mngForm.get('jobTitle').touched\">\n                                                        Please enter a job title\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Deadline Date</mat-label>\n                                                    <input matInput [matDatepicker]=\"expiryDatePicker\" formControlName=\"deadlineDate\" />\n                                                    <mat-datepicker-toggle matSuffix [for]=\"expiryDatePicker\"></mat-datepicker-toggle>\n                                                    <mat-datepicker #expiryDatePicker></mat-datepicker>\n                                                    <mat-error *ngIf=\"mngForm.get('deadlineDate').invalid && mngForm.get('deadlineDate').touched\">\n                                                        Please select an deadline date\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Location</mat-label>\n                                                    <input matInput formControlName=\"location\" />\n                                                    <mat-icon matSuffix>location_on</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('location').invalid && mngForm.get('location').touched\">\n                                                        Please enter a location\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Term</mat-label>\n                                                    <mat-select formControlName=\"jobTerm\">\n                                                        <mat-option *ngFor=\"let type of jobTermArray\" [value]=\"type\">\n                                                            {{ type }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    \n                                                    <mat-icon matSuffix>assignment</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobTerm').invalid && mngForm.get('jobTerm').touched\">\n                                                        Please enter a job term\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                           \n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Shift</mat-label>\n                                                   \n                                                    <mat-select formControlName=\"jobShift\">\n                                                        <mat-option *ngFor=\"let type of jobShiftArray\" [value]=\"type\">\n                                                            {{ type }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-icon matSuffix>schedule</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobShift').invalid && mngForm.get('jobShift').touched\">\n                                                        Please enter a job shift\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Department</mat-label>\n                                                    <input matInput formControlName=\"departmentId\" />\n                                                    <mat-icon matSuffix (click)=\"departmentLookup()\">search</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('departmentId').invalid && mngForm.get('departmentId').touched\">\n                                                        Please enter a department\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Vacant Positions</mat-label>\n                                                    <input matInput formControlName=\"vacantPositions\" />\n                                                    <mat-icon matSuffix>people</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('vacantPositions').invalid && mngForm.get('vacantPositions').touched\">\n                                                        Please enter vacant positions\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Level</mat-label>\n                                                    <input matInput formControlName=\"jobLevel\" />\n                                                    <mat-icon matSuffix (click)=\"jobRoleLookup()\">search</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobLevel').invalid && mngForm.get('jobLevel').touched\">\n                                                        Please enter a job level\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Group Name</mat-label>\n                                                    <input matInput formControlName=\"jobGroupName\" />\n                                                    <mat-icon matSuffix>group</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobGroupName').invalid && mngForm.get('jobGroupName').touched\">\n                                                        Please enter a job group name\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Min Salary</mat-label>\n                                                    <input matInput formControlName=\"minSalary\" />\n                                                    <mat-icon matSuffix>attach_money</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('minSalary').invalid && mngForm.get('minSalary').touched\">\n                                                        Please enter a minimum salary\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Mid Salary</mat-label>\n                                                    <input matInput formControlName=\"midSalary\" />\n                                                    <mat-icon matSuffix>attach_money</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('midSalary').invalid && mngForm.get('midSalary').touched\">\n                                                        Please enter a mid salary\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div> -->\n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Max Salary</mat-label>\n                                                    <input matInput formControlName=\"maxSalary\" />\n                                                    <mat-icon matSuffix>attach_money</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('maxSalary').invalid && mngForm.get('maxSalary').touched\">\n                                                        Please enter a maximum salary\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n\n\n                                        <div>\n                                            <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\n                                        </div>\n                                    </form>\n                                </mat-step>\n\n                                <mat-step>\n                                    <ng-template matStepLabel>Extra Details</ng-template>\n                                    <form [formGroup]=\"mngForm\">\n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Application Type</mat-label>\n                                                    <mat-select formControlName=\"applicationType\">\n                                                        <mat-option *ngFor=\"let type of applicationTypeArray\" [value]=\"type\">\n                                                            {{ type }}\n                                                        </mat-option>\n                                                    </mat-select>\n                                                    <mat-error *ngIf=\"mngForm.get('applicationType').invalid && mngForm.get('applicationType').touched\">\n                                                        Please select an application type\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            \n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Number of Interviews</mat-label>\n                                                    <input matInput formControlName=\"numberOfInterviews\" />\n                                                    <mat-error *ngIf=\"mngForm.get('numberOfInterviews').invalid && mngForm.get('numberOfInterviews').touched\">\n                                                        Please enter number of interviews\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            \n                                        </div>\n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Why Job Is Needed</mat-label>\n                                                    <textarea matInput formControlName=\"whyJobIsNeeded\" rows=\"5\"></textarea>\n                                                    <mat-error *ngIf=\"mngForm.get('whyJobIsNeeded').invalid && mngForm.get('whyJobIsNeeded').touched\">\n                                                        Please enter why job is needed\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Application Process</mat-label>\n                                                    <textarea matInput formControlName=\"applicationProcess\" rows=\"5\"></textarea>\n                                                    <mat-error *ngIf=\"mngForm.get('applicationProcess').invalid && mngForm.get('applicationProcess').touched\">\n                                                        Please enter application process\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Description</mat-label>\n                                                    <textarea matInput formControlName=\"jobDescription\" rows=\"5\"></textarea>\n                                                    <mat-error *ngIf=\"mngForm.get('jobDescription').invalid && mngForm.get('jobDescription').touched\">\n                                                        Please enter job description\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n\n                                        <div>\n                                            <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                                            <button class=\"mx-2\" mat-raised-button color=\"primary\"\n                                                matStepperNext>Next</button>\n                                        </div>\n                                    </form>\n                                </mat-step>\n\n                                <mat-step>\n                                    <ng-template matStepLabel>Requirements Information</ng-template>\n                                    \n                                    <ng-container >\n                                       \n                    \n                                        <h6 class=\"mx-0\">Qualification Details</h6>\n                                        <form class=\"register-form mx-0\" [formGroup]=\"tranForm\">\n                                            <ng-container *ngIf=\"showParTranForm\">\n                                                <div class=\"row\" >\n                                            \n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                            <mat-label>Job Qualification</mat-label>\n                                                            <textarea matInput formControlName=\"description\" required ></textarea>\n                                                            <mat-icon matSuffix>record_voice_over</mat-icon>\n                                                            <mat-error *ngIf=\"tranForm.get('description').hasError('required')\">\n                                                                Description is required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n    \n                                                    \n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                                        <div class=\"example-button-row\" align=\"start\">\n                                                            <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                                                [class.auth-spinner]=\"posting\" [disabled]=\"!tranForm.valid || posting\"\n                                                                [hidden]=\"viewMode\" (click)=\"pushToDataSource()\">\n                                                                {{ parTranAction }} Qualification\n                                                            </button>\n                        \n                                                            <button mat-raised-button color=\"warn\" (click)=\"cancelParTran()\" tabindex=\"-1\">\n                                                                Cancel\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </ng-container>\n                                           \n                                            <mat-tab-group>\n                                                <mat-tab>\n                                                    <ng-template mat-tab-label>\n                                                        <mat-icon>receipt</mat-icon> All Job Qualifications\n                                                    </ng-template>\n                            \n                                                    <div class=\"row m-1\">\n                                                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                                            <div class=\"table-responsiv\">\n                                                                <div class=\"materialTableHeader\">\n                                                                    <div class=\"row\">\n                                                                        <div class=\"col-8\">\n                                                                            <ul class=\"header-buttons-left ms-0\">\n                                                                                <li class=\"dropdown\">\n                                                                                    <h2>Qualifications</h2>\n                                                                                </li>\n                                                                                <li class=\"dropdown m-l-20\">\n                                                                                    <label for=\"search-input\"><i\n                                                                                            class=\"material-icons search-icon\">search</i></label>\n                                                                                    <input placeholder=\"Filter...\" type=\"text\"\n                                                                                        (keyup)=\"applyFilter($event)\" #filter\n                                                                                        class=\"browser-default search-field\"\n                                                                                        aria-label=\"Search box\" />\n                                                                                </li>\n                                                                                <li>\n                                                                                    <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                                                        <button mat-mini-fab color=\"primary\" (click)=\"addParTran()\">\n                                                                                            <mat-icon class=\"col-white\">add</mat-icon>\n                                                                                        </button>\n                                                                                    </div>\n                                                                                </li>\n                                                                                <li>\n                                                                                    <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                                                        <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                                                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                                                        </button>\n                                                                                    </div>\n                                                                                </li>\n                                                                               \n                                                                                \n                                                                            </ul>\n                                                                        </div>\n                            \n                                                                        <div class=\"col-4\">\n                                                                            <ul class=\"header-buttons\">\n                                                                                <li>\n                                                                                    <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                                                        <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                                              exporter.exportTable('xlsx', {\n                                                                fileName: 'assets-list',\n                                                                sheet: 'sheet1'\n                                                              })\n                                                            \" />\n                                                                                    </div>\n                                                                                </li>\n                                                                                <li>\n                                                                                    <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                                                        <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                                                            (click)=\"exporter.exportTable('csv')\" />\n                                                                                    </div>\n                                                                                </li>\n                                                                            </ul>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                            \n                                                                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                                                                    class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                                                    <!-- ID Column -->\n                                                                    <ng-container matColumnDef=\"id\">\n                                                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-10\">ID</mat-header-cell>\n                                                                        <mat-cell *matCellDef=\"let row\"\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                                            {{ row.id ? row.id : \"#\" }}\n                                                                        </mat-cell>\n                                                                    </ng-container>\n                            \n                                                                    <!-- Account No Column -->\n                                                                    <ng-container matColumnDef=\"description\">\n                                                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-50\">Description\n                                                                        </mat-header-cell>\n                                                                        <mat-cell *matCellDef=\"let row\"\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-50\">{{ row.description\n                                                                            }}</mat-cell>\n                                                                    </ng-container>\n                            \n                                                                   \n                            \n                                                                    <!-- Action Buttons -->\n                                                                    <ng-container matColumnDef=\"action\">\n                                                                        <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                                                            *matHeaderCellDef>\n                                                                            Action\n                                                                        </mat-header-cell>\n                                                                        <mat-cell *matCellDef=\"let row; let i = index\"\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                                                            <!-- Edit Button -->\n                                                                            <button mat-icon-button color=\"accent\"\n                                                                                (click)=\"$event.stopPropagation()\" (click)=\"editParTran(row, i)\"\n                                                                                class=\"tbl-action-btn\">\n                                                                                <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                                                                </app-feather-icons>\n                                                                            </button>\n                            \n                                                                            <!-- Delete Button -->\n                                                                            <button mat-icon-button color=\"accent\"\n                                                                                (click)=\"$event.stopPropagation()\" (click)=\"deleteParTran(i)\"\n                                                                                class=\"tbl-action-btn\">\n                                                                                <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                                                                </app-feather-icons>\n                                                                            </button>\n                                                                        </mat-cell>\n                                                                    </ng-container>\n                            \n                                                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                                                    <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"onSelect(row)\"\n                                                                        [style.cursor]=\"'pointer'\" matRipple>\n                                                                    </mat-row>\n                                                                    <mat-cell *matNoDataRow colspan=\"8\">\n                                                                        No data matching the filter \"{{ input.value }}\"</mat-cell>\n                                                                </mat-table>\n                                                                <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                                                    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                                                    </mat-progress-spinner>\n                                                                </div>\n                                                                <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                                                    aria-label=\"Select page of users\"></mat-paginator>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </mat-tab>\n                            \n                                               \n                                            </mat-tab-group>\n                                        </form>\n                                    </ng-container>\n                                        <div>\n                                            <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                                            <button class=\"mx-2\" mat-raised-button color=\"warn\"\n                                                (click)=\"stepper.reset()\">Reset</button>\n\n                                                <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                    [class.auth-spinner]=\"posting\"\n                                    [disabled]=\"!mngForm.valid || posting\" [hidden]=\"viewMode\"\n                                    (click)=\"postSalary()\">\n                                    Job\n                                </button>\n\n                                            <button class=\"mx-0\" mat-raised-button color=\"primary\"\n                                                (click)=\"submitForm()\">Submit</button>\n                                        </div>\n                                   \n                                </mat-step>\n                            </mat-horizontal-stepper>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, Subscription, takeUntil } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { BranchService } from \"src/app/erp-hr/data/configuration-services/branch.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ManageBranchesComponent } from \"../../../configurations/branches/dialogs/manage-branches/manage-branches.component\";\nimport { Router } from \"@angular/router\";\nimport { JobManagementService } from \"src/app/erp-hr/data/job-services/job-management.service\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-all-jobs\",\n  templateUrl: \"./all-jobs.component.html\",\n  styleUrls: [\"./all-jobs.component.sass\"],\n})\nexport class AllJobsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"jobRefNumber\",\n    \"title\",\n    \"vacantPositions\",\n    \"jobLevel\",\n    \"jobTerm\",\n    \"status\",\n    \"deadlineDate\",\n    \"action\",\n  ];\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n\n  Form: FormGroup;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private jobManagementService: JobManagementService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.Form = this.fb.group({\n      status: [\"ALL\"],\n      jobType: [\"ALL\"],\n    });\n    this.Form.valueChanges.subscribe(() => {\n      this.getData();\n    });\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  //****************************************************************************************** */\n  reqStatuses: any[] = [\n    { name: \"ALL\" },\n    { name: \"PENDING\" },\n    { name: \"APPROVED\" },\n    { name: \"RETURNED\" },\n    { name: \"REJECTED\" },\n  ];\n  reqJobTypes: any[] = [\n    { name: \"ALL\" },\n    { name: \"EXTERNAL-JOB\" },\n    { name: \"INTERNAL-JOB\" },\n    { name: \"OPEN-JOB\" },\n  ];\n  selectedStatus: string = \"ALL\";\n  selectedJobType: string = \"ALL\";\n\n  getSelectSelectedStatus() {\n    this.getData();\n  }\n  getSelectedStatus(status: any) {\n    this.Form.patchValue({\n      status: status,\n    });\n  }\n  getSelectedType(type: any) {\n    this.Form.patchValue({\n      jobType: type,\n    });\n  }\n  getData() {\n    this.loading = true;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.selectedStatus = this.Form.value.status;\n    this.selectedJobType = this.Form.value.jobType;\n\n    let params = {\n      status: this.Form.value.status,\n      applicationType: this.Form.value.jobType,\n    };\n\n    this.jobManagementService\n      .readByStatusAndApplicationType(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.statusCode === 302) {\n            this.data = res.entity;\n            console.log(\"Data displayed on table\", this.data);\n\n            this.loading = false;\n            this.dataSource = new MatTableDataSource(this.data);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n          } else {\n            this.loading = false;\n          }\n        },\n        error: (err) => {\n          this.loading = false;\n          this.notificationAPI.alertWarning(\"Server Error:  \" + err.message);\n        },\n        complete: () => {},\n      });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  mngRecord(action: any, record?: any) {\n    let route = \"/erp-hr/jobs/manage-jobs\";\n    this.router.navigate([route], {\n      queryParams: {\n        requestCode: record.id,\n        action: action,\n      },\n    });\n  }\n  deleteRecord(id: number) {\n    let params = { id: id };\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"THIS RECORD WILL BE DELETED PERMANENTLY!!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.loading = true;\n        this.jobManagementService\n          .delete(params)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe({\n            next: (res) => {\n              if (res.statusCode == 200) {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertSuccess(\n                  \"RECORD DELETED SUCCESSFULLY\"\n                );\n              } else {\n                this.getData();\n                this.loading = false;\n                this.notificationAPI.alertWarning(res.message);\n              }\n            },\n            error: (err) => {\n              this.loading = false;\n              this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n            },\n            complete: () => {},\n          });\n      }\n    });\n  }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${\n      row.position + 1\n    }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    // this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n    //   privilege,\n    // ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          this.jobManagementService\n            .verify(processedRows)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n              next: (res) => {\n                console.log(\"res: \", res);\n                if (res.statusCode == 201 || 200 || 302) {\n                  this.snackbar.showNotification(\n                    \"snackbar-success\",\n                    res.message\n                  );\n\n                  this.selection = new SelectionModel<any>(true, []);\n                  this.selection.clear();\n                } else {\n                  this.snackbar.showNotification(\n                    \"snackbar-danger\",\n                    res.message\n                  );\n                }\n              },\n              error: (err) => {\n                this.snackbar.showNotification(\"snackbar-danger\", err.message);\n              },\n              complete: () => {\n                this.getData();\n              },\n            }),\n            Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Jobs'\" [items]=\"['Jobs']\" [active_item]=\"'All Jobs'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Jobs</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add', '')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"materialTableHeader mt-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Status</mat-label>\n\n                                                <mat-select formControlName=\"status\">\n                                                    <mat-option *ngFor=\"let reqStatus of reqStatuses\"\n                                                        [value]=\"reqStatus.name\">{{ reqStatus.name\n                                                        }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('status').hasError('required')\">\n                                                    Please select Status\n                                                </mat-error>\n                                            </mat-form-field>\n\n                                        </form>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <div class=\"button-container mt-1\">\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'ALL'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedStatus('ALL')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                ALL\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'PENDING'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedStatus('PENDING')\">\n                                                <mat-icon>pending</mat-icon>\n                                                PENDING\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'APPROVED'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedStatus('APPROVED')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                APPROVED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'RETURNED'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedStatus('RETURNED')\">\n                                                <mat-icon>reply</mat-icon>\n                                                RETURNED\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedStatus === 'REJECTED'\"\n                                                class=\"mat-button rejected\" (click)=\"getSelectedStatus('REJECTED')\">\n                                                <mat-icon>cancel</mat-icon>\n                                                REJECTED\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-2\">\n                                        <form [formGroup]=\"Form\">\n\n                                            <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n                                                <mat-label>Type</mat-label>\n\n                                                <mat-select formControlName=\"jobType\">\n                                                    <mat-option *ngFor=\"let reqJobType of reqJobTypes\"\n                                                        [value]=\"reqJobType.name\">{{ reqJobType.name\n                                                        }}\n                                                    </mat-option>\n                                                </mat-select>\n\n                                                <mat-error *ngIf=\"Form.get('jobType').hasError('required')\">\n                                                    Please select job type\n                                                </mat-error>\n                                            </mat-form-field>\n\n                                        </form>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <div class=\"button-container mt-1\">\n                                            <button mat-raised-button [class.active]=\"selectedJobType === 'ALL'\"\n                                                class=\"mat-button verified\" (click)=\"getSelectedType('ALL')\">\n                                                <mat-icon>check_circle</mat-icon>\n                                                ALL\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedJobType === 'EXTERNAL-JOB'\"\n                                                class=\"mat-button pending\" (click)=\"getSelectedType('EXTERNAL-JOB')\">\n                                                <mat-icon>pending</mat-icon>\n                                                EXTERNAL-JOB\n                                            </button>\n\n                                            <button mat-raised-button [class.active]=\"selectedJobType === 'INTERNAL-JOB'\"\n                                                class=\"mat-button approved\" (click)=\"getSelectedType('INTERNAL-JOB')\">\n                                                <mat-icon>thumb_up</mat-icon>\n                                                INTERNAL-JOB\n                                            </button>\n                                            <button mat-raised-button [class.active]=\"selectedJobType === 'OPEN-JOB'\"\n                                                class=\"mat-button returned\" (click)=\"getSelectedType('OPEN-JOB')\">\n                                                <mat-icon>reply</mat-icon>\n                                                OPEN-JOB\n                                            </button>\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.id }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"jobRefNumber\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-8\">\n                                        Job Ref Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-8\">\n                                        {{ row.jobRefNumber }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"title\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                        Title\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-30\">\n                                        {{ row.jobTitle }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <!-- <ng-container matColumnDef=\"department\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                    <mat-header-cell *matHeaderCellDef> Department </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\"> {{row.department}} </mat-cell>\n                                </ng-container> -->\n\n                                <ng-container matColumnDef=\"vacantPositions\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Vacant Pos\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.vacantPositions }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"jobLevel\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Level\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.jobLevel }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"jobTerm\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Term\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.jobTerm }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"status\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\"\n                                        (click)=\"$event.stopPropagation()\">\n                                        <ng-container [ngSwitch]=\"row.status\">\n                                            <button *ngSwitchCase=\"'APPROVED'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'REJECTED'\"\n                                                class=\"badge badge-solid-red btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-times-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'RETURNED'\"\n                                                class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-undo-alt\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchCase=\"'PENDING'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-exclamation-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-question-circle\"></i>&nbsp;\n                                                {{ row.status }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"deadlineDate\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Deadline Date\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.deadlineDate | date }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"hodAction\">\n                                    <mat-header-cell *matHeaderCellDef\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">HOD Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <button mat-icon-button color=\"primary\" (click)=\"onView(row.refNumber)\">\n                                            <mat-icon matTooltip=\"SET UP INTERVIEW CYCLE\">schedule</mat-icon>\n                                        </button>\n                                        \n                                        <button mat-icon-button color=\"primary\"\n                                            (click)=\"onInterviewCycle(row.refNumber)\">\n                                            <mat-icon matTooltip=\"INTERVIEW CYCLE\">event</mat-icon>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell *matHeaderCellDef\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <button mat-icon-button color=\"primary\" (click)=\"mngRecord('View', row)\">\n                                            <mat-icon>remove_red_eye</mat-icon>\n                                        </button>\n                                        <button mat-icon-button color=\"accent\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('Update', row)\" class=\"tbl-action-btn\">\n                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                            </app-feather-icons>\n                                        </button>\n                                        <button mat-icon-button color=\"warn\" (click)=\"deleteRecord(row.id)\">\n                                            <mat-icon>delete</mat-icon>\n                                        </button>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"  \n                                    [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\">\n                                        No data matching the filter \"{{ input }}\"\n                                    </td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription, BehaviorSubject } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { BranchService } from \"src/app/erp-hr/data/configuration-services/branch.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ManageBranchesComponent } from \"../../../configurations/branches/dialogs/manage-branches/manage-branches.component\";\nimport { HttpParams } from \"@angular/common/http\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n \n} from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { TokenStorageService } from \"src/app/core/service/token-storage.service\";\n\nimport { JobManagementService } from \"src/app/erp-hr/data/job-services/job-management.service\";\nimport { DepartmentsLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/departments-lookup/departments-lookup.component\";\nimport { JobRolesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/job-roles-lookup/job-roles-lookup.component\";\n\n@Component({\n  selector: \"app-manage-jobs\",\n  templateUrl: \"./manage-jobs.component.html\",\n  styleUrls: [\"./manage-jobs.component.sass\"],\n})\nexport class ManageJobsComponent implements OnInit {\n  showForm = false;\n  isLoading = true;\n  pageFunction = \"Add\";\n  mngForm: FormGroup;\n  currentUser: any;\n  currentUserCode: any;\n  formData: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n  hideSubmit = false;\n  hideApprovals: boolean = true;\n  approvalVisible: boolean = false;\n  disableActions = false;\n  requestCode: any;\n\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  applicationTypeArray: any[] = [\"EXTERNAL-JOB\", \"INTERNAL-JOB\", \"OPEN-JOB\"];\n  jobTermArray: any = [\n    \"Permanent\",\n    \"Contract\",\n    \"Intern\",\n    \"Attachment\",\n    \"Secondment\",\n  ];\n  jobLevelArray: any = [\n    \"Executive Position\",\n    \"Lead Position\",\n    \"Technical Engineer\",\n    \"Technical Assistant\",\n    \"Intermediate Position\",\n    \"Entry Level\",\n    \"Internship Level\",\n    \"Attachment Level\",\n  ];\n  jobShiftArray: any = [\"Day Shift\", \"Night Shift\"];\n  jobRolesColumns: string[] = [\"index\", \"description\", \"actions\"];\n\n  constructor(\n    private fb: FormBuilder,\n    private tokenStorageService: TokenStorageService,\n    private snackbar: SnackbarService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private jobManagementService: JobManagementService,\n    private dialog: MatDialog\n  ) {\n    this.currentUser = this.tokenStorageService.getUser().username;\n    this.currentUserCode = this.tokenStorageService.getUser().empPfNo;\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n  ngOnInit(): void {\n    this.getPage();\n\n    if (\n      this.route.queryParams &&\n      typeof this.route.queryParams.subscribe === \"function\"\n    ) {\n      this.route.queryParams.subscribe((params) => {\n        console.log(\"params: \", params);\n        if (params.requestCode) {\n          this.requestCode = params.requestCode;\n          this.getDataById();\n          this.pageFunction = params.action;\n        }\n      });\n      this.showForm = true;\n    } else {\n      this.showForm = true;\n    }\n  }\n\n  getDataById() {\n    const params = new HttpParams().set(\"id\", this.requestCode);\n    this.jobManagementService\n      .readById(params)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          if (res.entity) {\n            //in thsi res, I cant access anything beyond res.entity. Why???\n            this.formData = res.entity;\n            console.log(\"this.formData: \", this.formData);\n            if (this.pageFunction === \"View\") {\n              this.activateViewMode();\n            }\n\n            if (res && res.entity && res.entity.jobqualifications) {\n              this.dataSource.data = res.entity.jobqualifications;\n              this.refresh();\n            }\n\n            this.showForm = true;\n            this.getPage();\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {},\n      });\n  }\n\n  getPage(): void {\n    if (this.pageFunction === \"Add\") {\n      this.generateForm();\n      this.generateSubForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"Update\") {\n      this.generateForm(this.formData);\n      this.generateSubForm();\n      this.hideApprovals = true;\n    } else if (this.pageFunction === \"View\") {\n      this.generateForm(this.formData);\n      this.generateSubForm();\n      this.hideSubmit = true;\n      this.hideApprovals = true;\n    }\n  }\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n  generateForm(formData?: any): void {\n    console.log(\"generateForm formData :: \", formData);\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      jobTitle: [formData?.jobTitle ?? \"\", Validators.required],\n      deadlineDate: [formData?.deadlineDate ?? new Date(), Validators.required],\n      location: [formData?.location ?? \"\", Validators.required],\n      jobTerm: [formData?.jobTerm ?? \"\", Validators.required],\n      jobLevel: [formData?.jobLevel ?? \"\", Validators.required],\n      jobShift: [formData?.jobShift ?? \"\", Validators.required],\n      vacantPositions: [formData?.vacantPositions ?? \"\", Validators.required],\n      departmentId: [formData?.departmentId ?? \"\", Validators.required],\n      jobGroupName: [formData?.jobGroupName ?? \"\", Validators.required],\n      minSalary: [formData?.minSalary ?? \"\", Validators.required],\n      //midSalary: [formData?.midSalary ?? \"\", Validators.required],\n      maxSalary: [formData?.maxSalary ?? \"\", Validators.required],\n\n      organizationRoleId: [\n        formData?.organizationRoleId ?? \"\",\n        Validators.required,\n      ],\n\n      applicationType: [formData?.applicationType ?? \"\", Validators.required],\n      numberOfInterviews: [\n        formData?.numberOfInterviews ?? \"\",\n        Validators.required,\n      ],\n      whyJobIsNeeded: [formData?.whyJobIsNeeded ?? \"\", Validators.required],\n      applicationProcess: [\n        formData?.applicationProcess ?? \"\",\n        Validators.required,\n      ],\n      jobDescription: [formData?.jobDescription ?? \"\", Validators.required],\n\n      //jobRoles: [formData?.jobRoles ?? []],\n      jobqualifications: [formData?.jobqualifications ?? []],\n\n      //jobDuration\n      //departmentId\n      jdAttachment: [formData?.jdAttachment ?? \"\"],\n    });\n  }\n\n  //*************************************************************************************************************************************** */\n  //Lookups\n  selectedItem: any;\n  jobRoleLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(JobRolesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          //midSalary: res.data[0].midSalary,\n          minSalary: res.data[0].minSalary,\n          maxSalary: res.data[0].maxSalary,\n          organizationRoleId: res.data[0].id,\n          jobGroupName: res.data[0].jobGroupName,\n          jobLevel: res.data[0].roleName,\n        });\n      }\n    });\n  }\n  departmentLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"SingleBDepartment\",\n      selected: \"\",\n    };\n    const dialogRef = this.dialog.open(\n      DepartmentsLookupComponent,\n      dialogConfig\n    );\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        this.mngForm.patchValue({\n          departmentId: res.data[0].id,\n        });\n      }\n    });\n  }\n\n  // **************************************************************************************************\n  //JobRequirements\n  displayedColumns: string[] = [\"id\", \"description\", \"action\"];\n  tranForm: FormGroup;\n  showParTranForm = false;\n  parTranAction: string = \"\";\n  selectedParTranIndex: number;\n  debitTotal: number = 0;\n  creditTotal: number = 0;\n  balance: number = 0;\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  generateSubForm(formData?): void {\n    this.tranForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      description: [formData?.narration ?? \"\", [Validators.required]],\n    });\n  }\n  resetFormAndHide() {\n    this.mngForm.patchValue({\n      jobqualifications: this.dataSource.data,\n    });\n    this.tranForm.reset();\n    this.showParTranForm = false;\n  }\n\n  addParTran() {\n    this.parTranAction = \"Add\";\n    this.showParTranForm = true;\n  }\n\n  refresh() {\n    this.dataSource.data = [...this.dataSource.data];\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  editParTran(data: any, index: number) {\n    this.parTranAction = \"Update\";\n    this.selectedParTranIndex = index;\n    this.generateSubForm(data);\n    this.showParTranForm = true;\n  }\n\n  pushToDataSource() {\n    if (this.parTranAction === \"Add\") {\n      this.dataSource.data.push(this.tranForm.value);\n    } else if (this.parTranAction === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.tranForm.value.id) {\n        indexToUpdate = this.dataSource.data.findIndex(\n          (item) => item.id === this.tranForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource.data[indexToUpdate] = this.tranForm.value;\n      }\n    }\n\n    this.resetFormAndHide();\n    this.refresh();\n  }\n\n  cancelParTran() {\n    this.resetFormAndHide();\n  }\n\n  deleteParTran(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.refresh();\n  }\n\n  // **************************************************************************************************\n  //Showing the submit button\n  posting: boolean = false;\n  onSubmit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    if (this.pageFunction == \"Add\") {\n      this.jobManagementService\n        .create(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            console.log(\"res: \", res);\n\n            if (res.statusCode == 201) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.cancel();\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.posting = false;\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    } else if (this.pageFunction == \"Update\") {\n      this.jobManagementService\n        .update(this.mngForm.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (res) => {\n            if (res.statusCode == 200) {\n              this.snackbar.showNotification(\"snackbar-success\", res.message);\n              this.cancel();\n            } else {\n              this.snackbar.showNotification(\"snackbar-danger\", res.message);\n            }\n          },\n          error: (err) => {\n            this.snackbar.showNotification(\"snackbar-danger\", err.message);\n            this.posting = false;\n          },\n          complete: () => {\n            this.posting = false;\n          },\n        }),\n        Subscription;\n    }\n  }\n\n  cancel() {\n    this.router.navigate([\"/erp-hr/jobs/all-jobs\"]);\n  }\n\n  // *********************************************************************************************\n\n  // **********************************************************************************************\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'Manage Job'\" [items]=\"['Job']\" [active_item]=\"'Manage Job'\">\n            </app-breadcrumb>\n        </div>\n\n        <div class=\"row clearfix\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"body\" *ngIf=\"showForm\">\n                        <div class=\"row\" *ngIf=\"pageFunction !== 'Add' && formData\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                <div class=\"bg-color\">\n                                    <div class=\"chat\">\n                                        <div class=\"chat-header clearfix\">\n                                            <div class=\"row\">\n                                                <!-- HOD Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">HOD Approval</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-hod\">\n                                                                        {{ formData.hodVerifierStatus }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-hod-approved\">\n                                                                        {{ formData.hodVerifierBy }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.hodVerifierRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Finance Manager Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Finance Approval</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-finance\">\n                                                                        {{ formData.financeManagerVerifiedStatus }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-finance-approved\">\n                                                                        {{ formData.financeManagerVerifiedBy }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong> Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.financeManagerVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Head of Finance and Strategy Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">\n                                                                    Head Finance\n                                                                </div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement\">\n                                                                        {{\n                                                                        formData.headFinanceAndStrategyVerifiedStatus\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement-approved\">\n                                                                        {{\n                                                                        formData.headFinanceAndStrategyVerifiedBy\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.headFinanceAndStrategyVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Senior Finance Manager Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">\n                                                                    Senior Manager\n                                                                </div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement\">\n                                                                        {{\n                                                                        formData.seniorFinanceManagerVerifiedStatus\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement-approved\">\n                                                                        {{\n                                                                        formData.seniorFinanceManagerVerifiedBy\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.seniorFinanceManagerVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Managing Director and CEO Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">\n                                                                    Managing Director\n                                                                </div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement\">\n                                                                        {{\n                                                                        formData.managingDirectorAndCEOVerifiedStatus\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Approved By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement-approved\">\n                                                                        {{\n                                                                        formData.managingDirectorAndCEOVerifiedBy\n                                                                        }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.managingDirectorAndCEOVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <!-- Post Job Verification -->\n                                                <div class=\"col-4\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">\n                                                                    Post Job\n                                                                </div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement\">\n                                                                        {{ formData.postJobVerifiedStatus }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-6\">\n                                                            <div class=\"chat-about\">\n                                                                <div class=\"chat-with\">Verified By</div>\n                                                                <div class=\"chat-num-messages mt-2\">\n                                                                    <div class=\"badge badge-procurement-approved\">\n                                                                        {{ formData.postJobVerifiedBy }}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-12\">\n                                                            <div class=\"chat-about mt-1\">\n                                                                <div class=\"chat-with remarks\">\n                                                                    <strong>Remarks:</strong>\n                                                                    <span class=\"remarks-content mx-2\">{{\n                                                                        formData.postJobVerifiedRemarks\n                                                                        }}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"mx-2\">\n\n                            <mat-horizontal-stepper [linear]=\"true\" #stepper>\n                                <mat-step>\n                                    <ng-template matStepLabel>Basic Information</ng-template>\n                                    <form [formGroup]=\"mngForm\">\n\n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Title</mat-label>\n                                                    <input matInput formControlName=\"jobTitle\" />\n                                                    <mat-icon matSuffix>compare_arrows</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobTitle').invalid && mngForm.get('jobTitle').touched\">\n                                                        Please enter a job title\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Deadline Date</mat-label>\n                                                    <input matInput [matDatepicker]=\"expiryDatePicker\" formControlName=\"deadlineDate\" />\n                                                    <mat-datepicker-toggle matSuffix [for]=\"expiryDatePicker\"></mat-datepicker-toggle>\n                                                    <mat-datepicker #expiryDatePicker></mat-datepicker>\n                                                    <mat-error *ngIf=\"mngForm.get('deadlineDate').invalid && mngForm.get('deadlineDate').touched\">\n                                                        Please select an deadline date\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Location</mat-label>\n                                                    <input matInput formControlName=\"location\" />\n                                                    <mat-icon matSuffix>location_on</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('location').invalid && mngForm.get('location').touched\">\n                                                        Please enter a location\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Term</mat-label>\n                                                    <mat-select formControlName=\"jobTerm\">\n                                                        <mat-option *ngFor=\"let type of jobTermArray\" [value]=\"type\">\n                                                            {{ type }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    \n                                                    <mat-icon matSuffix>assignment</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobTerm').invalid && mngForm.get('jobTerm').touched\">\n                                                        Please enter a job term\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                           \n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Shift</mat-label>\n                                                   \n                                                    <mat-select formControlName=\"jobShift\">\n                                                        <mat-option *ngFor=\"let type of jobShiftArray\" [value]=\"type\">\n                                                            {{ type }}\n                                                        </mat-option>\n                                                    </mat-select>\n\n                                                    <mat-icon matSuffix>schedule</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobShift').invalid && mngForm.get('jobShift').touched\">\n                                                        Please enter a job shift\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Department</mat-label>\n                                                    <input matInput formControlName=\"departmentId\" />\n                                                    <mat-icon matSuffix (click)=\"departmentLookup()\">search</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('departmentId').invalid && mngForm.get('departmentId').touched\">\n                                                        Please enter a department\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Vacant Positions</mat-label>\n                                                    <input matInput formControlName=\"vacantPositions\" />\n                                                    <mat-icon matSuffix>people</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('vacantPositions').invalid && mngForm.get('vacantPositions').touched\">\n                                                        Please enter vacant positions\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Level</mat-label>\n                                                    <input matInput formControlName=\"jobLevel\" />\n                                                    <mat-icon matSuffix (click)=\"jobRoleLookup()\">search</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobLevel').invalid && mngForm.get('jobLevel').touched\">\n                                                        Please enter a job level\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Group Name</mat-label>\n                                                    <input matInput formControlName=\"jobGroupName\" />\n                                                    <mat-icon matSuffix>group</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('jobGroupName').invalid && mngForm.get('jobGroupName').touched\">\n                                                        Please enter a job group name\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Min Salary</mat-label>\n                                                    <input matInput formControlName=\"minSalary\" />\n                                                    <mat-icon matSuffix>attach_money</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('minSalary').invalid && mngForm.get('minSalary').touched\">\n                                                        Please enter a minimum salary\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Mid Salary</mat-label>\n                                                    <input matInput formControlName=\"midSalary\" />\n                                                    <mat-icon matSuffix>attach_money</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('midSalary').invalid && mngForm.get('midSalary').touched\">\n                                                        Please enter a mid salary\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div> -->\n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Max Salary</mat-label>\n                                                    <input matInput formControlName=\"maxSalary\" />\n                                                    <mat-icon matSuffix>attach_money</mat-icon>\n                                                    <mat-error *ngIf=\"mngForm.get('maxSalary').invalid && mngForm.get('maxSalary').touched\">\n                                                        Please enter a maximum salary\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n\n\n                                        <div>\n                                            <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\n                                        </div>\n                                    </form>\n                                </mat-step>\n\n                                <mat-step>\n                                    <ng-template matStepLabel>Extra Details</ng-template>\n                                    <form [formGroup]=\"mngForm\">\n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Application Type</mat-label>\n                                                    <mat-select formControlName=\"applicationType\">\n                                                        <mat-option *ngFor=\"let type of applicationTypeArray\" [value]=\"type\">\n                                                            {{ type }}\n                                                        </mat-option>\n                                                    </mat-select>\n                                                    <mat-error *ngIf=\"mngForm.get('applicationType').invalid && mngForm.get('applicationType').touched\">\n                                                        Please select an application type\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            \n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Number of Interviews</mat-label>\n                                                    <input matInput formControlName=\"numberOfInterviews\" />\n                                                    <mat-error *ngIf=\"mngForm.get('numberOfInterviews').invalid && mngForm.get('numberOfInterviews').touched\">\n                                                        Please enter number of interviews\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            \n                                        </div>\n                                        \n                                        <div class=\"row\">\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Why Job Is Needed</mat-label>\n                                                    <textarea matInput formControlName=\"whyJobIsNeeded\" rows=\"5\"></textarea>\n                                                    <mat-error *ngIf=\"mngForm.get('whyJobIsNeeded').invalid && mngForm.get('whyJobIsNeeded').touched\">\n                                                        Please enter why job is needed\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Application Process</mat-label>\n                                                    <textarea matInput formControlName=\"applicationProcess\" rows=\"5\"></textarea>\n                                                    <mat-error *ngIf=\"mngForm.get('applicationProcess').invalid && mngForm.get('applicationProcess').touched\">\n                                                        Please enter application process\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        \n                                            <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-1\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Job Description</mat-label>\n                                                    <textarea matInput formControlName=\"jobDescription\" rows=\"5\"></textarea>\n                                                    <mat-error *ngIf=\"mngForm.get('jobDescription').invalid && mngForm.get('jobDescription').touched\">\n                                                        Please enter job description\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n                                        \n\n                                        <div>\n                                            <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                                            <button class=\"mx-2\" mat-raised-button color=\"primary\"\n                                                matStepperNext>Next</button>\n                                        </div>\n                                    </form>\n                                </mat-step>\n\n                                <mat-step>\n                                    <ng-template matStepLabel>Requirements Information</ng-template>\n                                    \n                                    <ng-container >\n                                       \n                    \n                                        <h6 class=\"mx-0\">Qualification Details</h6>\n                                        <form class=\"register-form mx-0\" [formGroup]=\"tranForm\">\n                                            <ng-container *ngIf=\"showParTranForm\">\n                                                <div class=\"row\" >\n                                            \n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                            <mat-label>Job Qualification</mat-label>\n                                                            <textarea matInput formControlName=\"description\" required ></textarea>\n                                                            <mat-icon matSuffix>record_voice_over</mat-icon>\n                                                            <mat-error *ngIf=\"tranForm.get('description').hasError('required')\">\n                                                                Description is required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n    \n                                                    \n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                                                        <div class=\"example-button-row\" align=\"start\">\n                                                            <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                                                [class.auth-spinner]=\"posting\" [disabled]=\"!tranForm.valid || posting\"\n                                                                [hidden]=\"viewMode\" (click)=\"pushToDataSource()\">\n                                                                {{ parTranAction }} Qualification\n                                                            </button>\n                        \n                                                            <button mat-raised-button color=\"warn\" (click)=\"cancelParTran()\" tabindex=\"-1\">\n                                                                Cancel\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </ng-container>\n                                           \n                                            <mat-tab-group>\n                                                <mat-tab>\n                                                    <ng-template mat-tab-label>\n                                                        <mat-icon>receipt</mat-icon> All Job Qualifications\n                                                    </ng-template>\n                            \n                                                    <div class=\"row m-1\">\n                                                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                                            <div class=\"table-responsiv\">\n                                                                <div class=\"materialTableHeader\">\n                                                                    <div class=\"row\">\n                                                                        <div class=\"col-8\">\n                                                                            <ul class=\"header-buttons-left ms-0\">\n                                                                                <li class=\"dropdown\">\n                                                                                    <h2>Qualifications</h2>\n                                                                                </li>\n                                                                                <li class=\"dropdown m-l-20\">\n                                                                                    <label for=\"search-input\"><i\n                                                                                            class=\"material-icons search-icon\">search</i></label>\n                                                                                    <input placeholder=\"Filter...\" type=\"text\"\n                                                                                        (keyup)=\"applyFilter($event)\" #filter\n                                                                                        class=\"browser-default search-field\"\n                                                                                        aria-label=\"Search box\" />\n                                                                                </li>\n                                                                                <li>\n                                                                                    <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                                                        <button mat-mini-fab color=\"primary\" (click)=\"addParTran()\">\n                                                                                            <mat-icon class=\"col-white\">add</mat-icon>\n                                                                                        </button>\n                                                                                    </div>\n                                                                                </li>\n                                                                                <li>\n                                                                                    <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                                                        <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                                                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                                                        </button>\n                                                                                    </div>\n                                                                                </li>\n                                                                               \n                                                                                \n                                                                            </ul>\n                                                                        </div>\n                            \n                                                                        <div class=\"col-4\">\n                                                                            <ul class=\"header-buttons\">\n                                                                                <li>\n                                                                                    <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                                                        <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                                                              exporter.exportTable('xlsx', {\n                                                                fileName: 'assets-list',\n                                                                sheet: 'sheet1'\n                                                              })\n                                                            \" />\n                                                                                    </div>\n                                                                                </li>\n                                                                                <li>\n                                                                                    <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                                                        <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                                                            (click)=\"exporter.exportTable('csv')\" />\n                                                                                    </div>\n                                                                                </li>\n                                                                            </ul>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                            \n                                                                <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                                                                    class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                                                    <!-- ID Column -->\n                                                                    <ng-container matColumnDef=\"id\">\n                                                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-10\">ID</mat-header-cell>\n                                                                        <mat-cell *matCellDef=\"let row\"\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                                            {{ row.id ? row.id : \"#\" }}\n                                                                        </mat-cell>\n                                                                    </ng-container>\n                            \n                                                                    <!-- Account No Column -->\n                                                                    <ng-container matColumnDef=\"description\">\n                                                                        <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-50\">Description\n                                                                        </mat-header-cell>\n                                                                        <mat-cell *matCellDef=\"let row\"\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-50\">{{ row.description\n                                                                            }}</mat-cell>\n                                                                    </ng-container>\n                            \n                                                                   \n                            \n                                                                    <!-- Action Buttons -->\n                                                                    <ng-container matColumnDef=\"action\">\n                                                                        <mat-header-cell class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                                                            *matHeaderCellDef>\n                                                                            Action\n                                                                        </mat-header-cell>\n                                                                        <mat-cell *matCellDef=\"let row; let i = index\"\n                                                                            class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                                                            <!-- Edit Button -->\n                                                                            <button mat-icon-button color=\"accent\"\n                                                                                (click)=\"$event.stopPropagation()\" (click)=\"editParTran(row, i)\"\n                                                                                class=\"tbl-action-btn\">\n                                                                                <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                                                                </app-feather-icons>\n                                                                            </button>\n                            \n                                                                            <!-- Delete Button -->\n                                                                            <button mat-icon-button color=\"accent\"\n                                                                                (click)=\"$event.stopPropagation()\" (click)=\"deleteParTran(i)\"\n                                                                                class=\"tbl-action-btn\">\n                                                                                <app-feather-icons [icon]=\"'trash-2'\" [class]=\"'tbl-fav-delete'\">\n                                                                                </app-feather-icons>\n                                                                            </button>\n                                                                        </mat-cell>\n                                                                    </ng-container>\n                            \n                                                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                                                    <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"onSelect(row)\"\n                                                                        [style.cursor]=\"'pointer'\" matRipple>\n                                                                    </mat-row>\n                                                                    <mat-cell *matNoDataRow colspan=\"8\">\n                                                                        No data matching the filter \"{{ input.value }}\"</mat-cell>\n                                                                </mat-table>\n                                                                <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                                                    <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                                                    </mat-progress-spinner>\n                                                                </div>\n                                                                <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                                                    aria-label=\"Select page of users\"></mat-paginator>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </mat-tab>\n                            \n                                               \n                                            </mat-tab-group>\n                                        </form>\n                                    </ng-container>\n                                        <div>\n                                            <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                                            <button class=\"mx-2\" mat-raised-button color=\"warn\"\n                                                (click)=\"stepper.reset()\">Reset</button>\n\n                                                <button class=\"btn-space\" mat-raised-button color=\"primary\"\n                                    [class.auth-spinner]=\"posting\"\n                                    [disabled]=\"!mngForm.valid || posting\" [hidden]=\"viewMode\"\n                                    (click)=\"onSubmit()\">\n                                    Job\n                                </button>\n\n                                           \n                                        </div>\n                                   \n                                </mat-step>\n                            </mat-horizontal-stepper>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { SelectionModel } from \"@angular/cdk/collections\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport Swal from \"sweetalert2\";\nimport { ApplicationDetailsComponent } from \"../../job-applications/dialogs/application-details/application-details.component\";\nimport { JobInterviewAPIService } from \"src/app/erp-hr/data/job-services/job-interviews.service\";\n\n@Component({\n  selector: \"app-all-job-interviews\",\n  templateUrl: \"./all-job-interviews.component.html\",\n  styleUrls: [\"./all-job-interviews.component.sass\"],\n})\nexport class AllJobInterviewsComponent implements OnInit {\n  displayedColumns: string[] = [\n    \"select\",\n    \"firstName\",\n    \"lastName\",\n    \"applicationNo\",\n    \"phoneNumber\",\n    \"interviewId\",\n    \"interviewTime\",\n    \"interviewDate\",\n    \"interviewStatus\",\n    \"action\",\n  ];\n\n\n  loading: boolean = false;\n  data: any;\n  error: any;\n  dialogConfig: any;\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selection = new SelectionModel<any>(true, []);\n\n  downloadLoading: boolean = false;\n  posting: boolean = false;\n  showForm: boolean = false;\n\n  constructor(\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService,\n    private jobInterviewAPIService: JobInterviewAPIService,\n    private snackbar: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  getData() {\n    // this.loading = true;\n    // this.dataSource = new MatTableDataSource([]);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n    // this.jobInterviewAPIService\n    //   .getInterviewDetails()\n    //   .pipe(takeUntil(this.destroy$))\n    //   .subscribe({\n    //     next: (res) => {\n    //       if (res.statusCode === 302) {\n    //         this.data = res.entity;\n    //         console.log(\"Data displayed on table\", this.data);\n\n    //         this.loading = false;\n    //         this.dataSource = new MatTableDataSource(this.data);\n    //         this.dataSource.paginator = this.paginator;\n    //         this.dataSource.sort = this.sort;\n    //       } else {\n    //         this.loading = false;\n    //       }\n    //     },\n    //     error: (err) => {\n    //       this.loading = false;\n    //       this.notificationAPI.alertWarning(\"Server Error: \" + err.message);\n    //     },\n    //     complete: () => { },\n    //   });\n  }\n  refresh() {\n    this.getData();\n  }\n\n  // mngRecord(action: any, record?: any) {\n  //   let route = \"/erp-hr/jobs/manage-job-applications\";\n  //   this.router.navigate([route], {\n  //     queryParams: {\n  //       requestCode: record.refNumber,\n  //       action: action,\n  //     },\n  //   });\n  // }\n\n\n  mngRecord(action: any, record?: any) {\n\n    console.log(\"action:::\", action);\n\n    if (action === \"Add\") {\n      let route = \"/erp-hr/jobs/all-job-applications\";\n      this.router.navigate([route], {\n        queryParams: {\n          action: action,\n        },\n      });\n    }\n    else {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = false;\n      dialogConfig.disableClose = true;\n      dialogConfig.width = \"800px\";\n      dialogConfig.data = {\n        action: action,\n        record: record,\n      };\n      const dialogRef = this.dialog.open(\n        ApplicationDetailsComponent,\n        dialogConfig\n      );\n      dialogRef.afterClosed().subscribe((result) => {\n        console.log(\"result:::\", result);\n\n        this.getData();\n      });\n    }\n  }\n  // deleteRecord(id: number) {\n  //   Swal.fire({\n  //     title: \"Are you sure?\",\n  //     text: \"THIS RECORD WILL BE DELETED PERMANENTLY!!\",\n  //     icon: \"warning\",\n  //     showCancelButton: true,\n  //     confirmButtonColor: \"#3085d6\",\n  //     cancelButtonColor: \"#d33\",\n  //     confirmButtonText: \"Yes, delete it!\",\n  //   }).then((result) => {\n  //     if (result.isConfirmed) {\n  //       this.loading = true;\n  //       this.jobInterviewAPIService\n  //         .deleteJob(id)\n  //         .pipe(takeUntil(this.destroy$))\n  //         .subscribe({\n  //           next: (res) => {\n  //             if (res.statusCode == 200) {\n  //               this.getData();\n  //               this.loading = false;\n  //               this.notificationAPI.alertSuccess(\n  //                 \"RECORD DELETED SUCCESSFULLY\"\n  //               );\n  //             } else {\n  //               this.getData();\n  //               this.loading = false;\n  //               this.notificationAPI.alertWarning(res.message);\n  //             }\n  //           },\n  //           error: (err) => {\n  //             this.loading = false;\n  //             this.notificationAPI.alertSuccess(\"Server Error: \" + err.message);\n  //           },\n  //           complete: () => {},\n  //         });\n  //     }\n  //   });\n  // }\n\n  input: any;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.input = filterValue;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // ****************************************************************************************************************************\n  selectedRows: any[] = [];\n  atleastOneSelected: boolean = false;\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? \"deselect\" : \"select\"} all`;\n    }\n    return `${this.selection.isSelected(row) ? \"deselect\" : \"select\"} row ${row.position + 1\n      }`;\n  }\n\n  expSelected() {\n    this.atleastOneSelected = true;\n    this.selectedRows = this.selection.selected;\n\n    console.log(\"this.selectedRows: \", this.selectedRows);\n  }\n\n  hasAccess: boolean = true;\n  processMultipleRows(status: any) {\n    let privilege = \"Validate Expenses\";\n\n    // this.hasAccess = this.accessControlService.hasPrivilege(\"FinanceModule\", [\n    //   privilege,\n    // ]);\n\n    if (this.hasAccess) {\n      Swal.fire({\n    title: '<span style=\"font-size: 20px;\">Enter Verifier Remarks</span>',\n    input: \"textarea\",\n    inputPlaceholder: \"Type your remarks here...\",\n    confirmButtonText: \"Submit\",\n    showCancelButton: true,\n    cancelButtonText: \"Cancel\",\n    icon: \"info\",\n\n    inputValidator: (value) => {\n          if (!value) {\n            return \"Please enter your remarks\";\n          }\n        },\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const verifierRemarks = result.value;\n\n          const processedRows = this.selectedRows.map((element) => {\n            return {\n              id: element.id,\n              status: status,\n              verifierRemarks: verifierRemarks,\n            };\n          });\n\n          console.log(\"LOG: \", processedRows);\n\n          // this.jobInterviewAPIService\n          //   .validateBulkInterviews(processedRows)\n          //   .pipe(takeUntil(this.destroy$))\n          //   .subscribe({\n          //     next: (res) => {\n          //       console.log(\"res: \", res);\n          //       if (res.statusCode == 201 || 200 || 302) {\n          //         this.snackbar.showNotification(\n          //           \"snackbar-success\",\n          //           res.message\n          //         );\n\n          //         this.selection = new SelectionModel<any>(true, []);\n          //         this.selection.clear();\n          //       } else {\n          //         this.snackbar.showNotification(\n          //           \"snackbar-danger\",\n          //           res.message\n          //         );\n          //       }\n          //     },\n          //     error: (err) => {\n          //       this.snackbar.showNotification(\"snackbar-danger\", err.message);\n          //     },\n          //     complete: () => {\n          //       this.getData();\n          //     },\n          //   }),\n          //   Subscription;\n        } else {\n          this.selection = new SelectionModel<any>(true, []);\n          this.selection.clear();\n        }\n      });\n    }\n  }\n}\n","<section class=\"content\">\n    <div class=\"content-block\">\n        <div class=\"block-header\">\n            <!-- breadcrumb -->\n            <app-breadcrumb [title]=\"'All Job Interviews'\" [items]=\"['Job Interviews']\"\n                [active_item]=\"'All Job Interviews'\">\n            </app-breadcrumb>\n        </div>\n\n        <app-gen-widgets></app-gen-widgets>\n\n        <div class=\"row\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"table-responsive\">\n                            <div class=\"materialTableHeader\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <ul class=\"header-buttons-left ms-0\">\n                                            <li class=\"dropdown\">\n                                                <h2>Job Interviews</h2>\n                                            </li>\n                                            <li class=\"dropdown m-l-20\">\n                                                <label for=\"search-input\"><i\n                                                        class=\"material-icons search-icon\">search</i></label>\n                                                <input placeholder=\"Filter...\" type=\"text\" (keyup)=\"applyFilter($event)\"\n                                                    #filter class=\"browser-default search-field\"\n                                                    aria-label=\"Search box\" />\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"mngRecord('Add', '')\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                    <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"APPROVE\">\n                                                    <button mat-mini-fab color=\"primary\"\n                                                        (click)=\"processMultipleRows('APPROVED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">check</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"REJECT\">\n                                                    <button mat-mini-fab color=\"warn\"\n                                                        (click)=\"processMultipleRows('REJECTED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">cancel</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                            <li *ngIf=\"selection.selected.length > 0\">\n                                                <div class=\"m-l-10\" matTooltip=\"RETURN\">\n                                                    <button mat-mini-fab color=\"accent\"\n                                                        (click)=\"processMultipleRows('RETURNED')\"\n                                                        class=\"mat-button-custom\">\n                                                        <mat-icon class=\"col-white\">undo</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"col-4\">\n                                        <ul class=\"header-buttons\">\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"XLSX\">\n                                                    <img src=\"assets/images/icons/xlsx.png\" alt=\"\" (click)=\"\n                              exporter.exportTable('xlsx', {\n                                fileName: 'assets-list',\n                                sheet: 'sheet1'\n                              })\n                            \" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"CSV\">\n                                                    <img src=\"assets/images/icons/csv.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('csv')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"JSON\">\n                                                    <img src=\"assets/images/icons/json.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('json')\" />\n                                                </div>\n                                            </li>\n                                            <li>\n                                                <div class=\"export-button m-l-10\" matTooltip=\"TXT\">\n                                                    <img src=\"assets/images/icons/txt.png\" alt=\"\"\n                                                        (click)=\"exporter.exportTable('txt')\" />\n                                                </div>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort class=\"mat-cell\"\n                                #exporter=\"matTableExporter\">\n                                <ng-container matColumnDef=\"select\">\n                                    <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                                            [checked]=\"selection.hasValue() && isAllSelected()\"\n                                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                            [ngClass]=\"'tbl-checkbox'\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-4'\">\n                                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (change)=\"$event ? selection.toggle(row) : null\"\n                                            [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\"\n                                            [aria-label]=\"checkboxLabel(row)\" (change)=\"expSelected()\">\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"id\">\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">ID\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.interviewId }}\n                                    </mat-cell>\n                                </ng-container>\n                                <!-- displayedColumns: string[] = [\n                                \"select\",\n                                \"firstName\",\n                                \"lastName\",\n                                \"applicationNo\",\n                                \"phoneNumber\",\n                                \"interviewId\",\n                                \"interviewTime\",\n                                \"interviewDate\",\n                                \"interviewStatus\",\n                                \"action\",\n                              ]; -->\n\n                                <ng-container matColumnDef=\"firstName\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        First Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.firstName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"lastName\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Last Name\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.lastName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"phoneNumber\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Phone Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.phoneNumber }}\n                                    </mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"interviewId\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Interview Id\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.interviewId }}\n                                    </mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"interviewNumber\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        Interview Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                        {{ row.interviewNumber }}\n                                    </mat-cell>\n                                </ng-container>\n                                <ng-container matColumnDef=\"interviewDate\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Interview Date\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.interviewDate | date: 'short' }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"interviewTime\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Interview Time\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.interviewTime }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"interviewStatus\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Interview Status\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <ng-container [ngSwitch]=\"row.interviewStatus\">\n                                            <button *ngSwitchCase=\"'Approved'\"\n                                                class=\"badge badge-solid-green btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-check-circle\"></i>&nbsp; Approved\n                                            </button>\n                                            <button *ngSwitchCase=\"'New'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-clock\"></i>&nbsp; New\n                                            </button>\n                                            <button *ngSwitchCase=\"'Pending'\"\n                                                class=\"badge badge-solid-blue btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-hourglass-half\"></i>&nbsp; Pending\n                                            </button>\n                                            <button *ngSwitchDefault class=\"badge badge-solid-brown btn btn btn-sm m-1\">\n                                                <i class=\"fas fa-info-circle\"></i>&nbsp;\n                                                {{ row.interviewStatus }}\n                                            </button>\n                                        </ng-container>\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"applicationNo\">\n                                    <mat-header-cell *matHeaderCellDef class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        Application Number\n                                    </mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        {{ row.applicationNo }}\n                                    </mat-cell>\n                                </ng-container>\n\n\n\n                                <ng-container matColumnDef=\"action\">\n                                    <mat-header-cell *matHeaderCellDef\n                                        class=\"column-nowrap psl-3 tbl-col-width-per-20\">Action</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let row\" class=\"column-nowrap psl-3 tbl-col-width-per-20\">\n                                        <button mat-icon-button color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                            (click)=\"mngRecord('View', row)\">\n                                            <mat-icon>remove_red_eye</mat-icon>\n                                        </button>\n                                        <!-- <button mat-icon-button color=\"warn\" (click)=\"deleteJobById(row.id)\">\n                                            <mat-icon>delete</mat-icon>\n                                        </button> -->\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\">\n                                </mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                    (click)=\"mngRecord('View', row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                </mat-row>\n\n                                <tr *matNoDataRow>\n                                    <td colspan=\"{{ displayedColumns.length }}\">\n                                        No data matching the filter \"{{ input }}\"\n                                    </td>\n                                </tr>\n                            </mat-table>\n                            <div class=\"m-2 mx-2\" *ngIf=\"loading || downloadLoading\">\n                                <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n                                </mat-progress-bar>\n                            </div>\n                            <div *ngIf=\"loading\" class=\"tbl-spinner\">\n                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                                </mat-progress-spinner>\n                            </div>\n\n                            <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                aria-label=\"Select page of users\">\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Subject, takeUntil, Subscription } from 'rxjs';\nimport { BranchService } from 'src/app/erp-hr/data/configuration-services/branch.service';\nimport { EmployeesLookupComponent } from 'src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component';\nimport { FilesService } from 'src/app/shared/services/files.service';\nimport { SnackbarService } from 'src/app/shared/services/snackbar.service';\nimport { AllEmployeesComponent } from '../../../employees/all-employees/all-employees.component';\nimport { JobInterviewAPIService } from 'src/app/erp-hr/data/job-services/job-interviews.service';\n\n@Component({\n  selector: 'app-manage-job-interview-results',\n  templateUrl: './manage-job-interview-results.component.html',\n  styleUrls: ['./manage-job-interview-results.component.sass']\n})\nexport class ManageJobInterviewResultsComponent implements OnInit {\n\n  mngForm: FormGroup;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n  isLoading: boolean = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AllEmployeesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private jobInterviewAPIService: JobInterviewAPIService,\n    private dialog: MatDialog,\n    private filesService: FilesService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.formData = this.data.record\n    this.generateForm(this.formData);\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n    console.log(\"this.data.action :\", this.data.action);\n    if (this.data.action === \"Add\") {\n      this.isLoading = false;\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"Update\") {\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"View\") {\n      this.generateForm(this.data.record);\n      this.activateViewMode();\n    }\n    this.isLoading = false;\n  }\n\n  formData: any;\n\n  generateForm(formData?): void {\n    console.log(\"generateForm formData :: \", formData);\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? ''],\n      overallImpression: [formData?.overallImpression ?? '', Validators.required],\n      behavioralCompetency: [formData?.behavioralCompetency ?? '', Validators.required],\n      roleSpecific: [formData?.roleSpecific ?? '', Validators.required],\n      cultureFit: [formData?.cultureFit ?? '', Validators.required],\n      hiringManagerRecommendation: [formData?.hiringManagerRecommendation ?? '', Validators.required],\n      technicalScore: [formData?.technicalScore ?? 0, Validators.required],\n      experienceScore: [formData?.experienceScore ?? 0, Validators.required],\n      academicScore: [formData?.academicScore ?? 0, Validators.required],\n      overallScore: [formData?.overallScore ?? 0, Validators.required],\n      status: [formData?.status ?? '', Validators.required]\n    });\n  }\n\n\n\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  posting: boolean = false;\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    this.jobInterviewAPIService.interviewResults(this.mngForm.value)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe({\n      next: (res) => {\n        this.response = res;\n        console.log(\"res: \", res);\n        if (res.statusCode == 200) {\n          this.snackbar.showNotification(\n            \"snackbar-success\",\n            res.message\n          );\n        } else {\n          this.snackbar.showNotification(\n            \"snackbar-danger\",\n            res.message\n          );\n        }\n      },\n      error: (err) => {\n        this.snackbar.showNotification(\"snackbar-danger\", err.message);\n      },\n      complete: () => {\n        this.posting = false;\n        setTimeout(() => {\n          this.onNoClick();\n        }, 3000);\n      },\n    }),\n    Subscription;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n\n\n\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong>Interview Results</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <ng-container>\n            <h6 class=\"mx-2\">Interview Results Details</h6>\n            <form class=\"register-form mx-2\" [formGroup]=\"mngForm\">\n                <div class=\"row\">\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Overall Impression</mat-label>\n                            <input matInput formControlName=\"overallImpression\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('overallImpression').hasError('required')\">\n                                Overall Impression is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Behavioral Competency</mat-label>\n                            <input matInput formControlName=\"behavioralCompetency\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('behavioralCompetency').hasError('required')\">\n                                Behavioral Competency is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Role Specific</mat-label>\n                            <input matInput formControlName=\"roleSpecific\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('roleSpecific').hasError('required')\">\n                                Role Specific is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Culture Fit</mat-label>\n                            <input matInput formControlName=\"cultureFit\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('cultureFit').hasError('required')\">\n                                Culture Fit is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Hiring Manager Recommendation</mat-label>\n                            <input matInput formControlName=\"hiringManagerRecommendation\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('hiringManagerRecommendation').hasError('required')\">\n                                Hiring Manager Recommendation is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Technical Score</mat-label>\n                            <input matInput formControlName=\"technicalScore\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('technicalScore').hasError('required')\">\n                                Technical Score is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Experience Score</mat-label>\n                            <input matInput formControlName=\"experienceScore\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('experienceScore').hasError('required')\">\n                                Experience Score is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Academic Score</mat-label>\n                            <input matInput formControlName=\"academicScore\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('academicScore').hasError('required')\">\n                                Academic Score is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Overall Score</mat-label>\n                            <input matInput formControlName=\"overallScore\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('overallScore').hasError('required')\">\n                                Overall Score is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 mb-1\">\n                        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                            <mat-label>Status</mat-label>\n                            <input matInput formControlName=\"status\" required />\n                            <mat-icon matSuffix>compare_arrows</mat-icon>\n                            <mat-error *ngIf=\"mngForm.get('status').hasError('required')\">\n                                Status is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n\n            </form>\n            <div class=\"row\" *ngIf=\"!viewMode\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-1\">\n                    <div class=\"example-button-row\" align=\"end\">\n                        <button class=\"btn-space\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" (click)=\"submit()\">\n                            Submit Interview Results\n                        </button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>","import { Component, Inject, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogConfig,\n} from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Subject, takeUntil, Subscription } from \"rxjs\";\nimport { NotificationServiceService } from \"src/@core/Models/Notification/notification-service.service\";\nimport { CaseInvestigationMngtService } from \"src/app/erp-hr/data/case-services/case-investigations.service\";\nimport { EmployeesLookupComponent } from \"src/app/erp-hr/hr-lookups/configurations-lookups/employees-lookup/employees-lookup.component\";\nimport { SnackbarService } from \"src/app/shared/services/snackbar.service\";\nimport { AllEmployeesComponent } from \"../../../employees/all-employees/all-employees.component\";\nimport { JobInterviewAPIService } from \"src/app/erp-hr/data/job-services/job-interviews.service\";\n\n@Component({\n  selector: \"app-manage-job-interviews\",\n  templateUrl: \"./manage-job-interviews.component.html\",\n  styleUrls: [\"./manage-job-interviews.component.sass\"],\n})\nexport class ManageJobInterviewsComponent implements OnInit {\n  mngForm: FormGroup;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  downloadLoading: boolean = false;\n\n  pageFunction: string = \"Add\";\n\n  hideSubmit: boolean = false;\n  isLoading: boolean = true;\n\n  trainingTypes: string[] = [\"Physical\", \"Virtual\"];\n\n  interviewModes = [\n    { name: \"In-person\" },\n    { name: \"Virtual\" },\n    { name: \"Phone\" },\n  ];\n\n  constructor(\n    public dialogRef: MatDialogRef<AllEmployeesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private fb: FormBuilder,\n    private snackbar: SnackbarService,\n    private jobInterviewAPIService: JobInterviewAPIService,\n    private dialog: MatDialog,\n    private notificationAPI: NotificationServiceService\n  ) {}\n\n  ngOnInit(): void {\n    console.log(\"LOG DATA = \", this.data);\n    this.pageFunction = this.data.action;\n    this.formData = this.data.record;\n    this.generateForm(this.formData);\n\n    this.getPage();\n  }\n  ngAfterViewInit() {\n    if (this.data.action !== \"Add\") {\n      this.generateForm(this.formData);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  disableTransactionType: boolean = true;\n  getPage() {\n    this.disableTransactionType = true;\n    console.log(\"this.data.action :\", this.data.action);\n    if (this.data.action === \"Add\") {\n      this.isLoading = false;\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"Update\") {\n      this.generateForm(this.data.record);\n    } else if (this.data.action === \"View\") {\n      this.generateForm(this.data.record);\n      this.activateViewMode();\n    }\n    this.isLoading = false;\n\n    if(this.formData.jobApplicationInterviewers.length>0){\n      this.dataSource.data = this.formData.jobApplicationInterviewers\n      this.refresh()\n    }\n  }\n\n  // {\n  //   \"id\": 0,\n  //   \"jobApplicationInterviewers\": \"string\",\n  //   \"interviewDate\": \"2024-05-16\",\n  //   \"interviewMode\": \"string\",\n  //   \"interviewVenue\": \"string\"\n  // }\n\n  formData: any;\n  generateForm(formData?): void {\n    this.mngForm = this.fb.group({\n      id: [formData?.id ?? \"\"],\n      interviewVenue: [formData?.interviewVenue ?? \"\", [Validators.required]],\n      interviewMode: [formData?.interviewMode ?? \"\", [Validators.required]],\n      interviewDate: [formData?.interviewDate ?? \"\", [Validators.required]],\n      jobApplicationInterviewers: [formData?.jobApplicationInterviewers ?? []],\n    });\n  }\n\n  viewMode: boolean = false;\n  activateViewMode() {\n    this.viewMode = true;\n  }\n\n  //********************************************************************************************************************** */\n\n  //********************************************************************************************************************** */\n  dataSource = new MatTableDataSource<any>([]);\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  displayedColumns: string[] = [\"id\", \"empNo\", \"empName\", \"action\"];\n  tranForm: FormGroup;\n  showParTranForm = false;\n  parTranAction: string = \"\";\n  selectedParTranIndex: number;\n  debitTotal: number = 0;\n  creditTotal: number = 0;\n  balance: number = 0;\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  // generateSubForm(formData?): void {\n  //   this.tranForm = this.fb.group({\n  //     id: [formData?.id ?? \"\"],\n  //     description: [formData?.narration ?? \"\", [Validators.required]],\n  //   });\n  // }\n  resetFormAndHide() {\n    this.mngForm.patchValue({\n      jobApplicationInterviewers: this.dataSource.data,\n    });\n    this.tranForm.reset();\n    this.showParTranForm = false;\n  }\n\n  addParTran() {\n    // this.parTranAction = \"Add\";\n    // this.showParTranForm = true;\n    this.employeeLookup();\n  }\n\n  refresh() {\n    this.dataSource.data = [...this.dataSource.data];\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    this.mngForm.patchValue({\n      jobApplicationInterviewers: this.dataSource.data,\n    });\n  }\n\n  editParTran(data: any, index: number) {\n    this.parTranAction = \"Update\";\n    this.selectedParTranIndex = index;\n    // this.generateSubForm(data);\n    this.showParTranForm = true;\n  }\n\n  pushToDataSource() {\n    if (this.parTranAction === \"Add\") {\n      this.dataSource.data.push(this.tranForm.value);\n    } else if (this.parTranAction === \"Update\") {\n      let indexToUpdate: number;\n\n      if (this.tranForm.value.id) {\n        indexToUpdate = this.dataSource.data.findIndex(\n          (item) => item.id === this.tranForm.value.id\n        );\n      } else {\n        indexToUpdate = this.selectedParTranIndex;\n      }\n\n      if (indexToUpdate !== -1) {\n        this.dataSource.data[indexToUpdate] = this.tranForm.value;\n      }\n    }\n\n    this.resetFormAndHide();\n    this.refresh();\n  }\n\n  cancelParTran() {\n    this.resetFormAndHide();\n  }\n\n  deleteParTran(index: number) {\n    this.dataSource.data.splice(index, 1);\n    this.refresh();\n  }\n\n  // **************************************************************************************************\n\n  posting: boolean = false;\n\n  response: any;\n  submit() {\n    console.log(\"this.mngForm.value: \", this.mngForm.value);\n    this.posting = true;\n    this.jobInterviewAPIService\n      .scheduleInterview(this.mngForm.value)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (res) => {\n          this.response = res;\n          console.log(\"res: \", res);\n          if (res.statusCode == 200) {\n            this.snackbar.showNotification(\"snackbar-success\", res.message);\n          } else {\n            this.snackbar.showNotification(\"snackbar-danger\", res.message);\n          }\n        },\n        error: (err) => {\n          this.snackbar.showNotification(\"snackbar-danger\", err.message);\n        },\n        complete: () => {\n          this.posting = false;\n          setTimeout(() => {\n            this.onNoClick();\n          }, 3000);\n        },\n      }),\n      Subscription;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close({ event: \"close\", data: this.response });\n  }\n\n  selectedItem: any;\n  employeeLookup() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.disableClose = true;\n    dialogConfig.width = \"800px\";\n    dialogConfig.data = {\n      action: \"MultipleEmployee\",\n      selected: this.selectedItem,\n    };\n    const dialogRef = this.dialog.open(EmployeesLookupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res && res.data && res.data.length > 0) {\n        res.data.forEach((employeeInfo) => {\n          const empName =\n            employeeInfo.firstName +\n            \" \" +\n            employeeInfo.middleName +\n            \" \" +\n            employeeInfo.lastName;\n          const empPf = employeeInfo.empNo;\n\n          if (this.dataSource.data) {\n            const existingItemIndex = this.dataSource.data.findIndex(\n              (item) => item.empPf === empPf || item.empName === empName\n            );\n\n            if (existingItemIndex !== -1) {\n              this.dataSource.data[existingItemIndex] = {\n                ...this.dataSource.data[existingItemIndex],\n                empPf,\n                empName,\n              };\n            } else {\n              this.dataSource.data.push({\n                empPf,\n                empName,\n              });\n            }\n          }\n        });\n\n        this.refresh();\n      }\n    });\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img src=\"assets/images/em.png\" width=\"30px\" height=\"30px\" alt=\"\" />\n                <div class=\"modal-about\">\n                    <div class=\"font-weight-bold p-t-5 ms-2 me-2 font-17\">\n                        <strong> Interview</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <div class=\"m-2\" *ngIf=\"isLoading\">\n            <mat-progress-bar color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-bar>\n        </div>\n\n        <ng-container>\n\n            <mat-horizontal-stepper [linear]=\"true\" #stepper>\n                <mat-step>\n                    <ng-template matStepLabel>Interview Information</ng-template>\n                    <form [formGroup]=\"mngForm\">\n\n                        <div class=\"row\">\n\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Interview Mode</mat-label>\n                                    <mat-select formControlName=\"interviewMode\">\n                                        <mat-option *ngFor=\"let mode of interviewModes\" [value]=\"mode.name\">{{ mode.name\n                                            }}</mat-option>\n                                    </mat-select>\n                                    <mat-error\n                                        *ngIf=\"mngForm.get('interviewMode').invalid && mngForm.get('interviewMode').touched\">\n                                        Interview Mode is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Interview Venue</mat-label>\n                                    <input matInput formControlName=\"interviewVenue\" />\n                                    <mat-error\n                                        *ngIf=\"mngForm.get('interviewVenue').invalid && mngForm.get('interviewVenue').touched\">\n                                        Interview Venue is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-1\">\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                    <mat-label>Interview Date</mat-label>\n                                    <input matInput [matDatepicker]=\"interviewDatePicker\"\n                                        formControlName=\"interviewDate\">\n                                    <mat-datepicker-toggle matSuffix\n                                        [for]=\"interviewDatePicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #interviewDatePicker></mat-datepicker>\n                                    <mat-error\n                                        *ngIf=\"mngForm.get('interviewDate').invalid && mngForm.get('interviewDate').touched\">\n                                        Interview Date is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n\n\n\n                        </div>\n\n\n                        <div>\n                            <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\n                        </div>\n                    </form>\n                </mat-step>\n\n\n\n                <mat-step>\n                    <ng-template matStepLabel>Interviewers</ng-template>\n\n                    <ng-container>\n\n\n                        <mat-tab-group>\n                            <mat-tab>\n                                <ng-template mat-tab-label>\n                                    <mat-icon>receipt</mat-icon> Interviewer Details\n                                </ng-template>\n\n                                <div class=\"row m-1\">\n                                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                                        <div class=\"tabl-responsiv\">\n                                            <div class=\"materialTableHeader\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-12\">\n                                                        <ul class=\"header-buttons-left ms-0\">\n                                                            <li class=\"dropdown\">\n                                                                <h2>Attendees</h2>\n                                                            </li>\n                                                            <li class=\"dropdown m-l-20\">\n                                                                <label for=\"search-input\"><i\n                                                                        class=\"material-icons search-icon\">search</i></label>\n                                                                <input placeholder=\"Filter...\" type=\"text\"\n                                                                    (keyup)=\"applyFilter($event)\" #filter\n                                                                    class=\"browser-default search-field\"\n                                                                    aria-label=\"Search box\" />\n                                                            </li>\n                                                            <li>\n                                                                <div class=\"m-l-10\" matTooltip=\"ADD\">\n                                                                    <button mat-mini-fab color=\"primary\"\n                                                                        (click)=\"addParTran()\">\n                                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                                    </button>\n                                                                </div>\n                                                            </li>\n                                                            <li>\n                                                                <div class=\"m-l-10\" matTooltip=\"REFRESH\">\n                                                                    <button mat-mini-fab color=\"primary\"\n                                                                        (click)=\"refresh()\">\n                                                                        <mat-icon class=\"col-white\">refresh</mat-icon>\n                                                                    </button>\n                                                                </div>\n                                                            </li>\n\n\n                                                        </ul>\n                                                    </div>\n\n\n                                                </div>\n                                            </div>\n\n                                            <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort\n                                                class=\"mat-cell\" #exporter=\"matTableExporter\">\n                                                <ng-container matColumnDef=\"id\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">ID</mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-10\">\n                                                        {{ row.id ? row.id : \"#\" }}\n                                                    </mat-cell>\n                                                </ng-container>\n                                                <ng-container matColumnDef=\"empNo\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50\">Emp Pf\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50\">{{\n                                                        row.empPf\n                                                        }}</mat-cell>\n                                                </ng-container>\n                                                <ng-container matColumnDef=\"empName\">\n                                                    <mat-header-cell *matHeaderCellDef mat-sort-header\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50\">EmpName\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-50\">{{\n                                                        row.empName\n                                                        }}</mat-cell>\n                                                </ng-container>\n\n                                                <ng-container matColumnDef=\"action\">\n                                                    <mat-header-cell\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\"\n                                                        *matHeaderCellDef>\n                                                        Action\n                                                    </mat-header-cell>\n                                                    <mat-cell *matCellDef=\"let row; let i = index\"\n                                                        class=\"column-nowrap psl-3 tbl-col-width-per-15 pr-0\">\n                                                        <!-- <button mat-icon-button color=\"accent\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"editParTran(row, i)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'edit'\" [class]=\"'tbl-fav-edit'\">\n                                                            </app-feather-icons>\n                                                        </button> -->\n                                                        <button mat-icon-button color=\"accent\"\n                                                            (click)=\"$event.stopPropagation()\"\n                                                            (click)=\"deleteParTran(i)\" class=\"tbl-action-btn\">\n                                                            <app-feather-icons [icon]=\"'trash-2'\"\n                                                                [class]=\"'tbl-fav-delete'\">\n                                                            </app-feather-icons>\n                                                        </button>\n                                                    </mat-cell>\n                                                </ng-container>\n\n                                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"\n                                                    (click)=\"onSelect(row)\" [style.cursor]=\"'pointer'\" matRipple>\n                                                </mat-row>\n                                                <mat-cell *matNoDataRow colspan=\"8\">\n                                                    No data matching the filter \"{{ input.value }}\"</mat-cell>\n                                            </mat-table>\n                                            <div *ngIf=\"dataSource.data.length === 0\" class=\"tbl-spinner\">\n                                                <mat-progress-spinner color=\"primary\" [diameter]=\"40\"\n                                                    mode=\"indeterminate\">\n                                                </mat-progress-spinner>\n                                            </div>\n                                            <mat-paginator [pageSize]=\"10\"\n                                                [pageSizeOptions]=\"[2, 5, 10, 20, 30, 40, 50, 100]\"\n                                                aria-label=\"Select page of users\"></mat-paginator>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-tab>\n\n\n                        </mat-tab-group>\n                    </ng-container>\n                    <div>\n                        <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                        <button class=\"mx-2\" mat-raised-button color=\"warn\" (click)=\"stepper.reset()\">Reset</button>\n                        <button class=\"mx-0\" mat-raised-button color=\"primary\" [class.auth-spinner]=\"posting\"\n                            [disabled]=\"!mngForm.valid || posting\" [hidden]=\"viewMode\" (click)=\"submit()\">Submit Interview Details</button>\n                    </div>\n\n                </mat-step>\n            </mat-horizontal-stepper>\n\n\n\n\n\n        </ng-container>\n    </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ManageJobsComponent } from \"./job-details/manage-jobs/manage-jobs.component\";\nimport { RoutePrivilegeGuard } from \"src/app/erp-procurement/data/services/_AccessControlAuthGuard.service\";\nimport { ManageJobApplicationsComponent } from \"./job-applications/manage-job-applications/manage-job-applications.component\";\nimport { ManageJobInterviewsComponent } from \"./job-interviews/manage-job-interviews/manage-job-interviews.component\";\nimport { AllJobsComponent } from \"./job-details/all-jobs/all-jobs.component\";\nimport { AllJobApplicationsComponent } from \"./job-applications/all-job-applications/all-job-applications.component\";\nimport { AllJobInterviewsComponent } from \"./job-interviews/all-job-interviews/all-job-interviews.component\";\n\nconst routes: Routes = [\n  {\n    path: \"all-jobs\",\n    component: AllJobsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n  {\n    path: \"manage-jobs\",\n    component: ManageJobsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"all-job-applications\",\n    component: AllJobApplicationsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n  {\n    path: \"manage-job-applications\",\n    component: ManageJobApplicationsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n  {\n    path: \"all-job-interviews\",\n    component: AllJobInterviewsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n  {\n    path: \"manage-job-interviews\",\n    component: ManageJobInterviewsComponent,\n    canActivate: [RoutePrivilegeGuard],\n    data: {\n      clientName: \"HumanResourceModule\",\n      requiredPrivilege: [\"Dashboard\"],\n    },\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class JobsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JobsRoutingModule } from './jobs-routing.module';\nimport { ManageJobsComponent } from './job-details/manage-jobs/manage-jobs.component';\nimport { ManageJobApplicationsComponent } from './job-applications/manage-job-applications/manage-job-applications.component';\nimport { ManageJobInterviewsComponent } from './job-interviews/manage-job-interviews/manage-job-interviews.component';\nimport { ComponentsModule } from 'src/app/shared/components/components.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { AllJobsComponent } from './job-details/all-jobs/all-jobs.component';\nimport { AllJobApplicationsComponent } from './job-applications/all-job-applications/all-job-applications.component';\nimport { AllJobInterviewsComponent } from './job-interviews/all-job-interviews/all-job-interviews.component';\nimport { ApplicationDetailsComponent } from './job-applications/dialogs/application-details/application-details.component';\nimport { ManageJobInterviewResultsComponent } from './job-interviews/manage-job-interview-results/manage-job-interview-results.component';\n\n\n@NgModule({\n  declarations: [\n    ManageJobsComponent,\n    ManageJobApplicationsComponent,\n    ManageJobInterviewsComponent,\n    AllJobsComponent,\n    AllJobApplicationsComponent,\n    AllJobInterviewsComponent,\n    ApplicationDetailsComponent,\n    ManageJobInterviewResultsComponent\n  ],\n  imports: [\n    CommonModule,\n    JobsRoutingModule,\n\n    DashboardModule,\n    ComponentsModule,\n    SharedModule,\n  ]\n})\nexport class JobsModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\n\nexport interface SelectedFiles {\n  name: string;\n  file: any;\n  base64?: string;\n  url?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  public toBase64(files: File[], selectedFiles: SelectedFiles[]): Observable<SelectedFiles[]> {\n    const result = new AsyncSubject<SelectedFiles[]>();\n    if (files?.length) {\n      Object.keys(files)?.forEach((file, i) => {\n        const url = URL.createObjectURL(files[i]);\n        const reader = new FileReader();\n        reader.readAsDataURL(files[i]);\n        reader.onload = (e) => {\n          selectedFiles = selectedFiles?.filter(f => f?.name != files[i]?.name);\n          selectedFiles.push({ name: files[i]?.name, file: files[i], base64: reader?.result as string, url: url});\n          result.next(selectedFiles);\n          if (files?.length === (i + 1)) {\n            result.complete(); // Hoàn tất toàn bộ quá trình convert, trả về mảng selectedFiles có chứa base64 \n          }\n        };\n      });\n      return result;\n    } else {\n      result.next([]);\n      result.complete();\n      return result;\n    }\n  }\n}\n","import { Subject } from './Subject';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._value = null;\n        this._hasValue = false;\n        this._isComplete = false;\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped || _isComplete) {\n            _hasValue && subscriber.next(_value);\n            subscriber.complete();\n        }\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._value = value;\n            this._hasValue = true;\n        }\n    }\n    complete() {\n        const { _hasValue, _value, _isComplete } = this;\n        if (!_isComplete) {\n            this._isComplete = true;\n            _hasValue && super.next(_value);\n            super.complete();\n        }\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}